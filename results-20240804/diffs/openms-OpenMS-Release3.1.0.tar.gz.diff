Source package : openms
File name       : OpenMS-Release3.1.0.tar.gz
Lookaside URL   : https://src.fedoraproject.org/repo/pkgs/openms/OpenMS-Release3.1.0.tar.gz/sha512/c0b54c7e1d031bcedd466bacced36d4a14ade629ecb3bb2dd75565312b2e218584554c310c58d3310a4e7b413496857475395bf83a53b50ee3ca3e01f725a025/OpenMS-Release3.1.0.tar.gz
Source URL      : https://github.com/OpenMS/OpenMS/archive/Release3.1.0/OpenMS-Release3.1.0.tar.gz

source file type: /tmp/fedora-lookaside-verification--620412-UnEb0Nzwp0B1/source-OpenMS-Release3.1.0.tar.gz: gzip compressed data, from Unix, original size modulo 2^32 914472960 gzip compressed data, reserved method, has CRC, has comment, from FAT filesystem (MS-DOS, OS/2, NT), original size modulo 2^32 914472960
lookaside file type: /tmp/fedora-lookaside-verification--620412-UnEb0Nzwp0B1/lookaside-OpenMS-Release3.1.0.tar.gz: gzip compressed data, from Unix, original size modulo 2^32 914503680 gzip compressed data, reserved method, ASCII, was "", from FAT filesystem (MS-DOS, OS/2, NT), original size modulo 2^32 914503680


diff -r source-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/CHANGELOG lookaside-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/CHANGELOG
17c17
< ----                                OpenMS 3.1     (released 10/2023)                 ----
---
> ----                                OpenMS 3.1.0     (released: under development)    ----
35c35
< - Added SageAdapter. Support for standard identification tasks with sage (https://github.com/lazear/sage) (experimental).
---
> - Added SageAdapter. Support for standard identification tasks with sage (https://github.com/lazear/sage).
63a64
> 
diff -r source-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/CHANGELOG_PARAMS lookaside-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/CHANGELOG_PARAMS
1c1,218
< 
---
> Tool name	Added/removed	Parameter name	Type	Default value	Restrictions	Supported formats
> AssayGeneratorMetabo	+	fingerid:db	string			
> AssayGeneratorMetabo	+	project:loglevel	string			
> AssayGeneratorMetabo	+	project:maxmz	int	-1		
> AssayGeneratorMetabo	+	read_sirius_stdout	bool	false		
> AssayGeneratorMetabo	+	sirius:candidates	int	10	0:	
> AssayGeneratorMetabo	+	sirius:candidates_per_ion	int	1		
> AssayGeneratorMetabo	+	sirius:db	string	none		
> AssayGeneratorMetabo	+	sirius:elements_considered	string	SBrClBSe		
> AssayGeneratorMetabo	+	sirius:elements_enforced	string	CHNOP		
> AssayGeneratorMetabo	+	sirius:formulas	string			
> AssayGeneratorMetabo	+	sirius:ions_considered	string	[M+H]+,[M+K]+,[M+Na]+,[M+H-H2O]+,[M+H-H4O2]+,[M+NH4]+,[M-H]-,[M+Cl]-,[M-H2O-H]-,[M+Br]-		
> AssayGeneratorMetabo	+	sirius:profile	string	default	default,qtof,orbitrap,fticr	
> AssayGeneratorMetabo	+	sirius:solver	string	CLP		
> AssayGeneratorMetabo	+	sirius:tree_timeout	int	100	0:	
> AssayGeneratorMetabo	-	fingerid:candidates	int	10	1:	
> AssayGeneratorMetabo	-	fingerid:db	string	BIO		
> AssayGeneratorMetabo	-	sirius:candidates	int	5	1:	
> AssayGeneratorMetabo	-	sirius:candidates_per_ion	int	-1		
> AssayGeneratorMetabo	-	sirius:db	string			
> AssayGeneratorMetabo	-	sirius:elements_considered	string			
> AssayGeneratorMetabo	-	sirius:elements_enforced	string			
> AssayGeneratorMetabo	-	sirius:formula	string			
> AssayGeneratorMetabo	-	sirius:ions_considered	string			
> AssayGeneratorMetabo	-	sirius:profile	string	qtof	default,qtof,orbitrap,fticr	
> AssayGeneratorMetabo	-	sirius:tree_timeout	int	0	0:	
> CometAdapter	+	PeptideIndexing:allow_nterm_protein_cleavage	string	true	true,false	
> CometAdapter	+	PeptideIndexing:enzyme:name	string	auto	auto,Trypsin,Arg-C,Chymotrypsin,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> CometAdapter	+	enzyme	string	Trypsin	Trypsin,Arg-C,Chymotrypsin,CNBr,Asp-N,Lys-C,Lys-N,PepsinA,Trypsin/P,glutamyl endopeptidase,no cleavage,unspecific cleavage	
> CometAdapter	+	second_enzyme	string		Trypsin,Arg-C,Chymotrypsin,CNBr,Asp-N,Lys-C,Lys-N,PepsinA,Trypsin/P,glutamyl endopeptidase,no cleavage,unspecific cleavage	
> CometAdapter	-	PeptideIndexing:enzyme:name	string	auto	auto,Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> CometAdapter	-	enzyme	string	Trypsin	Trypsin,Arg-C,Asp-N,Chymotrypsin,CNBr,Lys-C,Lys-N,PepsinA,Trypsin/P,glutamyl endopeptidase,unspecific cleavage	
> CometAdapter	-	second_enzyme	string		Trypsin,Arg-C,Asp-N,Chymotrypsin,CNBr,Lys-C,Lys-N,PepsinA,Trypsin/P,glutamyl endopeptidase,unspecific cleavage	
> CompNovo	+	algorithm:tryptic_only	string	true	true,false	
> CompNovo	-	algorithm:tryptic_only	string	true		
> CompNovoCID	+	algorithm:tryptic_only	string	true	true,false	
> CompNovoCID	-	algorithm:tryptic_only	string	true		
> DecoyDatabase	+	enzyme	string	Trypsin	Trypsin,Arg-C,Chymotrypsin,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> DecoyDatabase	-	enzyme	string	Trypsin	Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> Digestor	+	enzyme	string	Trypsin	Trypsin,Arg-C,Chymotrypsin,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> Digestor	-	enzyme	string	Trypsin	Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> DigestorMotif	+	enzyme	string	Trypsin	Trypsin,Arg-C,Chymotrypsin,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> DigestorMotif	-	enzyme	string	Trypsin	Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> FalseDiscoveryRate	+	peptide	bool	false		
> FeatureFinderIdentification	+	min_psm_cutoff	string	none		
> FeatureFinderIdentification	+	svm:log2_p	double			
> FeatureFinderMetaboIdent	+	candidates_out	output-file			
> FeatureFinderMetaboIdent	-	candidates_out	output-file			*.featureXML
> FidoAdapter	+	accuracy	string	best	best,relaxed,sloppy	
> FidoAdapter	-	accuracy	string		,best,relaxed,sloppy	
> FileConverter	+	include_noise	bool	false		
> FileConverter	+	no_zlib_compression	bool	false		
> FileFilter	+	f_and_c:remove_hull	bool	false		
> GNPSExport	+	out_meta_values	output-file			*.tsv
> GNPSExport	+	out_pairs	output-file			*.csv
> GNPSExport	+	out_quantification	output-file			*.txt
> IDFileConverter	+	fasta_to_mzml:enzyme	string	Trypsin	Chymotrypsin,Trypsin,Arg-C,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> IDFileConverter	-	fasta_to_mzml:enzyme	string	Trypsin	Asp-N,Asp-N/B,Asp-N_ambic,Trypsin,Arg-C,Arg-C/P,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> IDFilter	+	in_silico_digestion:enzyme	string	Trypsin	Trypsin,Arg-C,Asp-N/B,CNBr,Formic_acid,Asp-N,Chymotrypsin/P,Chymotrypsin,Asp-N_ambic,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> IDFilter	+	missed_cleavages:enzyme	string	Trypsin	Trypsin,Arg-C,Asp-N/B,CNBr,Formic_acid,Asp-N,Chymotrypsin/P,Chymotrypsin,Asp-N_ambic,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> IDFilter	-	in_silico_digestion:enzyme	string	Trypsin	Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> IDFilter	-	missed_cleavages:enzyme	string	Trypsin	Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> IDRipper	+	out	output-prefix			
> IDRipper	-	out	output-file			
> IsobaricAnalyzer	+	extraction:select_activation	string	auto	auto,Collision-induced dissociation,Post-source decay,Plasma desorption,Surface-induced dissociation,Blackbody infrared radiative dissociation,Electron capture dissociation,Infrared multiphoton dissociation,Sustained off-resonance irradiation,High-energy collision-induced dissociation,Low-energy collision-induced dissociation,Photodissociation,Electron transfer dissociation,Pulsed q dissociation,trap-type collision-induced dissociation,beam-type collision-induced dissociation,in-source collision-induced dissociation,any	
> IsobaricAnalyzer	+	tmt18plex:channel_126_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_127C_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_127N_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_128C_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_128N_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_129C_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_129N_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_130C_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_130N_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_131C_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_131N_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_132C_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_132N_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_133C_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_133N_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_134C_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_134N_description	string			
> IsobaricAnalyzer	+	tmt18plex:channel_135N_description	string			
> IsobaricAnalyzer	+	tmt18plex:correction_matrix	string			
> IsobaricAnalyzer	+	tmt18plex:reference_channel	string	126	126,127N,127C,128N,128C,129N,129C,130N,130C,131N,131C,132N,132C,133N,133C,134N,134C,135N	
> IsobaricAnalyzer	+	type	string	itraq4plex	itraq4plex,itraq8plex,tmt10plex,tmt11plex,tmt16plex,tmt18plex,tmt6plex	
> IsobaricAnalyzer	-	extraction:select_activation	string	auto	auto,Collision-induced dissociation,Post-source decay,Plasma desorption,Surface-induced dissociation,Blackbody infrared radiative dissociation,Electron capture dissociation,Infrared multiphoton dissociation,Sustained off-resonance irradiation,High-energy collision-induced dissociation,Low-energy collision-induced dissociation,Photodissociation,Electron transfer dissociation,Pulsed q dissociation,trap-type collision-induced dissociation,beam-type collision-induced dissociation,in-source collision-induced dissociation,	
> IsobaricAnalyzer	-	type	string	itraq4plex	itraq4plex,itraq8plex,tmt10plex,tmt11plex,tmt16plex,tmt6plex	
> MSFraggerAdapter	+	PeptideIndexing:allow_nterm_protein_cleavage	string	true	true,false	
> MSFraggerAdapter	+	PeptideIndexing:enzyme:name	string	auto	auto,Trypsin,Arg-C,Chymotrypsin,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> MSFraggerAdapter	+	digest:search_enzyme_name	string	Trypsin	unspecific cleavage,Trypsin,Arg-C,Chymotrypsin,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage	
> MSFraggerAdapter	-	PeptideIndexing:enzyme:name	string	auto	auto,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin,Arg-C,Arg-C/P,unspecific cleavage	
> MSFraggerAdapter	-	digest:search_enzyme_name	string	Trypsin	Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> MSGFPlusAdapter	+	PeptideIndexing:allow_nterm_protein_cleavage	string	true	true,false	
> MSGFPlusAdapter	+	PeptideIndexing:enzyme:name	string	auto	auto,Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> MSGFPlusAdapter	-	PeptideIndexing:enzyme:name	string	auto	auto,Trypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> MSGFPlusAdapter	-	add_decoys	bool	false		
> MSSimulator	+	algorithm:MSSim:Digestion:enzyme	string	Trypsin	unspecific cleavage,Trypsin,Arg-C,Chymotrypsin,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage	
> MSSimulator	-	algorithm:MSSim:Digestion:enzyme	string	Trypsin	Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> MapAlignerIdentification	+	model:linear:x_weight	string	x	1/x,1/x2,ln(x),x	
> MapAlignerIdentification	+	model:linear:y_weight	string	y	1/y,1/y2,ln(y),y	
> MapAlignerIdentification	-	model:linear:x_weight	string		1/x,1/x2,ln(x),	
> MapAlignerIdentification	-	model:linear:y_weight	string		1/y,1/y2,ln(y),	
> MapAlignerSpectrum	+	model:linear:x_weight	string	x	1/x,1/x2,ln(x),x	
> MapAlignerSpectrum	+	model:linear:y_weight	string	y	1/y,1/y2,ln(y),y	
> MapAlignerSpectrum	-	model:linear:x_weight	string		1/x,1/x2,ln(x),	
> MapAlignerSpectrum	-	model:linear:y_weight	string		1/y,1/y2,ln(y),	
> MapAlignerTreeGuided	+	algorithm:model:linear:x_weight	string	x	1/x,1/x2,ln(x),x	
> MapAlignerTreeGuided	+	algorithm:model:linear:y_weight	string	y	1/y,1/y2,ln(y),y	
> MapAlignerTreeGuided	-	algorithm:model:linear:x_weight	string		1/x,1/x2,ln(x),	
> MapAlignerTreeGuided	-	algorithm:model:linear:y_weight	string		1/y,1/y2,ln(y),	
> MapRTTransformer	+	model:linear:x_weight	string	x	1/x,1/x2,ln(x),x	
> MapRTTransformer	+	model:linear:y_weight	string	y	1/y,1/y2,ln(y),y	
> MapRTTransformer	-	model:linear:x_weight	string		1/x,1/x2,ln(x),	
> MapRTTransformer	-	model:linear:y_weight	string		1/y,1/y2,ln(y),	
> MetaboliteAdductDecharger	+	algorithm:MetaboliteFeatureDeconvolution:negative_mode	bool	false		
> MetaboliteAdductDecharger	+	algorithm:MetaboliteFeatureDeconvolution:use_minority_bound	string	true	true,false	
> MetaboliteAdductDecharger	-	algorithm:MetaboliteFeatureDeconvolution:negative_mode	string	false		
> MetaboliteAdductDecharger	-	algorithm:MetaboliteFeatureDeconvolution:use_minority_bound	string	true		
> MetaboliteSpectralMatcher	+	algorithm:merge_spectra	string	true	true,false	
> MetaboliteSpectralMatcher	+	database	input-file			*.mzML,*.msp,*.mgf
> MetaboliteSpectralMatcher	+	out_spectra	output-file			*.mzML
> MetaboliteSpectralMatcher	-	database	input-file			*.mzML
> MzMLSplitter	+	out	output-prefix			
> MzMLSplitter	-	out	string			
> NoiseFilterGaussian	+	algorithm:write_log_messages	bool	false		
> NoiseFilterGaussian	-	algorithm:write_log_messages	string	false		
> NucleicAcidSearchEngine	+	modifications:variable	string		io6A,s2U,k2C,m2Gm,Ym,f5Cm,Qbase,ac4Cm,imG-14,cm5s2U,mnm5s2U,m227G,yW-58,I,g6A,nm5U,m7G,s2Um,Y,hm5C,m5U,preQ0,o2yW,m5Um,preQ1,m66Am,ac6A,ms2io6A,Am,Im,mnm5U,m22G,t6A,m8A,m7GpppN,m27GpppN,m227GpppN,mpppN,m28A,acp3D,acp3Y,imG,D,N,C+,m27Gm,ho5C,inm5U,inm5Um,inm5s2U,pppN,GpppN,CoApN,m44C,acCoApN,malonyl-CoApN,succinyl-CoApN,ppN,NADpN,m6t6A,OHyWy,pG(pN),ncm5s2U,nchm5U,mchm5Um,pN,ges2U,cmnm5ges2U,mnm5ges2U,nm5ges2U,m5D,mmpN,mpN,5&apos;-OH-N,N2&apos;3&apos;cp,ct6A,hm6A,f6A,cnm5U,mcmo5Um,m5C,ms2ct6A,ht6A,msms2i6A,hm5Cm,pY,pm5C,ps2U,hn6A,pD,pm2G,pm66A,pGm,pm5U,pm22G,pm3U,m5Cm,Ar(p),pac4C,pCm,pppG,pm7G,pm1A,pUm,pAm,pm4Cm,pC2&apos;3&apos;cp,tm5U,pm6A,pyW,pm1G,pA2&apos;3&apos;cp,ps4U,pI,ppG,pm2A,m1G,pmcm5s2U,cmnm5Um,pse2U,pt6A,pf5C,pppA,pG,pG2&apos;3&apos;cp,pms2i6A,pcmo5U,pyW,Xm,pm44C,pi6A,phm5C,pU,pAr(p),pac4Cm,pGp,m1I,pU2&apos;3&apos;cp,mcm5U,Gm,pm4C,ncm5Um,pm5Um,pmnm5U,pm3C,m5s2U,yW,pC,pm6t6A,f5C,pAp,m1Am,m1Im,ApppN,AppppN,ApppppN,m6ApppN,m6AppppN,m6ApppppN,m7GppppN,Gr(p),pm1Am,pm1Gm,pm1Im,pm1acp3Y,pm1I,pm1Y,pk2C,ps2C,pm1acp3Y,pm3Y,nm5s2U,pm5Cm,pmchm5U,pinm5Um,pinm5s2U,pinm5U,pnm5U,pncm5U,pchm5U,pcmnm5U,pcm5U,m2G,pho5U,pmcm5Um,pmcm5U,pmo5U,pm5D,pmimG,phm5Cm,pIm,pYm,pmcmo5Um,m2A,pGr(p),pm28A,pmsms2i6A,pges2U,pms2ct6A,pms2io6A,pms2hn6A,pms2m6A,pms2t6A,ps2Um,pm3Um,pacp3D,pacp3U,pimG-14,pmchm5Um,pnm5ges2U,pnm5se2U,pnm5s2U,pnchm5U,pncm5Um,m4Cm,pncm5s2U,pcm5s2U,pcmnm5Um,pcmnm5ges2U,pcmnm5se2U,pcmnm5s2U,pcnm5U,pf5Cm,pho5C,pm5s2U,m27G,m22Gm,pmnm5ges2U,pmnm5se2U,pmnm5s2U,ptm5s2U,ptm5U,pyW-86,pyW-72,pyW-58,ppreQ1,ppreQ0,m66A,pm8A,pC+,pG+,pct6A,poQ,pgalQ,pgluQ,pht6A,pOHyW,pimG2,gluQ,pmanQ,pOHyWy,pm27Gm,pQ,pOHyWx,pmcmo5U,pimG,pm44Cm,pm2Gm,pm22Gm,ncm5U,pm6Am,pm66Am,pio6A,pac6A,pf6A,pg6A,phm6A,phn6A,cm5U,pm27G,pm227G,pm27Gm,pA,cmnm5s2U,cmo5U,m3Y,m3U,ms2m6A,Um,ms2i6A,m3C,cmnm5se2U,ms2t6A,i6A,m3Um,mcmo5U,mimG,oQ,preQ1base,nm5se2U,m1Gm,ho5U,Q,xG,mcm5s2U,m44Cm,s4U,xC,yW-86,xA,chm5U,mo5U,acp3U,xU,yW-72,mnm5se2U,ms2hn6A,m1acp3Y,mcm5Um,ac4C,m6Am,m1A,Cm,mchm5U,galQ,cmnm5U,m1Y,imG2,m4C,manQ,tm5s2U,s2C,OHyWx,se2U,preQ0base,m6A,OHyW,xX,G+,3&apos;-p,5&apos;-p,5&apos;-p*,3&apos;-c,mA,mC,mG,mU,sU,mmA,mAm,mCm,mGm,mUm,cmo5U/chm5U,mchm5U/mcmo5U,mchm5Um/mcmo5Um,m6t6A/hn6A,galQ/manQ,mA?,mC?,mG?,mU?,mI?,msU?,mmA?,mmC?,mmG?,mmmG?,ac4C/f5Cm?,acp3U/cmnm5Um?,dA,dC,dG,dU,dT,A*,C*,G*,U*,dA*,dC*,dG*,dU*,dT*	
> NucleicAcidSearchEngine	-	modifications:variable	string		m1Am,m1Gm,m1Im,m1acp3Y,m1A,m1G,m1I,m1Y,m28A,msms2i6A,ges2U,k2C,m2A,ms2ct6A,ms2io6A,ms2hn6A,ms2i6A,ms2m6A,ms2t6A,se2U,s2Um,s2C,s2U,Am,Cm,Gm,Im,Ym,Um,mcmo5Um,Ar(p),Gr(p),(pN)2&apos;3&apos;&gt;p,hm5Cm,m3Um,acp3D,acp3Y,acp3U,m3C,m3Y,m3U,imG-14,s4U,m5Cm,m5Um,mchm5Um,mchm5U,inm5s2U,inm5Um,inm5U,nm5ges2U,nm5se2U,nm5s2U,nm5U,nchm5U,ncm5s2U,ncm5Um,ncm5U,chm5U,cm5s2U,cmnm5ges2U,cmnm5se2U,cmnm5s2U,cmnm5Um,cmnm5U,cm5U,cnm5U,f5Cm,f5C,ho5C,hm5C,ho5U,mcm5s2U,mcm5Um,mcm5U,mo5U,m5s2U,mnm5ges2U,mnm5se2U,mnm5s2U,mnm5U,m5C,m5D,m5U,tm5s2U,tm5U,CoA(pN),acCoA(pN),malonyl-CoA(pN),succinyl-CoA(pN),p(pN),5&apos;-OH-N,(pN),NAD(pN),pp(pN),yW-86,yW-72,yW-58,preQ1tRNA,preQ0tRNA,m7G,m7Gpp(pN),m8A,m2Gm,m27Gm,m27G,m27Gpp(pN),m22Gm,m227G,m227Gpp(pN),m22G,m2G,m4Cm,m44Cm,m44C,ac4Cm,ac4C,m4C,m6Am,m66Am,m66A,io6A,ac6A,f6A,g6A,hm6A,hn6A,i6A,m6t6A,m6A,t6A,Qbase,C+,mm(pN),m(pN),G+,ct6A,D,oQ,galQ,mpp(pN),gluQ,pG(pN),Gpp(pN),ht6A,OHyW,I,imG2,manQ,OHyWy,mimG,o2yW,preQ0base,preQ1base,Y,Q,OHyWx,Xm,xX,xA,xC,xG,xU,N,cmo5U,mcmo5U,yW,imG,dA,dC,dG,dU,dT,3&apos;-p,5&apos;-p,mA,mC,mG,mU,sU,mmA,mAm,mCm,mGm,mUm,cmo5U/chm5U,mchm5U/mcmo5U,mchm5Um/mcmo5Um,m6t6A/hn6A,galQ/manQ,mA?,mC?,mG?,mU?,mI?,msU?,mmA?,mmC?,mmG?,mmmG?,ac4C/f5Cm?,acp3U/cmnm5Um?	
> OpenPepXL	+	peptide:enzyme	string	Trypsin	Trypsin,Arg-C,Asp-N/B,CNBr,Formic_acid,Asp-N,Chymotrypsin/P,Chymotrypsin,Asp-N_ambic,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> OpenPepXL	-	peptide:enzyme	string	Trypsin	Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> OpenPepXLLF	+	peptide:enzyme	string	Trypsin	Trypsin,Arg-C,Asp-N/B,CNBr,Formic_acid,Asp-N,Chymotrypsin/P,Chymotrypsin,Asp-N_ambic,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> OpenPepXLLF	-	peptide:enzyme	string	Trypsin	Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,Trypsin,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> OpenSwathAnalyzer	+	algorithm:strict	string	true	true,false	
> OpenSwathAnalyzer	-	algorithm:strict	string	true		
> OpenSwathFileSplitter	+	outputDirectory	output-prefix	./		
> OpenSwathFileSplitter	-	outputDirectory	string	./		
> OpenSwathRTNormalizer	+	algorithm:strict	string	true	true,false	
> OpenSwathRTNormalizer	-	algorithm:strict	string	true		
> OpenSwathWorkflow	+	Scoring:strict	string	true	true,false	
> OpenSwathWorkflow	+	pasef	bool	false		
> OpenSwathWorkflow	-	Scoring:strict	string	true		
> PeptideIndexer	+	allow_nterm_protein_cleavage	string	true	true,false	
> PeptideIndexer	+	enzyme:name	string	auto	auto,Trypsin,Arg-C,Chymotrypsin,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> PeptideIndexer	-	enzyme:name	string	auto	auto,Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> PrecursorIonSelector	+	algorithm:Preprocessing:store_peptide_sequences	bool	false		
> PrecursorIonSelector	-	algorithm:Preprocessing:store_peptide_sequences	string	false		
> ProteinQuantifier	+	method	string	top	top,iBAQ	
> ProteinQuantifier	+	top:N	int	3	0:	
> ProteinQuantifier	+	top:aggregate	string	median	median,mean,weighted_mean,sum	
> ProteinQuantifier	+	top:include_all	bool	false		
> ProteinQuantifier	-	average	string	median	median,mean,weighted_mean,sum	
> ProteinQuantifier	-	include_all	bool	false		
> ProteinQuantifier	-	top	int	3	0:	
> ProteomicsLFQ	+	Alignment:model:linear:x_weight	string	x	1/x,1/x2,ln(x),x	
> ProteomicsLFQ	+	Alignment:model:linear:y_weight	string	y	1/y,1/y2,ln(y),y	
> ProteomicsLFQ	+	FDR_type	string	PSM	PSM,PSM+peptide	
> ProteomicsLFQ	+	PeptideQuantification:min_psm_cutoff	string	none		
> ProteomicsLFQ	+	PeptideQuantification:svm:log2_p	double			
> ProteomicsLFQ	+	ProteinQuantification:method	string	top	top,iBAQ	
> ProteomicsLFQ	+	ProteinQuantification:top:N	int	3	0:	
> ProteomicsLFQ	+	ProteinQuantification:top:aggregate	string	median	median,mean,weighted_mean,sum	
> ProteomicsLFQ	+	ProteinQuantification:top:include_all	string	true	true,false	
> ProteomicsLFQ	+	picked_proteinFDR	bool	false		
> ProteomicsLFQ	-	Alignment:model:linear:x_weight	string		1/x,1/x2,ln(x),	
> ProteomicsLFQ	-	Alignment:model:linear:y_weight	string		1/y,1/y2,ln(y),	
> ProteomicsLFQ	-	ProteinQuantification:average	string	median	median,mean,weighted_mean,sum	
> ProteomicsLFQ	-	ProteinQuantification:include_all	string	true	true,false	
> ProteomicsLFQ	-	ProteinQuantification:top	int	3	0:	
> ProteomicsLFQ	-	picked_proteinFDR	string	false		
> QualityControl	+	in_fasta	input-file			*.fasta
> QualityControl	+	out_msms	string			
> RNPxlSearch	+	peptide:enzyme	string	Trypsin	Arg-C,Trypsin,Chymotrypsin,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> RNPxlSearch	-	peptide:enzyme	string	Trypsin	Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> SimpleSearchEngine	+	Search:enzyme	string	Trypsin	Trypsin,Arg-C,Asp-N/B,CNBr,Formic_acid,Asp-N,Chymotrypsin/P,Chymotrypsin,Asp-N_ambic,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> SimpleSearchEngine	-	Search:enzyme	string	Trypsin	Trypsin,Arg-C,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> SiriusAdapter	+	fingerid:db	string			
> SiriusAdapter	+	out_annotated_spectra	output-file			*.mzML
> SiriusAdapter	+	project:loglevel	string			
> SiriusAdapter	+	project:maxmz	int	-1		
> SiriusAdapter	+	read_sirius_stdout	bool	false		
> SiriusAdapter	+	sirius:candidates	int	10	0:	
> SiriusAdapter	+	sirius:candidates_per_ion	int	1		
> SiriusAdapter	+	sirius:db	string	none		
> SiriusAdapter	+	sirius:elements_considered	string	SBrClBSe		
> SiriusAdapter	+	sirius:elements_enforced	string	CHNOP		
> SiriusAdapter	+	sirius:formulas	string			
> SiriusAdapter	+	sirius:ions_considered	string	[M+H]+,[M+K]+,[M+Na]+,[M+H-H2O]+,[M+H-H4O2]+,[M+NH4]+,[M-H]-,[M+Cl]-,[M-H2O-H]-,[M+Br]-		
> SiriusAdapter	+	sirius:profile	string	default	default,qtof,orbitrap,fticr	
> SiriusAdapter	+	sirius:solver	string	CLP		
> SiriusAdapter	+	sirius:tree_timeout	int	100	0:	
> SiriusAdapter	+	sirius_user_email	string			
> SiriusAdapter	+	sirius_user_password	string			
> SiriusAdapter	-	fingerid:candidates	int	10	1:	
> SiriusAdapter	-	fingerid:db	string	BIO		
> SiriusAdapter	-	project:processors	int	1		
> SiriusAdapter	-	sirius:candidates	int	5	1:	
> SiriusAdapter	-	sirius:candidates_per_ion	int	-1		
> SiriusAdapter	-	sirius:db	string			
> SiriusAdapter	-	sirius:elements_considered	string			
> SiriusAdapter	-	sirius:elements_enforced	string			
> SiriusAdapter	-	sirius:formula	string			
> SiriusAdapter	-	sirius:ions_considered	string			
> SiriusAdapter	-	sirius:profile	string	qtof	default,qtof,orbitrap,fticr	
> SiriusAdapter	-	sirius:tree_timeout	int	0	0:	
> SpectraMerger	+	algorithm:average_gaussian:ms_level	int	1	0:	
> SpectraMerger	+	algorithm:average_gaussian:precursor_mass_tol	double	0.0	0.0:	
> SpectraMerger	+	algorithm:average_gaussian:precursor_max_charge	int	1	1:	
> SpectraMerger	+	algorithm:average_tophat:ms_level	int	1	0:	
> SpectraMerger	+	algorithm:precursor_method:mass_tolerance	double	0.0	0.0:	
> SpectraMerger	-	algorithm:average_gaussian:ms_level	int	1	1:	
> SpectraMerger	-	algorithm:average_tophat:ms_level	int	1	1:	
> TextExporter	+	consensus:add_metavalues	bool	false		
> XTandemAdapter	+	PeptideIndexing:allow_nterm_protein_cleavage	string	true	true,false	
> XTandemAdapter	+	PeptideIndexing:enzyme:name	string	auto	auto,Trypsin,Arg-C,Chymotrypsin,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage	
> XTandemAdapter	+	enzyme	string	Trypsin	Trypsin,Arg-C,Chymotrypsin,Asp-N_ambic,Chymotrypsin/P,CNBr,Asp-N/B,Formic_acid,Asp-N,Arg-C/P,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,no cleavage,unspecific cleavage	
> XTandemAdapter	-	PeptideIndexing:enzyme:name	string	auto	auto,leukocyte elastase,proline endopeptidase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,iodosobenzoate,staphylococcal protease/D,proline-endopeptidase/HKR,Glu-C+P,PepsinA + P,cyanogen-bromide,Clostripain/P,Arg-C/P,Asp-N,Asp-N/B,Asp-N_ambic,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,elastase-trypsin-chymotrypsin,no cleavage,unspecific cleavage,Arg-C,Trypsin	
> XTandemAdapter	-	enzyme	string	Trypsin	Asp-N,Asp-N/B,Asp-N_ambic,unspecific cleavage,Arg-C/P,Chymotrypsin,Chymotrypsin/P,CNBr,Formic_acid,Lys-C,Lys-N,Lys-C/P,PepsinA,TrypChymo,Trypsin/P,V8-DE,V8-E,leukocyte elastase,glutamyl endopeptidase,Alpha-lytic protease,2-iodobenzoate,Trypsin,Arg-C	
diff -r source-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/src/openms/source/ANALYSIS/QUANTITATION/PeptideAndProteinQuant.cpp lookaside-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/src/openms/source/ANALYSIS/QUANTITATION/PeptideAndProteinQuant.cpp
675c675
<     for (const auto& e : ms_section)
---
>     for (const auto e : ms_section)
diff -r source-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/src/tests/topp/THIRDPARTY/third_party_tests.cmake lookaside-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/src/tests/topp/THIRDPARTY/third_party_tests.cmake
263,269c263,269
<     add_test("TOPP_SiriusAdapter_1" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_1_input.mzML -out_sirius SiriusAdapter_1_output.tmp -sirius:candidates 5 -sirius:profile qtof -sirius:db all -out_annotated_spectra SiriusAdapter_1_output_spec.tmp -read_sirius_stdout)
<     add_test("TOPP_SiriusAdapter_1_out" ${DIFF} -in1 SiriusAdapter_1_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_1_output.mzTab -whitelist "MTD" "295.18707248574799") # ranks of the compound at "295.18707248574799" m/z shifts depending on OS (unix or windows)
<     set_tests_properties("TOPP_SiriusAdapter_1_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_1")
<     if (APPLE) # mzML was created on the CI macOS
<       add_test("TOPP_SiriusAdapter_1_out_spec" ${DIFF} -in1 SiriusAdapter_1_output_spec.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_1_ann_out.mzML)
<       set_tests_properties("TOPP_SiriusAdapter_1_out_spec" PROPERTIES DEPENDS "TOPP_SiriusAdapter_1")
<     endif()
---
>     #add_test("TOPP_SiriusAdapter_1" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_1_input.mzML -out_sirius SiriusAdapter_1_output.tmp -sirius:candidates 5 -sirius:profile qtof -sirius:db all -out_annotated_spectra SiriusAdapter_1_output_spec.tmp -read_sirius_stdout)
>     #add_test("TOPP_SiriusAdapter_1_out" ${DIFF} -in1 SiriusAdapter_1_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_1_output.mzTab -whitelist "MTD" "295.18707248574799") # ranks of the compound at "295.18707248574799" m/z shifts depending on OS (unix or windows)
>     #set_tests_properties("TOPP_SiriusAdapter_1_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_1")
>     #if (APPLE) # mzML was created on the CI macOS
>     #  add_test("TOPP_SiriusAdapter_1_out_spec" ${DIFF} -in1 SiriusAdapter_1_output_spec.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_1_ann_out.mzML)
>     #  set_tests_properties("TOPP_SiriusAdapter_1_out_spec" PROPERTIES DEPENDS "TOPP_SiriusAdapter_1")
>     #endif()
272,273c272,273
<     add_test("TOPP_SiriusAdapter_2" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_2_input.mzML -in_featureinfo ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_2_input.featureXML -out_sirius SiriusAdapter_2_output.tmp -preprocessing:feature_only -preprocessing:filter_by_num_masstraces 3 -sirius:candidates 5 -sirius:profile qtof -sirius:db all -out_annotated_spectra SiriusAdapter_2_output_spec.tmp -read_sirius_stdout)
<     add_test("TOPP_SiriusAdapter_2_out" ${DIFF} -in1 SiriusAdapter_2_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_2_output.mzTab -whitelist "MTD")
---
>     #add_test("TOPP_SiriusAdapter_2" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_2_input.mzML -in_featureinfo ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_2_input.featureXML -out_sirius SiriusAdapter_2_output.tmp -preprocessing:feature_only -preprocessing:filter_by_num_masstraces 3 -sirius:candidates 5 -sirius:profile qtof -sirius:db all -out_annotated_spectra SiriusAdapter_2_output_spec.tmp -read_sirius_stdout)
>     #add_test("TOPP_SiriusAdapter_2_out" ${DIFF} -in1 SiriusAdapter_2_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_2_output.mzTab -whitelist "MTD")
275,278c275,278
<     add_test("TOPP_SiriusAdapter_2_out_spec" ${DIFF} -in1 SiriusAdapter_2_output_spec.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_2_feat_ann_out.mzML)
<     set_tests_properties("TOPP_SiriusAdapter_2" PROPERTIES DEPENDS "TOPP_SiriusAdapter_1")
<     set_tests_properties("TOPP_SiriusAdapter_2_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_2")
<     set_tests_properties("TOPP_SiriusAdapter_2_out_spec" PROPERTIES DEPENDS "TOPP_SiriusAdapter_2")
---
>     #add_test("TOPP_SiriusAdapter_2_out_spec" ${DIFF} -in1 SiriusAdapter_2_output_spec.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_2_feat_ann_out.mzML)
>     #set_tests_properties("TOPP_SiriusAdapter_2" PROPERTIES DEPENDS "TOPP_SiriusAdapter_1")
>     #set_tests_properties("TOPP_SiriusAdapter_2_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_2")
>     #set_tests_properties("TOPP_SiriusAdapter_2_out_spec" PROPERTIES DEPENDS "TOPP_SiriusAdapter_2")
281,288c281,288
<     add_test("TOPP_SiriusAdapter_3" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_3_input.mzML -in_featureinfo ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_3_input.featureXML -out_sirius SiriusAdapter_3_output.tmp -preprocessing:filter_by_num_masstraces 3 -sirius:candidates 5 -sirius:profile qtof -sirius:db all -out_annotated_spectra SiriusAdapter_3_output_spec.tmp -read_sirius_stdout)
<     add_test("TOPP_SiriusAdapter_3_out" ${DIFF} -in1 SiriusAdapter_3_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_3_output.mzTab -whitelist "MTD" "295.18707248574799") # ranks of the compound at "295.18707248574799" m/z shifts depending on OS (unix or windows)
<     if (APPLE)  # mzML was created on the CI macOS
<       add_test("TOPP_SiriusAdapter_3_out_spec" ${DIFF} -in1 SiriusAdapter_3_output_spec.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_3_feat_only_ann_out.mzML)
<       set_tests_properties("TOPP_SiriusAdapter_3_out_spec" PROPERTIES DEPENDS "TOPP_SiriusAdapter_3")
<     endif()
<     set_tests_properties("TOPP_SiriusAdapter_3" PROPERTIES DEPENDS "TOPP_SiriusAdapter_2")
<     set_tests_properties("TOPP_SiriusAdapter_3_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_3")
---
>     #add_test("TOPP_SiriusAdapter_3" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_3_input.mzML -in_featureinfo ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_3_input.featureXML -out_sirius SiriusAdapter_3_output.tmp -preprocessing:filter_by_num_masstraces 3 -sirius:candidates 5 -sirius:profile qtof -sirius:db all -out_annotated_spectra SiriusAdapter_3_output_spec.tmp -read_sirius_stdout)
>     #add_test("TOPP_SiriusAdapter_3_out" ${DIFF} -in1 SiriusAdapter_3_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_3_output.mzTab -whitelist "MTD" "295.18707248574799") # ranks of the compound at "295.18707248574799" m/z shifts depending on OS (unix or windows)
>     #if (APPLE)  # mzML was created on the CI macOS
>     #  add_test("TOPP_SiriusAdapter_3_out_spec" ${DIFF} -in1 SiriusAdapter_3_output_spec.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_3_feat_only_ann_out.mzML)
>     #  set_tests_properties("TOPP_SiriusAdapter_3_out_spec" PROPERTIES DEPENDS "TOPP_SiriusAdapter_3")
>     #endif()
>     #set_tests_properties("TOPP_SiriusAdapter_3" PROPERTIES DEPENDS "TOPP_SiriusAdapter_2")
>     #set_tests_properties("TOPP_SiriusAdapter_3_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_3")
301,306c301,306
<     add_test("TOPP_SiriusAdapter_8" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML  -in_featureinfo ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_multids.featureXML -out_sirius SiriusAdapter_8_output.tmp -preprocessing:feature_only -sirius:candidates 5 -sirius:profile qtof -sirius:db all -read_sirius_stdout)
<     if (APPLE) # mzTab was created on the CI macOS
<       add_test("TOPP_SiriusAdapter_8_out" ${DIFF} -in1 SiriusAdapter_8_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_8_output.mzTab -whitelist "MTD")
<       set_tests_properties("TOPP_SiriusAdapter_8_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_8")
<     endif()
<     set_tests_properties("TOPP_SiriusAdapter_8" PROPERTIES DEPENDS "TOPP_SiriusAdapter_7")
---
>     #add_test("TOPP_SiriusAdapter_8" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML  -in_featureinfo ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_multids.featureXML -out_sirius SiriusAdapter_8_output.tmp -preprocessing:feature_only -sirius:candidates 5 -sirius:profile qtof -sirius:db all -read_sirius_stdout)
>     #if (APPLE) # mzTab was created on the CI macOS
>     #  add_test("TOPP_SiriusAdapter_8_out" ${DIFF} -in1 SiriusAdapter_8_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_8_output.mzTab -whitelist "MTD")
>     #  set_tests_properties("TOPP_SiriusAdapter_8_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_8")
>     #endif()
>     #set_tests_properties("TOPP_SiriusAdapter_8" PROPERTIES DEPENDS "TOPP_SiriusAdapter_7")
308,313c308,313
<     add_test("TOPP_SiriusAdapter_9" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML  -in_featureinfo ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_multids.featureXML -out_sirius SiriusAdapter_9_output.tmp -sirius:candidates 5 -sirius:profile qtof -sirius:db all -read_sirius_stdout)
<     set_tests_properties("TOPP_SiriusAdapter_9" PROPERTIES DEPENDS "TOPP_SiriusAdapter_8")
<     if (APPLE) # mzTab was created on the CI macOS
<       add_test("TOPP_SiriusAdapter_9_out" ${DIFF} -in1 SiriusAdapter_9_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_9_output.mzTab -whitelist "MTD")
<       set_tests_properties("TOPP_SiriusAdapter_9_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_9")
<     endif()
---
>     #add_test("TOPP_SiriusAdapter_9" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML  -in_featureinfo ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_multids.featureXML -out_sirius SiriusAdapter_9_output.tmp -sirius:candidates 5 -sirius:profile qtof -sirius:db all -read_sirius_stdout)
>     #set_tests_properties("TOPP_SiriusAdapter_9" PROPERTIES DEPENDS "TOPP_SiriusAdapter_8")
>     #if (APPLE) # mzTab was created on the CI macOS
>     #  add_test("TOPP_SiriusAdapter_9_out" ${DIFF} -in1 SiriusAdapter_9_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_9_output.mzTab -whitelist "MTD")
>     #  set_tests_properties("TOPP_SiriusAdapter_9_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_9")
>     #endif()
315,320c315,320
<     add_test("TOPP_SiriusAdapter_10" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -out_sirius SiriusAdapter_10_output.tmp -sirius:candidates 5 -sirius:profile qtof -sirius:db all -read_sirius_stdout)
<     set_tests_properties("TOPP_SiriusAdapter_10" PROPERTIES DEPENDS "TOPP_SiriusAdapter_9")
<     if (APPLE) # mzTab was created on the CI macOS
<       add_test("TOPP_SiriusAdapter_10_out" ${DIFF} -in1 SiriusAdapter_10_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_10_output.mzTab -whitelist "MTD" "213.074829537142989" "522.38651805643201") # ranks of the compound at "522.38651805643201" m/z shifts depending on OS (Linux C28H49N7O or windows/macOS C25H47N9O3))
<       set_tests_properties("TOPP_SiriusAdapter_10_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_10")
<     endif()
---
>     #add_test("TOPP_SiriusAdapter_10" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -out_sirius SiriusAdapter_10_output.tmp -sirius:candidates 5 -sirius:profile qtof -sirius:db all -read_sirius_stdout)
>     #set_tests_properties("TOPP_SiriusAdapter_10" PROPERTIES DEPENDS "TOPP_SiriusAdapter_9")
>     #if (APPLE) # mzTab was created on the CI macOS
>     #  add_test("TOPP_SiriusAdapter_10_out" ${DIFF} -in1 SiriusAdapter_10_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_10_output.mzTab -whitelist "MTD" "213.074829537142989" "522.38651805643201") # ranks of the compound at "522.38651805643201" m/z shifts depending on OS (Linux C28H49N7O or windows/macOS C25H47N9O3))
>     #  set_tests_properties("TOPP_SiriusAdapter_10_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_10")
>     #endif()
322,325c322,325
<     add_test("TOPP_SiriusAdapter_7" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_4_input.mzML -in_featureinfo ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_4_input.featureXML -out_sirius SiriusAdapter_7_output.tmp -preprocessing:feature_only -sirius:candidates 5 -sirius:profile qtof -sirius:db all -read_sirius_stdout)
<     add_test("TOPP_SiriusAdapter_7_out" ${DIFF} -in1 SiriusAdapter_7_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_7_output.mzTab -whitelist "MTD")
<     set_tests_properties("TOPP_SiriusAdapter_7" PROPERTIES DEPENDS "TOPP_SiriusAdapter_6")
<     set_tests_properties("TOPP_SiriusAdapter_7_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_7")
---
>     #add_test("TOPP_SiriusAdapter_7" ${TOPP_BIN_PATH}/SiriusAdapter -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_4_input.mzML -in_featureinfo ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_4_input.featureXML -out_sirius SiriusAdapter_7_output.tmp -preprocessing:feature_only -sirius:candidates 5 -sirius:profile qtof -sirius:db all -read_sirius_stdout)
>     #add_test("TOPP_SiriusAdapter_7_out" ${DIFF} -in1 SiriusAdapter_7_output.tmp -in2 ${DATA_DIR_TOPP}/THIRDPARTY/SiriusAdapter_7_output.mzTab -whitelist "MTD")
>     #set_tests_properties("TOPP_SiriusAdapter_7" PROPERTIES DEPENDS "TOPP_SiriusAdapter_6")
>     #set_tests_properties("TOPP_SiriusAdapter_7_out" PROPERTIES DEPENDS "TOPP_SiriusAdapter_7")
328,330c328,330
<     add_test("TOPP_AssayGeneratorMetabo_7" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_input.featureXML -out AssayGeneratorMetabo_ams_sirius_output.tmp.tsv -fragment_annotation sirius -use_exact_mass -transition_threshold 3.0 -min_transitions 2 -max_transitions 3 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
<     add_test("TOPP_AssayGeneratorMetabo_7_out1" ${DIFF} -in1 AssayGeneratorMetabo_ams_sirius_output.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_sirius_output.tsv)
<     set_tests_properties("TOPP_AssayGeneratorMetabo_7_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_7")
---
>     #add_test("TOPP_AssayGeneratorMetabo_7" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_input.featureXML -out AssayGeneratorMetabo_ams_sirius_output.tmp.tsv -fragment_annotation sirius -use_exact_mass -transition_threshold 3.0 -min_transitions 2 -max_transitions 3 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
>     #add_test("TOPP_AssayGeneratorMetabo_7_out1" ${DIFF} -in1 AssayGeneratorMetabo_ams_sirius_output.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_sirius_output.tsv)
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_7_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_7")
333,336c333,336
<     add_test("TOPP_AssayGeneratorMetabo_8" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_input.featureXML -out AssayGeneratorMetabo_ams_sirius_ukn_output.tmp.tsv -fragment_annotation sirius -use_exact_mass -transition_threshold 3.0 -min_transitions 2 -max_transitions 3 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:candidates 5 -sirius:db ALL -sirius:profile qtof -sirius:compound_timeout 100 -use_known_unknowns)
<     add_test("TOPP_AssayGeneratorMetabo_8_out1" ${DIFF} -in1 AssayGeneratorMetabo_ams_sirius_ukn_output.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_sirius_ukn_output.tsv)
<     set_tests_properties("TOPP_AssayGeneratorMetabo_8" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_7")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_8_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_8")
---
>     #add_test("TOPP_AssayGeneratorMetabo_8" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_input.featureXML -out AssayGeneratorMetabo_ams_sirius_ukn_output.tmp.tsv -fragment_annotation sirius -use_exact_mass -transition_threshold 3.0 -min_transitions 2 -max_transitions 3 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:candidates 5 -sirius:db ALL -sirius:profile qtof -sirius:compound_timeout 100 -use_known_unknowns)
>     #add_test("TOPP_AssayGeneratorMetabo_8_out1" ${DIFF} -in1 AssayGeneratorMetabo_ams_sirius_ukn_output.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_sirius_ukn_output.tsv)
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_8" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_7")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_8_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_8")
339,342c339,342
<     add_test("TOPP_AssayGeneratorMetabo_9" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_intsort_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_intsort_input.featureXML -out AssayGeneratorMetabo_ams_sirius_intsort_output.tmp.tsv -fragment_annotation sirius -use_exact_mass -transition_threshold 3.0 -min_transitions 2 -max_transitions 3 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:candidates 5 -sirius:profile qtof -sirius:compound_timeout 100)
<     add_test("TOPP_AssayGeneratorMetabo_9_out1" ${DIFF} -in1 AssayGeneratorMetabo_ams_sirius_intsort_output.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_sirius_intsort_output.tsv)
<     set_tests_properties("TOPP_AssayGeneratorMetabo_9" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_8")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_9_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_9")
---
>     #add_test("TOPP_AssayGeneratorMetabo_9" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_intsort_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_intsort_input.featureXML -out AssayGeneratorMetabo_ams_sirius_intsort_output.tmp.tsv -fragment_annotation sirius -use_exact_mass -transition_threshold 3.0 -min_transitions 2 -max_transitions 3 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:candidates 5 -sirius:profile qtof -sirius:compound_timeout 100)
>     #add_test("TOPP_AssayGeneratorMetabo_9_out1" ${DIFF} -in1 AssayGeneratorMetabo_ams_sirius_intsort_output.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_sirius_intsort_output.tsv)
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_9" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_8")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_9_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_9")
345,348c345,348
<     add_test("TOPP_AssayGeneratorMetabo_10" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_input.featureXML -out AssayGeneratorMetabo_ams_sirius_restrict_output.tmp.tsv  -fragment_annotation sirius -use_exact_mass -transition_threshold 3.0 -min_transitions 2 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
<     add_test("TOPP_AssayGeneratorMetabo_10_out1" ${DIFF} -in1 AssayGeneratorMetabo_ams_sirius_restrict_output.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_sirius_restrict_output.tsv)
<     set_tests_properties("TOPP_AssayGeneratorMetabo_10" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_9")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_10_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_10")
---
>     #add_test("TOPP_AssayGeneratorMetabo_10" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_input.featureXML -out AssayGeneratorMetabo_ams_sirius_restrict_output.tmp.tsv  -fragment_annotation sirius -use_exact_mass -transition_threshold 3.0 -min_transitions 2 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
>     #add_test("TOPP_AssayGeneratorMetabo_10_out1" ${DIFF} -in1 AssayGeneratorMetabo_ams_sirius_restrict_output.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_sirius_restrict_output.tsv)
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_10" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_9")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_10_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_10")
352,355c352,355
<     add_test("TOPP_AssayGeneratorMetabo_11" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_input.featureXML -out AssayGeneratorMetabo_ams_sirius_restrict_decoy_output.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method original -use_exact_mass -transition_threshold 3.0 -min_transitions 3 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
<     add_test("TOPP_AssayGeneratorMetabo_11_out1" ${DIFF} -in1 AssayGeneratorMetabo_ams_sirius_restrict_decoy_output.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_sirius_restrict_decoy_output.tsv -whitelist "Guthion_decoy")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_11" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_10")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_11_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_11")
---
>     #add_test("TOPP_AssayGeneratorMetabo_11" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_input.featureXML -out AssayGeneratorMetabo_ams_sirius_restrict_decoy_output.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method original -use_exact_mass -transition_threshold 3.0 -min_transitions 3 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
>     #add_test("TOPP_AssayGeneratorMetabo_11_out1" ${DIFF} -in1 AssayGeneratorMetabo_ams_sirius_restrict_decoy_output.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_ams_sirius_restrict_decoy_output.tsv -whitelist "Guthion_decoy")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_11" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_10")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_11_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_11")
358,361c358,361
<     add_test("TOPP_AssayGeneratorMetabo_12" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML -out AssayGeneratorMetabo_decoy_generation_output_original.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method original -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
<     add_test("TOPP_AssayGeneratorMetabo_12_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_output_original.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_output_original.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_608_0")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_12" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_11")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_12_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_12")
---
>     #add_test("TOPP_AssayGeneratorMetabo_12" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML -out AssayGeneratorMetabo_decoy_generation_output_original.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method original -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
>     #add_test("TOPP_AssayGeneratorMetabo_12_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_output_original.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_output_original.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_608_0")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_12" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_11")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_12_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_12")
364,367c364,367
<     add_test("TOPP_AssayGeneratorMetabo_13" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML -out AssayGeneratorMetabo_decoy_generation_output_resolve_overlap.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method resolve_overlap -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
<     add_test("TOPP_AssayGeneratorMetabo_13_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_output_resolve_overlap.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_output_resolve_overlap.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_608_0")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_13" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_12")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_13_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_13")
---
>     #add_test("TOPP_AssayGeneratorMetabo_13" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML -out AssayGeneratorMetabo_decoy_generation_output_resolve_overlap.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method resolve_overlap -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
>     #add_test("TOPP_AssayGeneratorMetabo_13_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_output_resolve_overlap.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_output_resolve_overlap.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_608_0")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_13" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_12")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_13_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_13")
370,373c370,373
<     add_test("TOPP_AssayGeneratorMetabo_14" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML -out AssayGeneratorMetabo_decoy_generation_output_add_shift.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method add_shift -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
<     add_test("TOPP_AssayGeneratorMetabo_14_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_output_add_shift.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_output_add_shift.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_608_0")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_14" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_13")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_14_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_14")
---
>     #add_test("TOPP_AssayGeneratorMetabo_14" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML -out AssayGeneratorMetabo_decoy_generation_output_add_shift.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method add_shift -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
>     #add_test("TOPP_AssayGeneratorMetabo_14_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_output_add_shift.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_output_add_shift.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_608_0")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_14" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_13")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_14_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_14")
376,379c376,379
<     add_test("TOPP_AssayGeneratorMetabo_15" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML -out AssayGeneratorMetabo_decoy_generation_output_both.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method both -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
<     add_test("TOPP_AssayGeneratorMetabo_15_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_output_both.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_output_both.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_608_0")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_15" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_14")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_15_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_15")
---
>     #add_test("TOPP_AssayGeneratorMetabo_15" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML -out AssayGeneratorMetabo_decoy_generation_output_both.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method both -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
>     #add_test("TOPP_AssayGeneratorMetabo_15_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_output_both.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_output_both.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_608_0")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_15" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_14")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_15_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_15")
382,385c382,385
<     add_test("TOPP_AssayGeneratorMetabo_16" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_multids.featureXML -out AssayGeneratorMetabo_decoy_generation_output_both_multids.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method both -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
<     add_test("TOPP_AssayGeneratorMetabo_16_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_output_both_multids.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_output_both_multids.tsv -whitelist "0_2_Second,Calonectrin,Millefin,3,17beta-dihydroxy-5,9-dioxo-4,5-9,10-diseco-androsta-1(10),2-dien-4-oicacid,(1E,4Z)-14,15-dihydroxy-8alpha-(2-methylpropanoyloxy)germacra-1(10),4,11(13)-trieno-12,6alpha-lactone,?_decoy_[M+H]+_608_0")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_16" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_15")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_16_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_16")
---
>     #add_test("TOPP_AssayGeneratorMetabo_16" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_multids.featureXML -out AssayGeneratorMetabo_decoy_generation_output_both_multids.tmp.tsv  -fragment_annotation sirius -decoy_generation -decoy_generation_method both -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 3 -min_fragment_mz 100 -max_fragment_mz 900 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
>     #add_test("TOPP_AssayGeneratorMetabo_16_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_output_both_multids.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_output_both_multids.tsv -whitelist "0_2_Second,Calonectrin,Millefin,3,17beta-dihydroxy-5,9-dioxo-4,5-9,10-diseco-androsta-1(10),2-dien-4-oicacid,(1E,4Z)-14,15-dihydroxy-8alpha-(2-methylpropanoyloxy)germacra-1(10),4,11(13)-trieno-12,6alpha-lactone,?_decoy_[M+H]+_608_0")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_16" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_15")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_16_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_16")
388,391c388,391
<     add_test("TOPP_AssayGeneratorMetabo_17" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_1.featureXML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_2.featureXML -out AssayGeneratorMetabo_decoy_generation_linking_output_both.tmp.tsv  -fragment_annotation sirius -ambiguity_resolution_mz_tolerance 10.0 -ambiguity_resolution_mz_tolerance_unit Da -ambiguity_resolution_rt_tolerance 10.0 -total_occurrence_filter 0.8 -decoy_generation -decoy_generation_method both -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 6 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
<     add_test("TOPP_AssayGeneratorMetabo_17_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_linking_output_both.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_linking_output_both.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_614_1")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_17" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_16")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_17_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_17")
---
>     #add_test("TOPP_AssayGeneratorMetabo_17" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_1.featureXML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_2.featureXML -out AssayGeneratorMetabo_decoy_generation_linking_output_both.tmp.tsv  -fragment_annotation sirius -ambiguity_resolution_mz_tolerance 10.0 -ambiguity_resolution_mz_tolerance_unit Da -ambiguity_resolution_rt_tolerance 10.0 -total_occurrence_filter 0.8 -decoy_generation -decoy_generation_method both -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 6 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
>     #add_test("TOPP_AssayGeneratorMetabo_17_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_linking_output_both.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_linking_output_both.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_614_1")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_17" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_16")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_17_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_17")
394,397c394,397
<     add_test("TOPP_AssayGeneratorMetabo_18" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_1.featureXML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_2.featureXML -out AssayGeneratorMetabo_decoy_generation_linking_moladd_output_both.tmp.tsv  -fragment_annotation sirius -ambiguity_resolution_mz_tolerance 10.0 -ambiguity_resolution_mz_tolerance_unit Da -ambiguity_resolution_rt_tolerance 10.0 -decoy_generation -decoy_generation_method both -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 6 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
<     add_test("TOPP_AssayGeneratorMetabo_18_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_linking_moladd_output_both.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_linking_moladd_output_both.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_614_1")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_18" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_17")
<     set_tests_properties("TOPP_AssayGeneratorMetabo_18_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_18")
---
>     #add_test("TOPP_AssayGeneratorMetabo_18" ${TOPP_BIN_PATH}/AssayGeneratorMetabo -test -sirius_executable "${SIRIUS_BINARY}" -in ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.mzML -in_id ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input.featureXML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_1.featureXML ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_input_2.featureXML -out AssayGeneratorMetabo_decoy_generation_linking_moladd_output_both.tmp.tsv  -fragment_annotation sirius -ambiguity_resolution_mz_tolerance 10.0 -ambiguity_resolution_mz_tolerance_unit Da -ambiguity_resolution_rt_tolerance 10.0 -decoy_generation -decoy_generation_method both -use_exact_mass -transition_threshold 3.0 -min_transitions 1 -max_transitions 6 -preprocessing:filter_by_num_masstraces 1 -preprocessing:precursor_mz_tolerance 10 -preprocessing:precursor_mz_tolerance_unit ppm -preprocessing:feature_only -sirius:profile qtof -sirius:compound_timeout 100)
>     #add_test("TOPP_AssayGeneratorMetabo_18_out1" ${DIFF} -in1 AssayGeneratorMetabo_decoy_generation_linking_moladd_output_both.tmp.tsv -in2 ${DATA_DIR_TOPP}/AssayGeneratorMetabo_decoy_generation_linking_moladd_output_both.tsv -whitelist "0_2_Proquinazid_decoy_[M+H]+_614_1")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_18" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_17")
>     #set_tests_properties("TOPP_AssayGeneratorMetabo_18_out1" PROPERTIES DEPENDS "TOPP_AssayGeneratorMetabo_18")
diff -r source-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/src/topp/GenericWrapper.cpp lookaside-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/src/topp/GenericWrapper.cpp
482,486d481
<     // TODO: start() with single argument is deprecated in Qt 5.15. Can probably be replaced with
<     // QStringList commandArgs = QString::fromStdString(command_args).split(" ");
<     // QString program = commandArgs.takeFirst();
<     // builder.start(program, commandArgs);
< 
diff -r source-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/src/topp/ProteomicsLFQ.cpp lookaside-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/src/topp/ProteomicsLFQ.cpp
208,209c208,210
<     registerStringOption_("alignment_order", "<option>", "star", "If star, aligns all maps to the reference with most IDs.", false, true);
<     setValidStrings_("alignment_order", ListUtils::create<String>("star")); // TODO: fix and reenable tree guided 
---
>     registerStringOption_("alignment_order", "<option>", "star", "If star, aligns all maps to the reference with most IDs,"
>                                                                  "if treeguided, calculates a guiding tree first.", false, true);
>     setValidStrings_("alignment_order", ListUtils::create<String>("star,treeguided"));
diff -r source-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/src/topp/SageAdapter.cpp lookaside-OpenMS-Release3.1.0.tar.gz-extracted/OpenMS-Release3.1.0/src/topp/SageAdapter.cpp
513c513
<         for (const auto& meta : extra_scores)
---
>         for (const auto meta : extra_scores)
