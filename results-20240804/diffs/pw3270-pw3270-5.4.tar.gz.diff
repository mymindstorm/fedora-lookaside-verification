Source package : pw3270
File name       : pw3270-5.4.tar.gz
Lookaside URL   : https://src.fedoraproject.org/repo/pkgs/pw3270/pw3270-5.4.tar.gz/sha512/4ff8c88708c67572da5f1f369282963011466a0ea90d8bd24001925521ca88ce380469975925c0916281f9799ab1fa0b4bc6d07dbb9fe92aa63b524e483e62a4/pw3270-5.4.tar.gz
Source URL      : https://github.com/PerryWerneck/pw3270/archive/5.4/pw3270-5.4.tar.gz

source file type: /tmp/fedora-lookaside-verification--620412-UnEb0Nzwp0B1/source-pw3270-5.4.tar.gz: gzip compressed data, from Unix, original size modulo 2^32 1290240
lookaside file type: /tmp/fedora-lookaside-verification--620412-UnEb0Nzwp0B1/lookaside-pw3270-5.4.tar.gz: gzip compressed data, from Unix, original size modulo 2^32 870400


diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/arch/PKGBUILD lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/arch/PKGBUILD
12c12
< makedepends=(autoconf automake make openssl lib3270 gtk3 libv3270 python3 dbus dbus-glib imagemagick optipng gzip)
---
> makedepends=(autoconf automake make openssl lib3270 gtk3 libv3270 python3 dbus dbus-glib imagemagick optipng)
37,40d36
<   
<   # Remove compiled schema.
<   rm -f $pkgdir/usr/share/glib-2.0/schemas/gschemas.compiled
<   
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/autogen.sh lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/autogen.sh
2d1
< # SPDX-License-Identifier: LGPL-3.0-or-later
4c3,5
< # Copyright (C) 2008 Banco do Brasil S.A.
---
> # "Software pw3270, desenvolvido com base nos códigos fontes do WC3270  e X3270
> # (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
> # aplicativos mainframe. Registro no INPI sob o nome G3270.
6,9c7
< # This program is free software: you can redistribute it and/or modify
< # it under the terms of the GNU Lesser General Public License as published
< # by the Free Software Foundation, either version 3 of the License, or
< # (at your option) any later version.
---
> # Copyright (C) <2008> <Banco do Brasil S.A.>
11,14c9,25
< # This program is distributed in the hope that it will be useful,
< # but WITHOUT ANY WARRANTY; without even the implied warranty of
< # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
< # GNU General Public License for more details.
---
> # Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
> # os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
> # Free Software Foundation.
> #
> # Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
> # GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
> # A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
> # obter mais detalhes.
> #
> # Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
> # programa; se não, escreva para a Free Software Foundation, Inc., 51 Franklin
> # St, Fifth Floor, Boston, MA  02110-1301  USA
> #
> # Contatos:
> #
> # perry.werneck@gmail.com	(Alexandre Perry de Souza Werneck)
> # erico.mendonca@gmail.com	(Erico Mascarenhas Mendonça)
16,17d26
< # You should have received a copy of the GNU Lesser General Public License
< # along with this program.  If not, see <https://www.gnu.org/licenses/>.
19,20d27
< 
< builddir=${PWD}
24a32
> olddir=`pwd`
27d34
< mkdir -p scripts
30,44d36
< LIBTOOLIZE=$(which libtoolize)
< if [ -z ${LIBTOOLIZE} ]; then
< 	LIBTOOLIZE=$(which glibtoolize)
< fi
< if [ -z ${LIBTOOLIZE} ]; then
< 	echo "Can't find libtoolize"
< 	exit -1
< fi
< 
< ${LIBTOOLIZE} --force
< if test $? != 0 ; then
< 	echo "libtoolize failed."
< 	exit -1
< fi
< 
51,57c43
< #autoheader --force
< #if test $? != 0 ; then
< #	echo "autoheader failed."
< #	exit -1
< #fi
< 
< autoconf --force
---
> autoconf
62a49
> mkdir -p scripts
65,69c52,53
< autopoint
< 
< cd "${builddir}"
< 
< test -n "$NOCONFIGURE" || "$srcdir/configure" --srcdir=${srcdir} $@
---
> cd "$olddir"
> test -n "$NOCONFIGURE" || "$srcdir/configure" "$@"
Only in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/branding: appdata.xml.in
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/branding: keypad.metainfo.xml.in
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/branding/launcher.desktop.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/branding/launcher.desktop.in
4d3
< GenericName[pt_BR]=@PRODUCT_NAME@
7c6
< Comment=IBM 3270 Terminal Emulator
---
> Comment=IBM 3270 Terminal emulator
10c9
< Icon=@APPLICATION_ID@
---
> Icon=/usr/share/@PRODUCT_NAME@/icons/@PRODUCT_NAME@.svg
14,17d12
< Encoding=UTF-8
< 
< Keywords=3270;telnet;@PRODUCT_NAME@;
< Keywords[pt_BR]=3270;telnet;@PRODUCT_NAME@;
21c16
< Actions=gnomeui;classicalui;
---
> Actions=gnomeui;classicalui
24c19
< Categories=GNOME;GTK;System;TerminalEmulator;X-GNOME-Utilities;
---
> Categories=System;TerminalEmulator;
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/branding/Makefile.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/branding/Makefile.in
31d30
< APPLICATION_ID=@APPLICATION_ID@
37d35
< srcdir=@srcdir@
39,40c37,38
< BUILDDIR=@BUILDDIR@
< BINDIR=$(BUILDDIR)/.bin
---
> BASEDIR=@BASEDIR@
> BINDIR=$(BASEDIR)/.bin
61c59
< 	$(srcdir)/%.svg
---
> 	%.svg
75c73
< 	$(srcdir)/$(PRODUCT_NAME).svg
---
> 	$(PRODUCT_NAME).svg
89c87
< 	$(srcdir)/%.svg
---
> 	%.svg
105c103
< 	@$(APPSTREAMCLI) validate metainfo.xml
---
> 	@$(APPSTREAMCLI) validate appdata.xml
114d111
< 	$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/icons/$(PRODUCT_NAME)-symbolic.svg \
119c116
< 		$(APPLICATION_ID).desktop
---
> 		$(PRODUCT_NAME).desktop
125c122
< 		$(APPLICATION_ID).desktop
---
> 		$(PRODUCT_NAME).desktop
127a125
> 
132,140c130
< 	@$(MKDIR) $(DESTDIR)$(datarootdir)/metainfo
< 	@$(INSTALL_DATA) \
< 		metainfo.xml \
< 		$(DESTDIR)$(datarootdir)/metainfo/$(APPLICATION_ID).metainfo.xml
< 
< 	@$(MKDIR) $(DESTDIR)$(datarootdir)/icons/hicolor/scalable/apps
< 	@$(INSTALL_DATA) \
< 		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/icons/$(PRODUCT_NAME).svg \
< 		$(DESTDIR)$(datarootdir)/icons/hicolor/scalable/apps/$(APPLICATION_ID).svg
---
> 	@$(MKDIR) $(DESTDIR)$(datarootdir)/appdata
142d131
< 	@$(MKDIR) $(DESTDIR)$(datarootdir)/icons/hicolor/symbolic/apps
144,158c133,134
< 		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/icons/$(PRODUCT_NAME)-symbolic.svg \
< 		$(DESTDIR)$(datarootdir)/icons/hicolor/symbolic/apps/$(APPLICATION_ID)-symbolic.svg
< 
< 	@$(MKDIR) $(DESTDIR)$(datarootdir)/icons
< 	@$(INSTALL_DATA) \
< 		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/icons/$(PRODUCT_NAME).svg \
< 		$(DESTDIR)$(datarootdir)/icons/$(APPLICATION_ID).svg
< 
< 	@$(INSTALL_DATA) \
< 		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/icons/$(PRODUCT_NAME)-symbolic.svg \
< 		$(DESTDIR)$(datarootdir)/icons/$(APPLICATION_ID)-symbolic.svg
< 
< install-macos: \
< 	$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/$(PRODUCT_NAME).svg \
< 	$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/$(PRODUCT_NAME)-logo.svg
---
> 		appdata.xml \
> 		$(DESTDIR)$(datarootdir)/appdata/$(PRODUCT_NAME).appdata.xml
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/branding: metainfo.xml.in
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/branding: pw3270-symbolic.svg
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/branding: social-preview.svg
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/configure.ac lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/configure.ac
1d0
< dnl SPDX-License-Identifier: LGPL-3.0-or-later
3c2,4
< dnl Copyright (C) 2008 Banco do Brasil S.A.
---
> dnl Software pw3270, desenvolvido com base nos códigos fontes do  C3270  e  X3270
> dnl (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
> dnl aplicativos mainframe. Registro no INPI sob o nome G3270.
5,8c6
< dnl This program is free software: you can redistribute it and/or modify
< dnl it under the terms of the GNU Lesser General Public License as published
< dnl by the Free Software Foundation, either version 3 of the License, or
< dnl (at your option) any later version.
---
> dnl Copyright (C) <2008> <Banco do Brasil S.A.>
10,13c8,10
< dnl This program is distributed in the hope that it will be useful,
< dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
< dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
< dnl GNU General Public License for more details.
---
> dnl Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
> dnl os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
> dnl Free Software Foundation.
15,16c12,25
< dnl You should have received a copy of the GNU Lesser General Public License
< dnl along with this program.  If not, see <https://www.gnu.org/licenses/>.
---
> dnl Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
> dnl GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
> dnl A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
> dnl obter mais detalhes.
> dnl
> dnl Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
> dnl programa;  se  não, escreva para a Free Software Foundation, Inc., 59 Temple
> 
> dnl Place, Suite 330, Boston, MA, 02111-1307, USA
> dnl
> dnl Contatos:
> dnl
> dnl perry.werneck@gmail.com	(Alexandre Perry de Souza Werneck)
> dnl erico.mendonca@gmail.com	(Erico Mascarenhas de Mendonça)
26c35
< AC_INIT([pw3270], [5.4], [perry.werneck@gmail.com])
---
> AC_INIT([pw3270], [5.3], [perry.werneck@gmail.com])
43,45d51
< dnl Set gettext version
< AM_GNU_GETTEXT_VERSION([0.14])
< 
68a75
> 
73d79
< 		AC_CONFIG_FILES(src/main/windows/app-manifest.xml)
97,107d102
< 	*-apple-darwin*)
< 		app_cv_osname="macos"
< 		app_rls_ldflags=""
< 
< 		CFLAGS="$CFLAGS -pthread"
< 		LDFLAGS="$LDFLAGS -pthread"
< 
< 		AC_CONFIG_FILES(schemas/macos/application.gschema.xml)
< 		AC_CONFIG_FILES(schemas/macos/window.gschema.xml)
< 		;;
< 
114a110,112
> 		app_cv_static='no'
> 
> 		# Windows and linux doesn't use the same window defaults.
120,121d117
< app_release_date=$(date +%Y-%m-%d)
< AC_SUBST(RELEASE_DATE,$app_release_date)
131,138d126
< dnl Check for headers
< dnl ---------------------------------------------------------------------------
< 
< AC_CHECK_HEADER(malloc.h, AC_DEFINE(HAVE_MALLOC_H,,[do we have malloc.h?]))
< AC_CHECK_FUNC(localtime_r, AC_DEFINE(HAVE_LOCALTIME_R, [], [Do we have localtime_r?]) )
< AC_CHECK_FUNC(strtok_r, AC_DEFINE(HAVE_STRTOK_R, [], [Do we have strtok_r?]) )
< 
< dnl ---------------------------------------------------------------------------
144c132
< AC_PATH_TOOL([OPTIPNG],[optipng],[no])
---
> dnl AC_PATH_TOOL([OPTIPNG],[optipng],[no])
161d148
< AC_PATH_TOOL([GLIB_SCHEMA_COMPILER],[glib-compile-schemas],[false])
194,227d180
< dnl Set application id & product name
< dnl ---------------------------------------------------------------------------
< 
< AC_ARG_WITH([product-name], [AS_HELP_STRING([--with-product-name], [Set product name])], [ app_cv_product="$withval" ],[ app_cv_product=`pkg-config --variable=product_name lib3270` ])
< AC_DEFINE_UNQUOTED(PRODUCT_NAME, $app_cv_product)
< AC_SUBST(PRODUCT_NAME,$app_cv_product)
< 
< AC_ARG_WITH([application-id], [AS_HELP_STRING([--application-id], [Set the application ID])], [ app_cv_application_id="$withval" ],[ app_cv_application_id=`pkg-config --variable=product_id lib3270`.terminal ])
< 
< AC_DEFINE_UNQUOTED(APPLICATION_ID, $app_cv_application_id)
< AC_SUBST(APPLICATION_ID,$app_cv_application_id)
< 
< dnl ---------------------------------------------------------------------------
< dnl Check for unstable version
< dnl ---------------------------------------------------------------------------
< AC_ARG_ENABLE([unstable],
< 	[AS_HELP_STRING([--enable-unstable], [enable unstable features])],
< [
< 	app_cv_unstable="$enableval"
< ],[
< 
< 	app_cv_unstable="no"
< 
< ])
< 
< if test "$app_cv_unstable" == "yes"; then
< 	AC_DEFINE(ENABLE_UNSTABLE_FEATURES)
< 	AC_MSG_NOTICE([Enabling unstable features])
< else
< 	AC_MSG_NOTICE([Using only stable features])
< fi
< 
< 
< dnl ---------------------------------------------------------------------------
235a189,192
> AC_ARG_WITH([product-name], [AS_HELP_STRING([--with-product-name], [Set product name])], [ app_cv_product="$withval" ],[ app_cv_product=`pkg-config --variable=product_name lib3270` ])
> AC_DEFINE_UNQUOTED(PRODUCT_NAME, $app_cv_product)
> AC_SUBST(PRODUCT_NAME,$app_cv_product)
> 
246,258c203
< case "$host" in
< 	*-mingw32|*-pc-msys)
< 		PKG_CHECK_MODULES( [GTK], [gtk+-3.0 glib-2.0 gmodule-2.0], AC_DEFINE(HAVE_GTK), AC_MSG_ERROR([GTK not present.]))
< 		;;
< 
< 	*-apple-darwin*)
< 		PKG_CHECK_MODULES( [GTK], [gtk+-3.0 glib-2.0 gmodule-2.0], AC_DEFINE(HAVE_GTK), AC_MSG_ERROR([GTK not present.]))
< 		;;
< 
<  	*)
< 		PKG_CHECK_MODULES( [GTK], [gtk+-3.0 glib-2.0 gmodule-2.0], AC_DEFINE(HAVE_GTK), AC_MSG_ERROR([GTK not present.]))
< 
< esac
---
> PKG_CHECK_MODULES( [GTK], [gtk+-3.0 glib-2.0 gmodule-2.0], AC_DEFINE(HAVE_GTK), AC_MSG_ERROR([GTK not present.]))
294c239
< AC_SUBST(BUILDDIR,$app_cv_buildir)
---
> AC_SUBST(BASEDIR,$app_cv_buildir)
307,308c252
< AC_CONFIG_FILES(branding/metainfo.xml)
< dnl AC_CONFIG_FILES(branding/keypad.metainfo.xml)
---
> AC_CONFIG_FILES(branding/appdata.xml)
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/debian/changelog lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/debian/changelog
1c1
< pw3270 (5.4-0) unstable; urgency=low
---
> pw3270 (5.3-0) unstable; urgency=low
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/debian/pw3270.dsc lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/debian/pw3270.dsc
3c3
< Version: 5.4-0
---
> Version: 5.3-0
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/debian/rules lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/debian/rules
68a69,71
> 	# Install option keypads
> 	make DESTDIR=$(PWD)/debian/$(PACKAGE_NAME)-keypads install-keypads
> 
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/debian/shlibs lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/debian/shlibs
1,3c1,3
< lib3270 5.4 lib3270 (= 5.4)
< libv3270 5.4 libv3270 (= 5.4)
< libpw3270 5.4 pw3270 (= 5.4)
---
> lib3270 5.2 lib3270 (>= 5.2)
> libv3270 5.2 libv3270 (>= 5.2)
> libpw3270 5.2 pw3270 (>= 5.2)
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4: flathub
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4: flatpak
Only in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/.github/workflows: codeql-analysis.yml
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/.github/workflows: codeql.yml
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/.github/workflows: msys2.yml
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/.gitignore lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/.gitignore
60,61c60
< metainfo.xml
< *.metainfo.xml
---
> appdata.xml
62a62
> 
66,74d65
< *.patch
< *.orig
< *.rej
< ABOUT-NLS
< intl
< m4
< po
< app-manifest.xml
< 
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/icons: connect.svg
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/icons: disconnect.svg
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/icons: gtk-ok.svg
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/icons: gtk-ok-symbolic.svg
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/icons: gtk-quit.svg
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/icons: gtk-quit-symbolic.svg
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/icons: ok.svg
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/icons: ok-symbolic.svg
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/icons: quit.svg
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/icons: quit-symbolic.svg
Only in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4: keypad
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4: lgtm.yml
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/locale/Makefile.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/locale/Makefile.in
40,41c40,41
< BUILDDIR=@BUILDDIR@
< BINDIR=$(BUILDDIR)/.bin/locale
---
> BASEDIR=@BASEDIR@
> BINDIR=$(BASEDIR)/.bin/locale
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/locale/pt_BR.po lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/locale/pt_BR.po
2c2
< # Perry Werneck <perry.werneck@gmail.com>, 2012-2021.
---
> # Perry Werneck <perry.werneck@gmail.com>, 2012, 2013, 2014, 2016, 2017, 2018, 2019, 2020.
8,9c8,9
< "POT-Creation-Date: 2023-01-11 03:29-0300\n"
< "PO-Revision-Date: 2021-12-23 01:36-0300\n"
---
> "POT-Creation-Date: 2020-10-29 19:50-0300\n"
> "PO-Revision-Date: 2020-10-15 13:45-0300\n"
11c11
< "Language-Team: Brazilian Portuguese <perry.werneck@gmail.com>\n"
---
> "Language-Team: Português <>\n"
19,20c19,21
< "Plural-Forms: nplurals=2; plural=(n > 1)\n"
< "X-Generator: Gtranslator 3.38.0\n"
---
> "Plural-Forms: nplurals=4; plural= (n==1) ? 0 : (n==2) ? 1 : (n != 8 && n != "
> "11) ? 2 : 3;\n"
> "X-Generator: Gtranslator 2.91.7\n"
22c23
< #: src/objects/application/application.c:211
---
> #: src/objects/application/application.c:203
27,32c28
< #: src/objects/application/actions/about.c:133
< #, c-format
< msgid "%s for %s."
< msgstr "%s para %s"
< 
< #: src/objects/application/actions/about.c:140
---
> #: src/objects/application/actions/about.c:93
36c32
< #: src/objects/application/actions/about.c:138
---
> #: src/objects/application/actions/about.c:91
40,41c36
< #: src/objects/actions/save.c:167 src/objects/os/linux/savedesktopicon.c:233
< #: src/objects/os/windows/savedesktopicon.c:222
---
> #: src/objects/actions/save.c:156 src/objects/os/linux/savedesktopicon.c:267
45c40,45
< #: src/objects/application/actions/about.c:142
---
> #: src/objects/application/actions/about.c:87
> #, c-format
> msgid "3270 terminal emulator for %s."
> msgstr "Emulador 3270 para %s"
> 
> #: src/objects/application/actions/about.c:95
49c49
< #: src/objects/application/actions/about.c:136
---
> #: src/objects/application/actions/about.c:89
53,62c53,54
< #: src/objects/toolbar/settings.c:215
< msgid ""
< "<small><b>The toolbar position only takes effect after restart</b></small>"
< msgstr ""
< "<small><b>Alterações na posição da barra de ferramentas só tem efeito apos "
< "reinício da aplicação</b></small>"
< 
< #: src/objects/application/actions/about.c:232 ui/linux.ui.xml:40
< #: ui/linux.ui.xml:553 ui/macos.ui.xml:40 ui/macos.ui.xml:553
< #: ui/windows.ui.xml:40 ui/windows.ui.xml:553
---
> #: src/objects/application/actions/about.c:188 ui/application.xml:39
> #: ui/application.xml:537
70c62
< #: src/objects/window/window.c:233
---
> #: src/objects/window/window.c:184
74,76c66
< #: ui/linux.ui.xml:525 ui/linux.ui.xml:917 ui/linux.ui.xml:1032
< #: ui/macos.ui.xml:525 ui/macos.ui.xml:917 ui/macos.ui.xml:1032
< #: ui/windows.ui.xml:525 ui/windows.ui.xml:917 ui/windows.ui.xml:1032
---
> #: ui/window.xml:384 ui/window.xml:499 ui/application.xml:509
80c70
< #: src/main/tools.c:79
---
> #: src/main/tools.c:99
84,85c74
< #: ui/linux.ui.xml:252 ui/linux.ui.xml:691 ui/macos.ui.xml:252
< #: ui/macos.ui.xml:691 ui/windows.ui.xml:252 ui/windows.ui.xml:691
---
> #: ui/window.xml:178 ui/application.xml:251
89c78
< #: src/objects/application/actions/about.c:175
---
> #: src/objects/application/actions/about.c:129
93,94c82
< #: ui/linux.ui.xml:385 ui/linux.ui.xml:665 ui/macos.ui.xml:385
< #: ui/macos.ui.xml:665 ui/windows.ui.xml:385 ui/windows.ui.xml:665
---
> #: ui/window.xml:132 ui/application.xml:389
98c86
< #: src/objects/window/header-settings.c:125
---
> #: src/objects/window/header-settings.c:123
102,103c90
< #: src/objects/application/actions/preferences.c:76 ui/linux.ui.xml:84
< #: ui/macos.ui.xml:84 ui/windows.ui.xml:84
---
> #: src/objects/application/actions/preferences.c:76 ui/application.xml:83
111c98
< #: ui/linux.ui.xml:500 ui/macos.ui.xml:500 ui/windows.ui.xml:500
---
> #: ui/application.xml:484
115c102
< #: src/objects/toolbar/settings.c:119 src/objects/settings/actionview.c:73
---
> #: src/objects/toolbar/settings.c:112 src/objects/settings/actionview.c:73
119c106
< #: src/objects/application/actions/about.c:178
---
> #: src/objects/application/actions/about.c:132
123,124c110
< #: ui/linux.ui.xml:490 ui/linux.ui.xml:946 ui/macos.ui.xml:490
< #: ui/macos.ui.xml:946 ui/windows.ui.xml:490 ui/windows.ui.xml:946
---
> #: ui/window.xml:413 ui/application.xml:474
128c114
< #: ui/linux.ui.xml:455 ui/macos.ui.xml:455 ui/windows.ui.xml:455
---
> #: ui/application.xml:439
132c118
< #: ui/linux.ui.xml:505 ui/macos.ui.xml:505 ui/windows.ui.xml:505
---
> #: ui/application.xml:489
136,141c122
< #: src/objects/toolbar/models.c:134
< msgid "Bottom"
< msgstr "Em baixo"
< 
< #: src/objects/application/actions/open.c:104 src/objects/window/terminal.c:143
< #: src/objects/window/terminal.c:197
---
> #: src/objects/window/terminal.c:165
145,153c126
< #: src/objects/os/windows/open.c:133
< msgid "Can't load session preferences"
< msgstr "Não foi possível carregar preferências da sessão"
< 
< #: src/objects/settings/gsettings.c:128
< msgid "Can't load system settings"
< msgstr "Não foi possível carregar configurações de sistema"
< 
< #: src/objects/application/actions/open.c:99 src/objects/window/terminal.c:192
---
> #: src/objects/window/terminal.c:160
158,162c131
< #: src/objects/window/terminal.c:138
< msgid "Can't use default session file"
< msgstr "Não posso usar arquivo de sessão default"
< 
< #: src/objects/application/actions/open.c:50 src/objects/window/page.c:265
---
> #: src/objects/application/actions/open.c:49 src/objects/window/page.c:265
165a135,138
> #: src/objects/window/actions/setcolors.c:46
> msgid "Change terminal colors"
> msgstr "Mudar cores do terminal"
> 
170c143
< #: src/objects/window/header-settings.c:96
---
> #: src/objects/window/header-settings.c:98
174c147
< #: src/objects/window/actions/sessionproperties.c:37
---
> #: src/objects/window/actions/sessionproperties.c:47
178,180c151
< #: ui/linux.ui.xml:305 ui/linux.ui.xml:725 ui/linux.ui.xml:867
< #: ui/macos.ui.xml:305 ui/macos.ui.xml:725 ui/macos.ui.xml:867
< #: ui/windows.ui.xml:305 ui/windows.ui.xml:725 ui/windows.ui.xml:867
---
> #: ui/window.xml:192 ui/window.xml:334 ui/application.xml:304
184,191c155,156
< #: ui/linux.ui.xml:400 ui/macos.ui.xml:400 ui/windows.ui.xml:400
< msgid "Clipboard"
< msgstr "Área de transferência"
< 
< #: ui/linux.ui.xml:150 ui/linux.ui.xml:187 ui/linux.ui.xml:617
< #: ui/linux.ui.xml:654 ui/macos.ui.xml:150 ui/macos.ui.xml:187
< #: ui/macos.ui.xml:617 ui/macos.ui.xml:654 ui/windows.ui.xml:150
< #: ui/windows.ui.xml:187 ui/windows.ui.xml:617 ui/windows.ui.xml:654
---
> #: ui/window.xml:84 ui/window.xml:121 ui/application.xml:149
> #: ui/application.xml:186
203,207c168,169
< #: src/objects/window/actions/close.c:60 ui/linux.ui.xml:217
< #: ui/linux.ui.xml:813 ui/linux.ui.xml:1011 ui/linux.ui.xml:1118
< #: ui/macos.ui.xml:217 ui/macos.ui.xml:813 ui/macos.ui.xml:1011
< #: ui/macos.ui.xml:1118 ui/windows.ui.xml:217 ui/windows.ui.xml:813
< #: ui/windows.ui.xml:1011 ui/windows.ui.xml:1118
---
> #: src/objects/window/actions/close.c:60 ui/window.xml:280 ui/window.xml:478
> #: ui/window.xml:585 ui/application.xml:216
210a173,176
> #: src/objects/window/actions/setcolors.c:45
> msgid "Colors"
> msgstr "Cores"
> 
219c185
< #: ui/linux.ui.xml:450 ui/macos.ui.xml:450 ui/windows.ui.xml:450
---
> #: ui/application.xml:434
227c193
< #: src/objects/window/page.c:218 src/objects/window/window.c:808
---
> #: src/objects/window/window.c:772 src/objects/window/page.c:218
231c197
< #: src/objects/application/actions/about.c:176
---
> #: src/objects/application/actions/about.c:130
235,236c201
< #: ui/linux.ui.xml:237 ui/linux.ui.xml:686 ui/macos.ui.xml:237
< #: ui/macos.ui.xml:686 ui/windows.ui.xml:237 ui/windows.ui.xml:686
---
> #: ui/window.xml:153 ui/application.xml:236
240c205
< #: ui/linux.ui.xml:706 ui/macos.ui.xml:706 ui/windows.ui.xml:706
---
> #: ui/window.xml:168
244c209
< #: ui/linux.ui.xml:711 ui/macos.ui.xml:711 ui/windows.ui.xml:711
---
> #: ui/window.xml:173
248,249c213
< #: ui/linux.ui.xml:247 ui/linux.ui.xml:701 ui/macos.ui.xml:247
< #: ui/macos.ui.xml:701 ui/windows.ui.xml:247 ui/windows.ui.xml:701
---
> #: ui/window.xml:163 ui/application.xml:246
253,254c217
< #: ui/linux.ui.xml:242 ui/linux.ui.xml:696 ui/macos.ui.xml:242
< #: ui/macos.ui.xml:696 ui/windows.ui.xml:242 ui/windows.ui.xml:696
---
> #: ui/window.xml:158 ui/application.xml:241
258,261d220
< #: src/objects/application/actions/about.c:182
< msgid "Copyright © 2008 Banco do Brasil S.A."
< msgstr "Copyright © 2008 Banco do Brasil S.A."
< 
263,264d221
< #: src/objects/os/windows/savedesktopicon.c:107
< #: src/objects/os/macos/savedesktopicon.c:54
268,269c225
< #: ui/linux.ui.xml:475 ui/linux.ui.xml:902 ui/macos.ui.xml:475
< #: ui/macos.ui.xml:902 ui/windows.ui.xml:475 ui/windows.ui.xml:902
---
> #: ui/window.xml:369 ui/application.xml:459
273,274c229
< #: ui/linux.ui.xml:177 ui/linux.ui.xml:644 ui/macos.ui.xml:177
< #: ui/macos.ui.xml:644 ui/windows.ui.xml:177 ui/windows.ui.xml:644
---
> #: ui/window.xml:111 ui/application.xml:176
278,279c233
< #: ui/linux.ui.xml:140 ui/linux.ui.xml:607 ui/macos.ui.xml:140
< #: ui/macos.ui.xml:607 ui/windows.ui.xml:140 ui/windows.ui.xml:607
---
> #: ui/window.xml:74 ui/application.xml:139
283c237
< #: ui/linux.ui.xml:670 ui/macos.ui.xml:670 ui/windows.ui.xml:670
---
> #: ui/window.xml:137 ui/application.xml:394
287,288c241
< #: ui/linux.ui.xml:257 ui/linux.ui.xml:716 ui/macos.ui.xml:257
< #: ui/macos.ui.xml:716 ui/windows.ui.xml:257 ui/windows.ui.xml:716
---
> #: ui/window.xml:183 ui/application.xml:256
292,294c245
< #: ui/linux.ui.xml:315 ui/linux.ui.xml:735 ui/linux.ui.xml:877
< #: ui/macos.ui.xml:315 ui/macos.ui.xml:735 ui/macos.ui.xml:877
< #: ui/windows.ui.xml:315 ui/windows.ui.xml:735 ui/windows.ui.xml:877
---
> #: ui/window.xml:202 ui/window.xml:344 ui/application.xml:314
298,303c249
< #: src/objects/os/windows/savedesktopicon.c:80
< msgid "Description"
< msgstr "Descrição"
< 
< #: ui/linux.ui.xml:808 ui/linux.ui.xml:1006 ui/macos.ui.xml:808
< #: ui/macos.ui.xml:1006 ui/windows.ui.xml:808 ui/windows.ui.xml:1006
---
> #: ui/window.xml:275 ui/window.xml:473
307,308c253,254
< #: src/objects/window/page.c:207 src/objects/window/window.c:808
< #: src/objects/window/window.c:835
---
> #: src/objects/window/window.c:772 src/objects/window/window.c:799
> #: src/objects/window/page.c:207
312,314c258
< #: ui/linux.ui.xml:540 ui/linux.ui.xml:929 ui/linux.ui.xml:1045
< #: ui/macos.ui.xml:540 ui/macos.ui.xml:929 ui/macos.ui.xml:1045
< #: ui/windows.ui.xml:540 ui/windows.ui.xml:929 ui/windows.ui.xml:1045
---
> #: ui/window.xml:396 ui/window.xml:512 ui/application.xml:524
342,344c286
< #: ui/linux.ui.xml:310 ui/linux.ui.xml:730 ui/linux.ui.xml:872
< #: ui/macos.ui.xml:310 ui/macos.ui.xml:730 ui/macos.ui.xml:872
< #: ui/windows.ui.xml:310 ui/windows.ui.xml:730 ui/windows.ui.xml:872
---
> #: ui/window.xml:197 ui/window.xml:339 ui/application.xml:309
348,350c290
< #: ui/linux.ui.xml:320 ui/linux.ui.xml:740 ui/linux.ui.xml:882
< #: ui/macos.ui.xml:320 ui/macos.ui.xml:740 ui/macos.ui.xml:882
< #: ui/windows.ui.xml:320 ui/windows.ui.xml:740 ui/windows.ui.xml:882
---
> #: ui/window.xml:207 ui/window.xml:349 ui/application.xml:319
354,356c294
< #: ui/linux.ui.xml:325 ui/linux.ui.xml:745 ui/linux.ui.xml:887
< #: ui/macos.ui.xml:325 ui/macos.ui.xml:745 ui/macos.ui.xml:887
< #: ui/windows.ui.xml:325 ui/windows.ui.xml:745 ui/windows.ui.xml:887
---
> #: ui/window.xml:212 ui/window.xml:354 ui/application.xml:324
360,364c298
< #: src/objects/os/windows/open.c:140
< msgid "Error starting session"
< msgstr "Erro iniciando sessão"
< 
< #: ui/linux.ui.xml:353 ui/macos.ui.xml:353 ui/windows.ui.xml:353
---
> #: ui/application.xml:352
368,372c302
< #: src/objects/os/windows/savedesktopicon.c:219
< msgid "File for session preferences"
< msgstr "Arquivo para preferências da sessão"
< 
< #: ui/linux.ui.xml:470 ui/macos.ui.xml:470 ui/windows.ui.xml:470
---
> #: ui/application.xml:454
376,378c306
< #: ui/linux.ui.xml:779 ui/linux.ui.xml:955 ui/linux.ui.xml:1050
< #: ui/macos.ui.xml:779 ui/macos.ui.xml:955 ui/macos.ui.xml:1050
< #: ui/windows.ui.xml:779 ui/windows.ui.xml:955 ui/windows.ui.xml:1050
---
> #: ui/window.xml:246 ui/window.xml:422 ui/window.xml:517
381a310,313
> #: keypad/10-bottom.xml:34
> msgid "Function bar"
> msgstr "Barra de funções"
> 
386,387c318
< #: ui/linux.ui.xml:37 ui/linux.ui.xml:550 ui/macos.ui.xml:37
< #: ui/macos.ui.xml:550 ui/windows.ui.xml:37 ui/windows.ui.xml:550
---
> #: ui/application.xml:36 ui/application.xml:534
391,397c322,326
< #: ui/linux.ui.xml:390 ui/macos.ui.xml:390 ui/windows.ui.xml:390
< msgid "Host and Emulation settings"
< msgstr "Configuração de servidor e emulação"
< 
< #: src/objects/application/actions/about.c:134 src/objects/window/window.c:592
< #: src/objects/os/linux/savedesktopicon.c:102
< #: src/objects/os/windows/savedesktopicon.c:269
---
> #: src/objects/window/actions/hostproperties.c:45
> msgid "Host properties"
> msgstr "Propriedades do Servidor"
> 
> #: src/objects/window/window.c:561 src/objects/os/linux/savedesktopicon.c:102
399c328
< msgstr "Emulador de terminal IBM 3270"
---
> msgstr "Emulador 3270"
437c366
< #: ui/linux.ui.xml:1022 ui/macos.ui.xml:1022 ui/windows.ui.xml:1022
---
> #: ui/window.xml:489
453c382
< #: src/objects/toolbar/settings.c:113
---
> #: src/objects/toolbar/settings.c:106
457c386
< #: ui/linux.ui.xml:515 ui/macos.ui.xml:515 ui/windows.ui.xml:515
---
> #: ui/application.xml:499
461,464d389
< #: ui/linux.ui.xml:395 ui/macos.ui.xml:395 ui/windows.ui.xml:395
< msgid "Keyboard accelerators"
< msgstr "Atalhos de teclado"
< 
481c406
< #: src/main/builder.c:135
---
> #: src/main/placeholders.c:114
485c410
< #: src/objects/application/actions/about.c:186
---
> #: src/objects/application/actions/about.c:140
497,499c422,424
< #: src/objects/toolbar/models.c:131
< msgid "Left"
< msgstr "Esquerda"
---
> #: src/objects/toolbar/settings.c:176
> msgid "Layout"
> msgstr "Formato"
505,509c430
< #: src/objects/application/application.c:164
< msgid "Log name"
< msgstr "Nome do arquivo de log"
< 
< #: ui/linux.ui.xml:72 ui/macos.ui.xml:72 ui/windows.ui.xml:72
---
> #: ui/application.xml:71
513c434
< #: ui/linux.ui.xml:67 ui/macos.ui.xml:67 ui/windows.ui.xml:67
---
> #: ui/application.xml:66
517c438
< #: ui/linux.ui.xml:1093 ui/macos.ui.xml:1093 ui/windows.ui.xml:1093
---
> #: ui/window.xml:560
521c442
< #: src/objects/application/actions/about.c:174
---
> #: src/objects/application/actions/about.c:128
525c446
< #: ui/linux.ui.xml:348 ui/macos.ui.xml:348 ui/windows.ui.xml:348
---
> #: ui/application.xml:347
529,530c450
< #: ui/linux.ui.xml:419 ui/linux.ui.xml:1059 ui/macos.ui.xml:419
< #: ui/macos.ui.xml:1059 ui/windows.ui.xml:419 ui/windows.ui.xml:1059
---
> #: ui/window.xml:526 ui/application.xml:403
534,535c454
< #: ui/linux.ui.xml:424 ui/linux.ui.xml:1064 ui/macos.ui.xml:424
< #: ui/macos.ui.xml:1064 ui/windows.ui.xml:424 ui/windows.ui.xml:1064
---
> #: ui/window.xml:531 ui/application.xml:408
539,540c458
< #: ui/linux.ui.xml:429 ui/linux.ui.xml:1069 ui/macos.ui.xml:429
< #: ui/macos.ui.xml:1069 ui/windows.ui.xml:429 ui/windows.ui.xml:1069
---
> #: ui/window.xml:536 ui/application.xml:413
544,545c462
< #: ui/linux.ui.xml:434 ui/linux.ui.xml:1074 ui/macos.ui.xml:434
< #: ui/macos.ui.xml:1074 ui/windows.ui.xml:434 ui/windows.ui.xml:1074
---
> #: ui/window.xml:541 ui/application.xml:418
549,550c466
< #: ui/linux.ui.xml:460 ui/linux.ui.xml:924 ui/macos.ui.xml:460
< #: ui/macos.ui.xml:924 ui/windows.ui.xml:460 ui/windows.ui.xml:924
---
> #: ui/window.xml:391 ui/application.xml:444
554c470
< #: ui/linux.ui.xml:535 ui/macos.ui.xml:535 ui/windows.ui.xml:535
---
> #: ui/application.xml:519
578c494
< #: src/objects/application/actions/open.c:49
---
> #: src/objects/application/actions/open.c:48
582c498
< #: ui/linux.ui.xml:56 ui/macos.ui.xml:56 ui/windows.ui.xml:56
---
> #: ui/application.xml:55
586c502
< #: ui/linux.ui.xml:51 ui/macos.ui.xml:51 ui/windows.ui.xml:51
---
> #: ui/application.xml:50
590c506
< #: src/objects/application/actions/open.c:201
---
> #: src/objects/application/actions/open.c:128
594c510
< #: src/objects/application/actions/open.c:189
---
> #: src/objects/application/actions/open.c:116
598,602c514
< #: src/objects/application/actions/open.c:176
< msgid "Open session"
< msgstr "Abrir sessão"
< 
< #: src/objects/application/actions/open.c:202
---
> #: src/objects/application/actions/open.c:129
606c518
< #: src/objects/application/actions/open.c:190
---
> #: src/objects/application/actions/open.c:117
610,617c522
< #: src/objects/application/actions/open.c:177
< msgid "Open session on the active terminal"
< msgstr "Abrir sessão no terminal ativo"
< 
< #: ui/linux.ui.xml:447 ui/linux.ui.xml:755 ui/linux.ui.xml:897
< #: ui/linux.ui.xml:1042 ui/macos.ui.xml:447 ui/macos.ui.xml:755
< #: ui/macos.ui.xml:897 ui/macos.ui.xml:1042 ui/windows.ui.xml:447
< #: ui/windows.ui.xml:755 ui/windows.ui.xml:897 ui/windows.ui.xml:1042
---
> #: ui/window.xml:222 ui/window.xml:364 ui/window.xml:509 ui/application.xml:431
625,626c530
< #: ui/linux.ui.xml:262 ui/linux.ui.xml:829 ui/macos.ui.xml:262
< #: ui/macos.ui.xml:829 ui/windows.ui.xml:262 ui/windows.ui.xml:829
---
> #: ui/window.xml:296 ui/application.xml:261
630,631c534
< #: ui/linux.ui.xml:272 ui/linux.ui.xml:839 ui/macos.ui.xml:272
< #: ui/macos.ui.xml:839 ui/windows.ui.xml:272 ui/windows.ui.xml:839
---
> #: ui/window.xml:306 ui/application.xml:271
635,636c538
< #: ui/linux.ui.xml:267 ui/linux.ui.xml:834 ui/macos.ui.xml:267
< #: ui/macos.ui.xml:834 ui/windows.ui.xml:267 ui/windows.ui.xml:834
---
> #: ui/window.xml:301 ui/application.xml:266
640,641c542
< #: ui/linux.ui.xml:485 ui/linux.ui.xml:941 ui/macos.ui.xml:485
< #: ui/macos.ui.xml:941 ui/windows.ui.xml:485 ui/windows.ui.xml:941
---
> #: ui/window.xml:408 ui/application.xml:469
646d546
< #: src/objects/os/windows/savedesktopicon.c:74
650,654c550
< #: src/objects/toolbar/models.c:125
< msgid "Position"
< msgstr "Posição"
< 
< #: ui/linux.ui.xml:662 ui/macos.ui.xml:662 ui/windows.ui.xml:662
---
> #: ui/window.xml:129
658,659c554
< #: ui/linux.ui.xml:174 ui/linux.ui.xml:641 ui/macos.ui.xml:174
< #: ui/macos.ui.xml:641 ui/windows.ui.xml:174 ui/windows.ui.xml:641
---
> #: ui/window.xml:108 ui/application.xml:173
663c558
< #: ui/linux.ui.xml:992 ui/macos.ui.xml:992 ui/windows.ui.xml:992
---
> #: ui/window.xml:459
667c562
< #: ui/linux.ui.xml:795 ui/macos.ui.xml:795 ui/windows.ui.xml:795
---
> #: ui/window.xml:262
676,677c571
< #: src/objects/application/actions/window.c:64 ui/linux.ui.xml:89
< #: ui/macos.ui.xml:89 ui/windows.ui.xml:89
---
> #: src/objects/application/actions/window.c:64 ui/application.xml:88
685,686c579
< #: ui/linux.ui.xml:296 ui/linux.ui.xml:858 ui/macos.ui.xml:296
< #: ui/macos.ui.xml:858 ui/windows.ui.xml:296 ui/windows.ui.xml:858
---
> #: ui/window.xml:325 ui/application.xml:295
690,691c583
< #: ui/linux.ui.xml:480 ui/linux.ui.xml:912 ui/macos.ui.xml:480
< #: ui/macos.ui.xml:912 ui/windows.ui.xml:480 ui/windows.ui.xml:912
---
> #: ui/window.xml:379 ui/application.xml:464
695,697c587,589
< #: src/objects/toolbar/models.c:137
< msgid "Right"
< msgstr "Direita"
---
> #: keypad/00-right.xml:34
> msgid "Right keypad"
> msgstr "Painel direito"
699,700c591
< #: ui/linux.ui.xml:135 ui/linux.ui.xml:602 ui/macos.ui.xml:135
< #: ui/macos.ui.xml:602 ui/windows.ui.xml:135 ui/windows.ui.xml:602
---
> #: ui/window.xml:69 ui/application.xml:134
708c599
< #: ui/linux.ui.xml:987 ui/macos.ui.xml:987 ui/windows.ui.xml:987
---
> #: ui/window.xml:454
712c603
< #: ui/linux.ui.xml:790 ui/macos.ui.xml:790 ui/windows.ui.xml:790
---
> #: ui/window.xml:257
716c607
< #: src/objects/actions/save.c:75 src/objects/actions/save.c:164
---
> #: src/objects/actions/save.c:75 src/objects/actions/save.c:153
721,722d611
< #: src/objects/os/windows/savedesktopicon.c:106
< #: src/objects/os/macos/savedesktopicon.c:53
726c615
< #: src/objects/os/linux/savedesktopicon.c:230
---
> #: src/objects/os/linux/savedesktopicon.c:264
730c619
< #: src/objects/os/linux/savedesktopicon.c:202
---
> #: src/objects/os/linux/savedesktopicon.c:236
732c621
< msgstr "Salvar para arquivo de atalho"
---
> msgstr "Salvar para atalho"
734,739c623
< #: src/objects/os/windows/savedesktopicon.c:184
< msgid "Save to windows shortcut"
< msgstr "Salvar para atalho windows"
< 
< #: ui/linux.ui.xml:416 ui/linux.ui.xml:1056 ui/macos.ui.xml:416
< #: ui/macos.ui.xml:1056 ui/windows.ui.xml:416 ui/windows.ui.xml:1056
---
> #: ui/window.xml:523 ui/application.xml:400
743,744c627
< #: ui/linux.ui.xml:286 ui/linux.ui.xml:853 ui/macos.ui.xml:286
< #: ui/macos.ui.xml:853 ui/windows.ui.xml:286 ui/windows.ui.xml:853
---
> #: ui/window.xml:320 ui/application.xml:285
748,749c631
< #: ui/linux.ui.xml:281 ui/linux.ui.xml:848 ui/macos.ui.xml:281
< #: ui/macos.ui.xml:848 ui/windows.ui.xml:281 ui/windows.ui.xml:848
---
> #: ui/window.xml:315 ui/application.xml:280
753,754c635
< #: ui/linux.ui.xml:495 ui/linux.ui.xml:760 ui/macos.ui.xml:495
< #: ui/macos.ui.xml:760 ui/windows.ui.xml:495 ui/windows.ui.xml:760
---
> #: ui/window.xml:227 ui/application.xml:479
758c639
< #: src/objects/toolbar/settings.c:113
---
> #: src/objects/toolbar/settings.c:106
762c643
< #: src/objects/toolbar/settings.c:118
---
> #: src/objects/toolbar/settings.c:111
766,769c647,648
< #: ui/linux.ui.xml:145 ui/linux.ui.xml:182 ui/linux.ui.xml:612
< #: ui/linux.ui.xml:649 ui/macos.ui.xml:145 ui/macos.ui.xml:182
< #: ui/macos.ui.xml:612 ui/macos.ui.xml:649 ui/windows.ui.xml:145
< #: ui/windows.ui.xml:182 ui/windows.ui.xml:612 ui/windows.ui.xml:649
---
> #: ui/window.xml:79 ui/window.xml:116 ui/application.xml:144
> #: ui/application.xml:181
777,779c656,657
< #: src/objects/window/actions/filetransfer.c:46 ui/linux.ui.xml:196
< #: ui/linux.ui.xml:997 ui/macos.ui.xml:196 ui/macos.ui.xml:997
< #: ui/windows.ui.xml:196 ui/windows.ui.xml:997
---
> #: src/objects/window/actions/filetransfer.c:46 ui/window.xml:464
> #: ui/application.xml:195
783c661
< #: src/objects/toolbar/settings.c:253 src/objects/toolbar/settings.c:263
---
> #: src/objects/toolbar/settings.c:234 src/objects/toolbar/settings.c:244
787,788c665
< #: ui/linux.ui.xml:48 ui/linux.ui.xml:584 ui/macos.ui.xml:48
< #: ui/macos.ui.xml:584 ui/windows.ui.xml:48 ui/windows.ui.xml:584
---
> #: ui/application.xml:47
792,794c669
< #: ui/linux.ui.xml:77 ui/linux.ui.xml:978 ui/linux.ui.xml:1098
< #: ui/macos.ui.xml:77 ui/macos.ui.xml:978 ui/macos.ui.xml:1098
< #: ui/windows.ui.xml:77 ui/windows.ui.xml:978 ui/windows.ui.xml:1098
---
> #: ui/window.xml:445 ui/window.xml:565 ui/application.xml:76
799d673
< #: src/objects/os/windows/savedesktopicon.c:94
803,804c677
< #: ui/linux.ui.xml:127 ui/linux.ui.xml:594 ui/macos.ui.xml:127
< #: ui/macos.ui.xml:594 ui/windows.ui.xml:127 ui/windows.ui.xml:594
---
> #: ui/window.xml:61 ui/application.xml:126
808,809c681
< #: ui/linux.ui.xml:122 ui/linux.ui.xml:589 ui/macos.ui.xml:122
< #: ui/macos.ui.xml:589 ui/windows.ui.xml:122 ui/windows.ui.xml:589
---
> #: ui/window.xml:56 ui/application.xml:121
814d685
< #: src/objects/os/windows/savedesktopicon.c:86
818,821c689,690
< #: src/objects/window/actions/sessionproperties.c:36 ui/linux.ui.xml:164
< #: ui/linux.ui.xml:631 ui/linux.ui.xml:1112 ui/macos.ui.xml:164
< #: ui/macos.ui.xml:631 ui/macos.ui.xml:1112 ui/windows.ui.xml:164
< #: ui/windows.ui.xml:631 ui/windows.ui.xml:1112
---
> #: src/objects/window/actions/sessionproperties.c:46 ui/window.xml:98
> #: ui/window.xml:579 ui/application.xml:163
825,829c694
< #: src/objects/application/application.c:246
< msgid "Set default log file name"
< msgstr "Define o nome do arquivo de log padrão"
< 
< #: src/objects/application/application.c:236
---
> #: src/objects/application/application.c:216
833c698
< #: ui/linux.ui.xml:382 ui/macos.ui.xml:382 ui/windows.ui.xml:382
---
> #: ui/application.xml:381
837,839c702,704
< #: src/objects/toolbar/settings.c:183
< msgid "Setup the toolbar style and position"
< msgstr "Configura estilo e posição da barra de ferramentas"
---
> #: src/objects/toolbar/settings.c:176
> msgid "Setup the toolbar layout"
> msgstr "Configura formato da barra de ferramentas"
841c706
< #: src/objects/window/header-settings.c:85
---
> #: src/objects/window/header-settings.c:87
845c710
< #: src/objects/toolbar/settings.c:95 src/objects/toolbar/toolbar.c:213
---
> #: src/objects/toolbar/toolbar.c:214 src/objects/toolbar/settings.c:88
850d714
< #: src/objects/os/windows/savedesktopicon.c:73
854,855c718
< #: ui/linux.ui.xml:159 ui/linux.ui.xml:626 ui/macos.ui.xml:159
< #: ui/macos.ui.xml:626 ui/windows.ui.xml:159 ui/windows.ui.xml:626
---
> #: ui/window.xml:93 ui/application.xml:158
863c726
< #: ui/linux.ui.xml:510 ui/macos.ui.xml:510 ui/windows.ui.xml:510
---
> #: ui/application.xml:494
867c730
< #: ui/linux.ui.xml:774 ui/macos.ui.xml:774 ui/windows.ui.xml:774
---
> #: ui/window.xml:241
871c734
< #: ui/linux.ui.xml:769 ui/macos.ui.xml:769 ui/windows.ui.xml:769
---
> #: ui/window.xml:236
879,880c742
< #: ui/linux.ui.xml:520 ui/linux.ui.xml:936 ui/macos.ui.xml:520
< #: ui/macos.ui.xml:936 ui/windows.ui.xml:520 ui/windows.ui.xml:936
---
> #: ui/window.xml:403 ui/application.xml:504
884c746
< #: src/objects/os/linux/savedesktopicon.c:205
---
> #: src/objects/os/linux/savedesktopicon.c:239
900,904c762
< #: src/objects/toolbar/settings.c:183
< msgid "Style & Position"
< msgstr "Estilo & Posição"
< 
< #: src/objects/toolbar/models.c:114
---
> #: src/objects/toolbar/models.c:115
913,917c771
< #: src/objects/settings/gsettings.c:133
< msgid "System settings error"
< msgstr "Erro nas configurações de sistema"
< 
< #: src/main/tools.c:75
---
> #: src/main/tools.c:95
921,926c775
< #: src/objects/window/keyfile.c:241
< msgid "TN3270 Session description"
< msgstr "Descrição de sessão TN3270"
< 
< #: ui/linux.ui.xml:111 ui/linux.ui.xml:573 ui/macos.ui.xml:111
< #: ui/macos.ui.xml:573 ui/windows.ui.xml:111 ui/windows.ui.xml:573
---
> #: ui/window.xml:45 ui/application.xml:110
930,934c779
< #: ui/linux.ui.xml:405 ui/macos.ui.xml:405 ui/windows.ui.xml:405
< msgid "Terminal colors"
< msgstr "Cores do terminal"
< 
< #: ui/linux.ui.xml:442 ui/macos.ui.xml:442 ui/windows.ui.xml:442
---
> #: ui/application.xml:426
942c787
< #: src/objects/keypad/element.c:106 src/objects/keypad/model.c:104
---
> #: src/objects/keypad/model.c:104 src/objects/keypad/element.c:106
954c799
< #: src/objects/application/application.c:150
---
> #: src/objects/application/application.c:160
963d807
< #: src/objects/os/windows/savedesktopicon.c:95
967,970d810
< #: src/objects/application/application.c:165
< msgid "The full path of the default log file"
< msgstr "Caminho completo do arquivo default"
< 
979c819
< #: src/objects/window/window.c:234
---
> #: src/objects/window/window.c:185
1008d847
< #: src/objects/os/windows/savedesktopicon.c:88
1042,1046c881
< #: src/objects/os/macos/savedesktopicon.c:68
< msgid "This action is not available in this platform"
< msgstr ""
< 
< #: src/objects/window/header-settings.c:84
---
> #: src/objects/window/header-settings.c:86
1050c885
< #: src/objects/window/header-settings.c:96
---
> #: src/objects/window/header-settings.c:98
1054,1057c889,890
< #: src/objects/toolbar/settings.c:94 ui/linux.ui.xml:343 ui/linux.ui.xml:968
< #: ui/linux.ui.xml:1088 ui/macos.ui.xml:343 ui/macos.ui.xml:968
< #: ui/macos.ui.xml:1088 ui/windows.ui.xml:343 ui/windows.ui.xml:968
< #: ui/windows.ui.xml:1088
---
> #: src/objects/toolbar/settings.c:87 ui/window.xml:435 ui/window.xml:555
> #: ui/application.xml:342
1065,1068d897
< #: src/objects/toolbar/settings.c:75
< msgid "Toolbar position"
< msgstr "Posição da barra de ferramentas"
< 
1073,1077c902
< #: src/objects/toolbar/models.c:128
< msgid "Top (system default)"
< msgstr "Em cima (padrão do sistema)"
< 
< #: ui/linux.ui.xml:973 ui/macos.ui.xml:973 ui/windows.ui.xml:973
---
> #: ui/window.xml:440
1081c906
< #: ui/linux.ui.xml:338 ui/macos.ui.xml:338 ui/windows.ui.xml:338
---
> #: ui/application.xml:337
1085,1086c910
< #: ui/linux.ui.xml:465 ui/linux.ui.xml:1027 ui/macos.ui.xml:465
< #: ui/macos.ui.xml:1027 ui/windows.ui.xml:465 ui/windows.ui.xml:1027
---
> #: ui/window.xml:494 ui/application.xml:449
1090c914
< #: src/objects/application/application.c:149
---
> #: src/objects/application/application.c:159
1094,1108c918
< #: src/objects/settings/gsettings.c:131
< msgid ""
< "Unable to initialize system settings. Application may crash in unexpected "
< "ways"
< msgstr ""
< "Não foi possível iniciar configuração de sistema. Aplicação pode falhar de "
< "forma inesperada"
< 
< #: src/objects/os/windows/open.c:137
< #, c-format
< msgid "Unable to load session preferences from '%s'"
< msgstr "Incapaz de ler preferências de sessa de '%s'"
< 
< #: ui/linux.ui.xml:291 ui/linux.ui.xml:800 ui/macos.ui.xml:291
< #: ui/macos.ui.xml:800 ui/windows.ui.xml:291 ui/windows.ui.xml:800
---
> #: ui/window.xml:267 ui/application.xml:290
1112,1118c922
< #: src/objects/application/actions/about.c:113
< #, c-format
< msgid "Unstable version %s-%s"
< msgstr "Versão instável %s-%s"
< 
< #: ui/linux.ui.xml:530 ui/linux.ui.xml:907 ui/macos.ui.xml:530
< #: ui/macos.ui.xml:907 ui/windows.ui.xml:530 ui/windows.ui.xml:907
---
> #: ui/window.xml:374 ui/application.xml:514
1122c926
< #: src/objects/application/actions/about.c:115
---
> #: src/objects/application/actions/about.c:70
1127,1130c931,932
< #: src/objects/window/header.c:63 ui/linux.ui.xml:64 ui/linux.ui.xml:965
< #: ui/linux.ui.xml:1085 ui/macos.ui.xml:64 ui/macos.ui.xml:965
< #: ui/macos.ui.xml:1085 ui/windows.ui.xml:64 ui/windows.ui.xml:965
< #: ui/windows.ui.xml:1085
---
> #: src/objects/window/header.c:66 ui/window.xml:432 ui/window.xml:552
> #: ui/application.xml:63
1134c936
< #: src/objects/application/actions/about.c:206
---
> #: src/objects/application/actions/about.c:163
1138,1139c940
< #: ui/linux.ui.xml:106 ui/linux.ui.xml:568 ui/macos.ui.xml:106
< #: ui/macos.ui.xml:568 ui/windows.ui.xml:106 ui/windows.ui.xml:568
---
> #: ui/window.xml:40 ui/application.xml:105
1143,1146d943
< #: src/objects/os/windows/savedesktopicon.c:187
< msgid "Windows shortcuts"
< msgstr "Atalhos windows"
< 
1151,1153c948,949
< #: src/objects/actions/save.c:103 src/objects/settings/dialog.c:78
< #: src/objects/os/linux/savedesktopicon.c:140
< #: src/objects/os/windows/savedesktopicon.c:132
---
> #: src/objects/actions/save.c:102 src/objects/settings/dialog.c:78
> #: src/objects/os/linux/savedesktopicon.c:174
1161,1162c957
< #: ui/linux.ui.xml:369 ui/linux.ui.xml:1107 ui/macos.ui.xml:369
< #: ui/macos.ui.xml:1107 ui/windows.ui.xml:369 ui/windows.ui.xml:1107
---
> #: ui/window.xml:574 ui/application.xml:368
1166c961
< #: ui/linux.ui.xml:374 ui/macos.ui.xml:374 ui/windows.ui.xml:374
---
> #: ui/application.xml:373
1170,1172c965
< #: ui/linux.ui.xml:232 ui/linux.ui.xml:681 ui/linux.ui.xml:824
< #: ui/macos.ui.xml:232 ui/macos.ui.xml:681 ui/macos.ui.xml:824
< #: ui/windows.ui.xml:232 ui/windows.ui.xml:681 ui/windows.ui.xml:824
---
> #: ui/window.xml:148 ui/window.xml:291 ui/application.xml:231
1176c969
< #: ui/linux.ui.xml:99 ui/macos.ui.xml:99 ui/windows.ui.xml:99
---
> #: ui/application.xml:98
1180c973
< #: ui/linux.ui.xml:361 ui/macos.ui.xml:361 ui/windows.ui.xml:361
---
> #: ui/application.xml:360
1184,1185c977
< #: ui/linux.ui.xml:103 ui/linux.ui.xml:565 ui/macos.ui.xml:103
< #: ui/macos.ui.xml:565 ui/windows.ui.xml:103 ui/windows.ui.xml:565
---
> #: ui/window.xml:37 ui/application.xml:102
1189,1190c981
< #: ui/linux.ui.xml:119 ui/linux.ui.xml:581 ui/macos.ui.xml:119
< #: ui/macos.ui.xml:581 ui/windows.ui.xml:119 ui/windows.ui.xml:581
---
> #: ui/window.xml:53 ui/application.xml:118
1194c985
< #: src/objects/toolbar/toolbar.c:235
---
> #: src/objects/toolbar/toolbar.c:236
1202,1203c993
< #: src/objects/actions/save.c:104 src/objects/os/linux/savedesktopicon.c:141
< #: src/objects/os/windows/savedesktopicon.c:133
---
> #: src/objects/actions/save.c:103 src/objects/os/linux/savedesktopicon.c:175
1207c997
< #: ui/linux.ui.xml:335 ui/macos.ui.xml:335 ui/windows.ui.xml:335
---
> #: ui/application.xml:334
1211c1001
< #: src/objects/application/actions/about.c:205
---
> #: src/objects/application/actions/about.c:162
1215c1005
< #: src/objects/application/actions/about.c:208
---
> #: src/objects/application/actions/about.c:165
1275a1066,1068
> #~ msgid "%s<b>%s</b> for %s"
> #~ msgstr "%s<b>%s</b> para %s"
> 
1294,1296d1086
< #~ msgid "3270 terminal emulator for %s."
< #~ msgstr "Emulador 3270 para %s"
< 
1862,1864d1651
< #~ msgid "Colors"
< #~ msgstr "Cores"
< 
1982a1770,1772
> #~ msgid "Description"
> #~ msgstr "Descrição"
> 
2077a1868,1870
> #~ msgid "Error loading %s"
> #~ msgstr "Erro lendo %s"
> 
2192a1986,1988
> #~ msgid "Full path of local file"
> #~ msgstr "Caminho completo do arquivo local"
> 
2196,2198d1991
< #~ msgid "Function bar"
< #~ msgstr "Barra de funções"
< 
2269,2271d2061
< #~ msgid "Host properties"
< #~ msgstr "Propriedades do Servidor"
< 
2311,2313d2100
< #~ msgid "If 'no' allways open a window"
< #~ msgstr "Se 'no' sempre abre uma nova janela"
< 
2501a2289,2291
> #~ msgid "Keyboard lock status"
> #~ msgstr "Estado de bloqueio do teclado"
> 
2511,2512c2301,2302
< #~ msgid "Layout"
< #~ msgstr "Formato"
---
> #~ msgid "Left"
> #~ msgstr "Esquerda"
2556a2347,2349
> #~ msgid "Model name"
> #~ msgstr "Nome do modelo"
> 
3018,3019c2811,2812
< #~ msgid "Right keypad"
< #~ msgstr "Painel direito"
---
> #~ msgid "Right"
> #~ msgstr "Direita"
3326a3120,3122
> 
> #~ msgid "Set trace filename"
> #~ msgstr "Define o nome do arquivo de trace"
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/locale/pw3270.pot lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/locale/pw3270.pot
1,1209c1,1002
< # SOME DESCRIPTIVE TITLE.
< # Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
< # This file is distributed under the same license as the PACKAGE package.
< # FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
< #
< #, fuzzy
< msgid ""
< msgstr ""
< "Project-Id-Version: PACKAGE VERSION\n"
< "Report-Msgid-Bugs-To: \n"
< "POT-Creation-Date: 2023-01-11 03:29-0300\n"
< "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
< "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
< "Language-Team: LANGUAGE <LL@li.org>\n"
< "Language: \n"
< "MIME-Version: 1.0\n"
< "Content-Type: text/plain; charset=UTF-8\n"
< "Content-Transfer-Encoding: 8bit\n"
< 
< #: src/objects/application/application.c:211
< #, c-format
< msgid "\"%s\" is not a valid user interface name"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:133
< #, c-format
< msgid "%s for %s."
< msgstr ""
< 
< #: src/objects/application/actions/about.c:140
< msgid "32 bits Linux"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:138
< msgid "32 bits Windows"
< msgstr ""
< 
< #: src/objects/actions/save.c:167 src/objects/os/linux/savedesktopicon.c:233
< #: src/objects/os/windows/savedesktopicon.c:222
< msgid "3270 session files"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:142
< msgid "64 bits Linux"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:136
< msgid "64 bits Windows"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:215
< msgid ""
< "<small><b>The toolbar position only takes effect after restart</b></small>"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:232 ui/linux.ui.xml:40
< #: ui/linux.ui.xml:553 ui/macos.ui.xml:40 ui/macos.ui.xml:553
< #: ui/windows.ui.xml:40 ui/windows.ui.xml:553
< msgid "About PW3270"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:93
< msgid "Action Name"
< msgstr ""
< 
< #: src/objects/window/window.c:233
< msgid "Action Names"
< msgstr ""
< 
< #: ui/linux.ui.xml:525 ui/linux.ui.xml:917 ui/linux.ui.xml:1032
< #: ui/macos.ui.xml:525 ui/macos.ui.xml:917 ui/macos.ui.xml:1032
< #: ui/windows.ui.xml:525 ui/windows.ui.xml:917 ui/windows.ui.xml:1032
< msgid "Alert sound"
< msgstr ""
< 
< #: src/main/tools.c:79
< msgid "All files"
< msgstr ""
< 
< #: ui/linux.ui.xml:252 ui/linux.ui.xml:691 ui/macos.ui.xml:252
< #: ui/macos.ui.xml:691 ui/windows.ui.xml:252 ui/windows.ui.xml:691
< msgid "Append to copy"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:175
< msgid "Apple version"
< msgstr ""
< 
< #: ui/linux.ui.xml:385 ui/linux.ui.xml:665 ui/macos.ui.xml:385
< #: ui/macos.ui.xml:665 ui/windows.ui.xml:385 ui/windows.ui.xml:665
< msgid "Application"
< msgstr ""
< 
< #: src/objects/window/header-settings.c:125
< msgid "Application menu"
< msgstr ""
< 
< #: src/objects/application/actions/preferences.c:76 ui/linux.ui.xml:84
< #: ui/macos.ui.xml:84 ui/windows.ui.xml:84
< msgid "Application preferences"
< msgstr ""
< 
< #: src/objects/window/page.c:264
< msgid "Apply"
< msgstr ""
< 
< #: ui/linux.ui.xml:500 ui/macos.ui.xml:500 ui/windows.ui.xml:500
< msgid "Auto-Reconnect"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:119 src/objects/settings/actionview.c:73
< msgid "Available"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:178
< msgid "Based on X3270 from"
< msgstr ""
< 
< #: ui/linux.ui.xml:490 ui/linux.ui.xml:946 ui/macos.ui.xml:490
< #: ui/macos.ui.xml:946 ui/windows.ui.xml:490 ui/windows.ui.xml:946
< msgid "Blank Fill"
< msgstr ""
< 
< #: ui/linux.ui.xml:455 ui/macos.ui.xml:455 ui/windows.ui.xml:455
< msgid "Blinking Cursor"
< msgstr ""
< 
< #: ui/linux.ui.xml:505 ui/macos.ui.xml:505 ui/windows.ui.xml:505
< msgid "Bold"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:134
< msgid "Bottom"
< msgstr ""
< 
< #: src/objects/application/actions/open.c:104 src/objects/window/terminal.c:143
< #: src/objects/window/terminal.c:197
< msgid "Can't load session file"
< msgstr ""
< 
< #: src/objects/os/windows/open.c:133
< msgid "Can't load session preferences"
< msgstr ""
< 
< #: src/objects/settings/gsettings.c:128
< msgid "Can't load system settings"
< msgstr ""
< 
< #: src/objects/application/actions/open.c:99 src/objects/window/terminal.c:192
< #, c-format
< msgid "Can't use \"%s\""
< msgstr ""
< 
< #: src/objects/window/terminal.c:138
< msgid "Can't use default session file"
< msgstr ""
< 
< #: src/objects/application/actions/open.c:50 src/objects/window/page.c:265
< msgid "Cancel"
< msgstr ""
< 
< #: src/objects/application/actions/preferences.c:78
< msgid "Change the application preferences"
< msgstr ""
< 
< #: src/objects/window/header-settings.c:96
< msgid "Change the position of the title bar icons"
< msgstr ""
< 
< #: src/objects/window/actions/sessionproperties.c:37
< msgid "Change the preferences for the active session"
< msgstr ""
< 
< #: ui/linux.ui.xml:305 ui/linux.ui.xml:725 ui/linux.ui.xml:867
< #: ui/macos.ui.xml:305 ui/macos.ui.xml:725 ui/macos.ui.xml:867
< #: ui/windows.ui.xml:305 ui/windows.ui.xml:725 ui/windows.ui.xml:867
< msgid "Clear"
< msgstr ""
< 
< #: ui/linux.ui.xml:400 ui/macos.ui.xml:400 ui/windows.ui.xml:400
< msgid "Clipboard"
< msgstr ""
< 
< #: ui/linux.ui.xml:150 ui/linux.ui.xml:187 ui/linux.ui.xml:617
< #: ui/linux.ui.xml:654 ui/macos.ui.xml:150 ui/macos.ui.xml:187
< #: ui/macos.ui.xml:617 ui/macos.ui.xml:654 ui/windows.ui.xml:150
< #: ui/windows.ui.xml:187 ui/windows.ui.xml:617 ui/windows.ui.xml:654
< msgid "Clipboard contents"
< msgstr ""
< 
< #: src/objects/application/actions/window.c:65
< msgid "Close all windows and exit application"
< msgstr ""
< 
< #: src/objects/window/actions/close.c:61
< msgid "Close the window"
< msgstr ""
< 
< #: src/objects/window/actions/close.c:60 ui/linux.ui.xml:217
< #: ui/linux.ui.xml:813 ui/linux.ui.xml:1011 ui/linux.ui.xml:1118
< #: ui/macos.ui.xml:217 ui/macos.ui.xml:813 ui/macos.ui.xml:1011
< #: ui/macos.ui.xml:1118 ui/windows.ui.xml:217 ui/windows.ui.xml:813
< #: ui/windows.ui.xml:1011 ui/windows.ui.xml:1118
< msgid "Close window"
< msgstr ""
< 
< #: src/objects/os/linux/savedesktopicon.c:101
< msgid "Comment"
< msgstr ""
< 
< #: src/objects/window/actions/connect.c:59
< msgid "Connect"
< msgstr ""
< 
< #: ui/linux.ui.xml:450 ui/macos.ui.xml:450 ui/windows.ui.xml:450
< msgid "Connect on startup"
< msgstr ""
< 
< #: src/objects/window/actions/connect.c:60
< msgid "Connect to host"
< msgstr ""
< 
< #: src/objects/window/page.c:218 src/objects/window/window.c:808
< msgid "Connected to host"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:176
< msgid "Contributors"
< msgstr ""
< 
< #: ui/linux.ui.xml:237 ui/linux.ui.xml:686 ui/macos.ui.xml:237
< #: ui/macos.ui.xml:686 ui/windows.ui.xml:237 ui/windows.ui.xml:686
< msgid "Copy"
< msgstr ""
< 
< #: ui/linux.ui.xml:706 ui/macos.ui.xml:706 ui/windows.ui.xml:706
< msgid "Copy as HTML"
< msgstr ""
< 
< #: ui/linux.ui.xml:711 ui/macos.ui.xml:711 ui/windows.ui.xml:711
< msgid "Copy as image"
< msgstr ""
< 
< #: ui/linux.ui.xml:247 ui/linux.ui.xml:701 ui/macos.ui.xml:247
< #: ui/macos.ui.xml:701 ui/windows.ui.xml:247 ui/windows.ui.xml:701
< msgid "Copy as table"
< msgstr ""
< 
< #: ui/linux.ui.xml:242 ui/linux.ui.xml:696 ui/macos.ui.xml:242
< #: ui/macos.ui.xml:696 ui/windows.ui.xml:242 ui/windows.ui.xml:696
< msgid "Copy as text"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:182
< msgid "Copyright © 2008 Banco do Brasil S.A."
< msgstr ""
< 
< #: src/objects/os/linux/savedesktopicon.c:114
< #: src/objects/os/windows/savedesktopicon.c:107
< #: src/objects/os/macos/savedesktopicon.c:54
< msgid "Create shortcut for the current session"
< msgstr ""
< 
< #: ui/linux.ui.xml:475 ui/linux.ui.xml:902 ui/macos.ui.xml:475
< #: ui/macos.ui.xml:902 ui/windows.ui.xml:475 ui/windows.ui.xml:902
< msgid "Cross hair cursor"
< msgstr ""
< 
< #: ui/linux.ui.xml:177 ui/linux.ui.xml:644 ui/macos.ui.xml:177
< #: ui/macos.ui.xml:644 ui/windows.ui.xml:177 ui/windows.ui.xml:644
< msgid "Current Screen"
< msgstr ""
< 
< #: ui/linux.ui.xml:140 ui/linux.ui.xml:607 ui/macos.ui.xml:140
< #: ui/macos.ui.xml:607 ui/windows.ui.xml:140 ui/windows.ui.xml:607
< msgid "Current screen"
< msgstr ""
< 
< #: ui/linux.ui.xml:670 ui/macos.ui.xml:670 ui/windows.ui.xml:670
< msgid "Current session"
< msgstr ""
< 
< #: ui/linux.ui.xml:257 ui/linux.ui.xml:716 ui/macos.ui.xml:257
< #: ui/macos.ui.xml:716 ui/windows.ui.xml:257 ui/windows.ui.xml:716
< msgid "Cut"
< msgstr ""
< 
< #: ui/linux.ui.xml:315 ui/linux.ui.xml:735 ui/linux.ui.xml:877
< #: ui/macos.ui.xml:315 ui/macos.ui.xml:735 ui/macos.ui.xml:877
< #: ui/windows.ui.xml:315 ui/windows.ui.xml:735 ui/windows.ui.xml:877
< msgid "Delete Field"
< msgstr ""
< 
< #: src/objects/os/windows/savedesktopicon.c:80
< msgid "Description"
< msgstr ""
< 
< #: ui/linux.ui.xml:808 ui/linux.ui.xml:1006 ui/macos.ui.xml:808
< #: ui/macos.ui.xml:1006 ui/windows.ui.xml:808 ui/windows.ui.xml:1006
< msgid "Disconnect"
< msgstr ""
< 
< #: src/objects/window/page.c:207 src/objects/window/window.c:808
< #: src/objects/window/window.c:835
< msgid "Disconnected from host"
< msgstr ""
< 
< #: ui/linux.ui.xml:540 ui/linux.ui.xml:929 ui/linux.ui.xml:1045
< #: ui/macos.ui.xml:540 ui/macos.ui.xml:929 ui/macos.ui.xml:1045
< #: ui/windows.ui.xml:540 ui/windows.ui.xml:929 ui/windows.ui.xml:1045
< msgid "Dynamic font spacing"
< msgstr ""
< 
< #: src/objects/keypad/element.c:128
< msgid "Element col"
< msgstr ""
< 
< #: src/objects/keypad/element.c:152
< msgid "Element height in rows"
< msgstr ""
< 
< #: src/objects/keypad/element.c:116
< msgid "Element row"
< msgstr ""
< 
< #: src/objects/keypad/element.c:140
< msgid "Element width in columns"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:140
< msgid "Enabled"
< msgstr ""
< 
< #: src/objects/settings/actionview.c:78
< msgid "End"
< msgstr ""
< 
< #: ui/linux.ui.xml:310 ui/linux.ui.xml:730 ui/linux.ui.xml:872
< #: ui/macos.ui.xml:310 ui/macos.ui.xml:730 ui/macos.ui.xml:872
< #: ui/windows.ui.xml:310 ui/windows.ui.xml:730 ui/windows.ui.xml:872
< msgid "Erase input"
< msgstr ""
< 
< #: ui/linux.ui.xml:320 ui/linux.ui.xml:740 ui/linux.ui.xml:882
< #: ui/macos.ui.xml:320 ui/macos.ui.xml:740 ui/macos.ui.xml:882
< #: ui/windows.ui.xml:320 ui/windows.ui.xml:740 ui/windows.ui.xml:882
< msgid "Erase to end of field"
< msgstr ""
< 
< #: ui/linux.ui.xml:325 ui/linux.ui.xml:745 ui/linux.ui.xml:887
< #: ui/macos.ui.xml:325 ui/macos.ui.xml:745 ui/macos.ui.xml:887
< #: ui/windows.ui.xml:325 ui/windows.ui.xml:745 ui/windows.ui.xml:887
< msgid "Erase to end of line"
< msgstr ""
< 
< #: src/objects/os/windows/open.c:140
< msgid "Error starting session"
< msgstr ""
< 
< #: ui/linux.ui.xml:353 ui/macos.ui.xml:353 ui/windows.ui.xml:353
< msgid "Field attributes"
< msgstr ""
< 
< #: src/objects/os/windows/savedesktopicon.c:219
< msgid "File for session preferences"
< msgstr ""
< 
< #: ui/linux.ui.xml:470 ui/macos.ui.xml:470 ui/windows.ui.xml:470
< msgid "Full Screen"
< msgstr ""
< 
< #: ui/linux.ui.xml:779 ui/linux.ui.xml:955 ui/linux.ui.xml:1050
< #: ui/macos.ui.xml:779 ui/macos.ui.xml:955 ui/macos.ui.xml:1050
< #: ui/windows.ui.xml:779 ui/windows.ui.xml:955 ui/windows.ui.xml:1050
< msgid "Full screen"
< msgstr ""
< 
< #: src/objects/os/linux/savedesktopicon.c:94
< msgid "Generic name"
< msgstr ""
< 
< #: ui/linux.ui.xml:37 ui/linux.ui.xml:550 ui/macos.ui.xml:37
< #: ui/macos.ui.xml:550 ui/windows.ui.xml:37 ui/windows.ui.xml:550
< msgid "Help"
< msgstr ""
< 
< #: ui/linux.ui.xml:390 ui/macos.ui.xml:390 ui/windows.ui.xml:390
< msgid "Host and Emulation settings"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:134 src/objects/window/window.c:592
< #: src/objects/os/linux/savedesktopicon.c:102
< #: src/objects/os/windows/savedesktopicon.c:269
< msgid "IBM 3270 Terminal emulator"
< msgstr ""
< 
< #: src/objects/actions/view.c:90
< msgid "Icon"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:101
< msgid "Icon Name"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:54
< msgid "Icon Size"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:61
< msgid "Icon Style"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:52
< msgid "Icon _size"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:108
< msgid "Icon type"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:97
< msgid "Icons & text"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:87
< msgid "Icons only"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:141
< msgid "If the action can be activated"
< msgstr ""
< 
< #: ui/linux.ui.xml:1022 ui/macos.ui.xml:1022 ui/windows.ui.xml:1022
< msgid "Insert"
< msgstr ""
< 
< #: src/objects/keypad/attribute.c:79
< msgid "Invalid or unknown property type"
< msgstr ""
< 
< #: src/objects/settings/actionview.c:79
< msgid "Items packed from the end to the start"
< msgstr ""
< 
< #: src/objects/settings/actionview.c:69
< msgid "Items packed from the start to the end"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:113
< msgid "Itens"
< msgstr ""
< 
< #: ui/linux.ui.xml:515 ui/macos.ui.xml:515 ui/windows.ui.xml:515
< msgid "Keep selected"
< msgstr ""
< 
< #: ui/linux.ui.xml:395 ui/macos.ui.xml:395 ui/windows.ui.xml:395
< msgid "Keyboard accelerators"
< msgstr ""
< 
< #: src/objects/keypad/model.c:103
< msgid "Keypad Label"
< msgstr ""
< 
< #: src/objects/keypad/model.c:93
< msgid "Keypad Name"
< msgstr ""
< 
< #: src/objects/keypad/model.c:136
< msgid "Keypad height in rows"
< msgstr ""
< 
< #: src/objects/keypad/model.c:124
< msgid "Keypad width in columns"
< msgstr ""
< 
< #: src/main/builder.c:135
< msgid "Keypads"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:186
< msgid "LICENSE"
< msgstr ""
< 
< #: src/objects/actions/view.c:99
< msgid "Label"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:66
< msgid "Large"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:131
< msgid "Left"
< msgstr ""
< 
< #: src/objects/settings/actionview.c:74
< msgid "List of the available and unpacked actions"
< msgstr ""
< 
< #: src/objects/application/application.c:164
< msgid "Log name"
< msgstr ""
< 
< #: ui/linux.ui.xml:72 ui/macos.ui.xml:72 ui/windows.ui.xml:72
< msgid "Main Menu"
< msgstr ""
< 
< #: ui/linux.ui.xml:67 ui/macos.ui.xml:67 ui/windows.ui.xml:67
< msgid "Main Toolbar"
< msgstr ""
< 
< #: ui/linux.ui.xml:1093 ui/macos.ui.xml:1093 ui/windows.ui.xml:1093
< msgid "Main menu"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:174
< msgid "Maintainers"
< msgstr ""
< 
< #: ui/linux.ui.xml:348 ui/macos.ui.xml:348 ui/windows.ui.xml:348
< msgid "Menu"
< msgstr ""
< 
< #: ui/linux.ui.xml:419 ui/linux.ui.xml:1059 ui/macos.ui.xml:419
< #: ui/macos.ui.xml:1059 ui/windows.ui.xml:419 ui/windows.ui.xml:1059
< msgid "Model 2 - 80x24"
< msgstr ""
< 
< #: ui/linux.ui.xml:424 ui/linux.ui.xml:1064 ui/macos.ui.xml:424
< #: ui/macos.ui.xml:1064 ui/windows.ui.xml:424 ui/windows.ui.xml:1064
< msgid "Model 3 - 80x32"
< msgstr ""
< 
< #: ui/linux.ui.xml:429 ui/linux.ui.xml:1069 ui/macos.ui.xml:429
< #: ui/macos.ui.xml:1069 ui/windows.ui.xml:429 ui/windows.ui.xml:1069
< msgid "Model 4 - 80x43"
< msgstr ""
< 
< #: ui/linux.ui.xml:434 ui/linux.ui.xml:1074 ui/macos.ui.xml:434
< #: ui/macos.ui.xml:1074 ui/windows.ui.xml:434 ui/windows.ui.xml:1074
< msgid "Model 5 - 132x27"
< msgstr ""
< 
< #: ui/linux.ui.xml:460 ui/linux.ui.xml:924 ui/macos.ui.xml:460
< #: ui/macos.ui.xml:924 ui/windows.ui.xml:460 ui/windows.ui.xml:924
< msgid "Monocase"
< msgstr ""
< 
< #: ui/linux.ui.xml:535 ui/macos.ui.xml:535 ui/windows.ui.xml:535
< msgid "Network keep alive"
< msgstr ""
< 
< #: src/objects/window/page.c:275
< msgid "New session name"
< msgstr ""
< 
< #: src/objects/application/actions/window.c:84
< msgid "New tab"
< msgstr ""
< 
< #: src/objects/application/actions/window.c:85
< msgid "New tab with default session"
< msgstr ""
< 
< #: src/objects/application/actions/window.c:104
< msgid "New window"
< msgstr ""
< 
< #: src/objects/application/actions/window.c:105
< msgid "New window with default session"
< msgstr ""
< 
< #: src/objects/application/actions/open.c:49
< msgid "Open Session"
< msgstr ""
< 
< #: ui/linux.ui.xml:56 ui/macos.ui.xml:56 ui/windows.ui.xml:56
< msgid "Open in New Tab"
< msgstr ""
< 
< #: ui/linux.ui.xml:51 ui/macos.ui.xml:51 ui/windows.ui.xml:51
< msgid "Open in New Window"
< msgstr ""
< 
< #: src/objects/application/actions/open.c:201
< msgid "Open in new tab"
< msgstr ""
< 
< #: src/objects/application/actions/open.c:189
< msgid "Open in new window"
< msgstr ""
< 
< #: src/objects/application/actions/open.c:176
< msgid "Open session"
< msgstr ""
< 
< #: src/objects/application/actions/open.c:202
< msgid "Open session in New Tab"
< msgstr ""
< 
< #: src/objects/application/actions/open.c:190
< msgid "Open session in New window"
< msgstr ""
< 
< #: src/objects/application/actions/open.c:177
< msgid "Open session on the active terminal"
< msgstr ""
< 
< #: ui/linux.ui.xml:447 ui/linux.ui.xml:755 ui/linux.ui.xml:897
< #: ui/linux.ui.xml:1042 ui/macos.ui.xml:447 ui/macos.ui.xml:755
< #: ui/macos.ui.xml:897 ui/macos.ui.xml:1042 ui/windows.ui.xml:447
< #: ui/windows.ui.xml:755 ui/windows.ui.xml:897 ui/windows.ui.xml:1042
< msgid "Options"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:124
< msgid "Parameter Type"
< msgstr ""
< 
< #: ui/linux.ui.xml:262 ui/linux.ui.xml:829 ui/macos.ui.xml:262
< #: ui/macos.ui.xml:829 ui/windows.ui.xml:262 ui/windows.ui.xml:829
< msgid "Paste from clipboard"
< msgstr ""
< 
< #: ui/linux.ui.xml:272 ui/linux.ui.xml:839 ui/macos.ui.xml:272
< #: ui/macos.ui.xml:839 ui/windows.ui.xml:272 ui/windows.ui.xml:839
< msgid "Paste from text file"
< msgstr ""
< 
< #: ui/linux.ui.xml:267 ui/linux.ui.xml:834 ui/macos.ui.xml:267
< #: ui/macos.ui.xml:834 ui/windows.ui.xml:267 ui/windows.ui.xml:834
< msgid "Paste next"
< msgstr ""
< 
< #: ui/linux.ui.xml:485 ui/linux.ui.xml:941 ui/macos.ui.xml:485
< #: ui/macos.ui.xml:941 ui/windows.ui.xml:485 ui/windows.ui.xml:941
< msgid "Paste with left margin"
< msgstr ""
< 
< #: src/objects/os/linux/savedesktopicon.c:71
< #: src/objects/os/windows/savedesktopicon.c:74
< msgid "Path for the new shortcut"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:125
< msgid "Position"
< msgstr ""
< 
< #: ui/linux.ui.xml:662 ui/macos.ui.xml:662 ui/windows.ui.xml:662
< msgid "Preferences"
< msgstr ""
< 
< #: ui/linux.ui.xml:174 ui/linux.ui.xml:641 ui/macos.ui.xml:174
< #: ui/macos.ui.xml:641 ui/windows.ui.xml:174 ui/windows.ui.xml:641
< msgid "Print"
< msgstr ""
< 
< #: ui/linux.ui.xml:992 ui/macos.ui.xml:992 ui/windows.ui.xml:992
< msgid "Print screen"
< msgstr ""
< 
< #: ui/linux.ui.xml:795 ui/macos.ui.xml:795 ui/windows.ui.xml:795
< msgid "Print selected"
< msgstr ""
< 
< #: src/objects/keypad/attribute.c:116
< #, c-format
< msgid "Property \"%s\" is invalid for this object"
< msgstr ""
< 
< #: src/objects/application/actions/window.c:64 ui/linux.ui.xml:89
< #: ui/macos.ui.xml:89 ui/windows.ui.xml:89
< msgid "Quit"
< msgstr ""
< 
< #: src/objects/window/page.c:262
< msgid "Rename Session"
< msgstr ""
< 
< #: ui/linux.ui.xml:296 ui/linux.ui.xml:858 ui/macos.ui.xml:296
< #: ui/macos.ui.xml:858 ui/windows.ui.xml:296 ui/windows.ui.xml:858
< msgid "Reselect"
< msgstr ""
< 
< #: ui/linux.ui.xml:480 ui/linux.ui.xml:912 ui/macos.ui.xml:480
< #: ui/macos.ui.xml:912 ui/windows.ui.xml:480 ui/windows.ui.xml:912
< msgid "Resize on alternate screen"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:137
< msgid "Right"
< msgstr ""
< 
< #: ui/linux.ui.xml:135 ui/linux.ui.xml:602 ui/macos.ui.xml:135
< #: ui/macos.ui.xml:602 ui/windows.ui.xml:135 ui/windows.ui.xml:602
< msgid "Save"
< msgstr ""
< 
< #: src/objects/actions/save.c:77
< msgid "Save current session preferences to file"
< msgstr ""
< 
< #: ui/linux.ui.xml:987 ui/macos.ui.xml:987 ui/windows.ui.xml:987
< msgid "Save screen"
< msgstr ""
< 
< #: ui/linux.ui.xml:790 ui/macos.ui.xml:790 ui/windows.ui.xml:790
< msgid "Save selected"
< msgstr ""
< 
< #: src/objects/actions/save.c:75 src/objects/actions/save.c:164
< msgid "Save session preferences"
< msgstr ""
< 
< #: src/objects/os/linux/savedesktopicon.c:113
< #: src/objects/os/windows/savedesktopicon.c:106
< #: src/objects/os/macos/savedesktopicon.c:53
< msgid "Save session shortcut"
< msgstr ""
< 
< #: src/objects/os/linux/savedesktopicon.c:230
< msgid "Save to session filename"
< msgstr ""
< 
< #: src/objects/os/linux/savedesktopicon.c:202
< msgid "Save to shortcut file"
< msgstr ""
< 
< #: src/objects/os/windows/savedesktopicon.c:184
< msgid "Save to windows shortcut"
< msgstr ""
< 
< #: ui/linux.ui.xml:416 ui/linux.ui.xml:1056 ui/macos.ui.xml:416
< #: ui/macos.ui.xml:1056 ui/windows.ui.xml:416 ui/windows.ui.xml:1056
< msgid "Screen size"
< msgstr ""
< 
< #: ui/linux.ui.xml:286 ui/linux.ui.xml:853 ui/macos.ui.xml:286
< #: ui/macos.ui.xml:853 ui/windows.ui.xml:286 ui/windows.ui.xml:853
< msgid "Select Field"
< msgstr ""
< 
< #: ui/linux.ui.xml:281 ui/linux.ui.xml:848 ui/macos.ui.xml:281
< #: ui/macos.ui.xml:848 ui/windows.ui.xml:281 ui/windows.ui.xml:848
< msgid "Select all"
< msgstr ""
< 
< #: ui/linux.ui.xml:495 ui/linux.ui.xml:760 ui/macos.ui.xml:495
< #: ui/macos.ui.xml:760 ui/windows.ui.xml:495 ui/windows.ui.xml:760
< msgid "Select by rectangles"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:113
< msgid "Select the toolbar itens"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:118
< msgid "Selected"
< msgstr ""
< 
< #: ui/linux.ui.xml:145 ui/linux.ui.xml:182 ui/linux.ui.xml:612
< #: ui/linux.ui.xml:649 ui/macos.ui.xml:145 ui/macos.ui.xml:182
< #: ui/macos.ui.xml:612 ui/macos.ui.xml:649 ui/windows.ui.xml:145
< #: ui/windows.ui.xml:182 ui/windows.ui.xml:612 ui/windows.ui.xml:649
< msgid "Selected area"
< msgstr ""
< 
< #: src/objects/window/actions/filetransfer.c:45
< msgid "Send/Receive"
< msgstr ""
< 
< #: src/objects/window/actions/filetransfer.c:46 ui/linux.ui.xml:196
< #: ui/linux.ui.xml:997 ui/macos.ui.xml:196 ui/macos.ui.xml:997
< #: ui/windows.ui.xml:196 ui/windows.ui.xml:997
< msgid "Send/Receive files"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:253 src/objects/toolbar/settings.c:263
< msgid "Separator"
< msgstr ""
< 
< #: ui/linux.ui.xml:48 ui/linux.ui.xml:584 ui/macos.ui.xml:48
< #: ui/macos.ui.xml:584 ui/windows.ui.xml:48 ui/windows.ui.xml:584
< msgid "Session"
< msgstr ""
< 
< #: ui/linux.ui.xml:77 ui/linux.ui.xml:978 ui/linux.ui.xml:1098
< #: ui/macos.ui.xml:77 ui/macos.ui.xml:978 ui/macos.ui.xml:1098
< #: ui/windows.ui.xml:77 ui/windows.ui.xml:978 ui/windows.ui.xml:1098
< msgid "Session Trace"
< msgstr ""
< 
< #: src/objects/actions/save.c:63 src/objects/os/linux/savedesktopicon.c:85
< #: src/objects/os/windows/savedesktopicon.c:94
< msgid "Session file"
< msgstr ""
< 
< #: ui/linux.ui.xml:127 ui/linux.ui.xml:594 ui/macos.ui.xml:127
< #: ui/macos.ui.xml:594 ui/windows.ui.xml:127 ui/windows.ui.xml:594
< msgid "Session in New Tab"
< msgstr ""
< 
< #: ui/linux.ui.xml:122 ui/linux.ui.xml:589 ui/macos.ui.xml:122
< #: ui/macos.ui.xml:589 ui/windows.ui.xml:122 ui/windows.ui.xml:589
< msgid "Session in new window"
< msgstr ""
< 
< #: src/objects/actions/save.c:56 src/objects/os/linux/savedesktopicon.c:77
< #: src/objects/os/windows/savedesktopicon.c:86
< msgid "Session name"
< msgstr ""
< 
< #: src/objects/window/actions/sessionproperties.c:36 ui/linux.ui.xml:164
< #: ui/linux.ui.xml:631 ui/linux.ui.xml:1112 ui/macos.ui.xml:164
< #: ui/macos.ui.xml:631 ui/macos.ui.xml:1112 ui/windows.ui.xml:164
< #: ui/windows.ui.xml:631 ui/windows.ui.xml:1112
< msgid "Session preferences"
< msgstr ""
< 
< #: src/objects/application/application.c:246
< msgid "Set default log file name"
< msgstr ""
< 
< #: src/objects/application/application.c:236
< msgid "Set the user-interface type"
< msgstr ""
< 
< #: ui/linux.ui.xml:382 ui/macos.ui.xml:382 ui/windows.ui.xml:382
< msgid "Settings"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:183
< msgid "Setup the toolbar style and position"
< msgstr ""
< 
< #: src/objects/window/header-settings.c:85
< msgid "Setup title bar"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:95 src/objects/toolbar/toolbar.c:213
< msgid "Setup toolbar"
< msgstr ""
< 
< #: src/objects/os/linux/savedesktopicon.c:70
< #: src/objects/os/windows/savedesktopicon.c:73
< msgid "Shortcut file"
< msgstr ""
< 
< #: ui/linux.ui.xml:159 ui/linux.ui.xml:626 ui/macos.ui.xml:159
< #: ui/macos.ui.xml:626 ui/windows.ui.xml:159 ui/windows.ui.xml:626
< msgid "Shortcut for this session"
< msgstr ""
< 
< #: src/objects/os/linux/savedesktopicon.c:63
< msgid "Shortcut name"
< msgstr ""
< 
< #: ui/linux.ui.xml:510 ui/macos.ui.xml:510 ui/windows.ui.xml:510
< msgid "Show Underline"
< msgstr ""
< 
< #: ui/linux.ui.xml:774 ui/macos.ui.xml:774 ui/windows.ui.xml:774
< msgid "Show menu"
< msgstr ""
< 
< #: ui/linux.ui.xml:769 ui/macos.ui.xml:769 ui/windows.ui.xml:769
< msgid "Show toolbar"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:61
< msgid "Small"
< msgstr ""
< 
< #: ui/linux.ui.xml:520 ui/linux.ui.xml:936 ui/macos.ui.xml:520
< #: ui/macos.ui.xml:936 ui/windows.ui.xml:520 ui/windows.ui.xml:936
< msgid "Smart paste"
< msgstr ""
< 
< #: src/objects/os/linux/savedesktopicon.c:205
< msgid "Standard desktop files"
< msgstr ""
< 
< #: src/objects/settings/actionview.c:68
< msgid "Start"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:152
< msgid "State"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:131
< msgid "State Type"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:183
< msgid "Style & Position"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:114
< msgid "Symbolic"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:55 src/objects/toolbar/models.c:82
< #: src/objects/toolbar/models.c:111
< msgid "System default"
< msgstr ""
< 
< #: src/objects/settings/gsettings.c:133
< msgid "System settings error"
< msgstr ""
< 
< #: src/main/tools.c:75
< msgid "TN3270 Session Files"
< msgstr ""
< 
< #: src/objects/window/keyfile.c:241
< msgid "TN3270 Session description"
< msgstr ""
< 
< #: ui/linux.ui.xml:111 ui/linux.ui.xml:573 ui/macos.ui.xml:111
< #: ui/macos.ui.xml:573 ui/windows.ui.xml:111 ui/windows.ui.xml:573
< msgid "Tab with default session"
< msgstr ""
< 
< #: ui/linux.ui.xml:405 ui/macos.ui.xml:405 ui/windows.ui.xml:405
< msgid "Terminal colors"
< msgstr ""
< 
< #: ui/linux.ui.xml:442 ui/macos.ui.xml:442 ui/windows.ui.xml:442
< msgid "Terminal font"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:92
< msgid "Text only"
< msgstr ""
< 
< #: src/objects/keypad/element.c:106 src/objects/keypad/model.c:104
< msgid "The Label of the keypad"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:109
< msgid "The action label"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:117
< msgid "The action tooltip"
< msgstr ""
< 
< #: src/objects/application/application.c:150
< msgid "The code of the User interface type"
< msgstr ""
< 
< #: src/objects/actions/save.c:64
< msgid "The file to save the current session preferences"
< msgstr ""
< 
< #: src/objects/os/linux/savedesktopicon.c:86
< #: src/objects/os/windows/savedesktopicon.c:95
< msgid "The file with the session preferences for this shortcut"
< msgstr ""
< 
< #: src/objects/application/application.c:165
< msgid "The full path of the default log file"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:110
< msgid "The label for the action"
< msgstr ""
< 
< #: src/objects/keypad/element.c:96
< msgid "The name of associated action"
< msgstr ""
< 
< #: src/objects/window/window.c:234
< msgid "The name of the actions in the header bar"
< msgstr ""
< 
< #: src/objects/toolbar/toolbar.c:98
< msgid "The name of the actions in the toolbar"
< msgstr ""
< 
< #: src/objects/keypad/element.c:86
< msgid "The name of the icon"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:102
< msgid "The name of the icon associated with the action"
< msgstr ""
< 
< #: src/objects/keypad/model.c:94
< msgid "The name used to identify the keypad"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:94
< msgid "The name used to invoke the action"
< msgstr ""
< 
< #: src/objects/keypad/model.c:114
< msgid "The position of the keypad"
< msgstr ""
< 
< #: src/objects/actions/save.c:57 src/objects/os/linux/savedesktopicon.c:79
< #: src/objects/os/windows/savedesktopicon.c:88
< msgid "The session name used in the window/tab title (empty for default)"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:153
< msgid "The state the action is in"
< msgstr ""
< 
< #: src/objects/toolbar/toolbar.c:109
< msgid "The toolbar icon size"
< msgstr ""
< 
< #: src/objects/toolbar/toolbar.c:135
< msgid "The toolbar icon type"
< msgstr ""
< 
< #: src/objects/toolbar/toolbar.c:122
< msgid "The toolbar style"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:118
< msgid "The tooltip for the action"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:125
< msgid "The type of GVariant passed to activate()"
< msgstr ""
< 
< #: src/objects/actions/abstract.c:132
< msgid "The type of the state kept by the action"
< msgstr ""
< 
< #: src/objects/os/macos/savedesktopicon.c:68
< msgid "This action is not available in this platform"
< msgstr ""
< 
< #: src/objects/window/header-settings.c:84
< msgid "Title bar"
< msgstr ""
< 
< #: src/objects/window/header-settings.c:96
< msgid "Title bar actions"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:94 ui/linux.ui.xml:343 ui/linux.ui.xml:968
< #: ui/linux.ui.xml:1088 ui/macos.ui.xml:343 ui/macos.ui.xml:968
< #: ui/macos.ui.xml:1088 ui/windows.ui.xml:343 ui/windows.ui.xml:968
< #: ui/windows.ui.xml:1088
< msgid "Toolbar"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:68
< msgid "Toolbar Style"
< msgstr ""
< 
< #: src/objects/toolbar/settings.c:75
< msgid "Toolbar position"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:79
< msgid "Toolbar s_tyle"
< msgstr ""
< 
< #: src/objects/toolbar/models.c:128
< msgid "Top (system default)"
< msgstr ""
< 
< #: ui/linux.ui.xml:973 ui/macos.ui.xml:973 ui/windows.ui.xml:973
< msgid "Top menu"
< msgstr ""
< 
< #: ui/linux.ui.xml:338 ui/macos.ui.xml:338 ui/windows.ui.xml:338
< msgid "Trace"
< msgstr ""
< 
< #: ui/linux.ui.xml:465 ui/linux.ui.xml:1027 ui/macos.ui.xml:465
< #: ui/macos.ui.xml:1027 ui/windows.ui.xml:465 ui/windows.ui.xml:1027
< msgid "Track Cursor"
< msgstr ""
< 
< #: src/objects/application/application.c:149
< msgid "UI Type"
< msgstr ""
< 
< #: src/objects/settings/gsettings.c:131
< msgid ""
< "Unable to initialize system settings. Application may crash in unexpected "
< "ways"
< msgstr ""
< 
< #: src/objects/os/windows/open.c:137
< #, c-format
< msgid "Unable to load session preferences from '%s'"
< msgstr ""
< 
< #: ui/linux.ui.xml:291 ui/linux.ui.xml:800 ui/macos.ui.xml:291
< #: ui/macos.ui.xml:800 ui/windows.ui.xml:291 ui/windows.ui.xml:800
< msgid "Unselect"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:113
< #, c-format
< msgid "Unstable version %s-%s"
< msgstr ""
< 
< #: ui/linux.ui.xml:530 ui/linux.ui.xml:907 ui/macos.ui.xml:530
< #: ui/macos.ui.xml:907 ui/windows.ui.xml:530 ui/windows.ui.xml:907
< msgid "Use +/- for field navigation"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:115
< #, c-format
< msgid "Version %s-%s"
< msgstr ""
< 
< #: src/objects/window/header.c:63 ui/linux.ui.xml:64 ui/linux.ui.xml:965
< #: ui/linux.ui.xml:1085 ui/macos.ui.xml:64 ui/macos.ui.xml:965
< #: ui/macos.ui.xml:1085 ui/windows.ui.xml:64 ui/windows.ui.xml:965
< #: ui/windows.ui.xml:1085
< msgid "View"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:206
< msgid "View this project on github"
< msgstr ""
< 
< #: ui/linux.ui.xml:106 ui/linux.ui.xml:568 ui/macos.ui.xml:106
< #: ui/macos.ui.xml:568 ui/windows.ui.xml:106 ui/windows.ui.xml:568
< msgid "Window with default session"
< msgstr ""
< 
< #: src/objects/os/windows/savedesktopicon.c:187
< msgid "Windows shortcuts"
< msgstr ""
< 
< #: src/objects/settings/dialog.c:79
< msgid "_Apply"
< msgstr ""
< 
< #: src/objects/actions/save.c:103 src/objects/settings/dialog.c:78
< #: src/objects/os/linux/savedesktopicon.c:140
< #: src/objects/os/windows/savedesktopicon.c:132
< msgid "_Cancel"
< msgstr ""
< 
< #: src/objects/window/page.c:371
< msgid "_Close session"
< msgstr ""
< 
< #: ui/linux.ui.xml:369 ui/linux.ui.xml:1107 ui/macos.ui.xml:369
< #: ui/macos.ui.xml:1107 ui/windows.ui.xml:369 ui/windows.ui.xml:1107
< msgid "_Connect"
< msgstr ""
< 
< #: ui/linux.ui.xml:374 ui/macos.ui.xml:374 ui/windows.ui.xml:374
< msgid "_Disconnect"
< msgstr ""
< 
< #: ui/linux.ui.xml:232 ui/linux.ui.xml:681 ui/linux.ui.xml:824
< #: ui/macos.ui.xml:232 ui/macos.ui.xml:681 ui/macos.ui.xml:824
< #: ui/windows.ui.xml:232 ui/windows.ui.xml:681 ui/windows.ui.xml:824
< msgid "_Edit"
< msgstr ""
< 
< #: ui/linux.ui.xml:99 ui/macos.ui.xml:99 ui/windows.ui.xml:99
< msgid "_File"
< msgstr ""
< 
< #: ui/linux.ui.xml:361 ui/macos.ui.xml:361 ui/windows.ui.xml:361
< msgid "_Network"
< msgstr ""
< 
< #: ui/linux.ui.xml:103 ui/linux.ui.xml:565 ui/macos.ui.xml:103
< #: ui/macos.ui.xml:565 ui/windows.ui.xml:103 ui/windows.ui.xml:565
< msgid "_New"
< msgstr ""
< 
< #: ui/linux.ui.xml:119 ui/linux.ui.xml:581 ui/macos.ui.xml:119
< #: ui/macos.ui.xml:581 ui/windows.ui.xml:119 ui/windows.ui.xml:581
< msgid "_Open"
< msgstr ""
< 
< #: src/objects/toolbar/toolbar.c:235
< msgid "_Preferences"
< msgstr ""
< 
< #: src/objects/window/page.c:365
< msgid "_Rename session"
< msgstr ""
< 
< #: src/objects/actions/save.c:104 src/objects/os/linux/savedesktopicon.c:141
< #: src/objects/os/windows/savedesktopicon.c:133
< msgid "_Save"
< msgstr ""
< 
< #: ui/linux.ui.xml:335 ui/macos.ui.xml:335 ui/windows.ui.xml:335
< msgid "_View"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:205
< msgid "https://github.com/PerryWerneck/pw3270"
< msgstr ""
< 
< #: src/objects/application/actions/about.c:208
< msgid "translator-credits"
< msgstr ""
---
> # SOME DESCRIPTIVE TITLE.
> # Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
> # This file is distributed under the same license as the PACKAGE package.
> # FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
> #
> #, fuzzy
> msgid ""
> msgstr ""
> "Project-Id-Version: PACKAGE VERSION\n"
> "Report-Msgid-Bugs-To: \n"
> "POT-Creation-Date: 2020-10-29 19:50-0300\n"
> "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
> "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
> "Language-Team: LANGUAGE <LL@li.org>\n"
> "Language: \n"
> "MIME-Version: 1.0\n"
> "Content-Type: text/plain; charset=CHARSET\n"
> "Content-Transfer-Encoding: 8bit\n"
> 
> #: src/objects/application/application.c:203
> #, c-format
> msgid "\"%s\" is not a valid user interface name"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:93
> msgid "32 bits Linux"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:91
> msgid "32 bits Windows"
> msgstr ""
> 
> #: src/objects/actions/save.c:156 src/objects/os/linux/savedesktopicon.c:267
> msgid "3270 session files"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:87
> #, c-format
> msgid "3270 terminal emulator for %s."
> msgstr ""
> 
> #: src/objects/application/actions/about.c:95
> msgid "64 bits Linux"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:89
> msgid "64 bits Windows"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:188 ui/application.xml:39
> #: ui/application.xml:537
> msgid "About PW3270"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:93
> msgid "Action Name"
> msgstr ""
> 
> #: src/objects/window/window.c:184
> msgid "Action Names"
> msgstr ""
> 
> #: ui/window.xml:384 ui/window.xml:499 ui/application.xml:509
> msgid "Alert sound"
> msgstr ""
> 
> #: src/main/tools.c:99
> msgid "All files"
> msgstr ""
> 
> #: ui/window.xml:178 ui/application.xml:251
> msgid "Append to copy"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:129
> msgid "Apple version"
> msgstr ""
> 
> #: ui/window.xml:132 ui/application.xml:389
> msgid "Application"
> msgstr ""
> 
> #: src/objects/window/header-settings.c:123
> msgid "Application menu"
> msgstr ""
> 
> #: src/objects/application/actions/preferences.c:76 ui/application.xml:83
> msgid "Application preferences"
> msgstr ""
> 
> #: src/objects/window/page.c:264
> msgid "Apply"
> msgstr ""
> 
> #: ui/application.xml:484
> msgid "Auto-Reconnect"
> msgstr ""
> 
> #: src/objects/toolbar/settings.c:112 src/objects/settings/actionview.c:73
> msgid "Available"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:132
> msgid "Based on X3270 from"
> msgstr ""
> 
> #: ui/window.xml:413 ui/application.xml:474
> msgid "Blank Fill"
> msgstr ""
> 
> #: ui/application.xml:439
> msgid "Blinking Cursor"
> msgstr ""
> 
> #: ui/application.xml:489
> msgid "Bold"
> msgstr ""
> 
> #: src/objects/window/terminal.c:165
> msgid "Can't load session file"
> msgstr ""
> 
> #: src/objects/window/terminal.c:160
> #, c-format
> msgid "Can't use \"%s\""
> msgstr ""
> 
> #: src/objects/application/actions/open.c:49 src/objects/window/page.c:265
> msgid "Cancel"
> msgstr ""
> 
> #: src/objects/window/actions/setcolors.c:46
> msgid "Change terminal colors"
> msgstr ""
> 
> #: src/objects/application/actions/preferences.c:78
> msgid "Change the application preferences"
> msgstr ""
> 
> #: src/objects/window/header-settings.c:98
> msgid "Change the position of the title bar icons"
> msgstr ""
> 
> #: src/objects/window/actions/sessionproperties.c:47
> msgid "Change the preferences for the active session"
> msgstr ""
> 
> #: ui/window.xml:192 ui/window.xml:334 ui/application.xml:304
> msgid "Clear"
> msgstr ""
> 
> #: ui/window.xml:84 ui/window.xml:121 ui/application.xml:149
> #: ui/application.xml:186
> msgid "Clipboard contents"
> msgstr ""
> 
> #: src/objects/application/actions/window.c:65
> msgid "Close all windows and exit application"
> msgstr ""
> 
> #: src/objects/window/actions/close.c:61
> msgid "Close the window"
> msgstr ""
> 
> #: src/objects/window/actions/close.c:60 ui/window.xml:280 ui/window.xml:478
> #: ui/window.xml:585 ui/application.xml:216
> msgid "Close window"
> msgstr ""
> 
> #: src/objects/window/actions/setcolors.c:45
> msgid "Colors"
> msgstr ""
> 
> #: src/objects/os/linux/savedesktopicon.c:101
> msgid "Comment"
> msgstr ""
> 
> #: src/objects/window/actions/connect.c:59
> msgid "Connect"
> msgstr ""
> 
> #: ui/application.xml:434
> msgid "Connect on startup"
> msgstr ""
> 
> #: src/objects/window/actions/connect.c:60
> msgid "Connect to host"
> msgstr ""
> 
> #: src/objects/window/window.c:772 src/objects/window/page.c:218
> msgid "Connected to host"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:130
> msgid "Contributors"
> msgstr ""
> 
> #: ui/window.xml:153 ui/application.xml:236
> msgid "Copy"
> msgstr ""
> 
> #: ui/window.xml:168
> msgid "Copy as HTML"
> msgstr ""
> 
> #: ui/window.xml:173
> msgid "Copy as image"
> msgstr ""
> 
> #: ui/window.xml:163 ui/application.xml:246
> msgid "Copy as table"
> msgstr ""
> 
> #: ui/window.xml:158 ui/application.xml:241
> msgid "Copy as text"
> msgstr ""
> 
> #: src/objects/os/linux/savedesktopicon.c:114
> msgid "Create shortcut for the current session"
> msgstr ""
> 
> #: ui/window.xml:369 ui/application.xml:459
> msgid "Cross hair cursor"
> msgstr ""
> 
> #: ui/window.xml:111 ui/application.xml:176
> msgid "Current Screen"
> msgstr ""
> 
> #: ui/window.xml:74 ui/application.xml:139
> msgid "Current screen"
> msgstr ""
> 
> #: ui/window.xml:137 ui/application.xml:394
> msgid "Current session"
> msgstr ""
> 
> #: ui/window.xml:183 ui/application.xml:256
> msgid "Cut"
> msgstr ""
> 
> #: ui/window.xml:202 ui/window.xml:344 ui/application.xml:314
> msgid "Delete Field"
> msgstr ""
> 
> #: ui/window.xml:275 ui/window.xml:473
> msgid "Disconnect"
> msgstr ""
> 
> #: src/objects/window/window.c:772 src/objects/window/window.c:799
> #: src/objects/window/page.c:207
> msgid "Disconnected from host"
> msgstr ""
> 
> #: ui/window.xml:396 ui/window.xml:512 ui/application.xml:524
> msgid "Dynamic font spacing"
> msgstr ""
> 
> #: src/objects/keypad/element.c:128
> msgid "Element col"
> msgstr ""
> 
> #: src/objects/keypad/element.c:152
> msgid "Element height in rows"
> msgstr ""
> 
> #: src/objects/keypad/element.c:116
> msgid "Element row"
> msgstr ""
> 
> #: src/objects/keypad/element.c:140
> msgid "Element width in columns"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:140
> msgid "Enabled"
> msgstr ""
> 
> #: src/objects/settings/actionview.c:78
> msgid "End"
> msgstr ""
> 
> #: ui/window.xml:197 ui/window.xml:339 ui/application.xml:309
> msgid "Erase input"
> msgstr ""
> 
> #: ui/window.xml:207 ui/window.xml:349 ui/application.xml:319
> msgid "Erase to end of field"
> msgstr ""
> 
> #: ui/window.xml:212 ui/window.xml:354 ui/application.xml:324
> msgid "Erase to end of line"
> msgstr ""
> 
> #: ui/application.xml:352
> msgid "Field attributes"
> msgstr ""
> 
> #: ui/application.xml:454
> msgid "Full Screen"
> msgstr ""
> 
> #: ui/window.xml:246 ui/window.xml:422 ui/window.xml:517
> msgid "Full screen"
> msgstr ""
> 
> #: keypad/10-bottom.xml:34
> msgid "Function bar"
> msgstr ""
> 
> #: src/objects/os/linux/savedesktopicon.c:94
> msgid "Generic name"
> msgstr ""
> 
> #: ui/application.xml:36 ui/application.xml:534
> msgid "Help"
> msgstr ""
> 
> #: src/objects/window/actions/hostproperties.c:45
> msgid "Host properties"
> msgstr ""
> 
> #: src/objects/window/window.c:561 src/objects/os/linux/savedesktopicon.c:102
> msgid "IBM 3270 Terminal emulator"
> msgstr ""
> 
> #: src/objects/actions/view.c:90
> msgid "Icon"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:101
> msgid "Icon Name"
> msgstr ""
> 
> #: src/objects/toolbar/settings.c:54
> msgid "Icon Size"
> msgstr ""
> 
> #: src/objects/toolbar/settings.c:61
> msgid "Icon Style"
> msgstr ""
> 
> #: src/objects/toolbar/models.c:52
> msgid "Icon _size"
> msgstr ""
> 
> #: src/objects/toolbar/models.c:108
> msgid "Icon type"
> msgstr ""
> 
> #: src/objects/toolbar/models.c:97
> msgid "Icons & text"
> msgstr ""
> 
> #: src/objects/toolbar/models.c:87
> msgid "Icons only"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:141
> msgid "If the action can be activated"
> msgstr ""
> 
> #: ui/window.xml:489
> msgid "Insert"
> msgstr ""
> 
> #: src/objects/keypad/attribute.c:79
> msgid "Invalid or unknown property type"
> msgstr ""
> 
> #: src/objects/settings/actionview.c:79
> msgid "Items packed from the end to the start"
> msgstr ""
> 
> #: src/objects/settings/actionview.c:69
> msgid "Items packed from the start to the end"
> msgstr ""
> 
> #: src/objects/toolbar/settings.c:106
> msgid "Itens"
> msgstr ""
> 
> #: ui/application.xml:499
> msgid "Keep selected"
> msgstr ""
> 
> #: src/objects/keypad/model.c:103
> msgid "Keypad Label"
> msgstr ""
> 
> #: src/objects/keypad/model.c:93
> msgid "Keypad Name"
> msgstr ""
> 
> #: src/objects/keypad/model.c:136
> msgid "Keypad height in rows"
> msgstr ""
> 
> #: src/objects/keypad/model.c:124
> msgid "Keypad width in columns"
> msgstr ""
> 
> #: src/main/placeholders.c:114
> msgid "Keypads"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:140
> msgid "LICENSE"
> msgstr ""
> 
> #: src/objects/actions/view.c:99
> msgid "Label"
> msgstr ""
> 
> #: src/objects/toolbar/models.c:66
> msgid "Large"
> msgstr ""
> 
> #: src/objects/toolbar/settings.c:176
> msgid "Layout"
> msgstr ""
> 
> #: src/objects/settings/actionview.c:74
> msgid "List of the available and unpacked actions"
> msgstr ""
> 
> #: ui/application.xml:71
> msgid "Main Menu"
> msgstr ""
> 
> #: ui/application.xml:66
> msgid "Main Toolbar"
> msgstr ""
> 
> #: ui/window.xml:560
> msgid "Main menu"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:128
> msgid "Maintainers"
> msgstr ""
> 
> #: ui/application.xml:347
> msgid "Menu"
> msgstr ""
> 
> #: ui/window.xml:526 ui/application.xml:403
> msgid "Model 2 - 80x24"
> msgstr ""
> 
> #: ui/window.xml:531 ui/application.xml:408
> msgid "Model 3 - 80x32"
> msgstr ""
> 
> #: ui/window.xml:536 ui/application.xml:413
> msgid "Model 4 - 80x43"
> msgstr ""
> 
> #: ui/window.xml:541 ui/application.xml:418
> msgid "Model 5 - 132x27"
> msgstr ""
> 
> #: ui/window.xml:391 ui/application.xml:444
> msgid "Monocase"
> msgstr ""
> 
> #: ui/application.xml:519
> msgid "Network keep alive"
> msgstr ""
> 
> #: src/objects/window/page.c:275
> msgid "New session name"
> msgstr ""
> 
> #: src/objects/application/actions/window.c:84
> msgid "New tab"
> msgstr ""
> 
> #: src/objects/application/actions/window.c:85
> msgid "New tab with default session"
> msgstr ""
> 
> #: src/objects/application/actions/window.c:104
> msgid "New window"
> msgstr ""
> 
> #: src/objects/application/actions/window.c:105
> msgid "New window with default session"
> msgstr ""
> 
> #: src/objects/application/actions/open.c:48
> msgid "Open Session"
> msgstr ""
> 
> #: ui/application.xml:55
> msgid "Open in New Tab"
> msgstr ""
> 
> #: ui/application.xml:50
> msgid "Open in New Window"
> msgstr ""
> 
> #: src/objects/application/actions/open.c:128
> msgid "Open in new tab"
> msgstr ""
> 
> #: src/objects/application/actions/open.c:116
> msgid "Open in new window"
> msgstr ""
> 
> #: src/objects/application/actions/open.c:129
> msgid "Open session in New Tab"
> msgstr ""
> 
> #: src/objects/application/actions/open.c:117
> msgid "Open session in New window"
> msgstr ""
> 
> #: ui/window.xml:222 ui/window.xml:364 ui/window.xml:509 ui/application.xml:431
> msgid "Options"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:124
> msgid "Parameter Type"
> msgstr ""
> 
> #: ui/window.xml:296 ui/application.xml:261
> msgid "Paste from clipboard"
> msgstr ""
> 
> #: ui/window.xml:306 ui/application.xml:271
> msgid "Paste from text file"
> msgstr ""
> 
> #: ui/window.xml:301 ui/application.xml:266
> msgid "Paste next"
> msgstr ""
> 
> #: ui/window.xml:408 ui/application.xml:469
> msgid "Paste with left margin"
> msgstr ""
> 
> #: src/objects/os/linux/savedesktopicon.c:71
> msgid "Path for the new shortcut"
> msgstr ""
> 
> #: ui/window.xml:129
> msgid "Preferences"
> msgstr ""
> 
> #: ui/window.xml:108 ui/application.xml:173
> msgid "Print"
> msgstr ""
> 
> #: ui/window.xml:459
> msgid "Print screen"
> msgstr ""
> 
> #: ui/window.xml:262
> msgid "Print selected"
> msgstr ""
> 
> #: src/objects/keypad/attribute.c:116
> #, c-format
> msgid "Property \"%s\" is invalid for this object"
> msgstr ""
> 
> #: src/objects/application/actions/window.c:64 ui/application.xml:88
> msgid "Quit"
> msgstr ""
> 
> #: src/objects/window/page.c:262
> msgid "Rename Session"
> msgstr ""
> 
> #: ui/window.xml:325 ui/application.xml:295
> msgid "Reselect"
> msgstr ""
> 
> #: ui/window.xml:379 ui/application.xml:464
> msgid "Resize on alternate screen"
> msgstr ""
> 
> #: keypad/00-right.xml:34
> msgid "Right keypad"
> msgstr ""
> 
> #: ui/window.xml:69 ui/application.xml:134
> msgid "Save"
> msgstr ""
> 
> #: src/objects/actions/save.c:77
> msgid "Save current session preferences to file"
> msgstr ""
> 
> #: ui/window.xml:454
> msgid "Save screen"
> msgstr ""
> 
> #: ui/window.xml:257
> msgid "Save selected"
> msgstr ""
> 
> #: src/objects/actions/save.c:75 src/objects/actions/save.c:153
> msgid "Save session preferences"
> msgstr ""
> 
> #: src/objects/os/linux/savedesktopicon.c:113
> msgid "Save session shortcut"
> msgstr ""
> 
> #: src/objects/os/linux/savedesktopicon.c:264
> msgid "Save to session filename"
> msgstr ""
> 
> #: src/objects/os/linux/savedesktopicon.c:236
> msgid "Save to shortcut file"
> msgstr ""
> 
> #: ui/window.xml:523 ui/application.xml:400
> msgid "Screen size"
> msgstr ""
> 
> #: ui/window.xml:320 ui/application.xml:285
> msgid "Select Field"
> msgstr ""
> 
> #: ui/window.xml:315 ui/application.xml:280
> msgid "Select all"
> msgstr ""
> 
> #: ui/window.xml:227 ui/application.xml:479
> msgid "Select by rectangles"
> msgstr ""
> 
> #: src/objects/toolbar/settings.c:106
> msgid "Select the toolbar itens"
> msgstr ""
> 
> #: src/objects/toolbar/settings.c:111
> msgid "Selected"
> msgstr ""
> 
> #: ui/window.xml:79 ui/window.xml:116 ui/application.xml:144
> #: ui/application.xml:181
> msgid "Selected area"
> msgstr ""
> 
> #: src/objects/window/actions/filetransfer.c:45
> msgid "Send/Receive"
> msgstr ""
> 
> #: src/objects/window/actions/filetransfer.c:46 ui/window.xml:464
> #: ui/application.xml:195
> msgid "Send/Receive files"
> msgstr ""
> 
> #: src/objects/toolbar/settings.c:234 src/objects/toolbar/settings.c:244
> msgid "Separator"
> msgstr ""
> 
> #: ui/application.xml:47
> msgid "Session"
> msgstr ""
> 
> #: ui/window.xml:445 ui/window.xml:565 ui/application.xml:76
> msgid "Session Trace"
> msgstr ""
> 
> #: src/objects/actions/save.c:63 src/objects/os/linux/savedesktopicon.c:85
> msgid "Session file"
> msgstr ""
> 
> #: ui/window.xml:61 ui/application.xml:126
> msgid "Session in New Tab"
> msgstr ""
> 
> #: ui/window.xml:56 ui/application.xml:121
> msgid "Session in new window"
> msgstr ""
> 
> #: src/objects/actions/save.c:56 src/objects/os/linux/savedesktopicon.c:77
> msgid "Session name"
> msgstr ""
> 
> #: src/objects/window/actions/sessionproperties.c:46 ui/window.xml:98
> #: ui/window.xml:579 ui/application.xml:163
> msgid "Session preferences"
> msgstr ""
> 
> #: src/objects/application/application.c:216
> msgid "Set the user-interface type"
> msgstr ""
> 
> #: ui/application.xml:381
> msgid "Settings"
> msgstr ""
> 
> #: src/objects/toolbar/settings.c:176
> msgid "Setup the toolbar layout"
> msgstr ""
> 
> #: src/objects/window/header-settings.c:87
> msgid "Setup title bar"
> msgstr ""
> 
> #: src/objects/toolbar/toolbar.c:214 src/objects/toolbar/settings.c:88
> msgid "Setup toolbar"
> msgstr ""
> 
> #: src/objects/os/linux/savedesktopicon.c:70
> msgid "Shortcut file"
> msgstr ""
> 
> #: ui/window.xml:93 ui/application.xml:158
> msgid "Shortcut for this session"
> msgstr ""
> 
> #: src/objects/os/linux/savedesktopicon.c:63
> msgid "Shortcut name"
> msgstr ""
> 
> #: ui/application.xml:494
> msgid "Show Underline"
> msgstr ""
> 
> #: ui/window.xml:241
> msgid "Show menu"
> msgstr ""
> 
> #: ui/window.xml:236
> msgid "Show toolbar"
> msgstr ""
> 
> #: src/objects/toolbar/models.c:61
> msgid "Small"
> msgstr ""
> 
> #: ui/window.xml:403 ui/application.xml:504
> msgid "Smart paste"
> msgstr ""
> 
> #: src/objects/os/linux/savedesktopicon.c:239
> msgid "Standard desktop files"
> msgstr ""
> 
> #: src/objects/settings/actionview.c:68
> msgid "Start"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:152
> msgid "State"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:131
> msgid "State Type"
> msgstr ""
> 
> #: src/objects/toolbar/models.c:115
> msgid "Symbolic"
> msgstr ""
> 
> #: src/objects/toolbar/models.c:55 src/objects/toolbar/models.c:82
> #: src/objects/toolbar/models.c:111
> msgid "System default"
> msgstr ""
> 
> #: src/main/tools.c:95
> msgid "TN3270 Session Files"
> msgstr ""
> 
> #: ui/window.xml:45 ui/application.xml:110
> msgid "Tab with default session"
> msgstr ""
> 
> #: ui/application.xml:426
> msgid "Terminal font"
> msgstr ""
> 
> #: src/objects/toolbar/models.c:92
> msgid "Text only"
> msgstr ""
> 
> #: src/objects/keypad/model.c:104 src/objects/keypad/element.c:106
> msgid "The Label of the keypad"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:109
> msgid "The action label"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:117
> msgid "The action tooltip"
> msgstr ""
> 
> #: src/objects/application/application.c:160
> msgid "The code of the User interface type"
> msgstr ""
> 
> #: src/objects/actions/save.c:64
> msgid "The file to save the current session preferences"
> msgstr ""
> 
> #: src/objects/os/linux/savedesktopicon.c:86
> msgid "The file with the session preferences for this shortcut"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:110
> msgid "The label for the action"
> msgstr ""
> 
> #: src/objects/keypad/element.c:96
> msgid "The name of associated action"
> msgstr ""
> 
> #: src/objects/window/window.c:185
> msgid "The name of the actions in the header bar"
> msgstr ""
> 
> #: src/objects/toolbar/toolbar.c:98
> msgid "The name of the actions in the toolbar"
> msgstr ""
> 
> #: src/objects/keypad/element.c:86
> msgid "The name of the icon"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:102
> msgid "The name of the icon associated with the action"
> msgstr ""
> 
> #: src/objects/keypad/model.c:94
> msgid "The name used to identify the keypad"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:94
> msgid "The name used to invoke the action"
> msgstr ""
> 
> #: src/objects/keypad/model.c:114
> msgid "The position of the keypad"
> msgstr ""
> 
> #: src/objects/actions/save.c:57 src/objects/os/linux/savedesktopicon.c:79
> msgid "The session name used in the window/tab title (empty for default)"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:153
> msgid "The state the action is in"
> msgstr ""
> 
> #: src/objects/toolbar/toolbar.c:109
> msgid "The toolbar icon size"
> msgstr ""
> 
> #: src/objects/toolbar/toolbar.c:135
> msgid "The toolbar icon type"
> msgstr ""
> 
> #: src/objects/toolbar/toolbar.c:122
> msgid "The toolbar style"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:118
> msgid "The tooltip for the action"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:125
> msgid "The type of GVariant passed to activate()"
> msgstr ""
> 
> #: src/objects/actions/abstract.c:132
> msgid "The type of the state kept by the action"
> msgstr ""
> 
> #: src/objects/window/header-settings.c:86
> msgid "Title bar"
> msgstr ""
> 
> #: src/objects/window/header-settings.c:98
> msgid "Title bar actions"
> msgstr ""
> 
> #: src/objects/toolbar/settings.c:87 ui/window.xml:435 ui/window.xml:555
> #: ui/application.xml:342
> msgid "Toolbar"
> msgstr ""
> 
> #: src/objects/toolbar/settings.c:68
> msgid "Toolbar Style"
> msgstr ""
> 
> #: src/objects/toolbar/models.c:79
> msgid "Toolbar s_tyle"
> msgstr ""
> 
> #: ui/window.xml:440
> msgid "Top menu"
> msgstr ""
> 
> #: ui/application.xml:337
> msgid "Trace"
> msgstr ""
> 
> #: ui/window.xml:494 ui/application.xml:449
> msgid "Track Cursor"
> msgstr ""
> 
> #: src/objects/application/application.c:159
> msgid "UI Type"
> msgstr ""
> 
> #: ui/window.xml:267 ui/application.xml:290
> msgid "Unselect"
> msgstr ""
> 
> #: ui/window.xml:374 ui/application.xml:514
> msgid "Use +/- for field navigation"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:70
> #, c-format
> msgid "Version %s-%s"
> msgstr ""
> 
> #: src/objects/window/header.c:66 ui/window.xml:432 ui/window.xml:552
> #: ui/application.xml:63
> msgid "View"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:163
> msgid "View this project on github"
> msgstr ""
> 
> #: ui/window.xml:40 ui/application.xml:105
> msgid "Window with default session"
> msgstr ""
> 
> #: src/objects/settings/dialog.c:79
> msgid "_Apply"
> msgstr ""
> 
> #: src/objects/actions/save.c:102 src/objects/settings/dialog.c:78
> #: src/objects/os/linux/savedesktopicon.c:174
> msgid "_Cancel"
> msgstr ""
> 
> #: src/objects/window/page.c:371
> msgid "_Close session"
> msgstr ""
> 
> #: ui/window.xml:574 ui/application.xml:368
> msgid "_Connect"
> msgstr ""
> 
> #: ui/application.xml:373
> msgid "_Disconnect"
> msgstr ""
> 
> #: ui/window.xml:148 ui/window.xml:291 ui/application.xml:231
> msgid "_Edit"
> msgstr ""
> 
> #: ui/application.xml:98
> msgid "_File"
> msgstr ""
> 
> #: ui/application.xml:360
> msgid "_Network"
> msgstr ""
> 
> #: ui/window.xml:37 ui/application.xml:102
> msgid "_New"
> msgstr ""
> 
> #: ui/window.xml:53 ui/application.xml:118
> msgid "_Open"
> msgstr ""
> 
> #: src/objects/toolbar/toolbar.c:236
> msgid "_Preferences"
> msgstr ""
> 
> #: src/objects/window/page.c:365
> msgid "_Rename session"
> msgstr ""
> 
> #: src/objects/actions/save.c:103 src/objects/os/linux/savedesktopicon.c:175
> msgid "_Save"
> msgstr ""
> 
> #: ui/application.xml:334
> msgid "_View"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:162
> msgid "https://github.com/PerryWerneck/pw3270"
> msgstr ""
> 
> #: src/objects/application/actions/about.c:165
> msgid "translator-credits"
> msgstr ""
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4: mac
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/macos/Info.plist lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/macos/Info.plist
14c14
< 	<string>br.app.pw3270</string>
---
> 	<string>br.com.bb.pw3270</string>
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/Makefile.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/Makefile.in
1d0
< # SPDX-License-Identifier: LGPL-3.0-or-later
3c2,4
< # Copyright (C) 2008 Banco do Brasil S.A.
---
> # "Software pw3270, desenvolvido com base nos códigos fontes do WC3270  e X3270
> # (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
> # aplicativos mainframe. Registro no INPI sob o nome G3270.
5,8c6
< # This program is free software: you can redistribute it and/or modify
< # it under the terms of the GNU Lesser General Public License as published
< # by the Free Software Foundation, either version 3 of the License, or
< # (at your option) any later version.
---
> # Copyright (C) <2008> <Banco do Brasil S.A.>
10,13c8,10
< # This program is distributed in the hope that it will be useful,
< # but WITHOUT ANY WARRANTY; without even the implied warranty of
< # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
< # GNU General Public License for more details.
---
> # Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
> # os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
> # Free Software Foundation.
15,16c12,24
< # You should have received a copy of the GNU Lesser General Public License
< # along with this program.  If not, see <https://www.gnu.org/licenses/>.
---
> # Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
> # GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
> # A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
> # obter mais detalhes.
> #
> # Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
> # programa;  se  não, escreva para a Free Software Foundation, Inc., 59 Temple
> # Place, Suite 330, Boston, MA, 02111-1307, USA
> #
> # Contatos:
> #
> # perry.werneck@gmail.com	(Alexandre Perry de Souza Werneck)
> # erico.mendonca@gmail.com	(Erico Mascarenhas de Mendonça)
18,31d25
< 
< #---[ Paths ]----------------------------------------------------------------------------
< 
< prefix=@prefix@
< exec_prefix=@exec_prefix@
< bindir=@bindir@
< srcdir=@srcdir@
< sbindir=@sbindir@
< libdir=@libdir@
< includedir=@includedir@
< datarootdir=@datarootdir@
< localedir=@localedir@
< docdir=@docdir@
< sysconfdir=@sysconfdir@
38,50d31
< COMMON_SOURCES= \
< 	$(wildcard $(srcdir)/src/objects/actions/*.c) \
< 	$(wildcard $(srcdir)/src/objects/application/*.c) \
< 	$(wildcard $(srcdir)/src/objects/application/actions/*.c) \
< 	$(wildcard $(srcdir)/src/objects/window/*.c) \
< 	$(wildcard $(srcdir)/src/objects/window/actions/*.c) \
< 	$(wildcard $(srcdir)/src/objects/terminal/*.c) \
< 	$(wildcard $(srcdir)/src/objects/toolbar/*.c) \
< 	$(wildcard $(srcdir)/src/objects/settings/*.c) \
< 	$(wildcard $(srcdir)/src/main/*.c) \
< 	$(wildcard $(srcdir)/src/tools/*.c) \
< 	$(wildcard $(srcdir)/src/objects/keypad/*.c) \
< 
52,55c33,46
< 	$(COMMON_SOURCES) \
< 	$(wildcard $(srcdir)/src/objects/os/@OSNAME@/*.c) \
< 	$(wildcard $(srcdir)/src/main/@OSNAME@/*.c) \
< 	$(wildcard $(srcdir)/src/main/@OSNAME@/*.rc)
---
> 	$(wildcard src/objects/actions/*.c) \
> 	$(wildcard src/objects/application/*.c) \
> 	$(wildcard src/objects/application/actions/*.c) \
> 	$(wildcard src/objects/window/*.c) \
> 	$(wildcard src/objects/window/actions/*.c) \
> 	$(wildcard src/objects/terminal/*.c) \
> 	$(wildcard src/objects/toolbar/*.c) \
> 	$(wildcard src/objects/settings/*.c) \
> 	$(wildcard src/objects/os/@OSNAME@/*.c) \
> 	$(wildcard src/main/*.c) \
> 	$(wildcard src/tools/*.c) \
> 	$(wildcard src/main/@OSNAME@/*.c) \
> 	$(wildcard src/main/@OSNAME@/*.rc) \
> 	$(wildcard src/objects/keypad/*.c)
78c69,80
< #---[ Build Paths ]----------------------------------------------------------------------
---
> #---[ Paths ]----------------------------------------------------------------------------
> 
> prefix=@prefix@
> exec_prefix=@exec_prefix@
> bindir=@bindir@
> sbindir=@sbindir@
> libdir=@libdir@
> includedir=@includedir@
> datarootdir=@datarootdir@
> localedir=@localedir@
> docdir=@docdir@
> sysconfdir=@sysconfdir@
80c82
< BUILDDIR=@BUILDDIR@
---
> BASEDIR=@BASEDIR@
82c84
< POTDIR=$(BUILDDIR)/.pot
---
> POTDIR=$(BASEDIR)/.pot
84c86
< OBJDIR=$(BUILDDIR)/.obj/$(PACKAGE_NAME)
---
> OBJDIR=$(BASEDIR)/.obj/$(PACKAGE_NAME)
88c90
< BINDIR=$(BUILDDIR)/.bin
---
> BINDIR=$(BASEDIR)/.bin
93a96,104
> DEPENDS= \
> 	Makefile \
> 	src/include/*.h \
> 	src/include/pw3270/*.h \
> 	src/objects/toolbar/private.h \
> 	src/objects/window/private.h \
> 	src/objects/actions/private.h \
> 	src/main/private.h
> 
98d108
< 	-I$(srcdir)/src/include \
114,115c124,126
< 	%.c
< 	
---
> 	%.c \
> 	$(DEPENDS)
> 
137a149,155
> gschemas.compiled: \
> 	$(foreach SCHEMA, $(notdir $(SCHEMAS)), $(OBJDIR)/schemas/$(SCHEMA))
> 
> 	@glib-compile-schemas \
> 		--targetdir=$(@D) \
> 		$(OBJDIR)/schemas
> 
141c159,160
< 	%.c
---
> 	%.c \
> 	$(DEPENDS)
166c185
< $(POTDIR)/%.pot: \
---
> $(POTDIR)/$(PACKAGE_NAME)/%.pot: \
173d191
< 		--from-code=UTF-8 \
182c200
< $(POTDIR)/%.pot: \
---
> $(POTDIR)/$(PACKAGE_NAME)/%.pot: \
193c211
< $(POTDIR)/%.pot: \
---
> $(POTDIR)/$(PACKAGE_NAME)/%.pot: \
200c218,219
< $(OBJDIR)/schemas/%.xml: \
---
> 
> $(OBJDIR)/schemas/%.xml:\
207c226
< 	$(srcdir)/schemas/common/%.xml
---
> 	schemas/common/%.xml
215,219c234
< 	@$(MAKE) \
< 		-C `dirname $<` \
< 		DESTDIR=$(DESTDIR) \
< 		prefix=$(prefix) \
< 		install
---
> 	@$(MAKE) -C `dirname $<` DESTDIR=$(DESTDIR) install
222c237
< 	$(srcdir)/branding/%.svg
---
> 	branding/%.svg
234,243d248
< %.png: \
< 	$(srcdir)/branding/%.svg
< 
< 	@echo $@ ...
< 	@$(MKDIR) $(@D)
< 	@$(CONVERT) \
< 		+antialias \
< 		-background transparent \
< 		$< \
< 		$@
245c250
< #---[ Main Target ]----------------------------------------------------------------------
---
> #---[ Release Targets ]------------------------------------------------------------------
251,253d255
< 
< #---[ Release Targets ]------------------------------------------------------------------
< 
281c283,284
< 	install-application
---
> 	install-application \
> 	install-keypads
291c294,297
< 		$(DESTDIR)$(libdir)/$(PRODUCT_NAME)-plugins
---
> 		$(DESTDIR)/$(libdir)/$(PRODUCT_NAME)-plugins
> 
> 	@$(MKDIR) \
> 		$(DESTDIR)/$(datarootdir)/$(PRODUCT_NAME)/ui
294,295c300,301
< 		$(srcdir)/ui/@OSNAME@.ui.xml \
< 		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/$(PRODUCT_NAME).ui.xml
---
> 		ui/*.xml \
> 		$(DESTDIR)/$(datarootdir)/$(PRODUCT_NAME)/ui
298c304
< 		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/keypad
---
> 		$(DESTDIR)/$(datarootdir)/$(PRODUCT_NAME)/keypad
304c310
< 		$(DESTDIR)$(bindir)
---
> 		$(DESTDIR)/$(bindir)
308c314
< 		$(DESTDIR)$(bindir)/$(PRODUCT_NAME)@EXEEXT@
---
> 		$(DESTDIR)/$(bindir)/$(PRODUCT_NAME)@EXEEXT@
310,318d315
< install-macos-application: \
< 	$(BINRLS)/$(PACKAGE_NAME)@EXEEXT@
< 
< 	@$(MKDIR) \
< 		$(DESTDIR)$(bindir)
< 
< 	@$(INSTALL_PROGRAM) \
< 		$(BINRLS)/$(PACKAGE_NAME)@EXEEXT@ \
< 		$(DESTDIR)$(bindir)/$(PRODUCT_NAME)@EXEEXT@
321d317
< 	$(PRODUCT_NAME).png \
325c321
< 		$(DESTDIR)$(bindir)
---
> 		$(DESTDIR)/$(bindir)
329c325,328
< 		$(DESTDIR)$(bindir)/$(PRODUCT_NAME)@EXEEXT@
---
> 		$(DESTDIR)/$(bindir)/$(PRODUCT_NAME)@EXEEXT@
> 
> 
> install-keypads:
332c331
< 		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)
---
> 		$(DESTDIR)/$(datarootdir)/$(PRODUCT_NAME)/keypad
335,336c334,335
< 		$(PRODUCT_NAME).png \
< 		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/$(PRODUCT_NAME).png
---
> 		keypad/*.xml \
> 		$(DESTDIR)/$(datarootdir)/$(PRODUCT_NAME)/keypad
341c340
< 		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/icons
---
> 		$(DESTDIR)/$(datarootdir)/$(PRODUCT_NAME)/icons
344,345c343,344
< 		$(srcdir)/icons/*.svg \
< 		$(DESTDIR)$(datarootdir)/$(PRODUCT_NAME)/icons
---
> 		icons/*.svg \
> 		$(DESTDIR)/$(datarootdir)/$(PRODUCT_NAME)/icons
349,357d347
< gschemas.compiled: \
< 	$(foreach SCHEMA, $(notdir $(SCHEMAS)), $(OBJDIR)/schemas/$(SCHEMA))
< 
< 	@$(MKDIR) $(OBJDIR)/schemas
< 
< 	@glib-compile-schemas \
< 		--targetdir=$(@D) \
< 		$(OBJDIR)/schemas
< 
359,363c349,351
< 	$(foreach SRC, $(basename $(COMMON_SOURCES)), $(POTDIR)/$(SRC).pot) \
< 	$(foreach SRC, $(basename $(wildcard $(srcdir)/src/objects/os/linux/*.c)), $(POTDIR)/$(SRC).pot) \
< 	$(foreach SRC, $(basename $(wildcard $(srcdir)/src/objects/os/windows/*.c)), $(POTDIR)/$(SRC).pot) \
< 	$(foreach SRC, $(basename $(wildcard $(srcdir)/src/objects/os/macos/*.c)), $(POTDIR)/$(SRC).pot) \
< 	$(foreach SRC, $(basename $(wildcard $(srcdir)/ui/*.xml)), $(POTDIR)/$(SRC).pot)
---
> 	$(foreach SRC, $(basename $(SOURCES)), $(POTDIR)/$(PACKAGE_NAME)/$(SRC).pot) \
> 	$(foreach SRC, $(basename $(wildcard ui/*.xml)), $(POTDIR)/$(PACKAGE_NAME)/$(SRC).pot) \
> 	$(foreach SRC, $(basename $(wildcard keypad/*.xml)), $(POTDIR)/$(PACKAGE_NAME)/$(SRC).pot) 
391a380
> 
423c412
< 	@rm -fr $(BUILDDIR)/.tmp/$(PACKAGE_NAME)
---
> 	@rm -fr $(BASEDIR)/.tmp/$(PACKAGE_NAME)
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/pw3270.cbp lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/pw3270.cbp
54a55
> 		<Unit filename="src/include/pw3270/tools.h" />
57,59d57
< 		<Unit filename="src/main/builder.c">
< 			<Option compilerVar="CC" />
< 		</Unit>
136,138d133
< 		<Unit filename="src/objects/os/linux/open.c">
< 			<Option compilerVar="CC" />
< 		</Unit>
142,150d136
< 		<Unit filename="src/objects/os/macos/open.c">
< 			<Option compilerVar="CC" />
< 		</Unit>
< 		<Unit filename="src/objects/os/macos/savedesktopicon.c">
< 			<Option compilerVar="CC" />
< 		</Unit>
< 		<Unit filename="src/objects/os/windows/open.c">
< 			<Option compilerVar="CC" />
< 		</Unit>
160,162d145
< 		<Unit filename="src/objects/settings/gsettings.c">
< 			<Option compilerVar="CC" />
< 		</Unit>
216a200,202
> 			<Option compilerVar="CC" />
> 		</Unit>
> 		<Unit filename="src/tools/entry.c">
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/README.md lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/README.md
4,5d3
< <img src="https://raw.githubusercontent.com/PerryWerneck/PerryWerneck/master/screenshots/mvs-tk4.png" alt="Screenshot">
< 
12,17d9
< <!-- https://github.com/igrigorik/ga-beacon -->
< 
< [![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)
< ![CodeQL](https://github.com/PerryWerneck/libv3270/workflows/CodeQL/badge.svg?branch=master)
< [![build result](https://build.opensuse.org/projects/home:PerryWerneck:pw3270/packages/pw3270/badge.svg?type=percent)](https://build.opensuse.org/package/show/home:PerryWerneck:pw3270/pw3270)
< 
29,30d20
< Updated windows installers are available on Dropbox, google drive and one drive.
< 
37c27
< 	```shell
---
> 	```
90,92c80
< ## Building for macOS 
< 
< ### Using homebrew
---
> ## Building for macOS (using homebrew)
115,127d102
< 	
< ### Using jhbuild
< 
< 1. Install jhbuild and GTK-OSX
< 
< 	https://wiki.gnome.org/Projects/GTK/OSX/Building
< 	
< 2. build
< 
< 	```shell
< 	jhbuild --moduleset=https://raw.githubusercontent.com/PerryWerneck/pw3270/master/mac/pw3270.modules build pw3270
< 	```
< 
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/rpm/pw3270.spec lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/rpm/pw3270.spec
4c4
< # Copyright (c) 2022 SUSE LLC
---
> # Copyright (c) 2019 SUSE LINUX GmbH, Nuernberg, Germany.
18a19
> #---[ Versions ]------------------------------------------------------------------------------------------------------
24,30c25,33
< Name:           pw3270
< Version:        5.4
< Release:        0
< Summary:        IBM 3270 Terminal emulator for GTK
< License:        GPL-2.0-only
< Group:          System/X11/Terminals
< URL:            https://github.com/PerryWerneck/pw3270
---
> Name:			pw3270
> Version:		5.3
> Release:		0
> Summary:		IBM 3270 Terminal emulator for GTK
> License:		GPL-2.0
> Group:			System/X11/Terminals
> Url:			https://github.com/PerryWerneck/pw3270
> 
> Source:		pw3270-%{version}.tar.xz
32c35
< Source:         pw3270-%{version}.tar.xz
---
> BuildRoot:		%{_tmppath}/%{name}-%{version}-build
34c37,38
< BuildRoot:      %{_tmppath}/%{name}-%{version}-build
---
> Requires:		shared-mime-info
> Requires:		%{name}-branding = %{version}
36,37c40
< Requires:       %{name}-branding = %{version}
< Requires:       shared-mime-info
---
> BuildRequires:	update-desktop-files
39c42
< Recommends:     libv3270-config
---
> %glib2_gsettings_schema_requires
42c45
< #
---
> # 
47a51,61
> #--[ Red HAT ]--------------------------------------------------------------------------------------------------------
> 
> %if 0%{?rhel_version}
> 
> BuildRequires:  gtk3-devel
> BuildRequires:  glib2-devel
> BuildRequires:  librsvg2-tools
> BuildRequires:  libv3270-devel >= 5.3
> 
> %endif
> 
52d65
< BuildRequires:  glib2-devel
54c67
< BuildRequires:  libappstream-glib
---
> BuildRequires:  glib2-devel
56a70,72
> # Required for genmarshal
> BuildRequires:  python
> 
63,64d78
< BuildRequires:  libappstream-glib
< BuildRequires:  pkgconfig(glib-2.0)
65a80
> BuildRequires:  pkgconfig(glib-2.0)
74,76d88
< BuildRequires:  appstream-glib
< BuildRequires:  update-desktop-files
< BuildRequires:  pkgconfig(glib-2.0)
77a90
> BuildRequires:  pkgconfig(glib-2.0)
80,81d92
< %glib2_gsettings_schema_requires
< 
87d97
< BuildRequires:  autoconf-archive
92d101
< BuildRequires:  fdupes
96c105
< BuildRequires:  libtool
---
> BuildRequires:  gettext-tools
99a109,112
> BuildRequires:  fdupes
> BuildRequires:  ImageMagick
> BuildRequires:  autoconf-archive
> %glib2_gsettings_schema_requires
106d118
< 
107a120
> 
112,116c125,127
< Requires:       %{name} = %{version}
< BuildArch:      noarch
< 
< Requires(post): desktop-file-utils
< Requires(postun):desktop-file-utils
---
> Requires:       	%{name} = %{version}
> Requires(post):	desktop-file-utils
> Requires(postun):	desktop-file-utils
122a134,146
> %package keypads
> Summary:	Keypads for %{name}
> Group:		System/X11/Terminals
> Requires:	%{name} = %{version}
> BuildArch:	noarch
> 
> Conflicts:	otherproviders(pw3270-keypads)
> Enhances:	%{name}
> 
> %description keypads
> GTK-based IBM 3270 terminal emulator with many advanced features. It can be used to communicate with any IBM host that supports 3270-style connections over TELNET.
> 
> This package contains the keypads for %{name}.
124a149
> 
131,148d155
< # Pull request #20 broke SLE-12 builds
< update_for_compatibility() {
< 	sed -i -e "s|<id>@APPLICATION_ID@|<id>@APPLICATION_ID@.desktop|" branding/metainfo.xml.in
< 	sed -i -e "s|<component type=\"desktop-application\">|<component type=\"desktop\">|" branding/metainfo.xml.in
< }
< 
< %if 0%{?suse_version}
< 	%if 0%{?suse_version} < 1500
< 		update_for_compatibility
< 	%endif
< %endif
< 
< %if 0%{?fedora}
< 	%if 0%{?fedora_version} < 27
< 		update_for_compatibility
< 	%endif
< %endif
< 
162,163d168
< appstream-util validate-relax --nonet %{buildroot}%{_datadir}/metainfo/*.metainfo.xml
< 
172a178
> %dir %{_datadir}/%{_product}/ui
179,193d184
< # Desktop files
< %{_datadir}/applications/*.desktop
< 
< %if 0%{?suse_version} < 1500
< %dir %{_datadir}/metainfo
< %endif
< 
< %{_datadir}/metainfo/*.metainfo.xml
< 
< # Icons
< %{_datadir}/%{_product}/icons/*.svg
< %{_datadir}/icons/*.svg
< %{_datadir}/icons/hicolor/scalable/apps/*.svg
< %{_datadir}/icons/hicolor/symbolic/apps/*.svg
< 
195a187,193
> %{_datadir}/%{_product}/icons/gtk-*.svg
> %{_datadir}/%{_product}/icons/connect-*.svg
> %{_datadir}/%{_product}/icons/disconnect-*.svg
> 
> %{_datadir}/applications/*.desktop
> %{_datadir}/appdata/%{_product}.appdata.xml
> 
197d194
< %exclude %{_datadir}/glib-2.0/schemas/*.compiled
201c198,199
< %{_datadir}/%{_product}/*.ui.xml
---
> 
> %{_datadir}/%{_product}/ui/*
202a201,204
> %{_datadir}/%{_product}/icons/%{_product}.svg
> 
> %files keypads
> %{_datadir}/%{_product}/keypad/*
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/rpm/_service lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/rpm/_service
16c16,17
< 	<!-- service name="extract_file">
---
> 	<!--
> 	<service name="extract_file">
19c20
< 	</service -->
---
> 	</service>
50c51
< 	<!-- service name="extract_file">
---
> 	<service name="extract_file">
54c55
< 	</service -->
---
> 	</service>
56c57
<   	<!-- service name="extract_file">
---
>   	<service name="extract_file">
60c61,62
< 	</service -->
---
> 	</service>
> 	-->
69c71
< </services>
---
> </services>
\ No newline at end of file
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/schemas/linux/application.gschema.xml.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/schemas/linux/application.gschema.xml.in
33c33
<   <schema path="/br/app/@PRODUCT_NAME@/" id="br.app.@PRODUCT_NAME@">
---
>   <schema id="br.com.bb.@PACKAGE_NAME@">
41,83d40
< 
<     <key name="allow-host-settings" type="b">
<       <default>true</default>
<       <summary>Allow host settings</summary>
<       <description>Allow changing of host session properties</description>
<     </key>
< 
<     <key name="allow-open-session-actions" type="b">
<       <default>true</default>
<       <summary>Enable open session actions actions</summary>
<       <description>Enable open session actions</description>
<     </key>
< 
<     <key name="allow-new-tab-actions" type="b">
<       <default>true</default>
<       <summary>Enable new tab actions</summary>
<       <description>Enable new tab actions</description>
<     </key>
< 
<     <key name="allow-new-window-actions" type="b">
<       <default>true</default>
<       <summary>Enable new window actions</summary>
<       <description>Enable new window actions</description>
<     </key>
< 
<     <key name="default-session-file" type="s">
<       <default>'~/.config/default.3270'</default>
<       <summary>Path of the default session file</summary>
<       <description></description>
<     </key>
< 
<     <key name="update-default-session-file" type="b">
<       <default>false</default>
<       <summary>Update default session time from command line</summary>
<       <description></description>
<     </key>
< 
<     <key name="add-session-to-recent-manager" type="b">
<       <default>true</default>
<       <summary>Add session file to recent file list</summary>
<       <description></description>
<     </key>
< 
87d43
< 
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/schemas/linux/window.gschema.xml.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/schemas/linux/window.gschema.xml.in
33c33
<   <schema path="/br/app/@PRODUCT_NAME@/window/" id="br.app.@PRODUCT_NAME@.window">
---
>   <schema id="br.com.bb.@PACKAGE_NAME@.window">
114c114
<       <default>'app.tab.new:menu.open-menu,win.disconnect,win.reconnect'</default>
---
>       <default>'app.new.tab:menu.open-menu,win.disconnect,win.reconnect'</default>
116,121d115
<       <description></description>
<     </key>
< 
<     <key name="default-session-file" type="s">
<       <default>''</default>
<       <summary>Path of the default session file</summary>
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/schemas: macos
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/schemas/Makefile.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/schemas/Makefile.in
1d0
< # SPDX-License-Identifier: LGPL-3.0-or-later
3c2,4
< # Copyright (C) 2008 Banco do Brasil S.A.
---
> # Software pw3270, desenvolvido com base nos códigos fontes do WC3270  e X3270
> # (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
> # aplicativos mainframe. Registro no INPI sob o nome G3270.
5,13c6
< # This program is free software: you can redistribute it and/or modify
< # it under the terms of the GNU Lesser General Public License as published
< # by the Free Software Foundation, either version 3 of the License, or
< # (at your option) any later version.
< #
< # This program is distributed in the hope that it will be useful,
< # but WITHOUT ANY WARRANTY; without even the implied warranty of
< # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
< # GNU General Public License for more details.
---
> # Copyright (C) <2008> <Banco do Brasil S.A.>
15,16c8,24
< # You should have received a copy of the GNU Lesser General Public License
< # along with this program.  If not, see <https://www.gnu.org/licenses/>.
---
> # Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
> # os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
> # Free Software Foundation.
> #
> # Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
> # GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
> # A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
> # obter mais detalhes.
> #
> # Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
> # programa; se não, escreva para a Free Software Foundation, Inc., 51 Franklin
> # St, Fifth Floor, Boston, MA  02110-1301  USA
> #
> # Contatos:
> #
> # perry.werneck@gmail.com       (Alexandre Perry de Souza Werneck)
> # erico.mendonca@gmail.com      (Erico Mascarenhas de Mendonça)
26d33
< srcdir=@srcdir@
36,37c43
< BUILDDIR=@BUILDDIR@
< BINDIR=$(BUILDDIR)/.bin
---
> BASEDIR=@BASEDIR@
44d49
< GLIB_SCHEMA_COMPILER=@GLIB_SCHEMA_COMPILER@
48,56c53
< all:
< 	# Compile schemas to check if they're valid
< 	@$(MKDIR) $(BINDIR)
< 	@$(GLIB_SCHEMA_COMPILER) \
< 		--targetdir=$(BINDIR) \
< 		./@OSNAME@
< 	
< install: \
< 	all
---
> install: 
60c57
< 		@OSNAME@/application.gschema.xml \
---
> 		$(BASEDIR)/schemas/@OSNAME@/application.gschema.xml \
62c59
< 		
---
> 
64c61
< 		@OSNAME@/window.gschema.xml \
---
> 		$(BASEDIR)/schemas/@OSNAME@/window.gschema.xml \
67,68d63
< 	@$(GLIB_SCHEMA_COMPILER) \
< 		$(DESTDIR)/$(schemadir)
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/schemas/windows/application.gschema.xml.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/schemas/windows/application.gschema.xml.in
33c33
<   <schema path="/br/app/@PRODUCT_NAME@/" id="br.app.@PRODUCT_NAME@">
---
>   <schema id="br.com.bb.@PACKAGE_NAME@">
41,86c41,44
< 	<key name="gtk-csd" type="i">
< 		<default>0</default>
< 		<summary>GTK CSD</summary>
< 		<description>Gtk Client side decorations</description>
< 	</key>
< 
<     <key name="allow-host-settings" type="b">
<       <default>true</default>
<       <summary>Allow host settings</summary>
<       <description>Allow changing of host session properties</description>
<     </key>
< 
<     <key name="allow-open-session-actions" type="b">
<       <default>true</default>
<       <summary>Enable open session actions actions</summary>
<       <description>Enable open session actions</description>
<     </key>
< 
<     <key name="allow-new-tab-actions" type="b">
<       <default>true</default>
<       <summary>Enable new tab actions</summary>
<       <description>Enable new tab actions</description>
<     </key>
< 
<     <key name="allow-new-window-actions" type="b">
<       <default>true</default>
<       <summary>Enable new window actions</summary>
<       <description>Enable new window actions</description>
<     </key>
< 
<     <key name="default-session-file" type="s">
<       <default>'~/.config/default.3270'</default>
<       <summary>Path of the default session file</summary>
<       <description></description>
<     </key>
< 
<     <key name="update-default-session-file" type="b">
<       <default>false</default>
<       <summary>Update default session time from command line</summary>
<       <description></description>
<     </key>
< 
<     <key name="add-session-to-recent-manager" type="b">
<       <default>true</default>
<       <summary>Add session file to recent file list</summary>
<       <description></description>
---
>     <key name="gtk-csd" type="i">
>       <default>0</default>
>       <summary>GTK CSD</summary>
>       <description>Gtk Client side decorations</description>
92d49
< 
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/schemas/windows/window.gschema.xml.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/schemas/windows/window.gschema.xml.in
33c33
<   <schema path="/br/app/@PRODUCT_NAME@/window/" id="br.app.@PRODUCT_NAME@.window">
---
>   <schema id="br.com.bb.@PACKAGE_NAME@.window">
108c108
<       <default>'win.copy,win.paste,win.select-all,separator,win.clear,win.erase-input,separator,win.print,separator,win.zoom-out,win.zoom-fit-best,win.zoom-in'</default>
---
>       <default>'win.copy,win.paste,win.select-all,separator,win.connect,win.disconnect,separator,win.print,win.close'</default>
114,121c114,115
<       <default>'app.new.tab:menu.open-menu,win.disconnect,win.reconnect'</default>
<       <summary>The title bar action list</summary>
<       <description></description>
<     </key>
< 
<     <key name="default-session-file" type="s">
<       <default>''</default>
<       <summary>Path of the default session file</summary>
---
>       <default>'win.disconnect,win.reconnect,win.file.transfer,win.print:menu.open-menu'</default>
>       <summary>The actions in the header bar</summary>
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/config.h.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/config.h.in
38,42d37
< 	#undef APPLICATION_ID
< 	#undef ENABLE_UNSTABLE_FEATURES
< 	#undef HAVE_MALLOC_H
< 	#undef HAVE_STRTOK_R
< 	#undef HAVE_LOCALTIME_R
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/actions.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/actions.h
37c37
< #define PW3270_ACTIONS_H_INCLUDED
---
> 	#define PW3270_ACTIONS_H_INCLUDED
39,43c39,43
< #include <gio/gio.h>
< #include <gtk/gtk.h>
< #include <lib3270.h>
< #include <lib3270/actions.h>
< #include <v3270/actions.h>
---
> 	#include <gio/gio.h>
> 	#include <gtk/gtk.h>
> 	#include <lib3270.h>
> 	#include <lib3270/actions.h>
> 	#include <v3270/actions.h>
45c45
< G_BEGIN_DECLS
---
> 	G_BEGIN_DECLS
47,55c47,55
< //
< // Abstract action
< //
< #define PW3270_TYPE_ACTION				(PW3270Action_get_type())
< #define PW3270_ACTION(inst)				(G_TYPE_CHECK_INSTANCE_CAST ((inst), PW3270_TYPE_ACTION, PW3270Action))
< #define PW3270_ACTION_CLASS(klass)		(G_TYPE_CHECK_CLASS_CAST ((klass), PW3270_TYPE_ACTION, PW3270ActionClass))
< #define PW3270_IS_ACTION(inst)			(G_TYPE_CHECK_INSTANCE_TYPE ((inst), PW3270_TYPE_ACTION))
< #define PW3270_IS_ACTION_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), PW3270_TYPE_ACTION))
< #define PW3270_ACTION_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), PW3270_TYPE_ACTION, PW3270ActionClass))
---
> 	//
> 	// Abstract action
> 	//
> 	#define PW3270_TYPE_ACTION				(PW3270Action_get_type())
> 	#define PW3270_ACTION(inst)				(G_TYPE_CHECK_INSTANCE_CAST ((inst), PW3270_TYPE_ACTION, PW3270Action))
> 	#define PW3270_ACTION_CLASS(klass)		(G_TYPE_CHECK_CLASS_CAST ((klass), PW3270_TYPE_ACTION, PW3270ActionClass))
> 	#define PW3270_IS_ACTION(inst)			(G_TYPE_CHECK_INSTANCE_TYPE ((inst), PW3270_TYPE_ACTION))
> 	#define PW3270_IS_ACTION_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), PW3270_TYPE_ACTION))
> 	#define PW3270_ACTION_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), PW3270_TYPE_ACTION, PW3270ActionClass))
57c57
< typedef struct _PW3270Action {
---
> 	typedef struct _PW3270Action {
59c59
< 	GObject parent;
---
> 		GObject parent;
61,64c61,64
< 	const gchar * name;
< 	const gchar * icon_name;
< 	const gchar	* label;
< 	const gchar	* tooltip;
---
> 		const gchar * name;
> 		const gchar * icon_name;
> 		const gchar	* label;
> 		const gchar	* tooltip;
66,67c66,67
< 	/// @brief Activation method.
< 	void (*activate)(GAction *action, GVariant *parameter, GtkApplication *application);
---
> 		/// @brief Activation method.
> 		void (*activate)(GAction *action, GVariant *parameter, GtkApplication *application);
69c69
< } PW3270Action;
---
> 	} PW3270Action;
71c71
< typedef struct _PW3270ActionClass {
---
> 	typedef struct _PW3270ActionClass {
73c73
< 	GObjectClass parent_class;
---
> 		GObjectClass parent_class;
75c75
< 	gboolean (*get_enabled)(GAction *action);
---
> 		gboolean (*get_enabled)(GAction *action);
77,80c77,80
< 	struct {
< 		GParamSpec * state;
< 		GParamSpec * enabled;
< 	} properties;
---
> 		struct {
> 			GParamSpec * state;
> 			GParamSpec * enabled;
> 		} properties;
82c82
< } PW3270ActionClass;
---
> 	} PW3270ActionClass;
84,86c84,86
< GType			  PW3270Action_get_type(void) G_GNUC_CONST;
< PW3270Action	* pw3270_action_new();
< PW3270Action	* pw3270_dialog_action_new(GtkWidget * (*factory)(PW3270Action *action, GtkApplication *application));
---
> 	GType			  PW3270Action_get_type(void) G_GNUC_CONST;
> 	PW3270Action	* pw3270_action_new();
> 	PW3270Action	* pw3270_dialog_action_new(GtkWidget * (*factory)(PW3270Action *action, GtkApplication *application));
88,91c88,91
< //
< // Action view
< //
< typedef GSList Pw3270ActionList;
---
> 	//
> 	// Action view
> 	//
> 	typedef GSList Pw3270ActionList;
93,98c93,98
< typedef enum _pw3270ActionViewFlag {
< 	PW3270_ACTION_VIEW_FLAG_FIXED 		= 0,	///< @brief Don't move to other views.
< 	PW3270_ACTION_VIEW_FLAG_ALLOW_ADD	= 1,	///< @brief Allow add to target view.
< 	PW3270_ACTION_VIEW_ALLOW_REMOVE		= 2,	///< @brief Allow remove from source view.
< 	PW3270_ACTION_VIEW_ALLOW_MOVE		= 3		///< @brief Allow move from one view to another.
< } PW3270ActionViewFlag;
---
> 	typedef enum _pw3270ActionViewFlag {
> 		PW3270_ACTION_VIEW_FLAG_FIXED 		= 0,	///< @brief Don't move to other views.
> 		PW3270_ACTION_VIEW_FLAG_ALLOW_ADD	= 1,	///< @brief Allow add to target view.
> 		PW3270_ACTION_VIEW_ALLOW_REMOVE		= 2,	///< @brief Allow remove from source view.
> 		PW3270_ACTION_VIEW_ALLOW_MOVE		= 3		///< @brief Allow move from one view to another.
> 	} PW3270ActionViewFlag;
101,107c101,107
< GtkWidget 			* pw3270_action_view_new();
< void				  pw3270_action_view_set_actions(GtkWidget *view, Pw3270ActionList *list);
< void				  pw3270_action_view_order_by_label(GtkWidget *view);
< void				  pw3270_action_view_move_selected(GtkWidget *from, GtkWidget *to);
< void				  pw3270_action_view_append(GtkWidget *widget, const gchar *label, GdkPixbuf *pixbuf, const gchar *action_name, const PW3270ActionViewFlag flags);
< gchar				* pw3270_action_view_get_action_names(GtkWidget *widget);
< GtkWidget			* pw3270_action_view_move_button_new(GtkWidget *from, GtkWidget *to, const gchar *icon_name);
---
> 	GtkWidget 			* pw3270_action_view_new();
> 	void				  pw3270_action_view_set_actions(GtkWidget *view, Pw3270ActionList *list);
> 	void				  pw3270_action_view_order_by_label(GtkWidget *view);
> 	void				  pw3270_action_view_move_selected(GtkWidget *from, GtkWidget *to);
> 	void				  pw3270_action_view_append(GtkWidget *widget, const gchar *label, GdkPixbuf *pixbuf, const gchar *action_name, const PW3270ActionViewFlag flags);
> 	gchar				* pw3270_action_view_get_action_names(GtkWidget *widget);
> 	GtkWidget			* pw3270_action_view_move_button_new(GtkWidget *from, GtkWidget *to, const gchar *icon_name);
109,112c109,112
< Pw3270ActionList	* pw3270_action_list_new(GtkApplication *application);
< Pw3270ActionList	* pw3270_action_list_append(Pw3270ActionList *action_list, const gchar *label, GdkPixbuf *pixbuf, const gchar *action_name, const PW3270ActionViewFlag flags);
< Pw3270ActionList	* pw3270_action_list_move_action(Pw3270ActionList *action_list, const gchar *action_name, GtkWidget *view);
< void				  pw3270_action_list_free(Pw3270ActionList *action_list);
---
> 	Pw3270ActionList	* pw3270_action_list_new(GtkApplication *application);
> 	Pw3270ActionList	* pw3270_action_list_append(Pw3270ActionList *action_list, const gchar *label, GdkPixbuf *pixbuf, const gchar *action_name, const PW3270ActionViewFlag flags);
> 	Pw3270ActionList	* pw3270_action_list_move_action(Pw3270ActionList *action_list, const gchar *action_name, GtkWidget *view);
> 	void				  pw3270_action_list_free(Pw3270ActionList *action_list);
114,119c114,119
< //
< // Tools
< //
< gchar				* g_action_get_icon_name(GAction *action);
< gchar 				* g_action_get_tooltip(GAction *action);
< gchar				* g_action_get_label(GAction *action);
---
> 	//
> 	// Tools
> 	//
> 	gchar				* g_action_get_icon_name(GAction *action);
> 	gchar 				* g_action_get_tooltip(GAction *action);
> 	gchar				* g_action_get_label(GAction *action);
121c121
< GdkPixbuf			* g_action_get_pixbuf(GAction *action, GtkIconSize icon_size, GtkIconLookupFlags flags);
---
> 	GdkPixbuf			* g_action_get_pixbuf(GAction *action, GtkIconSize icon_size, GtkIconLookupFlags flags);
123,124c123,124
< GtkWidget 			* gtk_button_new_from_action(GAction *action, GtkIconSize icon_size, gboolean symbolic);
< GtkToolItem			* gtk_tool_button_new_from_action(GAction *action, GtkIconSize icon_size, gboolean symbolic);
---
> 	GtkWidget 			* gtk_button_new_from_action(GAction *action, GtkIconSize icon_size, gboolean symbolic);
> 	GtkToolItem			* gtk_tool_button_new_from_action(GAction *action, GtkIconSize icon_size, gboolean symbolic);
126c126
< G_END_DECLS
---
> 	G_END_DECLS
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/application.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/application.h
37c37
< #define PW3270_APPLICATION_H_INCLUDED
---
> 	#define PW3270_APPLICATION_H_INCLUDED
39,40c39
< #include <gtk/gtk.h>
< #include <lib3270.h>
---
> 	#include <gtk/gtk.h>
42c41
< G_BEGIN_DECLS
---
> 	G_BEGIN_DECLS
44,45c43,44
< #define PW3270_TYPE_APPLICATION				(pw3270Application_get_type ())
< #define PW3270_APPLICATION(inst)			(G_TYPE_CHECK_INSTANCE_CAST ((inst), \
---
> 	#define PW3270_TYPE_APPLICATION				(pw3270Application_get_type ())
> 	#define PW3270_APPLICATION(inst)			(G_TYPE_CHECK_INSTANCE_CAST ((inst), \
47c46
< #define PW3270_APPLICATION_CLASS(class)		(G_TYPE_CHECK_CLASS_CAST ((class),   \
---
> 	#define PW3270_APPLICATION_CLASS(class)		(G_TYPE_CHECK_CLASS_CAST ((class),   \
49c48
< #define PW3270_IS_APPLICATION(inst)			(G_TYPE_CHECK_INSTANCE_TYPE ((inst), \
---
> 	#define PW3270_IS_APPLICATION(inst)			(G_TYPE_CHECK_INSTANCE_TYPE ((inst), \
51c50
< #define PW3270_IS_APPLICATION_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class),   \
---
> 	#define PW3270_IS_APPLICATION_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class),   \
53c52
< #define PW3270_APPLICATION_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst),  \
---
> 	#define PW3270_APPLICATION_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst),  \
56,60c55,59
< typedef enum _pw3270_ui_style {
< 	PW3270_UI_STYLE_CLASSICAL,		///< @brief Interface "classica", com menu e toolbar.
< 	PW3270_UI_STYLE_GNOME,			///< @brief Interface padrão gnome.
< 	PW3270_UI_STYLE_AUTOMATIC,		///< @brief Auto defined UI-Style
< } PW3270_UI_STYLE;
---
> 	typedef enum _pw3270_ui_style {
> 		PW3270_UI_STYLE_CLASSICAL,		///< @brief Interface "classica", com menu e toolbar.
> 		PW3270_UI_STYLE_GNOME,			///< @brief Interface padrão gnome.
> 		PW3270_UI_STYLE_AUTOMATIC,		///< @brief Auto defined UI-Style
> 	} PW3270_UI_STYLE;
63,64c62,63
< typedef struct _pw3270ApplicationClass   pw3270ApplicationClass;
< typedef struct _pw3270Application        pw3270Application;
---
> 	typedef struct _pw3270ApplicationClass   pw3270ApplicationClass;
> 	typedef struct _pw3270Application        pw3270Application;
66,68c65,66
< GType			  pw3270Application_get_type();
< GtkApplication	* pw3270_application_new(const gchar *application_id, GApplicationFlags flags);
< void			  pw3270_application_open_file(GtkApplication *application, GtkWindow **window, GFile *file);
---
> 	GType			  pw3270Application_get_type();
> 	GtkApplication	* pw3270_application_new(const gchar *application_id, GApplicationFlags flags);
70,74c68,69
< /// @brief Get application settings.
< /// @param app	The pw3270 application object.
< /// @return The internal settings object (Do not unref it).
< GSettings		* pw3270_application_settings_new();
< GSettings		* pw3270_application_get_settings(GApplication *app);
---
> 	GSettings		* pw3270_application_get_settings(GApplication *app);
> 	GList			* pw3270_application_get_keypad_models(GApplication *app);
76,77c71,72
< /// @brief Get boolean from gsettings.
< gboolean		  pw3270_application_get_boolean(GApplication *app, const gchar *option_name, gboolean def);
---
> 	void			  pw3270_application_set_ui_style(GApplication *app, PW3270_UI_STYLE type);
> 	PW3270_UI_STYLE	  pw3270_application_get_ui_style(GApplication *app);
79c74,75
< GList			* pw3270_application_get_keypad_models(GApplication *app);
---
> 	// Plugins
> 	void			  pw3270_application_plugin_foreach(GApplication *app, GFunc func, gpointer user_data);
81,82c77,78
< void			  pw3270_application_set_ui_style(GApplication *app, PW3270_UI_STYLE type);
< PW3270_UI_STYLE	  pw3270_application_get_ui_style(GApplication *app);
---
> 	/// @brief Call plugin method.
> 	void			  pw3270_application_plugin_call(GApplication *app, const gchar *method, gpointer user_data);
84,85c80
< void			  pw3270_application_set_log_filename(GApplication *app, const gchar *filename);
< const gchar		* pw3270_application_get_log_filename(GApplication *app);
---
> 	GSList			* pw3270_application_get_plugins(GApplication *app);
86a82,83
> 	// Tools
> 	GtkBuilder		* pw3270_application_get_builder(const gchar *name);
88,89c85
< // Plugins
< void			  pw3270_application_plugin_foreach(GApplication *app, GFunc func, gpointer user_data);
---
> 	void			  gtk_container_remove_all(GtkContainer *container);
91,92c87,89
< /// @brief Call plugin method.
< void			  pw3270_application_plugin_call(GApplication *app, const gchar *method, gpointer user_data);
---
> 	// Actions
> 	void pw3270_application_print_copy_activated(GAction *action, GVariant *parameter, GtkWidget *terminal);
> 	void pw3270_application_save_copy_activated(GAction *action, GVariant *parameter, GtkWidget *terminal);
94c91,92
< GSList			* pw3270_application_get_plugins(GApplication *app);
---
> 	// Settings
> 	GtkWidget * pw3270_header_settings_new();
96,97d93
< // Tools
< GtkBuilder		* pw3270_application_builder_new(GApplication *application);
99,112c95
< void			  gtk_container_remove_all(GtkContainer *container);
< 
< // Actions
< void pw3270_application_print_copy_activated(GAction *action, GVariant *parameter, GtkWidget *terminal);
< void pw3270_application_save_copy_activated(GAction *action, GVariant *parameter, GtkWidget *terminal);
< 
< // Settings
< GtkWidget * pw3270_header_settings_new();
< 
< // Tools
< H3270			* pw3270_get_active_session();
< GtkWidget		* pw3270_get_active_terminal();
< 
< G_END_DECLS
---
> 	G_END_DECLS
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/keypad.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/keypad.h
37c37
< #define PW3270_KEYPAD_H_INCLUDED
---
> 	#define PW3270_KEYPAD_H_INCLUDED
39c39
< #include <gtk/gtk.h>
---
> 	#include <gtk/gtk.h>
41c41
< G_BEGIN_DECLS
---
> 	G_BEGIN_DECLS
43,48c43,48
< #define PW_TYPE_KEYPAD_MODEL			(KeypadModel_get_type())
< #define PW_KEYPAD_MODEL(obj)			(G_TYPE_CHECK_INSTANCE_CAST ((obj), PW_TYPE_KEYPAD_MODEL, KeypadModel))
< #define PW_KEYPAD_MODEL_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), PW_TYPE_KEYPAD_MODEL, KeypadModelClass))
< #define PW_IS_KEYPAD_MODEL(obj)			(G_TYPE_CHECK_INSTANCE_TYPE ((obj), PW_TYPE_KEYPAD_MODEL))
< #define PW_IS_KEYPAD_MODEL_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), PW_TYPE_KEYPAD_MODEL))
< #define PW_KEYPAD_MODEL_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), PW_TYPE_KEYPAD_MODEL, KeypadModelClass))
---
> 	#define PW_TYPE_KEYPAD_MODEL			(KeypadModel_get_type())
> 	#define PW_KEYPAD_MODEL(obj)			(G_TYPE_CHECK_INSTANCE_CAST ((obj), PW_TYPE_KEYPAD_MODEL, KeypadModel))
> 	#define PW_KEYPAD_MODEL_CLASS(klass)	(G_TYPE_CHECK_CLASS_CAST ((klass), PW_TYPE_KEYPAD_MODEL, KeypadModelClass))
> 	#define PW_IS_KEYPAD_MODEL(obj)			(G_TYPE_CHECK_INSTANCE_TYPE ((obj), PW_TYPE_KEYPAD_MODEL))
> 	#define PW_IS_KEYPAD_MODEL_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), PW_TYPE_KEYPAD_MODEL))
> 	#define PW_KEYPAD_MODEL_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), PW_TYPE_KEYPAD_MODEL, KeypadModelClass))
50,51c50,51
< typedef struct _KeypadModel			KeypadModel;
< typedef struct _KeypadModelClass	KeypadModelClass;
---
> 	typedef struct _KeypadModel			KeypadModel;
> 	typedef struct _KeypadModelClass	KeypadModelClass;
53c53
< GType KeypadModel_get_type(void) G_GNUC_CONST;
---
> 	GType KeypadModel_get_type(void) G_GNUC_CONST;
55,58c55,58
< GList		* pw3270_keypad_model_new_from_xml(GList *keypads, const gchar *filename);
< GtkWidget	* pw3270_keypad_get_from_model(GObject *model);
< const gchar	* pw3270_keypad_model_get_name(GObject *model);
< const gchar * pw3270_keypad_model_get_label(GObject *model);
---
> 	GList		* pw3270_keypad_model_new_from_xml(GList *keypads, const gchar *filename);
> 	GtkWidget	* pw3270_keypad_get_from_model(GObject *model);
> 	const gchar	* pw3270_keypad_model_get_name(GObject *model);
> 	const gchar * pw3270_keypad_model_get_label(GObject *model);
60,65c60,65
< typedef enum _keypad_position {
< 	KEYPAD_POSITION_TOP,
< 	KEYPAD_POSITION_LEFT,
< 	KEYPAD_POSITION_BOTTOM,
< 	KEYPAD_POSITION_RIGHT
< } 	KEYPAD_POSITION;
---
> 	typedef enum _keypad_position {
>         KEYPAD_POSITION_TOP,
>         KEYPAD_POSITION_LEFT,
>         KEYPAD_POSITION_BOTTOM,
>         KEYPAD_POSITION_RIGHT
> 	} 	KEYPAD_POSITION;
67c67
< KEYPAD_POSITION pw3270_keypad_get_position(GObject *model);
---
> 	KEYPAD_POSITION pw3270_keypad_get_position(GObject *model);
69c69
< G_END_DECLS
---
> 	G_END_DECLS
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/settings.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/settings.h
32c32
< #define PW3270SETTINGS_H_INCLUDED 1
---
>  #define PW3270SETTINGS_H_INCLUDED 1
35c35
< #include <windows.h>
---
> 	#include <windows.h>
38,39c38,39
< #include <gtk/gtk.h>
< #include <pw3270/actions.h>
---
>  #include <gtk/gtk.h>
>  #include <pw3270/actions.h>
41c41
< G_BEGIN_DECLS
---
>  G_BEGIN_DECLS
45,50c45,50
< #define GTK_TYPE_PW3270_SETTINGS					(PW3270Settings_get_type())
< #define GTK_PW3270_SETTINGS(obj)					(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PW3270_SETTINGS, PW3270Settings))
< #define GTK_PW3270_SETTINGS_CLASS(klass)			(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_PW3270_SETTINGS, PW3270SettingsClass))
< #define GTK_IS_PW3270_SETTINGS(obj)				(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PW3270_SETTINGS))
< #define GTK_IS_PW3270_SETTINGS_CLASS(klass)		(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_PW3270_SETTINGS))
< #define GTK_PW3270_SETTINGS_GET_CLASS(obj)			(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_PW3270_SETTINGS, PW3270SettingsClass))
---
>  #define GTK_TYPE_PW3270_SETTINGS					(PW3270Settings_get_type())
>  #define GTK_PW3270_SETTINGS(obj)					(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PW3270_SETTINGS, PW3270Settings))
>  #define GTK_PW3270_SETTINGS_CLASS(klass)			(G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_PW3270_SETTINGS, PW3270SettingsClass))
>  #define GTK_IS_PW3270_SETTINGS(obj)				(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PW3270_SETTINGS))
>  #define GTK_IS_PW3270_SETTINGS_CLASS(klass)		(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_PW3270_SETTINGS))
>  #define GTK_PW3270_SETTINGS_GET_CLASS(obj)			(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_PW3270_SETTINGS, PW3270SettingsClass))
52c52
< GType PW3270Settings_get_type(void);
---
>  GType PW3270Settings_get_type(void);
54c54
< typedef struct _PW3270SettingsPage PW3270SettingsPage;
---
>  typedef struct _PW3270SettingsPrivate PW3270SettingsPrivate;
56c56
< typedef struct _PW3270Settings {
---
>  typedef struct _PW3270Settings {
60,62c60,62
< 	PW3270SettingsPage	* settings;										///< @brief Page Data.
< 	const gchar			* label;										///< @brief Page lagel.
< 	const gchar			* title;										///< @brief Page title.
---
> 	PW3270SettingsPrivate	* settings;											///< @brief Private Data.
> 	const gchar				* label;											///< @brief Page lagel.
> 	const gchar				* title;											///< @brief Page title.
64,66c64,66
< 	void (*load)(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page);			///< @brief Method to load the properties from terminal widget
< 	void (*apply)(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page);		///< @brief Method for GTK_RESPONSE_APPLY
< 	void (*revert)(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page);		///< @brief Method for GTK_RESPONSE_CANCEL
---
>  	void (*load)(GtkWidget *widget, PW3270SettingsPrivate *settings);			///< @brief Method to load the properties from terminal widget
>  	void (*apply)(GtkWidget *widget, PW3270SettingsPrivate *settings);			///< @brief Method for GTK_RESPONSE_APPLY
>  	void (*revert)(GtkWidget *widget, PW3270SettingsPrivate *settings);			///< @brief Method for GTK_RESPONSE_CANCEL
68c68
< } PW3270Settings;
---
>  } PW3270Settings;
70c70
< typedef struct _PW3270SettingsClass	{
---
>  typedef struct _PW3270SettingsClass	{
72c72
< 	GtkGridClass parent_class;
---
>  	GtkGridClass parent_class;
74,77c74
< } PW3270SettingsClass;
< 
< /// @brief Create a new pw3270 settings.
< PW3270Settings * pw3270_settings_new();
---
>  } PW3270SettingsClass;
78a76
>  PW3270Settings * pw3270_settings_new();
82,87c80,85
< #define GTK_TYPE_PW3270_SETTINGS_DIALOG				(PW3270SettingsDialog_get_type())
< #define GTK_PW3270_SETTINGS_DIALOG(obj)	   			(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PW3270_SETTINGS_DIALOG, PW3270SettingsDialog))
< #define GTK_PW3270_SETTINGS_DIALOG_CLASS(klass)	    (G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_PW3270_SETTINGS_DIALOG, PW3270SettingsDialogClass))
< #define GTK_IS_PW3270_SETTINGS_DIALOG(obj)				(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PW3270_SETTINGS_DIALOG))
< #define GTK_IS_PW3270_SETTINGS_DIALOG_CLASS(klass)		(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_PW3270_SETTINGS_DIALOG))
< #define GTK_PW3270_SETTINGS_DIALOG_GET_CLASS(obj)		(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_PW3270_SETTINGS_DIALOG, PW3270SettingsDialogClass))
---
>  #define GTK_TYPE_PW3270_SETTINGS_DIALOG				(PW3270SettingsDialog_get_type())
>  #define GTK_PW3270_SETTINGS_DIALOG(obj)	   			(G_TYPE_CHECK_INSTANCE_CAST ((obj), GTK_TYPE_PW3270_SETTINGS_DIALOG, PW3270SettingsDialog))
>  #define GTK_PW3270_SETTINGS_DIALOG_CLASS(klass)	    (G_TYPE_CHECK_CLASS_CAST ((klass), GTK_TYPE_PW3270_SETTINGS_DIALOG, PW3270SettingsDialogClass))
>  #define GTK_IS_PW3270_SETTINGS_DIALOG(obj)				(G_TYPE_CHECK_INSTANCE_TYPE ((obj), GTK_TYPE_PW3270_SETTINGS_DIALOG))
>  #define GTK_IS_PW3270_SETTINGS_DIALOG_CLASS(klass)		(G_TYPE_CHECK_CLASS_TYPE ((klass), GTK_TYPE_PW3270_SETTINGS_DIALOG))
>  #define GTK_PW3270_SETTINGS_DIALOG_GET_CLASS(obj)		(G_TYPE_INSTANCE_GET_CLASS ((obj), GTK_TYPE_PW3270_SETTINGS_DIALOG, PW3270SettingsDialogClass))
89,90c87,88
< typedef struct _PW3270SettingsDialog		PW3270SettingsDialog;
< typedef struct _PW3270SettingsDialogClass	PW3270SettingsDialogClass;
---
>  typedef struct _PW3270SettingsDialog		PW3270SettingsDialog;
>  typedef struct _PW3270SettingsDialogClass	PW3270SettingsDialogClass;
92,93c90,91
< GType		  PW3270SettingsDialog_get_type(void);
< GtkWidget	* pw3270_settings_dialog_new(GAction *action, gboolean has_subtitle);
---
>  GType		  PW3270SettingsDialog_get_type(void);
>  GtkWidget	* pw3270_settings_dialog_new(GAction *action, gboolean has_subtitle);
95c93
< G_END_DECLS
---
>  G_END_DECLS
99c97
< #define GTK_TYPE_PW3270_SETTINGS_ACTIONS				(PW3270SettingsActions_get_type())
---
>  #define GTK_TYPE_PW3270_SETTINGS_ACTIONS				(PW3270SettingsActions_get_type())
101,102c99,100
< typedef struct _PW3270SettingsActions			PW3270SettingsActions;
< typedef struct _PW3270SettingsActionsClass		PW3270SettingsActionsClass;
---
>  typedef struct _PW3270SettingsActions			PW3270SettingsActions;
>  typedef struct _PW3270SettingsActionsClass		PW3270SettingsActionsClass;
104,107c102,105
< GType				  PW3270SettingsActions_get_type(void);
< GtkWidget			* pw3270_settings_actions_new();
< Pw3270ActionList	* pw3270_settings_action_set(GtkWidget *widget, Pw3270ActionList *available, const gchar *value);
< gchar 				* pw3270_settings_action_get(GtkWidget *widget);
---
>  GType				  PW3270SettingsActions_get_type(void);
>  GtkWidget			* pw3270_settings_actions_new();
>  Pw3270ActionList	* pw3270_settings_action_set(GtkWidget *widget, Pw3270ActionList *available, const gchar *value);
>  gchar 				* pw3270_settings_action_get(GtkWidget *widget);
109c107
< G_END_DECLS
---
>  G_END_DECLS
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/toolbar.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/toolbar.h
37c37
< #define PW3270_TOOLBAR_H_INCLUDED
---
> 	#define PW3270_TOOLBAR_H_INCLUDED
39,41c39,41
< #include <gtk/gtk.h>
< #include <lib3270.h>
< #include <lib3270/actions.h>
---
> 	#include <gtk/gtk.h>
> 	#include <lib3270.h>
> 	#include <lib3270/actions.h>
43c43
< G_BEGIN_DECLS
---
> 	G_BEGIN_DECLS
45,50c45,50
< #define PW3270_TYPE_TOOLBAR				(pw3270ToolBar_get_type())
< #define PW3270_TOOLBAR(obj)				(G_TYPE_CHECK_INSTANCE_CAST ((obj), PW3270_TYPE_TOOLBAR, pw3270ToolBar))
< #define PW3270_TOOLBAR_CLASS(klass)		(G_TYPE_CHECK_CLASS_CAST ((klass), PW3270_TYPE_TOOLBAR, pw3270ToolBarClass))
< #define PW3270_IS_TOOLBAR(obj)			(G_TYPE_CHECK_INSTANCE_TYPE ((obj), PW3270_TYPE_TOOLBAR))
< #define PW3270_IS_TOOLBAR_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), PW3270_TYPE_TOOLBAR))
< #define PW3270_TOOLBAR_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), PW3270_TYPE_TOOLBAR, pw3270ToolBarClass))
---
> 	#define PW3270_TYPE_TOOLBAR				(pw3270ToolBar_get_type())
> 	#define PW3270_TOOLBAR(obj)				(G_TYPE_CHECK_INSTANCE_CAST ((obj), PW3270_TYPE_TOOLBAR, pw3270ToolBar))
> 	#define PW3270_TOOLBAR_CLASS(klass)		(G_TYPE_CHECK_CLASS_CAST ((klass), PW3270_TYPE_TOOLBAR, pw3270ToolBarClass))
> 	#define PW3270_IS_TOOLBAR(obj)			(G_TYPE_CHECK_INSTANCE_TYPE ((obj), PW3270_TYPE_TOOLBAR))
> 	#define PW3270_IS_TOOLBAR_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), PW3270_TYPE_TOOLBAR))
> 	#define PW3270_TOOLBAR_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), PW3270_TYPE_TOOLBAR, pw3270ToolBarClass))
52,53c52,53
< typedef struct _pw3270ToolBar			pw3270ToolBar;
< typedef struct _pw3270ToolBarClass		pw3270ToolBarClass;
---
> 	typedef struct _pw3270ToolBar			pw3270ToolBar;
> 	typedef struct _pw3270ToolBarClass		pw3270ToolBarClass;
55c55
< GType pw3270ToolBar_get_type(void) G_GNUC_CONST;
---
> 	GType pw3270ToolBar_get_type(void) G_GNUC_CONST;
57,58c57,58
< GtkWidget * pw3270_toolbar_new(void);
< GtkWidget * pw3270_toolbar_settings_new(void);
---
> 	GtkWidget * pw3270_toolbar_new(void);
> 	GtkWidget * pw3270_toolbar_settings_new(void);
60c60,61
< GtkWidget * pw3270_toolbar_insert_action(GtkWidget *toolbar, const gchar *name, gint pos);
---
> //	GtkWidget * pw3270_toolbar_insert_lib3270_action(GtkWidget *toolbar, const LIB3270_ACTION *action, gint pos);
> 	GtkWidget * pw3270_toolbar_insert_action(GtkWidget *toolbar, const gchar *name, gint pos);
62,63c63,64
< void pw3270_toolbar_set_actions(GtkWidget *toolbar, const gchar *action_names);
< gchar * pw3270_toolbar_get_actions(GtkWidget *toolbar);
---
> 	void pw3270_toolbar_set_actions(GtkWidget *toolbar, const gchar *action_names);
> 	gchar * pw3270_toolbar_get_actions(GtkWidget *toolbar);
66,68c67,69
< void pw3270_toolbar_set_style(GtkToolbar *toolbar, GtkToolbarStyle style);
< void pw3270_toolbar_set_icon_size(GtkToolbar *toolbar, GtkIconSize icon_size);
< void pw3270_toolbar_set_icon_type(GtkToolbar *toolbar, gint icon_type);
---
> 	void pw3270_toolbar_set_style(GtkToolbar *toolbar, GtkToolbarStyle style);
> 	void pw3270_toolbar_set_icon_size(GtkToolbar *toolbar, GtkIconSize icon_size);
> 	void pw3270_toolbar_set_icon_type(GtkToolbar *toolbar, gint icon_type);
70,72c71,73
< GtkToolbarStyle pw3270_toolbar_get_style(GtkToolbar *toolbar);
< GtkIconSize pw3270_toolbar_get_icon_size(GtkToolbar *toolbar);
< gint pw3270_toolbar_get_icon_type(GtkToolbar *toolbar);
---
> 	GtkToolbarStyle pw3270_toolbar_get_style(GtkToolbar *toolbar);
> 	GtkIconSize pw3270_toolbar_get_icon_size(GtkToolbar *toolbar);
> 	gint pw3270_toolbar_get_icon_type(GtkToolbar *toolbar);
74c75
< G_END_DECLS
---
> 	G_END_DECLS
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/window.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270/window.h
37c37
< #define PW3270_WINDOW_H_INCLUDED
---
> 	#define PW3270_WINDOW_H_INCLUDED
39,40c39,40
< #include <gtk/gtk.h>
< #include <lib3270.h>
---
> 	#include <gtk/gtk.h>
> 	#include <lib3270.h>
42c42
< G_BEGIN_DECLS
---
> 	G_BEGIN_DECLS
44,45c44,45
< #define PW3270_TYPE_APPLICATION_WINDOW				(pw3270ApplicationWindow_get_type ())
< #define PW3270_APPLICATION_WINDOW(inst)				(G_TYPE_CHECK_INSTANCE_CAST ((inst), \
---
> 	#define PW3270_TYPE_APPLICATION_WINDOW				(pw3270ApplicationWindow_get_type ())
> 	#define PW3270_APPLICATION_WINDOW(inst)				(G_TYPE_CHECK_INSTANCE_CAST ((inst), \
47c47
< #define PW3270_APPLICATION_WINDOW_CLASS(class)		(G_TYPE_CHECK_CLASS_CAST ((class),   \
---
> 	#define PW3270_APPLICATION_WINDOW_CLASS(class)		(G_TYPE_CHECK_CLASS_CAST ((class),   \
49c49
< #define PW3270_IS_APPLICATION_WINDOW(inst)			(G_TYPE_CHECK_INSTANCE_TYPE ((inst), \
---
> 	#define PW3270_IS_APPLICATION_WINDOW(inst)			(G_TYPE_CHECK_INSTANCE_TYPE ((inst), \
51c51
< #define PW3270_IS_APPLICATION_WINDOW_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class),   \
---
> 	#define PW3270_IS_APPLICATION_WINDOW_CLASS(class)	(G_TYPE_CHECK_CLASS_TYPE ((class),   \
53c53
< #define PW3270_APPLICATION_WINDOW_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst),  \
---
> 	#define PW3270_APPLICATION_WINDOW_GET_CLASS(inst)	(G_TYPE_INSTANCE_GET_CLASS ((inst),  \
56,57c56,57
< typedef struct _pw3270ApplicationWindowClass   pw3270ApplicationWindowClass;
< typedef struct _pw3270ApplicationWindow        pw3270ApplicationWindow;
---
> 	typedef struct _pw3270ApplicationWindowClass   pw3270ApplicationWindowClass;
> 	typedef struct _pw3270ApplicationWindow        pw3270ApplicationWindow;
59,60c59,60
< GType		  pw3270ApplicationWindow_get_type();
< GtkWidget	* pw3270_application_window_new(GtkApplication * app, const gchar *session_file);
---
> 	GType		  pw3270ApplicationWindow_get_type();
> 	GtkWidget	* pw3270_application_window_new(GtkApplication * app, const gchar *session_file);
62c62
< gint		  pw3270_application_window_append_page(GtkWidget *window, GtkWidget *terminal);
---
> 	gint		  pw3270_application_window_append_page(GtkWidget *window, GtkWidget *terminal);
64,65c64,65
< /// @brief Set the active terminal widget.
< void		  pw3270_application_window_set_active_terminal(GtkWidget *window, GtkWidget *terminal);
---
> 	/// @brief Set the active terminal widget.
> 	void		  pw3270_application_window_set_active_terminal(GtkWidget *window, GtkWidget *terminal);
67,68c67,68
< /// @brief Get the active terminal widget.
< GtkWidget	* pw3270_application_window_get_active_terminal(GtkWidget *window);
---
> 	/// @brief Get the active terminal widget.
> 	GtkWidget	* pw3270_application_window_get_active_terminal(GtkWidget *window);
70,71c70,71
< /// @brief Create a new terminal tab.
< GtkWidget 	* pw3270_application_window_new_tab(GtkWidget *window, const gchar *session_file);
---
> 	/// @brief Create a new terminal tab.
> 	GtkWidget 	* pw3270_application_window_new_tab(GtkWidget *window, const gchar *session_file);
73,74c73,74
< /// @brief Get the active session handle.
< H3270		* pw3270_window_get_session_handle(GtkWidget *window);
---
> 	/// @brief Get the active session handle.
> 	H3270		* pw3270_window_get_session_handle(GtkWidget *window);
76,77c76,77
< /// @brief Switches to the page number page_num.
< void		  pw3270_window_set_current_page(GtkWidget *window, gint page_num);
---
> 	/// @brief Switches to the page number page_num.
> 	void		  pw3270_window_set_current_page(GtkWidget *window, gint page_num);
79,80c79,80
< /// @brief Set window sub-title (If enabled).
< void		  pw3270_window_set_subtitle(GtkWidget *window, const gchar *subtitle);
---
> 	/// @brief Set window sub-title (If enabled).
> 	void		  pw3270_window_set_subtitle(GtkWidget *window, const gchar *subtitle);
82,83c82,83
< /// @brief Get window settings.
< GSettings	* pw3270_application_window_settings_new(void);
---
> 	/// @brief Get window settings.
> 	GSettings	* pw3270_application_window_settings_new(void);
85,86c85,86
< /// @brief Get window keypads.
< GList		* pw3270_application_window_get_keypads(GtkWidget *window);
---
> 	/// @brief Get window keypads.
> 	GList		* pw3270_application_window_get_keypads(GtkWidget *window);
88c88
< G_END_DECLS
---
> 	G_END_DECLS
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/pw3270.h
37c37
< #define PW3270_H_INCLUDED
---
> 	#define PW3270_H_INCLUDED
39c39
< #include <config.h>
---
> 	#include <config.h>
41,43c41,43
< #ifndef GETTEXT_PACKAGE
< #define GETTEXT_PACKAGE PACKAGE_NAME
< #endif
---
> 	#ifndef GETTEXT_PACKAGE
> 		#define GETTEXT_PACKAGE PACKAGE_NAME
> 	#endif
45,47c45,47
< #include <libintl.h>
< #include <glib/gi18n.h>
< #include <gtk/gtk.h>
---
> 	#include <libintl.h>
> 	#include <glib/gi18n.h>
> 	#include <gtk/gtk.h>
49c49
< G_BEGIN_DECLS
---
> 	G_BEGIN_DECLS
51,52c51,52
< /* not really I18N-related, but also a string marker macro */
< #define I_(string) g_intern_static_string (string)
---
> 	/* not really I18N-related, but also a string marker macro */
> 	#define I_(string) g_intern_static_string (string)
54,55d53
< // Application settings widget
< typedef struct _Pw3270SettingsPage Pw3270SettingsPage;
57,63c55,56
< struct _Pw3270SettingsPage {
< 	GtkWidget	* widget;		///< @brief Settings widget.
< 	const gchar	* label;		///< @brief Page lagel.
< 	const gchar * title;		///< @brief Page title.
< 	void (*load)(Pw3270SettingsPage *, GtkApplication *);
< 	void (*apply)(Pw3270SettingsPage *, GtkApplication *);
< };
---
> 	void		  pw3270_load_placeholders(GApplication *application, GtkBuilder * builder);
> //	GtkWidget	* pw3270_frame_new(GtkWidget * child, const gchar *title);
65c58,59
< void gtk_file_chooser_set_pw3270_filters(GtkFileChooser *chooser);
---
> 	// Application settings widget
> 	typedef struct _Pw3270SettingsPage Pw3270SettingsPage;
67c61,71
< G_END_DECLS
---
> 	struct _Pw3270SettingsPage {
> 		GtkWidget	* widget;		///< @brief Settings widget.
> 		const gchar	* label;		///< @brief Page lagel.
> 		const gchar * title;		///< @brief Page title.
> 		void (*load)(Pw3270SettingsPage *, GtkApplication *);
> 		void (*apply)(Pw3270SettingsPage *, GtkApplication *);
> 	};
> 
> 	void gtk_file_chooser_set_pw3270_filters(GtkFileChooser *chooser);
> 
> 	G_END_DECLS
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/v3270/keyfile.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/include/v3270/keyfile.h
37c37
< #define V3270_KEYFILE_H_INCLUDED
---
> 	#define V3270_KEYFILE_H_INCLUDED
39c39
< #include <glib.h>
---
> 	#include <glib.h>
41c41
< G_BEGIN_DECLS
---
> 	G_BEGIN_DECLS
43c43
< typedef struct _V3270KeyFile V3270KeyFile;
---
> 	typedef struct _V3270KeyFile V3270KeyFile;
45,47c45,46
< void			  v3270_set_default_session(GtkWidget *terminal);
< gchar			* v3270_keyfile_get_default_filename(void);
< gchar			* v3270_key_file_get_default_path(GtkWidget *terminal);
---
> 	gchar			* v3270_keyfile_get_default_filename(void);
> 	gchar			* v3270_key_file_get_default_path(GtkWidget *terminal);
49,50c48,49
< V3270KeyFile	* v3270_key_file_open(GtkWidget *terminal, const gchar *name, GError **error);
< void			  v3270_key_file_close(GtkWidget *terminal);
---
> 	V3270KeyFile	* v3270_key_file_open(GtkWidget *terminal, const gchar *name, GError **error);
> 	void			  v3270_key_file_close(GtkWidget *terminal);
52,53c51,52
< void			  v3270_key_file_save(GtkWidget *terminal, GError **error);
< void			  v3270_key_file_save_to_file(GtkWidget * terminal, const gchar *filename, GError **error);
---
> 	void			  v3270_key_file_save(GtkWidget *terminal, GError **error);
> 	void			  v3270_key_file_save_to_file(GtkWidget * terminal, const gchar *filename, GError **error);
55,56c54,55
< /// @brief Get current key filename
< const gchar		* v3270_key_file_get_filename(GtkWidget *terminal);
---
> 	/// @brief Get current key filename
> 	const gchar		* v3270_key_file_get_filename(GtkWidget *terminal);
58,59c57,58
< /// @brief Build a writable key filename
< gchar			* v3270_key_file_build_filename(GtkWidget *terminal);
---
> 	/// @brief Build a writable key filename
> 	gchar			* v3270_key_file_build_filename(GtkWidget *terminal);
61c60
< GKeyFile		* v3270_key_file_get(GtkWidget *terminal);
---
> 	GKeyFile		* v3270_key_file_get(GtkWidget *terminal);
63c62
< gboolean		  v3270_key_file_can_write(GtkWidget *widget);
---
> 	gboolean		  v3270_key_file_can_write(GtkWidget *widget);
65c64
< void			  v3270_key_file_set_boolean(GtkWidget *terminal, const gchar *group_name, const gchar *key, gboolean value);
---
> 	void			  v3270_key_file_set_boolean(GtkWidget *terminal, const gchar *group_name, const gchar *key, gboolean value);
67c66
< G_END_DECLS
---
> 	G_END_DECLS
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main: builder.c
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main/main.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main/main.c
31,45c31,45
< /**
<  * @brief PW3270 main aplication Entry point
<  *
<  */
< 
< #include "private.h"
< #include <pw3270/application.h>
< #include <lib3270.h>
< #include <lib3270/log.h>
< #include <locale.h>
< #include <stdlib.h>
< 
< #ifdef G_OS_UNIX
< #include <glib-unix.h>
< #endif // G_OS_UNIX
---
>  /**
>   * @brief PW3270 main aplication Entry point
>   *
>   */
> 
>  #include "private.h"
>  #include <pw3270/application.h>
>  #include <lib3270.h>
>  #include <lib3270/log.h>
>  #include <locale.h>
>  #include <stdlib.h>
> 
>  #ifdef G_OS_UNIX
> 	#include <glib-unix.h>
>  #endif // G_OS_UNIX
53a54,67
> 
> 	/*
> 	GList *list = gtk_application_get_windows(GTK_APPLICATION(application));
> 
> 	while(list) {
> 
> 		GtkWidget * window = GTK_WIDGET(list->data);
> 		list = list->next;
> 
> 		gtk_widget_destroy(window);
> 
> 	}
> 	*/
> 
56d69
< 
59a73,77
> static void g_log_to_lib3270(const gchar *log_domain,GLogLevelFlags G_GNUC_UNUSED(log_level),const gchar *message,gpointer G_GNUC_UNUSED(user_data)) {
> 	debug("%s",message);
> 	lib3270_write_log(NULL,log_domain ? log_domain : G_STRINGIFY(PRODUCT_NAME),"%s",message);
> }
> 
83a102,103
> 	g_log_set_default_handler(g_log_to_lib3270,NULL);
> 
89c109
< 	app = pw3270_application_new(G_STRINGIFY(APPLICATION_ID),G_APPLICATION_HANDLES_OPEN);
---
> 	app = pw3270_application_new("br.com.bb." G_STRINGIFY(PRODUCT_NAME),G_APPLICATION_HANDLES_OPEN);
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main/placeholders.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main/placeholders.c
31,40c31,40
< /**
<  * @brief PW3270 Placeholders management.
<  *
<  */
< 
< #include "private.h"
< #include <pw3270/application.h>
< #include <pw3270/keypad.h>
< #include <lib3270.h>
< #include <lib3270/log.h>
---
>  /**
>   * @brief PW3270 Placeholders management.
>   *
>   */
> 
>  #include "private.h"
>  #include <pw3270/application.h>
>  #include <pw3270/keypad.h>
>  #include <lib3270.h>
>  #include <lib3270/log.h>
43a44,122
>  static GMenu * get_keypad_menu(GApplication *application) {
> 
> 	GList * keypads = pw3270_application_get_keypad_models(application);
> 
> 	if(!keypads)
> 		return NULL;
> 
> 	GMenu * menu = g_menu_new();
> 
> 	// Create keypad items.
> 	GList *item;
> 	for(item = keypads;item;item = g_list_next(item)) {
> 		GObject * model = G_OBJECT(item->data);
> 		g_autofree gchar * action_name = g_strconcat("win.keypad.",pw3270_keypad_model_get_name(model),NULL);
> 		g_menu_append(menu,pw3270_keypad_model_get_label(model),action_name);
> 	}
> 
> 	return menu;
> 
>  }
> 
>  void pw3270_load_placeholders(GApplication *application, GtkBuilder * builder) {
> 
> 	GObject * placeholder;
> 	size_t ix;
> 
> 	//
> 	// Load fonts
> 	//
> 	placeholder = gtk_builder_get_object(builder, "font-select-placeholder");
> 
> 	if(placeholder && G_IS_MENU(placeholder)) {
> 
> 		GMenu * font_menu = G_MENU(placeholder);
> 
> 		gint n_families;
> 		PangoFontFamily **families;
> 		pango_context_list_families(gdk_pango_context_get_for_screen(gdk_screen_get_default()),&families, &n_families);
> 
> 		for(ix=0; ix < (size_t) n_families; ix++)
> 		{
> 			if(!pango_font_family_is_monospace(families[ix]))
> 				continue;
> 
> 			const gchar * family = pango_font_family_get_name(families[ix]);
> 			g_autofree gchar * detailed_action = g_strconcat("win.font-family::",family,NULL);
> 			g_menu_append(font_menu,family,detailed_action);
> 
> 		}
> 
> 	}
> 
> 	//
> 	// View options
> 	//
> 	GMenu * keypad_menu = get_keypad_menu(application);
> 
> 	if(keypad_menu) {
> 
> 		static const gchar * placeholders[] = {
> 			"view-menu-placeholder",
> 			"view-when-offline-placeholder",
> 			"view-when-online-placeholder"
> 		};
> 
> 		for(ix = 0; ix < G_N_ELEMENTS(placeholders); ix++) {
> 
> 			placeholder = gtk_builder_get_object(builder, placeholders[ix]);
> 
> 			if(placeholder && G_IS_MENU(placeholder)) {
> 				g_menu_append_item(G_MENU(placeholder), g_menu_item_new_submenu(_("Keypads"),G_MENU_MODEL(keypad_menu)));
> 			}
> 
> 		}
> 
> 		g_object_unref(keypad_menu);
> 	}
> 
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main/private.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main/private.h
32c32
< #define PRIVATE_H_INCLUDED
---
> 	#define PRIVATE_H_INCLUDED
34c34
< #include <pw3270.h>
---
> 	#include <pw3270.h>
36,37c36,37
< #include <lib3270.h>
< #include <lib3270/log.h>
---
> 	#include <lib3270.h>
> 	#include <lib3270/log.h>
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main/tools.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main/tools.c
31,40c31,39
< /**
<  * @brief Misc tools for pw3270 application.
<  *
<  */
< 
< #include "private.h"
< #include <pw3270.h>
< #include <pw3270/application.h>
< #include <pw3270/settings.h>
< #include <pw3270/window.h>
---
>  /**
>   * @brief Misc tools for pw3270 application.
>   *
>   */
> 
>  #include "private.h"
>  #include <pw3270.h>
>  #include <pw3270/application.h>
>  #include <pw3270/settings.h>
44c43
< GtkBuilder * pw3270_application_get_builder(const gchar *name) {
---
>  GtkBuilder * pw3270_application_get_builder(const gchar *name) {
53c52
< }
---
>  }
55c54
< void gtk_container_remove_all(GtkContainer *container) {
---
>  void gtk_container_remove_all(GtkContainer *container) {
57,58c56,57
< 	GList * children = gtk_container_get_children(container);
< 	GList * item;
---
>  	GList * children = gtk_container_get_children(container);
>  	GList * item;
60c59
< 	for(item = children; item; item = g_list_next(item)) {
---
>  	for(item = children;item;item = g_list_next(item)) {
62c61,81
< 	}
---
>  	}
> 
>  	g_list_free(children);
> 
>  }
> 
>  /*
>  GtkWidget * pw3270_frame_new(GtkWidget * child, const gchar *title) {
> 
> 	GtkFrame			* frame		= GTK_FRAME(gtk_frame_new(""));
> 	g_autofree gchar	* markup	= g_strdup_printf("<b>%s</b>",title);
> 	GtkWidget			* label		= gtk_label_new(NULL);
> 
> 	gtk_frame_set_shadow_type(GTK_FRAME(frame),GTK_SHADOW_NONE);
> 	gtk_label_set_markup(GTK_LABEL(label),markup);
> 	gtk_frame_set_label_widget(GTK_FRAME(frame),label);
>  	gtk_container_set_border_width(GTK_CONTAINER(child),12);
> 
> 	gtk_container_add(GTK_CONTAINER(frame),GTK_WIDGET(child));
> 
> 	g_object_set(G_OBJECT(frame),"margin-top",6,NULL);
64c83
< 	g_list_free(children);
---
> 	return GTK_WIDGET(frame);
66c85,86
< }
---
>  }
>  */
68c88
< void gtk_file_chooser_set_pw3270_filters(GtkFileChooser *chooser) {
---
>  void gtk_file_chooser_set_pw3270_filters(GtkFileChooser *chooser) {
93,112c113
< }
< 
< GtkWidget * pw3270_get_active_terminal() {
< 
< 	GApplication *app = g_application_get_default();
< 	g_return_val_if_fail(GTK_IS_APPLICATION(app),NULL);
< 
< 	GtkWindow * window = gtk_application_get_active_window(GTK_APPLICATION(app));
< 
< 	return pw3270_application_window_get_active_terminal(GTK_WIDGET(window));
< 
< }
< 
< H3270 * pw3270_get_active_session() {
< 
< 	GApplication *app = g_application_get_default();
< 
< 	g_return_val_if_fail(GTK_IS_APPLICATION(app),NULL);
< 
< 	GtkWindow * window = gtk_application_get_active_window(GTK_APPLICATION(app));
---
>  }
114d114
< 	return pw3270_window_get_session_handle(GTK_WIDGET(window));
116d115
< }
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main/windows: app-manifest.xml.in
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main/windows/resources.rc.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/main/windows/resources.rc.in
3,6d2
< #pragma code_page( 65001 )  // UTF-8
< 
< LANGUAGE LANG_NEUTRAL, SUBLANG_NEUTRAL
< 
9,10d4
< CREATEPROCESS_MANIFEST_RESOURCE_ID      RT_MANIFEST "app-manifest.xml"
< 
24c18
<             VALUE "LegalCopyright",		"(C) 2017 Banco do Brasil S/A. All Rights Reserved\0"
---
>             		VALUE "LegalCopyright",		"(C) 2017 Banco do Brasil S/A. All Rights Reserved\0"
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/abstract.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/abstract.c
30,31c30,31
< #include "private.h"
< #include <pw3270/actions.h>
---
>  #include "private.h"
>  #include <pw3270/actions.h>
33,61c33,61
< static void				  PW3270_action_iface_init(GActionInterface *iface);
< static void				  PW3270Action_class_init(PW3270ActionClass *klass);
< static void				  PW3270Action_init(PW3270Action *action);
< 
< static void				  get_property(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);
< static void				  set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);
< 
< static const gchar			* get_icon_name(GAction *action);
< static const gchar			* get_label(GAction *action);
< static const gchar			* get_tooltip(GAction *action);
< static const gchar			* get_name(GAction *action);
< static const GVariantType	* get_state_type(GAction *action);
< static	const GVariantType	* get_parameter_type(GAction *object);
< 
< static void				  finalize(GObject *object);
< 
< static gboolean			  get_enabled(GAction *action);
< static void 				  activate(GAction *action, GVariant *parameter, GtkApplication *application);
< static	GVariant 			* get_state(GAction *action);
< 
< static const gchar			* iface_get_name(GAction *action);
< static	const GVariantType	* iface_get_parameter_type(GAction *action);
< static GVariant			* iface_get_state_hint(GAction *action);
< static	const GVariantType	* iface_get_state_type(GAction *action);
< static	GVariant			* iface_get_state(GAction *action);
< static gboolean			  iface_get_enabled(GAction *action);
< static GVariant			* iface_get_state(GAction *object);
< static void				  iface_change_state(GAction *object, GVariant *value);
< static void				  iface_activate(GAction *object, GVariant *parameter);
---
>  static void				  PW3270_action_iface_init(GActionInterface *iface);
>  static void				  PW3270Action_class_init(PW3270ActionClass *klass);
>  static void				  PW3270Action_init(PW3270Action *action);
> 
>  static void				  get_property(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);
>  static void				  set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);
> 
>  static const gchar			* get_icon_name(GAction *action);
>  static const gchar			* get_label(GAction *action);
>  static const gchar			* get_tooltip(GAction *action);
>  static const gchar			* get_name(GAction *action);
>  static const GVariantType	* get_state_type(GAction *action);
>  static	const GVariantType	* get_parameter_type(GAction *object);
> 
>  static void				  finalize(GObject *object);
> 
>  static gboolean			  get_enabled(GAction *action);
>  static void 				  activate(GAction *action, GVariant *parameter, GtkApplication *application);
>  static	GVariant 			* get_state(GAction *action);
> 
>  static const gchar			* iface_get_name(GAction *action);
>  static	const GVariantType	* iface_get_parameter_type(GAction *action);
>  static GVariant			* iface_get_state_hint(GAction *action);
>  static	const GVariantType	* iface_get_state_type(GAction *action);
>  static	GVariant			* iface_get_state(GAction *action);
>  static gboolean			  iface_get_enabled(GAction *action);
>  static GVariant			* iface_get_state(GAction *object);
>  static void				  iface_change_state(GAction *object, GVariant *value);
>  static void				  iface_activate(GAction *object, GVariant *parameter);
63c63
< enum {
---
>  enum {
73c73
< };
---
>  };
75c75
< G_DEFINE_TYPE_WITH_CODE(PW3270Action, PW3270Action, G_TYPE_OBJECT, G_IMPLEMENT_INTERFACE(G_TYPE_ACTION, PW3270_action_iface_init))
---
>  G_DEFINE_TYPE_WITH_CODE(PW3270Action, PW3270Action, G_TYPE_OBJECT, G_IMPLEMENT_INTERFACE(G_TYPE_ACTION, PW3270_action_iface_init))
77c77
< void PW3270Action_class_init(PW3270ActionClass *klass) {
---
>  void PW3270Action_class_init(PW3270ActionClass *klass) {
85c85
< 	object_class->finalize		= finalize;
---
>  	object_class->finalize		= finalize;
91,96c91,96
< 	                                g_param_spec_string (
< 	                                    "name",
< 	                                    N_("Action Name"),
< 	                                    N_("The name used to invoke the action"),
< 	                                    NULL,
< 	                                    G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_STATIC_STRINGS));
---
> 		g_param_spec_string (
> 			"name",
> 			N_("Action Name"),
> 			N_("The name used to invoke the action"),
> 			NULL,
> 			G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_STATIC_STRINGS));
99,104c99,104
< 	                                g_param_spec_string (
< 	                                    "icon-name",
< 	                                    N_("Icon Name"),
< 	                                    N_("The name of the icon associated with the action"),
< 	                                    NULL,
< 	                                    G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_STATIC_STRINGS));
---
> 		g_param_spec_string (
> 			"icon-name",
> 			N_("Icon Name"),
> 			N_("The name of the icon associated with the action"),
> 			NULL,
> 			G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_STATIC_STRINGS));
107,112c107,112
< 	                                g_param_spec_string (
< 	                                    "label",
< 	                                    N_("The action label"),
< 	                                    N_("The label for the action"),
< 	                                    NULL,
< 	                                    G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_STATIC_STRINGS));
---
> 		g_param_spec_string (
> 			"label",
> 			N_("The action label"),
> 			N_("The label for the action"),
> 			NULL,
> 			G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_STATIC_STRINGS));
115,120c115,120
< 	                                g_param_spec_string (
< 	                                    "tooltip",
< 	                                    N_("The action tooltip"),
< 	                                    N_("The tooltip for the action"),
< 	                                    NULL,
< 	                                    G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_STATIC_STRINGS));
---
> 		g_param_spec_string (
> 			"tooltip",
> 			N_("The action tooltip"),
> 			N_("The tooltip for the action"),
> 			NULL,
> 			G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_STATIC_STRINGS));
123,127c123,127
< 	                                 g_param_spec_boxed ("parameter-type",
< 	                                         N_("Parameter Type"),
< 	                                         N_("The type of GVariant passed to activate()"),
< 	                                         G_TYPE_VARIANT_TYPE,
< 	                                         G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY | G_PARAM_STATIC_STRINGS));
---
> 		g_param_spec_boxed ("parameter-type",
> 			N_("Parameter Type"),
> 			N_("The type of GVariant passed to activate()"),
> 			G_TYPE_VARIANT_TYPE,
> 			G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READWRITE | G_PARAM_CONSTRUCT_ONLY | G_PARAM_STATIC_STRINGS));
130,134c130,134
< 	                                 g_param_spec_boxed ("state-type",
< 	                                         N_("State Type"),
< 	                                         N_("The type of the state kept by the action"),
< 	                                         G_TYPE_VARIANT_TYPE,
< 	                                         G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_STATIC_STRINGS));
---
> 		g_param_spec_boxed ("state-type",
> 			N_("State Type"),
> 			N_("The type of the state kept by the action"),
> 			G_TYPE_VARIANT_TYPE,
> 			G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READABLE | G_PARAM_STATIC_STRINGS));
138,144c138,144
< 	    g_param_spec_boolean(
< 	        "enabled",
< 	        N_("Enabled"),
< 	        N_("If the action can be activated"),
< 	        TRUE,
< 	        G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS
< 	    );
---
> 			g_param_spec_boolean(
> 				"enabled",
> 				N_("Enabled"),
> 				N_("If the action can be activated"),
> 				TRUE,
> 				G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS
> 			);
150,157c150,157
< 	    g_param_spec_variant(
< 	        "state",
< 	        N_("State"),
< 	        N_("The state the action is in"),
< 	        G_VARIANT_TYPE_ANY,
< 	        NULL,
< 	        G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READWRITE | G_PARAM_CONSTRUCT | G_PARAM_STATIC_STRINGS
< 	    );
---
> 		g_param_spec_variant(
> 			"state",
> 			N_("State"),
> 			N_("The state the action is in"),
> 			G_VARIANT_TYPE_ANY,
> 			NULL,
> 			G_PARAM_STATIC_NAME | G_PARAM_STATIC_NICK | G_PARAM_STATIC_BLURB | G_PARAM_READWRITE | G_PARAM_CONSTRUCT | G_PARAM_STATIC_STRINGS
> 		);
161c161
< }
---
>  }
163c163
< void PW3270Action_init(PW3270Action *action) {
---
>  void PW3270Action_init(PW3270Action *action) {
165c165
< }
---
>  }
167c167,169
< void finalize(GObject *object) {
---
>  void finalize(GObject *object) {
> 
> 	// PW3270Action * action = PW3270_ACTION(object);
169d170
< }
171c172,174
< void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
---
>  }
> 
>  void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
176c179
< 	case PROP_NAME:
---
>     case PROP_NAME:
212c215
< }
---
>  }
214,215c217,219
< void set_property(GObject G_GNUC_UNUSED(*object), guint G_GNUC_UNUSED(prop_id), const GValue G_GNUC_UNUSED(*value), GParamSpec G_GNUC_UNUSED(*pspec)) {
< }
---
>  void set_property(GObject G_GNUC_UNUSED(*object), guint G_GNUC_UNUSED(prop_id), const GValue G_GNUC_UNUSED(*value), GParamSpec G_GNUC_UNUSED(*pspec)) {
> // 	g_message("Action %s property %s is read-only",g_action_get_name(G_ACTION(object)),pspec->name);
>  }
217,218c221,222
< static gboolean bg_notify_enabled(GObject *action) {
< 	debug("%s(%s,%s)",__FUNCTION__,g_action_get_name(G_ACTION(action)),(g_action_get_enabled(G_ACTION(action)) ? "enabled" : "disabled"));
---
>  static gboolean bg_notify_enabled(GObject *action) {
>  	debug("%s(%s,%s)",__FUNCTION__,g_action_get_name(G_ACTION(action)),(g_action_get_enabled(G_ACTION(action)) ? "enabled" : "disabled"));
221c225
< }
---
>  }
223c227
< static gboolean bg_notify_state(GObject *action) {
---
>  static gboolean bg_notify_state(GObject *action) {
226c230
< }
---
>  }
228c232
< void pw3270_action_notify_enabled(GAction *action) {
---
>  void pw3270_action_notify_enabled(GAction *action) {
230c234
< }
---
>  }
232,233c236,237
< void pw3270_action_notify_state(GAction *action) {
< 	if(g_action_get_state_type(action))
---
>  void pw3270_action_notify_state(GAction *action) {
>  	if(g_action_get_state_type(action))
235c239
< }
---
>  }
237,239c241,243
< gboolean get_enabled(GAction G_GNUC_UNUSED(*object)) {
< 	return TRUE;
< }
---
>  gboolean get_enabled(GAction G_GNUC_UNUSED(*object)) {
>  	return TRUE;
>  }
241c245
< void activate(GAction *action, GVariant G_GNUC_UNUSED(*parameter), GtkApplication G_GNUC_UNUSED(*application)) {
---
>  void activate(GAction *action, GVariant G_GNUC_UNUSED(*parameter), GtkApplication G_GNUC_UNUSED(*application)) {
243c247
< }
---
>  }
245,248c249,252
< //
< // Action methods.
< //
< PW3270Action * pw3270_action_new() {
---
>  //
>  // Action methods.
>  //
>  PW3270Action * pw3270_action_new() {
250c254
< }
---
>  }
252c256
< GdkPixbuf * pw3270_action_get_pixbuf(GAction *action, GtkIconSize icon_size, GtkIconLookupFlags flags) {
---
>  GdkPixbuf * pw3270_action_get_pixbuf(GAction *action, GtkIconSize icon_size, GtkIconLookupFlags flags) {
260,265c264,269
< 	           gtk_icon_theme_get_default(),
< 	           icon_name,
< 	           icon_size,
< 	           flags,
< 	           NULL
< 	       );
---
> 					gtk_icon_theme_get_default(),
> 					icon_name,
> 					icon_size,
> 					flags,
> 					NULL
> 			);
267c271
< }
---
>  }
272c276
< GVariant * get_state(GAction G_GNUC_UNUSED(*object)) {
---
>  GVariant * get_state(GAction G_GNUC_UNUSED(*object)) {
274c278
< }
---
>  }
279c283
< void PW3270_action_iface_init(GActionInterface *iface) {
---
>  void PW3270_action_iface_init(GActionInterface *iface) {
288c292
< }
---
>  }
290,292c294,296
< const gchar * iface_get_name(GAction *action) {
< 	return get_name(action);
< }
---
>  const gchar * iface_get_name(GAction *action) {
>  	return get_name(action);
>  }
294c298
< GVariant * iface_get_state(GAction *object) {
---
>  GVariant * iface_get_state(GAction *object) {
296c300
< 	GVariant * state = NULL;
---
>  	GVariant * state = NULL;
298c302
< 	if(g_action_get_state_type(object)) {
---
>  	if(g_action_get_state_type(object)) {
305c309
< 	}
---
>  	}
309c313
< }
---
>  }
311c315
< const GVariantType * iface_get_parameter_type(GAction *object) {
---
>  const GVariantType * iface_get_parameter_type(GAction *object) {
313c317
< }
---
>  }
315c319
< const GVariantType * iface_get_state_type(GAction *object) {
---
>  const GVariantType * iface_get_state_type(GAction *object) {
317c321
< }
---
>  }
319c323
< GVariant * iface_get_state_hint(GAction G_GNUC_UNUSED(*object)) {
---
>  GVariant * iface_get_state_hint(GAction G_GNUC_UNUSED(*object)) {
321c325
< }
---
>  }
323,325c327,329
< void iface_change_state(GAction G_GNUC_UNUSED(*object), GVariant G_GNUC_UNUSED(*value)) {
< 	debug("%s",__FUNCTION__);
< }
---
>  void iface_change_state(GAction G_GNUC_UNUSED(*object), GVariant G_GNUC_UNUSED(*value)) {
>  	debug("%s",__FUNCTION__);
>  }
327c331
< gboolean iface_get_enabled(GAction *object) {
---
>  gboolean iface_get_enabled(GAction *object) {
329c333
< }
---
>  }
331c335
< void iface_activate(GAction *object, GVariant *parameter) {
---
>  void iface_activate(GAction *object, GVariant *parameter) {
333,337c337
< }
< 
< const gchar * get_icon_name(GAction *action) {
< 	return PW3270_ACTION(action)->icon_name;
< }
---
>  }
339,357c339,361
< const gchar * get_label(GAction *action) {
< 	return PW3270_ACTION(action)->label;
< }
< 
< const gchar * get_tooltip(GAction *action) {
< 	return PW3270_ACTION(action)->tooltip;
< }
< 
< const gchar * get_name(GAction *action) {
< 	return PW3270_ACTION(action)->name;
< }
< 
< const GVariantType	* get_state_type(GAction G_GNUC_UNUSED(*object)) {
< 	return NULL;
< }
< 
< const GVariantType	* get_parameter_type(GAction G_GNUC_UNUSED(*object)) {
< 	return NULL;
< }
---
>  const gchar * get_icon_name(GAction *action) {
>  	return PW3270_ACTION(action)->icon_name;
>  }
> 
>  const gchar * get_label(GAction *action) {
>  	return PW3270_ACTION(action)->label;
>  }
> 
>  const gchar * get_tooltip(GAction *action) {
>  	return PW3270_ACTION(action)->tooltip;
>  }
> 
>  const gchar * get_name(GAction *action) {
>   	return PW3270_ACTION(action)->name;
>  }
> 
>  const GVariantType	* get_state_type(GAction G_GNUC_UNUSED(*object)) {
>  	return NULL;
>  }
> 
>  const GVariantType	* get_parameter_type(GAction G_GNUC_UNUSED(*object)) {
>  	return NULL;
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/button.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/button.c
30,33c30,33
< /**
<  * @brief Implement PW3270 action button.
<  *
<  */
---
>  /**
>   * @brief Implement PW3270 action button.
>   *
>   */
35,36c35,36
< #include "private.h"
< #include <pw3270/actions.h>
---
>  #include "private.h"
>  #include <pw3270/actions.h>
38c38
< GtkWidget * gtk_button_new_from_action(GAction *action, GtkIconSize icon_size, gboolean symbolic) {
---
>  GtkWidget * gtk_button_new_from_action(GAction *action, GtkIconSize icon_size, gboolean symbolic) {
69c69
< }
---
>  }
71c71
< GtkToolItem * gtk_tool_button_new_from_action(GAction *action, GtkIconSize icon_size, gboolean symbolic) {
---
>  GtkToolItem * gtk_tool_button_new_from_action(GAction *action, GtkIconSize icon_size, gboolean symbolic) {
124c124
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/clipboard.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/clipboard.c
30,33c30,33
< /**
<  * @brief Implement PW3270 clipboard actions.
<  *
<  */
---
>  /**
>   * @brief Implement PW3270 clipboard actions.
>   *
>   */
35,36c35,36
< #include "private.h"
< #include <v3270.h>
---
>  #include "private.h"
>  #include <v3270.h>
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/dialog.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/dialog.c
30,33c30,33
< /**
<  * @brief Implements PW3270 Dialog Action.
<  *
<  */
---
>  /**
>   * @brief Implements PW3270 Dialog Action.
>   *
>   */
35,36c35,36
< #include "private.h"
< #include <pw3270/actions.h>
---
>  #include "private.h"
>  #include <pw3270/actions.h>
38c38
< typedef struct _PW3270DialogAction {
---
>  typedef struct _PW3270DialogAction {
45c45
< } PW3270DialogAction;
---
>  } PW3270DialogAction;
47c47
< typedef struct _PW3270DialogActionClass {
---
>  typedef struct _PW3270DialogActionClass {
51c51
< } PW3270DialogActionClass;
---
>  } PW3270DialogActionClass;
53,86c53,86
< #define PW3270_TYPE_DIALOG_ACTION				(PW3270DialogAction_get_type())
< #define PW3270_DIALOG_ACTION(inst)				(G_TYPE_CHECK_INSTANCE_CAST ((inst), PW3270_TYPE_DIALOG_ACTION, PW3270DialogAction))
< #define PW3270_DIALOG_ACTION_CLASS(klass)		(G_TYPE_CHECK_CLASS_CAST ((klass), PW3270_TYPE_DIALOG_ACTION, PW3270DialogActionClass))
< #define PW3270_IS_DIALOG_ACTION(inst)			(G_TYPE_CHECK_INSTANCE_TYPE ((inst), PW3270_TYPE_DIALOG_ACTION))
< #define PW3270_IS_DIALOG_ACTION_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), PW3270_TYPE_DIALOG_ACTION))
< #define PW3270_DIALOG_ACTION_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), PW3270_TYPE_DIALOG_ACTION, PW3270DialogActionClass))
< 
< static void		  PW3270DialogAction_class_init(PW3270DialogActionClass *klass);
< static void		  PW3270DialogAction_init(PW3270DialogAction *action);
< static void		  activate(GAction *action, GVariant *parameter, GtkApplication *application);
< static GtkWidget	* factory(PW3270Action *action, GtkApplication *application);
< static gboolean	  get_enabled(GAction *action);
< 
< G_DEFINE_TYPE(PW3270DialogAction, PW3270DialogAction, PW3270_TYPE_ACTION);
< 
< PW3270Action * pw3270_dialog_action_new(GtkWidget * (*factory)(PW3270Action *, GtkApplication *application)) {
< 	PW3270DialogAction *action = PW3270_DIALOG_ACTION(g_object_new(PW3270_TYPE_DIALOG_ACTION, NULL));
< 	action->parent.activate = activate;
< 	action->factory = factory;
< 	return PW3270_ACTION(action);
< }
< 
< void PW3270DialogAction_class_init(PW3270DialogActionClass *klass) {
< 	klass->parent_class.get_enabled = get_enabled;
< }
< 
< void PW3270DialogAction_init(PW3270DialogAction *action) {
< 	action->factory = factory;
< }
< 
< GtkWidget * factory(PW3270Action *action, GtkApplication G_GNUC_UNUSED(*application)) {
< 	g_warning("No widget factory for action \"%s\"",g_action_get_name(G_ACTION(action)));
< 	return NULL;
< }
---
>  #define PW3270_TYPE_DIALOG_ACTION				(PW3270DialogAction_get_type())
>  #define PW3270_DIALOG_ACTION(inst)				(G_TYPE_CHECK_INSTANCE_CAST ((inst), PW3270_TYPE_DIALOG_ACTION, PW3270DialogAction))
>  #define PW3270_DIALOG_ACTION_CLASS(klass)		(G_TYPE_CHECK_CLASS_CAST ((klass), PW3270_TYPE_DIALOG_ACTION, PW3270DialogActionClass))
>  #define PW3270_IS_DIALOG_ACTION(inst)			(G_TYPE_CHECK_INSTANCE_TYPE ((inst), PW3270_TYPE_DIALOG_ACTION))
>  #define PW3270_IS_DIALOG_ACTION_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), PW3270_TYPE_DIALOG_ACTION))
>  #define PW3270_DIALOG_ACTION_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), PW3270_TYPE_DIALOG_ACTION, PW3270DialogActionClass))
> 
>  static void		  PW3270DialogAction_class_init(PW3270DialogActionClass *klass);
>  static void		  PW3270DialogAction_init(PW3270DialogAction *action);
>  static void		  activate(GAction *action, GVariant *parameter, GtkApplication *application);
>  static GtkWidget	* factory(PW3270Action *action, GtkApplication *application);
>  static gboolean	  get_enabled(GAction *action);
> 
>  G_DEFINE_TYPE(PW3270DialogAction, PW3270DialogAction, PW3270_TYPE_ACTION);
> 
>  PW3270Action * pw3270_dialog_action_new(GtkWidget * (*factory)(PW3270Action *, GtkApplication *application)) {
>  	 PW3270DialogAction *action = PW3270_DIALOG_ACTION(g_object_new(PW3270_TYPE_DIALOG_ACTION, NULL));
>  	 action->parent.activate = activate;
>  	 action->factory = factory;
>  	 return PW3270_ACTION(action);
>  }
> 
>  void PW3270DialogAction_class_init(PW3270DialogActionClass *klass) {
>  	klass->parent_class.get_enabled = get_enabled;
>  }
> 
>  void PW3270DialogAction_init(PW3270DialogAction *action) {
>  	action->factory = factory;
>  }
> 
>  GtkWidget * factory(PW3270Action *action, GtkApplication G_GNUC_UNUSED(*application)) {
>  	g_warning("No widget factory for action \"%s\"",g_action_get_name(G_ACTION(action)));
>  	return NULL;
>  }
88c88
< gboolean get_enabled(GAction *action) {
---
>  gboolean get_enabled(GAction *action) {
96c96
< }
---
>  }
105c105
< }
---
>  }
107c107
< void activate(GAction *object, GVariant G_GNUC_UNUSED(*parameter), GtkApplication *application) {
---
>  void activate(GAction *object, GVariant G_GNUC_UNUSED(*parameter), GtkApplication *application) {
133c133
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/print.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/print.c
30,33c30,33
< /**
<  * @brief Implement PW3270 print actions.
<  *
<  */
---
>  /**
>   * @brief Implement PW3270 print actions.
>   *
>   */
35,37c35,37
< #include "private.h"
< #include <v3270.h>
< #include <pw3270/application.h>
---
>  #include "private.h"
>  #include <v3270.h>
>  #include <pw3270/application.h>
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/private.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/private.h
32c32
< #define PRIVATE_H_INCLUDED
---
> 	#define PRIVATE_H_INCLUDED
34c34
< #include <config.h>
---
> 	#include <config.h>
36,38c36,38
< #ifndef GETTEXT_PACKAGE
< #define GETTEXT_PACKAGE PACKAGE_NAME
< #endif
---
> 	#ifndef GETTEXT_PACKAGE
> 		#define GETTEXT_PACKAGE PACKAGE_NAME
> 	#endif
40,42c40,42
< #include <libintl.h>
< #include <glib/gi18n.h>
< #include <gtk/gtk.h>
---
> 	#include <libintl.h>
> 	#include <glib/gi18n.h>
> 	#include <gtk/gtk.h>
44c44
< #include <pw3270/actions.h>
---
> 	#include <pw3270/actions.h>
46,47c46,47
< #include <lib3270/actions.h>
< #include <lib3270/toggle.h>
---
> 	#include <lib3270/actions.h>
> 	#include <lib3270/toggle.h>
49c49
< #include <lib3270/log.h>
---
> 	#include <lib3270/log.h>
51,52c51,52
< /* not really I18N-related, but also a string marker macro */
< #define I_(string) g_intern_static_string (string)
---
> 	/* not really I18N-related, but also a string marker macro */
> 	#define I_(string) g_intern_static_string (string)
54c54
< G_GNUC_INTERNAL void pw3270_action_set_name(GAction *object, const gchar *name);
---
> 	G_GNUC_INTERNAL void pw3270_action_set_name(GAction *object, const gchar *name);
56,57c56,57
< G_GNUC_INTERNAL void pw3270_action_notify_enabled(GAction *action);
< G_GNUC_INTERNAL void pw3270_action_notify_state(GAction *object);
---
> 	G_GNUC_INTERNAL void pw3270_action_notify_enabled(GAction *action);
> 	G_GNUC_INTERNAL void pw3270_action_notify_state(GAction *object);
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/save.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/save.c
30,41c30,41
< /**
<  * @brief Implement PW3270 save actions.
<  *
<  */
< 
< #include "private.h"
< #include <v3270.h>
< #include <v3270/keyfile.h>
< #include <pw3270.h>
< #include <pw3270/application.h>
< #include <v3270/tools.h>
< #include <v3270/settings.h>
---
>  /**
>   * @brief Implement PW3270 save actions.
>   *
>   */
> 
>  #include "private.h"
>  #include <v3270.h>
>  #include <v3270/keyfile.h>
>  #include <pw3270.h>
>  #include <pw3270/application.h>
>  #include <v3270/tools.h>
>  #include <v3270/settings.h>
43,44c43,44
< static GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal);
< static void response(GtkWidget *dialog, gint response_id, GtkWidget *terminal);
---
>  static GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal);
>  static void response(GtkWidget *dialog, gint response_id, GtkWidget *terminal);
46c46
< static const struct Entry {
---
>  static const struct Entry {
52c52
< } entries[] = {
---
>  } entries[] = {
54c54
< 	// 0 = Session name
---
>  	// 0 = Session name
68c68
< };
---
>  };
70c70
< GAction * pw3270_action_save_session_preferences_new(void) {
---
>  GAction * pw3270_action_save_session_preferences_new(void) {
81c81
< }
---
>  }
83c83
< GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal) {
---
>  GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal) {
90,94c90,94
< 	    GTK_WIDGET(g_object_new(
< 	                   GTK_TYPE_DIALOG,
< 	                   "use-header-bar", (use_header ? 1 : 0),
< 	                   NULL
< 	               ));
---
> 		GTK_WIDGET(g_object_new(
> 			GTK_TYPE_DIALOG,
> 			"use-header-bar", (use_header ? 1 : 0),
> 			NULL
> 		));
97d96
< 	gtk_window_set_transient_for(GTK_WINDOW(dialog),GTK_WINDOW(gtk_widget_get_toplevel(terminal)));
102,105c101,104
< 	    GTK_DIALOG(dialog),
< 	    _("_Cancel"), GTK_RESPONSE_CANCEL,
< 	    _("_Save"), GTK_RESPONSE_APPLY,
< 	    NULL
---
> 		GTK_DIALOG(dialog),
> 		_("_Cancel"), GTK_RESPONSE_CANCEL,
> 		_("_Save"), GTK_RESPONSE_APPLY,
> 		NULL
120,121c119,120
< 	gtk_grid_set_row_spacing(GTK_GRID(grid),6);
< 	gtk_grid_set_column_spacing(GTK_GRID(grid),12);
---
>  	gtk_grid_set_row_spacing(GTK_GRID(grid),6);
>  	gtk_grid_set_column_spacing(GTK_GRID(grid),12);
147,156d145
< 	// Load current session name
< 	{
< 		g_autofree gchar * session_name = g_strdup(v3270_get_session_name(terminal));
< 		gchar *ptr = strrchr(session_name,':');
< 		if(ptr)
< 			*ptr = 0;
< 		gtk_entry_set_text(GTK_ENTRY(inputs[0]),session_name);
< 	}
< 
< 	// Load current file name
162,167c151,156
< 		    inputs[1],
< 		    GTK_FILE_CHOOSER_ACTION_SAVE,
< 		    _("Save session preferences"),
< 		    NULL,
< 		    "*.3270",
< 		    _("3270 session files")
---
> 			inputs[1],
> 			GTK_FILE_CHOOSER_ACTION_SAVE,
> 			_("Save session preferences"),
> 			NULL,
> 			"*.3270",
> 			_("3270 session files")
177c166
< }
---
>  }
179c168
< void response(GtkWidget *dialog, gint response_id, GtkWidget *terminal) {
---
>  void response(GtkWidget *dialog, gint response_id, GtkWidget *terminal) {
188,190c177,179
< 		    terminal,
< 		    gtk_entry_get_text(GTK_ENTRY(inputs[1])),
< 		    &error
---
> 			terminal,
> 			gtk_entry_get_text(GTK_ENTRY(inputs[1])),
> 			&error
211c200
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/simple.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/simple.c
30,33c30,103
< /**
<  * @brief Implement PW3270 Simple Action.
<  *
<  */
---
>  /**
>   * @brief Implement PW3270 Simple Action.
>   *
>   */
> 
>  #include "private.h"
>  #include <v3270.h>
> 
>  /*
>  static void pw3270SimpleAction_class_init(pw3270SimpleActionClass *klass);
>  static void pw3270SimpleAction_init(pw3270SimpleAction *action);
>  static void change_widget(GAction *object, GtkWidget *from, GtkWidget *to);
> 
>  G_DEFINE_TYPE(pw3270SimpleAction, pw3270SimpleAction, PW3270_TYPE_ACTION);
> 
>  static void activate(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkWidget G_GNUC_UNUSED(*terminal)) {
> 	debug("%s",__FUNCTION__);
>  }
> 
>  static gboolean get_enabled(GAction *action, GtkWidget *terminal) {
> 
>  	if(terminal) {
> 		return lib3270_action_group_get_activatable(v3270_get_session(terminal),PW3270_SIMPLE_ACTION(action)->group.id);
>  	}
> 
>  	return FALSE;
>  }
> 
>  static const gchar * get_icon_name(GAction *action) {
> 	return PW3270_SIMPLE_ACTION(action)->icon_name;
>  }
> 
>  static const gchar * get_label(GAction *action) {
> 	return PW3270_SIMPLE_ACTION(action)->label;
>  }
> 
>  static const gchar * get_tooltip(GAction *action) {
> 	return PW3270_SIMPLE_ACTION(action)->tooltip;
>  }
> 
>  static void dispose(GObject *object) {
> 
> 	pw3270SimpleAction *action = PW3270_SIMPLE_ACTION(object);
> 
> 	if(action->group.listener) {
> 		lib3270_unregister_action_group_listener(pw3270_action_get_session(G_ACTION(object)),action->group.id,action->group.listener);
> 		action->group.listener = NULL;
> 	}
> 
> 	G_OBJECT_CLASS(pw3270SimpleAction_parent_class)->dispose(object);
>  }
> 
>  static void pw3270SimpleAction_class_init(pw3270SimpleActionClass *klass) {
> 
>  	klass->parent_class.get_icon_name	= get_icon_name;
>  	klass->parent_class.get_label 		= get_label;
>  	klass->parent_class.get_tooltip		= get_tooltip;
>  	klass->parent_class.get_enabled		= get_enabled;
> 	klass->parent_class.change_widget	= change_widget;
> 
> 	G_OBJECT_CLASS(klass)->dispose = dispose;
> 
>  }
> 
>  static void pw3270SimpleAction_init(pw3270SimpleAction *action) {
> 
> 	action->icon_name = NULL;
> 	action->label = N_( "No label" );
> 	action->tooltip = NULL;
> 
> 	action->group.id = LIB3270_ACTION_GROUP_NONE;
> 	action->group.listener = NULL;
> 
>  }
35,36c105
< #include "private.h"
< #include <v3270.h>
---
>  void pw3270_simple_action_set_lib3270_property(pw3270SimpleAction *action, const LIB3270_PROPERTY * property) {
37a107,179
> 	if(property) {
> 		action->parent.name	= property->name;
> 		action->tooltip 	= property->summary ? property->summary : property->description;
> 		action->group.id	= property->group;
> 	}
> 
>  }
> 
>  pw3270SimpleAction * pw3270_simple_action_new_from_lib3270(const LIB3270_ACTION * definition, const gchar *name) {
> 
> 	if(!definition)
> 		return NULL;
> 
> 	debug("%s(%s,%s)",__FUNCTION__,definition->name,name);
> 
>  	pw3270SimpleAction * action = (pw3270SimpleAction *) g_object_new(PW3270_TYPE_SIMPLE_ACTION, NULL);
> 
>  	pw3270_simple_action_set_lib3270_property(action, (const LIB3270_PROPERTY *) definition);
> 
>  	action->parent.name = name ? name : definition->name;
> 	action->icon_name = definition->icon;
> 	action->label = definition->label;
> 	action->activate = activate;
> 
> 	return action;
> 
>  }
> 
> 
>  pw3270SimpleAction * pw3270_simple_action_new_from_name(const gchar *source_name, const gchar *name) {
> 	return pw3270_simple_action_new_from_lib3270(lib3270_action_get_by_name(source_name),name);
>  }
> 
>  pw3270SimpleAction * pw3270_simple_action_new() {
>  	return (pw3270SimpleAction *) g_object_new(PW3270_TYPE_SIMPLE_ACTION, NULL);
>  }
> 
>  static gboolean bg_notify_enabled(GAction *action) {
>  	pw3270_action_notify_enabled(action);
> 	return FALSE;
>  }
> 
>  static void event_listener(H3270 G_GNUC_UNUSED(*hSession), void *object) {
> 	g_idle_add((GSourceFunc) bg_notify_enabled, G_ACTION(object));
>  }
> 
>  void change_widget(GAction *object, GtkWidget *from, GtkWidget *to) {
> 
> 	// Remove old listener
> 	pw3270SimpleAction * action = PW3270_SIMPLE_ACTION(object);
> 
> 	if(action->group.listener) {
> 		lib3270_unregister_action_group_listener(pw3270_action_get_session(object),action->group.id,action->group.listener);
> 		action->group.listener = NULL;
> 	}
> 
> 	// Get the current "enabled" state
> 	gboolean enabled = g_action_get_enabled(object);
> 
> 	// Change widget
> 	PW3270_ACTION_CLASS(pw3270SimpleAction_parent_class)->change_widget(object,from,to);
> 
> 	// Setup new listener
> 	if(action->group.id != LIB3270_ACTION_GROUP_NONE && to) {
> 		action->group.listener = lib3270_register_action_group_listener(pw3270_action_get_session(object),action->group.id,event_listener,object);
> 	}
> 
> 	// Does the "enabled" state has changed? If yes notify customers.
> 	if(g_action_get_enabled(object) != enabled)
> 		pw3270_action_notify_enabled(object);
> 
>  }
>  */
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/testprogram/testprogram.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/testprogram/testprogram.c
31,37c31,49
< #include <config.h>
< #include <v3270.h>
< #include <v3270/trace.h>
< #include <lib3270/log.h>
< #include <lib3270/toggle.h>
< #include <pw3270/actions.h>
< #include "../private.h"
---
>  #include <config.h>
>  #include <v3270.h>
>  #include <v3270/trace.h>
>  #include <lib3270/log.h>
>  #include <lib3270/toggle.h>
>  #include <pw3270/actions.h>
>  #include "../private.h"
> 
>  /*---[ Implement ]----------------------------------------------------------------------------------*/
> 
>  GtkWidget * pw3270_window_get_terminal_widget(GtkWidget *window) {
>  	return g_object_get_data(G_OBJECT(window), "v3270_terminal");
>  }
> 
>  /*
>  H3270 * pw3270_window_get_session_handle(GtkWidget *window) {
>  	return v3270_get_session(pw3270_window_get_terminal_widget(window));
>  }
>  */
39,51c51
< /*---[ Implement ]----------------------------------------------------------------------------------*/
< 
< GtkWidget * pw3270_window_get_terminal_widget(GtkWidget *window) {
< 	return g_object_get_data(G_OBJECT(window), "v3270_terminal");
< }
< 
< /*
< H3270 * pw3270_window_get_session_handle(GtkWidget *window) {
< 	return v3270_get_session(pw3270_window_get_terminal_widget(window));
< }
< */
< 
< static gboolean handle_command(GtkWidget *trace, const gchar *cmd, const gchar *args, GtkWidget *window) {
---
>  static gboolean handle_command(GtkWidget *trace, const gchar *cmd, const gchar *args, GtkWidget *window) {
70c70
< }
---
>  }
72c72
< static void activate(GtkApplication* app, G_GNUC_UNUSED gpointer user_data) {
---
>  static void activate(GtkApplication* app, G_GNUC_UNUSED gpointer user_data) {
117,118c117,118
< 	GtkApplication *app;
< 	int status;
---
>   GtkApplication *app;
>   int status;
120c120
< 	app = gtk_application_new ("br.app.pw3270",G_APPLICATION_FLAGS_NONE);
---
>   app = gtk_application_new ("br.com.bb.pw3270",G_APPLICATION_FLAGS_NONE);
122c122
< 	g_signal_connect (app, "activate", G_CALLBACK(activate), NULL);
---
>   g_signal_connect (app, "activate", G_CALLBACK(activate), NULL);
124,125c124,125
< 	status = g_application_run (G_APPLICATION (app), argc, argv);
< 	g_object_unref (app);
---
>   status = g_application_run (G_APPLICATION (app), argc, argv);
>   g_object_unref (app);
127c127
< 	g_message("rc=%d",status);
---
>   g_message("rc=%d",status);
129c129
< 	return 0;
---
>   return 0;
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/tools.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/tools.c
30,31c30,31
< #include "private.h"
< #include <v3270.h>
---
>  #include "private.h"
>  #include <v3270.h>
33c33
< gchar * g_action_get_text(GAction *action, const gchar * property_name) {
---
>  gchar * g_action_get_text(GAction *action, const gchar * property_name) {
46c46
< 	return rc;
---
>  	return rc;
48c48
< }
---
>  }
50c50
< gchar * g_action_get_tooltip(GAction *action) {
---
>  gchar * g_action_get_tooltip(GAction *action) {
52c52
< }
---
>  }
54c54
< gchar * g_action_get_label(GAction *action) {
---
>  gchar * g_action_get_label(GAction *action) {
56c56
< }
---
>  }
58c58
< gchar * g_action_get_icon_name(GAction *action) {
---
>  gchar * g_action_get_icon_name(GAction *action) {
60c60
< }
---
>  }
62c62
< static GdkPixbuf * pixbuf_from_icon_name(GValue *value, gint width, gint G_GNUC_UNUSED(height), GtkIconLookupFlags flags) {
---
>  static GdkPixbuf * pixbuf_from_icon_name(GValue *value, gint width, gint G_GNUC_UNUSED(height), GtkIconLookupFlags flags) {
70,75c70,75
< 	           gtk_icon_theme_get_default(),
< 	           icon_name,
< 	           width,
< 	           flags, // GTK_ICON_LOOKUP_GENERIC_FALLBACK,
< 	           NULL
< 	       );
---
> 					gtk_icon_theme_get_default(),
> 					icon_name,
> 					width,
> 					flags, // GTK_ICON_LOOKUP_GENERIC_FALLBACK,
> 					NULL
> 			);
77c77
< }
---
>  }
79c79
< GdkPixbuf * g_action_get_pixbuf(GAction *action, GtkIconSize icon_size, GtkIconLookupFlags flags) {
---
>  GdkPixbuf * g_action_get_pixbuf(GAction *action, GtkIconSize icon_size, GtkIconLookupFlags flags) {
118c118
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/view.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/view.c
30,38c30,38
< /**
<  * @brief Implement PW3270 Action view widget and related tools.
<  *
<  */
< 
< #include <config.h>
< #include <pw3270.h>
< #include <pw3270/actions.h>
< #include <lib3270/log.h>
---
>  /**
>   * @brief Implement PW3270 Action view widget and related tools.
>   *
>   */
> 
>  #include <config.h>
>  #include <pw3270.h>
>  #include <pw3270/actions.h>
>  #include <lib3270/log.h>
40c40
< enum {
---
>  enum {
45c45
< };
---
>  };
47,51c47,52
< struct ListElement {
< 	GdkPixbuf	* pixbuf;
< 	gchar		* action_name;
< 	gchar		* action_label;
< };
---
>  struct ListElement {
> // 	GAction		* action;
>  	GdkPixbuf	* pixbuf;
>  	gchar		* action_name;
>  	gchar		* action_label;
>  };
53c54
< static void list_element_free(struct ListElement *element);
---
>  static void list_element_free(struct ListElement *element);
55c56
< static gint view_sort(GtkTreeModel *model, GtkTreeIter *a, GtkTreeIter *b, gpointer G_GNUC_UNUSED(user_data)) {
---
>  static gint view_sort(GtkTreeModel *model, GtkTreeIter *a, GtkTreeIter *b, gpointer G_GNUC_UNUSED(user_data)) {
70c71
< }
---
>  }
72c73
< GtkWidget * pw3270_action_view_new() {
---
>  GtkWidget * pw3270_action_view_new() {
87,92c88,93
< 	    GTK_TREE_VIEW(view),
< 	    -1,
< 	    _("Icon"),
< 	    pixbuf_renderer,
< 	    "pixbuf",COLUMN_PIXBUF,
< 	    NULL
---
> 		GTK_TREE_VIEW(view),
> 		-1,
> 		_("Icon"),
> 		pixbuf_renderer,
> 			"pixbuf",COLUMN_PIXBUF,
> 			NULL
96,101c97,102
< 	    GTK_TREE_VIEW(view),
< 	    -1,
< 	    _("Label"),
< 	    text_renderer,
< 	    "text",COLUMN_LABEL,
< 	    NULL
---
> 		GTK_TREE_VIEW(view),
> 		-1,
> 		_("Label"),
> 		text_renderer,
> 			"text",COLUMN_LABEL,
> 			NULL
107c108
< }
---
>  }
109c110
< void pw3270_action_view_append(GtkWidget *widget, const gchar *label, GdkPixbuf *pixbuf, const gchar *action_name, PW3270ActionViewFlag flags) {
---
>  void pw3270_action_view_append(GtkWidget *widget, const gchar *label, GdkPixbuf *pixbuf, const gchar *action_name, PW3270ActionViewFlag flags) {
116,122c117,123
< 	    store,
< 	    &iter,
< 	    COLUMN_PIXBUF,			pixbuf,
< 	    COLUMN_LABEL, 			label,
< 	    COLUMN_ACTION_NAME,		action_name,
< 	    COLUMN_FLAGS,			(gint) flags,
< 	    -1
---
> 		store,
> 		&iter,
> 		COLUMN_PIXBUF,			pixbuf,
> 		COLUMN_LABEL, 			label,
> 		COLUMN_ACTION_NAME,		action_name,
> 		COLUMN_FLAGS,			(gint) flags,
> 		-1
126c127
< }
---
>  }
128c129
< void pw3270_action_view_order_by_label(GtkWidget *view) {
---
>  void pw3270_action_view_order_by_label(GtkWidget *view) {
133,135c134,136
< 	    GTK_TREE_SORTABLE(gtk_tree_view_get_model(GTK_TREE_VIEW(view))),
< 	    COLUMN_LABEL,
< 	    GTK_SORT_ASCENDING
---
> 		GTK_TREE_SORTABLE(gtk_tree_view_get_model(GTK_TREE_VIEW(view))),
> 		COLUMN_LABEL,
> 		GTK_SORT_ASCENDING
137c138
< }
---
>  }
139c140
< static void pw3270_action_view_append_element(GtkListStore * store, struct ListElement * element) {
---
>  static void pw3270_action_view_append_element(GtkListStore * store, struct ListElement * element) {
144,150c145,151
< 	    store,
< 	    &iter,
< 	    COLUMN_PIXBUF,		element->pixbuf,
< 	    COLUMN_LABEL, 		element->action_label,
< 	    COLUMN_ACTION_NAME,	element->action_name,
< 	    COLUMN_FLAGS,		(gint) PW3270_ACTION_VIEW_ALLOW_MOVE,
< 	    -1
---
> 		store,
> 		&iter,
> 		COLUMN_PIXBUF,		element->pixbuf,
> 		COLUMN_LABEL, 		element->action_label,
> 		COLUMN_ACTION_NAME,	element->action_name,
> 		COLUMN_FLAGS,		(gint) PW3270_ACTION_VIEW_ALLOW_MOVE,
> 		-1
153c154
< }
---
>  }
155c156
< Pw3270ActionList * pw3270_action_list_move_action(Pw3270ActionList *action_list, const gchar *action_name, GtkWidget *view) {
---
>  Pw3270ActionList * pw3270_action_list_move_action(Pw3270ActionList *action_list, const gchar *action_name, GtkWidget *view) {
176c177
< }
---
>  }
178c179
< void pw3270_action_view_set_actions(GtkWidget *view, Pw3270ActionList *list) {
---
>  void pw3270_action_view_set_actions(GtkWidget *view, Pw3270ActionList *list) {
189c190
< }
---
>  }
191c192
< static GSList * append_action(GSList * list, const gchar *prefix, GAction *action) {
---
>  static GSList * append_action(GSList * list, const gchar *prefix, GAction *action) {
213,218c214,219
< 	           list,
< 	           label,
< 	           pixbuf,
< 	           action_name,
< 	           PW3270_ACTION_VIEW_ALLOW_MOVE
< 	       );
---
> 				list,
> 				label,
> 				pixbuf,
> 				action_name,
> 				PW3270_ACTION_VIEW_ALLOW_MOVE
> 			);
223c224
< }
---
>  }
225c226
< Pw3270ActionList * pw3270_action_list_new(GtkApplication *application) {
---
>  Pw3270ActionList * pw3270_action_list_new(GtkApplication *application) {
227c228
< 	GSList * list = NULL;
---
>  	GSList * list = NULL;
229,230c230,231
< 	gchar ** action_names;
< 	size_t ix;
---
>  	gchar ** action_names;
>  	size_t ix;
232c233
< 	// Get application actions.
---
>  	// Get application actions.
235c236
< 	for(ix = 0; action_names[ix]; ix++) {
---
> 	for(ix = 0; action_names[ix];ix++) {
247c248
< 		for(ix = 0; action_names[ix]; ix++) {
---
> 		for(ix = 0; action_names[ix];ix++) {
254,255c255,256
< 	return (Pw3270ActionList *) list;
< }
---
>  	return (Pw3270ActionList *) list;
>  }
257c258
< Pw3270ActionList * pw3270_action_list_append(Pw3270ActionList *action_list, const gchar *label, GdkPixbuf *pixbuf, const gchar *action_name, const PW3270ActionViewFlag G_GNUC_UNUSED(flags)) {
---
>  Pw3270ActionList * pw3270_action_list_append(Pw3270ActionList *action_list, const gchar *label, GdkPixbuf *pixbuf, const gchar *action_name, const PW3270ActionViewFlag G_GNUC_UNUSED(flags)) {
260,265c261,266
< 	                               g_malloc0(
< 	                                   sizeof(struct ListElement)
< 	                                   + strlen(action_name)
< 	                                   + strlen(label)
< 	                                   + 3
< 	                               );
---
> 										g_malloc0(
> 											sizeof(struct ListElement)
> 											+ strlen(action_name)
> 											+ strlen(label)
> 											+ 3
> 										);
281c282
< };
---
>  };
283c284
< void list_element_free(struct ListElement *element) {
---
>  void list_element_free(struct ListElement *element) {
285c286
< 	if(element->pixbuf) {
---
>  	if(element->pixbuf) {
288c289
< 	}
---
>  	}
290c291
< 	g_free(element);
---
>  	g_free(element);
292c293
< }
---
>  }
294c295
< void pw3270_action_list_free(Pw3270ActionList *action_list) {
---
>  void pw3270_action_list_free(Pw3270ActionList *action_list) {
296c297
< }
---
>  }
298c299
< void pw3270_action_view_move_selected(GtkWidget *from, GtkWidget *to) {
---
>  void pw3270_action_view_move_selected(GtkWidget *from, GtkWidget *to) {
307,308c308,309
< 	                   gtk_tree_view_get_selection(GTK_TREE_VIEW(from)),
< 	                   &fromModel);
---
> 							gtk_tree_view_get_selection(GTK_TREE_VIEW(from)),
> 							&fromModel);
314c315
< 	for(ix=0; ix < rowCount && item; ix++) {
---
> 	for(ix=0;ix < rowCount && item; ix++) {
354,360c355,361
< 					    store,
< 					    &ins,
< 					    COLUMN_PIXBUF,		g_value_get_object(&pixbuf),
< 					    COLUMN_LABEL, 		g_value_get_string(&label),
< 					    COLUMN_ACTION_NAME,	g_value_get_string(&action_name),
< 					    COLUMN_FLAGS,		(flags == 3 ? 3 : 2),
< 					    -1
---
> 						store,
> 						&ins,
> 						COLUMN_PIXBUF,		g_value_get_object(&pixbuf),
> 						COLUMN_LABEL, 		g_value_get_string(&label),
> 						COLUMN_ACTION_NAME,	g_value_get_string(&action_name),
> 						COLUMN_FLAGS,		(flags == 3 ? 3 : 2),
> 						-1
379c380
< 		}
---
>         }
383c384
< }
---
>  }
385c386
< gboolean get_action_name(GtkTreeModel *model, GtkTreePath G_GNUC_UNUSED(*path), GtkTreeIter *iter, GString *str) {
---
>  gboolean get_action_name(GtkTreeModel *model, GtkTreePath G_GNUC_UNUSED(*path), GtkTreeIter *iter, GString *str) {
397c398
< }
---
>  }
399c400
< gchar * pw3270_action_view_get_action_names(GtkWidget *widget) {
---
>  gchar * pw3270_action_view_get_action_names(GtkWidget *widget) {
401c402
< 	GString *str = g_string_new("");
---
>  	GString *str = g_string_new("");
403,406c404,407
< 	gtk_tree_model_foreach(
< 	    gtk_tree_view_get_model(GTK_TREE_VIEW(widget)),
< 	    (GtkTreeModelForeachFunc) get_action_name,
< 	    str );
---
>  	gtk_tree_model_foreach(
> 		gtk_tree_view_get_model(GTK_TREE_VIEW(widget)),
> 		(GtkTreeModelForeachFunc) get_action_name,
> 		str );
409c410
< }
---
>  }
411c412
< static void check_4_sensitive(GtkTreeModel *model, GtkTreePath G_GNUC_UNUSED(*path), GtkTreeIter *iter, gboolean *sensitive) {
---
>  static void check_4_sensitive(GtkTreeModel *model, GtkTreePath *path, GtkTreeIter *iter, gboolean *sensitive) {
421c422
< }
---
>  }
423c424
< static void selection_changed(GtkTreeSelection *selection, GtkWidget *button) {
---
>  static void selection_changed(GtkTreeSelection *selection, GtkWidget *button) {
436c437
< }
---
>  }
438c439
< struct MoveData {
---
>  struct MoveData {
441c442
< };
---
>  };
443,445c444,446
< static void move_clicked(GtkButton G_GNUC_UNUSED(*button), struct MoveData *args) {
< 	pw3270_action_view_move_selected(args->from,args->to);
< }
---
>   static void move_clicked(GtkButton G_GNUC_UNUSED(*button), struct MoveData *args) {
>  	pw3270_action_view_move_selected(args->from,args->to);
>  }
447c448
< GtkWidget * pw3270_action_view_move_button_new(GtkWidget *from, GtkWidget *to, const gchar *icon_name) {
---
>  GtkWidget * pw3270_action_view_move_button_new(GtkWidget *from, GtkWidget *to, const gchar *icon_name) {
463,466c464,467
< 	    gtk_tree_view_get_selection(GTK_TREE_VIEW(from)),
< 	    "changed",
< 	    G_CALLBACK(selection_changed),
< 	    button
---
> 		gtk_tree_view_get_selection(GTK_TREE_VIEW(from)),
> 		"changed",
> 		G_CALLBACK(selection_changed),
> 		button
470,473c471,474
< 	    button,
< 	    "clicked",
< 	    G_CALLBACK(move_clicked),
< 	    data
---
> 		button,
> 		"clicked",
> 		G_CALLBACK(move_clicked),
> 		data
477c478
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/window.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/actions/window.c
30,33c30,33
< /**
<  * @brief Integrate pw3270 actions with the application window.
<  *
<  */
---
>  /**
>   * @brief Integrate pw3270 actions with the application window.
>   *
>   */
35,38c35,38
< #include "private.h"
< #include <lib3270/actions.h>
< #include <v3270/actions.h>
< #include <pw3270/window.h>
---
>  #include "private.h"
>  #include <lib3270/actions.h>
>  #include <v3270/actions.h>
>  #include <pw3270/window.h>
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/actions/about.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/actions/about.c
30,33c30,32
< #include <config.h>
< #include "../private.h"
< #include <pw3270/actions.h>
< #include <pw3270/application.h>
---
>  #include "../private.h"
>  #include <pw3270/actions.h>
>  #include <pw3270/application.h>
35c34
< static GtkWidget * factory(PW3270Action G_GNUC_UNUSED(*action), GtkApplication *application) {
---
>  static GtkWidget * factory(PW3270Action G_GNUC_UNUSED(*action), GtkApplication G_GNUC_UNUSED(*application)) {
39,46d37
< 	if(GTK_IS_APPLICATION(application)) {
< 
< 		gtk_window_set_transient_for(GTK_WINDOW(dialog),gtk_application_get_active_window(GTK_APPLICATION(application)));
< 		gtk_window_set_destroy_with_parent(GTK_WINDOW(dialog),TRUE);
< 		gtk_window_set_modal(GTK_WINDOW(dialog),TRUE);
< 
< 	}
< 
49,60c40,50
< 		static const char * names[] = {
< 				G_STRINGIFY(PRODUCT_NAME) "-about.svg",
< 				G_STRINGIFY(PRODUCT_NAME) "-logo.svg",
< 				G_STRINGIFY(PRODUCT_NAME) ".svg",
< 				G_STRINGIFY(PRODUCT_NAME) "-logo.png",
< 				G_STRINGIFY(PRODUCT_NAME) ".png",
< 
< 				G_STRINGIFY(PACKAGE_NAME) "-about.svg",
< 				G_STRINGIFY(PACKAGE_NAME) "-logo.svg",
< 				G_STRINGIFY(PACKAGE_NAME) ".svg",
< 				G_STRINGIFY(PACKAGE_NAME) "-logo.png",
< 				G_STRINGIFY(PACKAGE_NAME) ".png",
---
> #ifdef DEBUG
> 		static const char * logo = "./branding/" G_STRINGIFY(PRODUCT_NAME) "-logo.svg";
> 		static const char * icon = "./branding/" G_STRINGIFY(PRODUCT_NAME) ".svg";
> #else
> 		lib3270_autoptr(char) logo = lib3270_build_data_filename(G_STRINGIFY(PRODUCT_NAME) "-logo.svg",NULL);
> 		lib3270_autoptr(char) icon = lib3270_build_data_filename("icons", G_STRINGIFY(PRODUCT_NAME) ".svg",NULL);
> #endif // DEBUG
> 
> 		const char * imgs[] = {
> 			logo,
> 			icon
65c55
< 		for(ix = 0; ix < G_N_ELEMENTS(names); ix++) {
---
> 		for(ix = 0; ix < G_N_ELEMENTS(imgs);ix++) {
67,74c57
< #ifdef DEBUG
< 			g_autofree gchar * filename = g_build_filename(".","branding",names[ix],NULL);
< 			debug("Searching for '%s'",filename);
< #else
< 			lib3270_autoptr(char) filename = lib3270_build_data_filename(names[ix],NULL);
< #endif // DEBUG
< 
< 			if(!g_file_test(filename,G_FILE_TEST_IS_REGULAR))
---
> 			if(!g_file_test(imgs[ix],G_FILE_TEST_IS_REGULAR))
78c61
< 			g_autoptr(GdkPixbuf) pix = gdk_pixbuf_new_from_file_at_size(filename,-1,150,&error);
---
> 			g_autoptr(GdkPixbuf) pix = gdk_pixbuf_new_from_file_at_size(imgs[ix],-1,150,&error);
80c63
< 				g_warning("Can't load \"%s\": %s",filename,error->message);
---
> 				g_warning("Can't load \"%s\": %s",imgs[ix],error->message);
91a75,99
> 		/*
> 		if(g_file_test(logo,G_FILE_TEST_EXISTS)) {
> 			GError 		* error	= NULL;
> 			GdkPixbuf	* pix	= gdk_pixbuf_new_from_file(logo,&error);
> 
> 			gtk_about_dialog_set_logo(dialog,pix);
> 
> 			if(pix) {
> 
> 				g_object_unref(pix);
> 
> 			} else {
> 
> 				g_warning("Can't load %s: %s",logo,error->message);
> 				g_error_free(error);
> 
> 			}
> 
> 		} else {
> 
> 			g_message("%s: %s",logo,strerror(ENOENT));
> 
> 		}
> 		*/
> 
97,102c105,106
< #ifdef ENABLE_UNSTABLE_FEATURES
< 		                                 _("Unstable version %s-%s"),
< #else
< 		                                 _("Version %s-%s"),
< #endif // ENABLE_UNSTABLE_FEATURES
< 		                                 PACKAGE_VERSION,
---
> 											_("Version %s-%s"),
> 											PACKAGE_VERSION,
104c108
< 		                                 PACKAGE_RELEASE
---
> 											PACKAGE_RELEASE
106c110
< 		                                 G_STRINGIFY(BUILD_DATE)
---
> 											G_STRINGIFY(BUILD_DATE)
108c112
< 		                             );
---
> 										);
117,119c121,122
< 		    g_strdup_printf(
< 		        _( "%s for %s." ),
< 		        _( "IBM 3270 Terminal emulator" ),
---
> 		g_strdup_printf(
> 				_( "3270 terminal emulator for %s." ),
121c124
< 		        _( "64 bits Windows" )
---
> 				_( "64 bits Windows" )
123c126
< 		        _( "32 bits Windows" )
---
> 				_( "32 bits Windows" )
125c128
< 		        _( "32 bits Linux" )
---
> 				_( "32 bits Linux" )
127c130
< 		        _( "64 bits Linux" )
---
> 				_( "64 bits Linux" )
129c132
< 		        "GTK"
---
> 				"GTK"
131c134
< 		    );
---
> 				);
147c150,151
< 		static const gchar *references[]	= {
---
> 		static const gchar *references[]	=
> 		{
167c171
< 	gtk_about_dialog_set_copyright(dialog, _("Copyright © 2008 Banco do Brasil S.A.") );
---
> 	gtk_about_dialog_set_copyright(dialog, "Copyright © 2008 Banco do Brasil S.A." );
189a194,196
> //	gtk_about_dialog_set_website(dialog,NC_("ProjectURL","https://portal.softwarepublico.gov.br/social/pw3270/"));
> //	gtk_about_dialog_set_website_label(dialog,NC_("ProjectURLLabel","Brazilian Public Software Portal" ));
> 
197a205
> 	gtk_widget_show_all(GTK_WIDGET(dialog));
201,203c209,211
< 	    g_application_get_default(),
< 	    "pw3270_plugin_set_about_dialog",
< 	    dialog
---
> 		g_application_get_default(),
> 		"pw3270_plugin_set_about_dialog",
> 		dialog
206,207d213
< 	gtk_widget_show_all(GTK_WIDGET(dialog));
< 
210c216
< }
---
>  }
212c218
< GAction * pw3270_about_action_new() {
---
>  GAction * pw3270_about_action_new() {
214c220
< 	PW3270Action * action = pw3270_dialog_action_new(factory);
---
>  	PW3270Action * action = pw3270_dialog_action_new(factory);
216,218c222,224
< 	action->name = "about";
< 	action->label = _("About PW3270");
< 	action->icon_name = "help-about";
---
>  	action->name = "about";
>  	action->label = _("About PW3270");
>  	action->icon_name = "help-about";
221c227
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/actions/open.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/actions/open.c
30,40c30,39
< /**
<  * @brief Implement PW3270 "open" actions.
<  *
<  */
< 
< #include "../private.h"
< #include <v3270.h>
< #include <pw3270.h>
< #include <pw3270/application.h>
< #include <pw3270/actions.h>
< #include <v3270/keyfile.h>
---
>  /**
>   * @brief Implement PW3270 "open" actions.
>   *
>   */
> 
>  #include "../private.h"
>  #include <v3270.h>
>  #include <pw3270.h>
>  #include <pw3270/application.h>
>  #include <pw3270/actions.h>
42c41
< static GtkWidget * session_dialog_new(PW3270Action *action, GtkApplication *application) {
---
>  static GtkWidget * session_dialog_new(PW3270Action *action, GtkApplication *application) {
45,52c44,51
< 	    gtk_file_chooser_dialog_new(
< 	        action->label,
< 	        gtk_application_get_active_window(application),
< 	        GTK_FILE_CHOOSER_ACTION_OPEN,
< 	        _("Open Session"), GTK_RESPONSE_OK,
< 	        _("Cancel"),GTK_RESPONSE_CANCEL,
< 	        NULL
< 	    );
---
> 		gtk_file_chooser_dialog_new(
> 				action->label,
> 				gtk_application_get_active_window(application),
> 				GTK_FILE_CHOOSER_ACTION_OPEN,
> 				_("Open Session"), GTK_RESPONSE_OK,
> 				_("Cancel"),GTK_RESPONSE_CANCEL,
> 				NULL
> 		);
58c57
< }
---
>  }
60c59
< static void open_window(GtkWidget *dialog, gint response_id, GtkApplication *application) {
---
>  static void open_window(GtkWidget *dialog, gint response_id, GtkApplication *application) {
62c61
< 	if(response_id == GTK_RESPONSE_OK) {
---
>  	if(response_id == GTK_RESPONSE_OK) {
72c71
< 	}
---
>  	}
74c73
< 	gtk_widget_destroy(dialog);
---
>  	gtk_widget_destroy(dialog);
76c75
< }
---
>  }
78c77
< static void open_session(GtkWidget *file_chooser, gint response_id, GtkApplication *application) {
---
>  static void open_tab(GtkWidget *dialog, gint response_id, GtkApplication *application) {
80,131c79
< 	if(response_id == GTK_RESPONSE_OK) {
< 
< 		g_autofree gchar * file_name = gtk_file_chooser_get_filename(GTK_FILE_CHOOSER(file_chooser));
< 
< 		if(file_name) {
< 			GError * error = NULL;
< 			GtkWidget * window = GTK_WIDGET(gtk_application_get_active_window(GTK_APPLICATION(application)));
< 			GtkWidget * terminal = pw3270_application_window_get_active_terminal(window);
< 
< 			v3270_disconnect(terminal);
< 			v3270_key_file_open(terminal,file_name,&error);
< 
< 			if(error) {
< 
< 				GtkWidget * dialog = gtk_message_dialog_new_with_markup(
< 				                         GTK_WINDOW(gtk_widget_get_toplevel(terminal)),
< 				                         GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT,
< 				                         GTK_MESSAGE_ERROR,
< 				                         GTK_BUTTONS_OK,
< 				                         _("Can't use \"%s\""), file_name
< 				                     );
< 
< 				gtk_message_dialog_format_secondary_text(GTK_MESSAGE_DIALOG(dialog),"%s",error->message);
< 
< 				gtk_window_set_title(GTK_WINDOW(dialog),_("Can't load session file"));
< 
< 				gtk_widget_show_all(dialog);
< 
< 				g_signal_connect(dialog,"close",G_CALLBACK(gtk_widget_destroy),NULL);
< 				g_signal_connect(dialog,"response",G_CALLBACK(gtk_widget_destroy),NULL);
< 
< 				g_error_free(error);
< 
< 			} else {
< 
< 				gtk_window_present(GTK_WINDOW(window));
< 
< 			}
< 
< 
< 		}
< 
< 	}
< 
< 	gtk_widget_destroy(file_chooser);
< 
< }
< 
< 
< static void open_tab(GtkWidget *dialog, gint response_id, GtkApplication *application) {
< 
< 	if(response_id == GTK_RESPONSE_OK) {
---
>  	if(response_id == GTK_RESPONSE_OK) {
141c89
< 	}
---
>  	}
143c91
< 	gtk_widget_destroy(dialog);
---
>  	gtk_widget_destroy(dialog);
145c93
< }
---
>  }
147c95
< static GtkWidget * open_window_factory(PW3270Action *action, GtkApplication *application) {
---
>  static GtkWidget * open_window_factory(PW3270Action *action, GtkApplication *application) {
153c101
< }
---
>  }
155,163c103
< static GtkWidget * open_session_factory(PW3270Action *action, GtkApplication *application) {
< 
< 	GtkWidget * dialog = session_dialog_new(action,application);
< 	g_signal_connect(dialog,"response",G_CALLBACK(open_session),application);
< 	return dialog;
< 
< }
< 
< static GtkWidget * open_tab_factory(PW3270Action *action, GtkApplication *application) {
---
>  static GtkWidget * open_tab_factory(PW3270Action *action, GtkApplication *application) {
169,182c109
< }
< 
< GAction * pw3270_open_session_action_new() {
< 
< 	PW3270Action * action = pw3270_dialog_action_new(open_session_factory);
< 
< 	action->name = "open.session";
< 	action->label = _( "Open session" );
< 	action->tooltip = _( "Open session on the active terminal" );
< 	action->icon_name = "document-open";
< 
< 	return G_ACTION(action);
< 
< }
---
>  }
184c111
< GAction * pw3270_open_window_action_new() {
---
>  GAction * pw3270_open_window_action_new() {
188c115
< 	action->name = "open.session.window";
---
>  	action->name = "open.session.window";
194c121
< }
---
>  }
196c123
< GAction * pw3270_open_tab_action_new() {
---
>  GAction * pw3270_open_tab_action_new() {
200c127
< 	action->name = "open.session.tab";
---
>  	action->name = "open.session.tab";
206c133
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/actions/preferences.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/actions/preferences.c
30,35c30,35
< #include "../private.h"
< #include <pw3270.h>
< #include <pw3270/application.h>
< #include <pw3270/actions.h>
< #include <pw3270/settings.h>
< #include <pw3270/toolbar.h>
---
>  #include "../private.h"
>  #include <pw3270.h>
>  #include <pw3270/application.h>
>  #include <pw3270/actions.h>
>  #include <pw3270/settings.h>
>  #include <pw3270/toolbar.h>
37c37
< static GtkWidget * factory(PW3270Action * action, GtkApplication *application) {
---
>  static GtkWidget * factory(PW3270Action * action, GtkApplication *application) {
56,58c56,58
< 	    G_APPLICATION(application),
< 	    "pw3270_plugin_set_application_preferences",
< 	    dialog
---
> 		G_APPLICATION(application),
> 		"pw3270_plugin_set_application_preferences",
> 		dialog
61c61
< 	if(pw3270_application_get_ui_style(G_APPLICATION(application)) != PW3270_UI_STYLE_CLASSICAL) {
---
> 	if(pw3270_application_get_ui_style(G_APPLICATION(application)) != PW3270_UI_STYLE_CLASSICAL){
69c69
< }
---
>  }
71c71
< GAction * pw3270_preferences_action_new() {
---
>  GAction * pw3270_preferences_action_new() {
73c73
< 	PW3270Action * action = pw3270_dialog_action_new(factory);
---
>  	PW3270Action * action = pw3270_dialog_action_new(factory);
75,77c75,77
< 	action->name = "preferences";
< 	action->label = _("Application preferences");
< 	action->icon_name = "preferences-system";
---
>  	action->name = "preferences";
>  	action->label = _("Application preferences");
>  	action->icon_name = "preferences-system";
81c81
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/actions/window.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/actions/window.c
34,36c34,36
< #include "../private.h"
< #include <pw3270/application.h>
< #include <pw3270/actions.h>
---
>  #include "../private.h"
>  #include <pw3270/application.h>
>  #include <pw3270/actions.h>
38c38
< static void quit_activated(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkApplication *application) {
---
>  static void quit_activated(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkApplication *application) {
57c57
< }
---
>  }
59c59
< GAction * pw3270_quit_action_new() {
---
>  GAction * pw3270_quit_action_new() {
66c66
< 	action->icon_name = "application-exit";
---
> 	action->icon_name = "gtk-quit";
69,70c69,70
< 	return G_ACTION(action);
< }
---
>  	return G_ACTION(action);
>  }
72c72
< static void new_tab_activated(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkApplication *application) {
---
>  static void new_tab_activated(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkApplication *application) {
74,75c74,75
< 	debug("%s",__FUNCTION__);
< 	pw3270_application_window_new_tab(GTK_WIDGET(gtk_application_get_active_window(GTK_APPLICATION(application))), NULL);
---
>  	debug("%s",__FUNCTION__);
>  	pw3270_application_window_new_tab(GTK_WIDGET(gtk_application_get_active_window(GTK_APPLICATION(application))), NULL);
77c77
< }
---
>  }
79c79
< GAction * pw3270_new_tab_action_new() {
---
>  GAction * pw3270_new_tab_action_new() {
83c83
< 	action->name = "tab.new";
---
> 	action->name = "new.tab";
89,90c89,90
< 	return G_ACTION(action);
< }
---
>  	return G_ACTION(action);
>  }
92c92
< static void new_window_activated(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkApplication *application) {
---
>  static void new_window_activated(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkApplication *application) {
94,95c94,95
< 	debug("%s",__FUNCTION__);
< 	g_application_activate(G_APPLICATION(application));
---
>  	debug("%s",__FUNCTION__);
>  	g_application_activate(G_APPLICATION(application));
97c97
< }
---
>  }
99c99
< GAction * pw3270_new_window_action_new() {
---
>  GAction * pw3270_new_window_action_new() {
103c103
< 	action->name = "window.new";
---
> 	action->name = "new.window";
109,110c109,110
< 	return G_ACTION(action);
< }
---
>  	return G_ACTION(action);
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/application.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/application.c
1,2d0
< /* SPDX-License-Identifier: LGPL-3.0-or-later */
< 
4c2,19
<  * Copyright (C) 2008 Banco do Brasil S.A.
---
>  * "Software pw3270, desenvolvido com base nos códigos fontes do WC3270  e X3270
>  * (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
>  * aplicativos mainframe. Registro no INPI sob o nome G3270.
>  *
>  * Copyright (C) <2008> <Banco do Brasil S.A.>
>  *
>  * Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
>  * os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
>  * Free Software Foundation.
>  *
>  * Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
>  * GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
>  * A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
>  * obter mais detalhes.
>  *
>  * Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
>  * programa; se não, escreva para a Free Software Foundation, Inc., 51 Franklin
>  * St, Fifth Floor, Boston, MA  02110-1301  USA
6,9c21
<  * This program is free software: you can redistribute it and/or modify
<  * it under the terms of the GNU Lesser General Public License as published
<  * by the Free Software Foundation, either version 3 of the License, or
<  * (at your option) any later version.
---
>  * Este programa está nomeado como - e possui - linhas de código.
11,14c23,30
<  * This program is distributed in the hope that it will be useful,
<  * but WITHOUT ANY WARRANTY; without even the implied warranty of
<  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
<  * GNU General Public License for more details.
---
>  * Contatos:
>  *
>  * perry.werneck@gmail.com	(Alexandre Perry de Souza Werneck)
>  * erico.mendonca@gmail.com	(Erico Mascarenhas Mendonça)
>  *
>  * References:
>  *
>  * https://fossies.org/linux/gtk+/examples/plugman.c
16,17d31
<  * You should have received a copy of the GNU Lesser General Public License
<  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
20,28c34,39
< #include "private.h"
< #include <pw3270.h>
< #include <pw3270/application.h>
< #include <pw3270/actions.h>
< #include <pw3270/keypad.h>
< #include <stdlib.h>
< #include <sys/types.h>
< #include <sys/stat.h>
< #include <fcntl.h>
---
>  #include "private.h"
>  #include <pw3270.h>
>  #include <pw3270/application.h>
>  #include <pw3270/actions.h>
>  #include <pw3270/keypad.h>
>  #include <stdlib.h>
30c41
< enum {
---
>  enum {
33d43
< 	PROP_LOGFILE,
36c46,52
< };
---
>  };
> 
>  static GParamSpec * props[NUM_PROPERTIES];
> 
>  struct _pw3270ApplicationClass {
>  	GtkApplicationClass parent_class;
>  };
38c54,55
< static GParamSpec * props[NUM_PROPERTIES];
---
>  struct _pw3270Application {
>  	GtkApplication parent;
40,42c57,58
< static void 	startup(GApplication * application);
< static void 	activate(GApplication * application);
< static void		finalize(GObject *object);
---
>  	GSettings * settings;
> 	GList * keypads;
44c60
< G_DEFINE_TYPE(pw3270Application, pw3270Application, GTK_TYPE_APPLICATION);
---
>  	GSList * plugins;		///< @brief Handlers of the loaded plugins.
46c62,72
< static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
---
>  	PW3270_UI_STYLE	ui_style;
> 
>  };
> 
>  static void 		startup(GApplication * application);
>  static void 		activate(GApplication * application);
>  static void		finalize(GObject *object);
> 
>  G_DEFINE_TYPE(pw3270Application, pw3270Application, GTK_TYPE_APPLICATION);
> 
>  static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
53,55c79,81
< 	case PROP_LOGFILE:
< 		g_value_set_string(value,pw3270_application_get_log_filename(G_APPLICATION(object)));
< 		break;
---
>     default:
>       g_assert_not_reached ();
>     }
57,61c83
< 	default:
< 		g_assert_not_reached ();
< 	}
< 
< }
---
>  }
63c85
< static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
---
>  static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
70,72c92,94
< 	case PROP_LOGFILE:
< 		pw3270_application_set_log_filename(G_APPLICATION(object),g_value_get_string(value));
< 		break;
---
>     default:
>       g_assert_not_reached ();
>     }
74,76c96
< 	default:
< 		g_assert_not_reached ();
< 	}
---
>  }
78c98
< }
---
>  static void window_added(GtkApplication *application, GtkWindow *window) {
80c100
< static void window_added(GtkApplication *application, GtkWindow *window) {
---
>   	GTK_APPLICATION_CLASS(pw3270Application_parent_class)->window_added(application,window);
82c102
< 	GTK_APPLICATION_CLASS(pw3270Application_parent_class)->window_added(application,window);
---
>   	void (*call)(GtkWindow *window);
84,87c104,105
< 	void (*call)(GtkWindow *window);
< 
< 	GSList * item;
< 	for(item = PW3270_APPLICATION(application)->plugins; item; item = g_slist_next(item)) {
---
>   	GSList * item;
>   	for(item = PW3270_APPLICATION(application)->plugins; item; item = g_slist_next(item)) {
89,91c107,109
< 			call(window);
< 		}
< 	}
---
>                call(window);
>        }
>   	}
93c111
< }
---
>  }
95c113
< static void window_removed(GtkApplication *application, GtkWindow *window) {
---
>  static void window_removed(GtkApplication *application, GtkWindow *window) {
97c115
< 	debug("%s(%p)",__FUNCTION__,window);
---
>  	debug("%s(%p)",__FUNCTION__,window);
99c117
< 	void (*call)(GtkWindow *window);
---
>   	void (*call)(GtkWindow *window);
101,102c119,120
< 	GSList * item;
< 	for(item = PW3270_APPLICATION(application)->plugins; item; item = g_slist_next(item)) {
---
>   	GSList * item;
>   	for(item = PW3270_APPLICATION(application)->plugins; item; item = g_slist_next(item)) {
104,106c122,124
< 			call(window);
< 		}
< 	}
---
>                call(window);
>        }
>   	}
108d125
< 	GTK_APPLICATION_CLASS(pw3270Application_parent_class)->window_removed(application,window);
110c127
< }
---
>    	GTK_APPLICATION_CLASS(pw3270Application_parent_class)->window_removed(application,window);
112,120c129
< static void g_log_to_lib3270(const gchar *log_domain,GLogLevelFlags G_GNUC_UNUSED(log_level),const gchar *message,gpointer G_GNUC_UNUSED(user_data)) {
< 	debug("%s",message);
< 	lib3270_write_log(
< 		NULL,
< 		log_domain ? log_domain : "gtk",
< 		"%s",
< 		message
< 	);
< }
---
>  }
122c131
< static void pw3270Application_class_init(pw3270ApplicationClass *klass) {
---
>  static void pw3270Application_class_init(pw3270ApplicationClass *klass) {
126,127d134
< 	g_log_set_default_handler(g_log_to_lib3270,NULL);
< 
150,155c157,162
< 	    g_param_spec_uint(
< 	        "ui-style",
< 	        _("UI Type"),
< 	        _("The code of the User interface type"),
< 	        PW3270_UI_STYLE_CLASSICAL,
< 	        PW3270_UI_STYLE_AUTOMATIC,
---
> 		g_param_spec_uint(
> 			"ui-style",
> 			_("UI Type"),
> 			_("The code of the User interface type"),
> 			PW3270_UI_STYLE_CLASSICAL,
> 			PW3270_UI_STYLE_AUTOMATIC,
157c164
< 	        PW3270_UI_STYLE_CLASSICAL,
---
> 			PW3270_UI_STYLE_CLASSICAL,
159c166
< 	        PW3270_UI_STYLE_AUTOMATIC,
---
> 			PW3270_UI_STYLE_AUTOMATIC,
161,169d167
< 	        G_PARAM_READABLE|G_PARAM_WRITABLE
< 	    );
< 
< 	props[PROP_LOGFILE] =
< 		g_param_spec_string(
< 			"logfile",
< 			_("Log name"),
< 			_("The full path of the default log file"),
< 			NULL,
172a171
> 
175c174
< }
---
>  }
177,178c176
< #ifndef __APPLE__
< static gboolean on_user_interface(const gchar G_GNUC_UNUSED(*option), const gchar *value, gpointer G_GNUC_UNUSED(dunno), GError **error) {
---
>  static gboolean on_user_interface(const gchar G_GNUC_UNUSED(*option), const gchar *value, gpointer G_GNUC_UNUSED(dunno), GError **error) {
181,185d178
< 	if(!app_settings) {
< 		g_warning("Can't get application settings");
< 		return FALSE;
< 	}
< 
187,190d179
< 	if(!win_settings) {
< 		g_warning("Can't get window settings");
< 		return FALSE;
< 	}
211,214c200,203
< 		    error,
< 		    g_quark_from_static_string(G_STRINGIFY(PRODUCT_NAME)),
< 		    EINVAL,
< 		    _( "\"%s\" is not a valid user interface name" ), value
---
> 			error,
> 			g_quark_from_static_string(G_STRINGIFY(PRODUCT_NAME)),
> 			EINVAL,
> 			_( "\"%s\" is not a valid user interface name" ), value
221,227c210
< }
< #endif // __APPLE__
< 
< static gboolean on_logfile(const gchar G_GNUC_UNUSED(*option), const gchar *value, gpointer G_GNUC_UNUSED(dunno), GError G_GNUC_UNUSED(**error)) {
< 	pw3270_application_set_log_filename(g_application_get_default(),value);
< 	return TRUE;
< }
---
>  }
229c212
< static void pw3270Application_init(pw3270Application *app) {
---
>  static void pw3270Application_init(pw3270Application *app) {
232,254c215,217
< #ifndef __APPLE__
< 		{
< 			"user-interface",
< 			'U',
< 			0,
< 			G_OPTION_ARG_CALLBACK,
< 			&on_user_interface,
< 			N_( "Set the user-interface type" ),
< 			NULL
< 		},
< #endif // __APPLE__
< 		{
< 			"logfile",
< 			'l',
< 			0,
< 			G_OPTION_ARG_CALLBACK,
< 			&on_logfile,
< 			N_( "Set default log file name" ),
< 			NULL
< 		},
< 		{
< 			NULL
< 		}
---
> 
> 		{ "user-interface", 'U', 0, G_OPTION_ARG_CALLBACK,	&on_user_interface, N_( "Set the user-interface type" ),  NULL },
> 		{ NULL }
260,265c223
< 	app->settings = pw3270_application_settings_new();
< 
< #if defined(_WIN32)
< 	//
< 	// Setup windows UI
< 	//
---
> #ifdef _WIN32
267,293d224
< 	{
< 		// https://stackoverflow.com/questions/37035936/how-to-get-native-windows-decorations-on-gtk3-on-windows-7-and-msys2
< 		int gtk_csd = g_settings_get_int(app->settings,"gtk-csd");
< 		if(gtk_csd != -1) {
< 			g_autofree gchar * env = g_strdup_printf("GTK_CSD=%d",gtk_csd);
< 			putenv(env);
< 		}
< 	}
< 
< 	if(app->settings) {
< 		g_object_ref_sink(G_OBJECT(app->settings));
< 		g_settings_bind(app->settings, "ui-style", app, "ui-style", G_SETTINGS_BIND_DEFAULT);
< 	}
< 
< 	{
< 		lib3270_autoptr(char) plugin_path = lib3270_build_data_filename("plugins",NULL);
< 		pw3270_load_plugins_from_path(app, plugin_path);
< 	}
< 
< #elif defined(__APPLE__)
< 	//
< 	// Setup Apple UI
< 	//
< 	{
< 		lib3270_autoptr(char) plugin_path = lib3270_build_data_filename("plugins",NULL);
< 		pw3270_load_plugins_from_path(app, plugin_path);
< 	}
295,297d225
< 	//
< 	// Setup linux UI
< 	//
298a227,229
> #endif // _WIN32
> 
> 	// Get settings
299a231,232
> 
> 	// Bind properties
302,305d234
< 		g_settings_bind(app->settings, "ui-style", app, "ui-style", G_SETTINGS_BIND_DEFAULT);
< 	}
< 
< 	pw3270_load_plugins_from_path(app, G_STRINGIFY(LIBDIR) G_DIR_SEPARATOR_S G_STRINGIFY(PRODUCT_NAME) "-plugins");
306a236,244
> #ifdef _WIN32
> 		{
> 			// https://stackoverflow.com/questions/37035936/how-to-get-native-windows-decorations-on-gtk3-on-windows-7-and-msys2
> 			int gtk_csd = g_settings_get_int(app->settings,"gtk-csd");
> 			if(gtk_csd != -1) {
> 				g_autofree gchar * env = g_strdup_printf("GTK_CSD=%d",gtk_csd);
> 				putenv(env);
> 			}
> 		}
309,311c247,248
< 	/*
< 
< 		FIX-ME: Move to other place.
---
> 		g_settings_bind(app->settings, "ui-style", app, "ui-style", G_SETTINGS_BIND_DEFAULT);
> 	}
314a252,256
> #ifdef _WIN32
>         lib3270_autoptr(char) path = lib3270_build_data_filename("plugins",NULL);
> #else
>         const gchar * path = G_STRINGIFY(LIBDIR) G_DIR_SEPARATOR_S G_STRINGIFY(PRODUCT_NAME) "-plugins";
> #endif // _WIN32
347a290,291
> 
> 
363,377d306
< 
< 	}
< 	*/
< 
< 	// Initialize plugins
< 	{
< 		GSList * item;
< 		void (*call)(GtkApplication *application);
< 
< 		for(item = app->plugins; item; item = g_slist_next(item)) {
< 			if(g_module_symbol((GModule *) item->data, "pw3270_plugin_set_application", (gpointer *) &call)) {
< 				call(GTK_APPLICATION(app));
< 			}
< 		}
< 
380c309
< }
---
>  }
383c312
< static void finalize(GObject *object) {
---
>  static void finalize(GObject *object) {
385c314
< 	pw3270Application * application = PW3270_APPLICATION(object);
---
>  	pw3270Application * application = PW3270_APPLICATION(object);
387,388c316,317
< 	if(application->plugins) {
< #pragma GCC diagnostic push
---
>  	if(application->plugins) {
>  		#pragma GCC diagnostic push
390c319
< #pragma GCC diagnostic ignored "-Wcast-function-type"
---
> 		#pragma GCC diagnostic ignored "-Wcast-function-type"
393c322
< #pragma GCC diagnostic pop
---
>  		#pragma GCC diagnostic pop
395c324
< 	}
---
>  	}
397c326
< 	if(application->settings) {
---
>  	if(application->settings) {
400,407c329
< 	}
< 
< 	lib3270_set_log_handler(NULL,NULL,NULL);
< 
< 	if(application->logfile) {
< 		g_free(application->logfile);
< 		application->logfile = NULL;
< 	}
---
>  	}
409c331
< 	g_list_free_full(application->keypads,g_object_unref);
---
>  	g_list_free_full(application->keypads,g_object_unref);
411c333
< 	G_OBJECT_CLASS(pw3270Application_parent_class)->finalize(object);
---
>  	G_OBJECT_CLASS(pw3270Application_parent_class)->finalize(object);
413c335
< }
---
>  }
415c337
< GtkApplication * pw3270_application_new(const gchar *application_id, GApplicationFlags flags) {
---
>  GtkApplication * pw3270_application_new(const gchar *application_id, GApplicationFlags flags) {
418,421c340,343
< 	           PW3270_TYPE_APPLICATION,
< 	           "application-id", application_id,
< 	           "flags", flags,
< 	           NULL);
---
> 				PW3270_TYPE_APPLICATION,
> 				"application-id", application_id,
> 				"flags", flags,
> 				NULL);
423c345
< }
---
>  }
425c347
< void startup(GApplication *application) {
---
>  void startup(GApplication *application) {
427c349
< 	size_t ix;
---
>  	size_t ix;
429c351
< 	pw3270Application * app = PW3270_APPLICATION(application);
---
>  	pw3270Application * app = PW3270_APPLICATION(application);
433,437d354
< //	GSettings *settings = pw3270_application_get_settings(application);
< 
< 	//
< 	// Common actions
< 	//
441c358,362
< 		pw3270_quit_action_new()
---
> 		pw3270_new_tab_action_new(),
> 		pw3270_new_window_action_new(),
> 		pw3270_quit_action_new(),
> 		pw3270_open_window_action_new(),
> 		pw3270_open_tab_action_new()
449,456c370
< 	// Open session actions.
< 	//
< 	if(pw3270_application_get_boolean(application,"allow-open-session-actions",TRUE)) {
< 		g_action_map_add_action(G_ACTION_MAP(application),pw3270_open_session_action_new());
< 	}
< 
< 	//
< 	// New tab actions
---
> 	// Setup application menus
458,468c372,378
< 	if(pw3270_application_get_boolean(application,"allow-new-tab-actions",TRUE)) {
< 
< 		GAction * new_tab_actions[] = {
< 			pw3270_open_tab_action_new(),
< 			pw3270_new_tab_action_new()
< 		};
< 
< 		for(ix = 0; ix < G_N_ELEMENTS(new_tab_actions); ix++) {
< 			g_action_map_add_action(G_ACTION_MAP(application),new_tab_actions[ix]);
< 		}
< 
---
> 	GtkBuilder * builder;
> #ifdef DEBUG
> 	builder = gtk_builder_new_from_file("ui/application.xml");
> #else
> 	{
> 		lib3270_autoptr(char) build_file = lib3270_build_data_filename("ui","application.xml",NULL);
> 		builder = gtk_builder_new_from_file(build_file);
469a380
> #endif // DEBUG
471,485d381
< 	//
< 	// New window actions
< 	//
< 	if(pw3270_application_get_boolean(application,"allow-new-window-actions",TRUE)) {
< 
< 		GAction * new_window_actions[] = {
< 			pw3270_open_window_action_new(),
< 			pw3270_new_window_action_new()
< 		};
< 
< 		for(ix = 0; ix < G_N_ELEMENTS(new_window_actions); ix++) {
< 			g_action_map_add_action(G_ACTION_MAP(application),new_window_actions[ix]);
< 		}
< 
< 	}
490a387,389
> #ifdef DEBUG
> 		const gchar * keypad_path = "keypad";
> #else
491a391
> #endif // DEBUG
496,504c396,400
< 		if(dir) {
< 
< 			const gchar *name = g_dir_read_name(dir);
< 			while(!error && name) {
< 				g_autofree gchar * path = g_build_filename(keypad_path,name,NULL);
< 				app->keypads = pw3270_keypad_model_new_from_xml(app->keypads,path);
< 				name = g_dir_read_name(dir);
< 			}
< 
---
> 		const gchar *name = g_dir_read_name(dir);
> 		while(!error && name) {
> 			g_autofree gchar * path = g_build_filename(keypad_path,name,NULL);
> 			app->keypads = pw3270_keypad_model_new_from_xml(app->keypads,path);
> 			name = g_dir_read_name(dir);
512,516d407
< 	//
< 	// Setup application menus
< 	//
< 	g_autoptr(GtkBuilder) builder = pw3270_application_builder_new(application);
< 
520c411,415
< 	gtk_application_set_menubar(GTK_APPLICATION (application), G_MENU_MODEL(gtk_builder_get_object (builder, "menubar")));
---
>     gtk_application_set_menubar(GTK_APPLICATION (application), G_MENU_MODEL(gtk_builder_get_object (builder, "menubar")));
> 
> 	pw3270_load_placeholders(application, builder);
> 
> 	g_object_unref(builder);
522c417
< }
---
>  }
524c419
< void activate(GApplication *application) {
---
>  void activate(GApplication *application) {
532c427
< }
---
>  }
534c429
< void pw3270_application_set_ui_style(GApplication *app, PW3270_UI_STYLE type) {
---
>  void pw3270_application_set_ui_style(GApplication *app, PW3270_UI_STYLE type) {
536,537c431
< #ifndef __APPLE__
< 	g_return_if_fail(PW3270_IS_APPLICATION(app));
---
>  	g_return_if_fail(PW3270_IS_APPLICATION(app));
547c441
< #endif // !__APPLE
---
>  }
549c443
< }
---
>  PW3270_UI_STYLE pw3270_application_get_ui_style(GApplication *app) {
551c445,446
< PW3270_UI_STYLE pw3270_application_get_ui_style(GApplication *app) {
---
>  	g_return_val_if_fail(PW3270_IS_APPLICATION(app),PW3270_UI_STYLE_CLASSICAL);
>     return PW3270_APPLICATION(app)->ui_style;
553,558c448
< #ifdef __APPLE__
< 	return PW3270_UI_STYLE_GNOME;
< #else
< 	g_return_val_if_fail(PW3270_IS_APPLICATION(app),PW3270_UI_STYLE_CLASSICAL);
< 	return PW3270_APPLICATION(app)->ui_style;
< #endif // __APPLE__
---
>  }
560c450
< }
---
>  GSettings * pw3270_application_get_settings(GApplication *app) {
562d451
< GSettings * pw3270_application_get_settings(GApplication *app) {
565d453
< }
567,570c455
< gboolean pw3270_application_get_boolean(GApplication *app, const gchar *option_name, gboolean def) {
< 	g_return_val_if_fail(PW3270_IS_APPLICATION(app),def);
< 	return g_settings_get_boolean(PW3270_APPLICATION(app)->settings,option_name);
< }
---
>  }
572c457
< GSList * pw3270_application_get_plugins(GApplication *app) {
---
>  GSList * pw3270_application_get_plugins(GApplication *app) {
577c462
< }
---
>  }
579c464
< void pw3270_application_plugin_foreach(GApplication *app, GFunc func, gpointer user_data) {
---
>  void pw3270_application_plugin_foreach(GApplication *app, GFunc func, gpointer user_data) {
583,584c468,469
< 	GSList * item;
< 	for(item = PW3270_APPLICATION(app)->plugins; item; item = g_slist_next(item)) {
---
>    	GSList * item;
>  	for(item = PW3270_APPLICATION(app)->plugins; item; item = g_slist_next(item)) {
586c471
< 	}
---
>   	}
588c473
< }
---
>  }
590c475
< void pw3270_application_plugin_call(GApplication *app, const gchar *method, gpointer user_data) {
---
>  void pw3270_application_plugin_call(GApplication *app, const gchar *method, gpointer user_data) {
594c479
< 	int (*call)(GtkWidget *);
---
>  	int (*call)(GtkWidget *);
596,597c481,482
< 	GSList * item;
< 	for(item = PW3270_APPLICATION(app)->plugins; item; item = g_slist_next(item)) {
---
>   	GSList * item;
>   	for(item = PW3270_APPLICATION(app)->plugins; item; item = g_slist_next(item)) {
600,601c485,486
< 		}
< 	}
---
>        }
>   	}
603c488
< }
---
>  }
606,609c491
< GList * pw3270_application_get_keypad_models(GApplication *app) {
< 	g_return_val_if_fail(PW3270_IS_APPLICATION(app),NULL);
< 	return PW3270_APPLICATION(app)->keypads;
< }
---
>  GSettings * pw3270_application_settings_new() {
611c493
< static int loghandler(const H3270 G_GNUC_UNUSED(*hSession), pw3270Application *app, const char *module, int G_GNUC_UNUSED(code), const char *message) {
---
> 	GSettings *settings = NULL;
613,620c495,496
< 	if(!app->logfile) {
< 		return -1;
< 	}
< 
< 	int fd = open(app->logfile,O_WRONLY|O_APPEND|O_CREAT,S_IWUSR|S_IRUSR);
< 	if(fd < 0) {
< 		return -1;
< 	}
---
> 	g_autofree gchar * path = g_strconcat("/apps/" PACKAGE_NAME "/", g_get_application_name(),"/",NULL);
> 	debug("path=%s",path);
622,633c498,506
< 	FILE *f = fdopen(fd,"a");
< 
< 	if(f) {
< 		time_t ltime = time(0);
< 
< 	   char timestamp[80];
< #ifdef HAVE_LOCALTIME_R
< 		struct tm tm;
< 		strftime(timestamp, 79, "%x %X", localtime_r(&ltime,&tm));
< #else
< 		strftime(timestamp, 79, "%x %X", localtime(&ltime));
< #endif // HAVE_LOCALTIME_R
---
> #ifdef DEBUG
> 	GError * error = NULL;
> 	GSettingsSchemaSource * source =
> 		g_settings_schema_source_new_from_directory(
> 			".",
> 			NULL,
> 			TRUE,
> 			&error
> 		);
635c508
< 		fprintf(f,"%s %s\t%s\n",timestamp,module,message);
---
> 	g_assert_no_error(error);
637,638c510,514
< 		fclose(f);
< 	}
---
> 	GSettingsSchema * schema =
> 		g_settings_schema_source_lookup(
> 			source,
> 			"br.com.bb." PACKAGE_NAME,
> 			TRUE);
640,641c516
< 	return 0;
< }
---
> 	debug("schema %s=%p","br.com.bb." PACKAGE_NAME,schema);
643,646c518
< const gchar	* pw3270_application_get_log_filename(GApplication *app) {
< 	g_return_val_if_fail(PW3270_IS_APPLICATION(app),NULL);
< 	return PW3270_APPLICATION(app)->logfile;
< }
---
> 	settings = g_settings_new_full(schema, NULL, path);
648c520
< void pw3270_application_set_log_filename(GApplication *app, const gchar *filename) {
---
> 	g_settings_schema_source_unref(source);
650c522
< 	g_return_if_fail(PW3270_IS_APPLICATION(app));
---
> #else
652c524
< 	pw3270Application * application = PW3270_APPLICATION(app);
---
> 	settings = g_settings_new_with_path("br.com.bb." PACKAGE_NAME, path);
654,657c526
< 	if(application->logfile) {
< 		g_free(application->logfile);
< 		application->logfile = NULL;
< 	}
---
> #endif // DEBUG
659,664c528,529
< 	if(filename) {
< 		application->logfile = g_strdup(filename);
< 		lib3270_set_log_handler(NULL,(LIB3270_LOG_HANDLER) loghandler, app);
< 	} else {
< 		lib3270_set_log_handler(NULL,NULL,NULL);
< 	}
---
> 	return settings;
>  }
666c531,534
< }
---
>  GList * pw3270_application_get_keypad_models(GApplication *app) {
>  	g_return_val_if_fail(PW3270_IS_APPLICATION(app),NULL);
>  	return PW3270_APPLICATION(app)->keypads;
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/open.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/open.c
30,32c30
< #include "private.h"
< #include <pw3270/application.h>
< #include <v3270/keyfile.h>
---
>  #include "private.h"
34c32,39
< void pw3270_application_open(GApplication *application, GFile **files, gint n_files, const gchar G_GNUC_UNUSED(*hint)) {
---
>  gchar * v3270_keyfile_find(const gchar *name) {
> 	//
> 	// It can be a session file, scans for it
> 	//
> 	const gchar * paths[] = {
> 		g_get_user_special_dir(G_USER_DIRECTORY_DOCUMENTS),
> 		g_get_user_config_dir()
> 	};
36,37c41,62
< 	gint file;
< 	GtkWindow *window = NULL;
---
> 	static const gchar *subdirs[] = {
> 		"3270",
> 		G_STRINGIFY(PRODUCT_NAME),
> 		PACKAGE_NAME
> 	};
> 
> 	size_t path, subdir;
> 
> 	g_autofree gchar * filename = g_strconcat(name,".3270",NULL);
> 
> 	for(path = 0; path < G_N_ELEMENTS(paths); path++) {
> 
> 		for(subdir = 0; subdir < G_N_ELEMENTS(subdirs); subdir++) {
> 
> 			gchar * fullpath = g_build_filename(paths[path],subdirs[subdir],filename,NULL);
> 
> 			debug("Searching for \"%s\"",fullpath);
> 
> 			if(g_file_test(fullpath,G_FILE_TEST_IS_REGULAR)) {
> 				return fullpath;
> 			}
> 			g_free(fullpath);
39c64,75
< 	debug("\n\n%s files=%d",__FUNCTION__,n_files);
---
> 		}
> 	}
> 
> 	return NULL;
> 
>  }
> 
>  void pw3270_application_open(GApplication *application, GFile **files, gint n_files, const gchar G_GNUC_UNUSED(*hint)) {
> 
> 	GtkWidget * window = GTK_WIDGET(gtk_application_get_active_window(GTK_APPLICATION(application)));
> 	size_t path, subdir;
> 	gint file;
43,44c79,130
< 		debug("%s(%d,%p)",__FUNCTION__,file,files[file]);
< 		pw3270_application_open_file(GTK_APPLICATION(application),&window,files[file]);
---
> 		g_autofree gchar *path = g_file_get_path(files[file]);
> 
> 		if(!path) {
> 
> 			// It's not a session file descriptor, is it an URL?
> 			g_autofree gchar * scheme = g_file_get_uri_scheme(files[file]);
> 
> 			if(!(g_ascii_strcasecmp(scheme,"tn3270") && g_ascii_strcasecmp(scheme,"tn3270s"))) {
> 
> 				g_autofree gchar * uri = g_file_get_uri(files[file]);
> 				size_t sz = strlen(uri);
> 
> 				if(sz > 0 && uri[sz-1] == '/')
> 					uri[sz-1] = 0;
> 
> 				v3270_set_url(pw3270_application_window_get_active_terminal(window),uri);
> 
> 			}
> 
> 			continue;
> 
> 		}
> 
> 		if(g_file_test(path,G_FILE_TEST_IS_REGULAR)) {
> 
> 			// The file exists, use it.
> 
> 			if(!window) {
> 				window = pw3270_application_window_new(GTK_APPLICATION(application), path);
> 			} else {
> 				window = pw3270_application_window_new_tab(window,path);
> 			}
> 
> 			continue;
> 		}
> 
> 		{
> 			g_autofree gchar * basename = g_file_get_basename(files[file]);
> 			g_autofree gchar * filename = v3270_keyfile_find(basename);
> 
> 			if(filename) {
> 
> 				if(!window) {
> 					window = pw3270_application_window_new(GTK_APPLICATION(application), filename);
> 				} else {
> 					window = pw3270_application_window_new_tab(window, filename);
> 				}
> 
> 				continue;
> 			}
> 
> 		}
51c137
< }
---
>  }
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application: plugins.c
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/private.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/application/private.h
32c32
< #define PRIVATE_H_INCLUDED
---
> 	#define PRIVATE_H_INCLUDED
34c34
< #include <config.h>
---
> 	#include <config.h>
36,38c36,58
< #ifndef GETTEXT_PACKAGE
< #define GETTEXT_PACKAGE PACKAGE_NAME
< #endif
---
> 	#ifndef GETTEXT_PACKAGE
> 		#define GETTEXT_PACKAGE PACKAGE_NAME
> 	#endif
> 
> 	#include <libintl.h>
> 	#include <glib/gi18n.h>
> 	#include <gtk/gtk.h>
> 
> 	#include <pw3270/window.h>
> 	#include <v3270.h>
> 	#include <lib3270.h>
> 	#include <lib3270/log.h>
> 
> 	G_GNUC_INTERNAL void		  pw3270_application_open(GApplication * application, GFile **files, gint n_files, const gchar *hint);
> 	G_GNUC_INTERNAL GtkWidget	* pw3270_terminal_new(const gchar *session_file);
> 	G_GNUC_INTERNAL GSettings	* pw3270_application_settings_new();
> 
> 	// Actions
>     G_GNUC_INTERNAL GAction * pw3270_about_action_new();
> 	G_GNUC_INTERNAL GAction * pw3270_preferences_action_new();
>     G_GNUC_INTERNAL GAction * pw3270_new_tab_action_new();
> 	G_GNUC_INTERNAL GAction * pw3270_new_window_action_new();
> 	G_GNUC_INTERNAL GAction * pw3270_quit_action_new();
40,84c60,61
< #include <libintl.h>
< #include <glib/gi18n.h>
< #include <gtk/gtk.h>
< 
< #include <pw3270/window.h>
< #include <v3270.h>
< #include <lib3270.h>
< #include <lib3270/log.h>
< 
< #include <pw3270/application.h>
< 
< struct _pw3270Application {
< 	GtkApplication parent;
< #ifndef __APPLE__
< 	PW3270_UI_STYLE	ui_style;
< #endif // !__APPLE__
< 
< 	GSettings	* settings;
< 	GList		* keypads;
< 	gchar 		* logfile;
< 	GSList		* plugins;		///< @brief Handlers of the loaded plugins.
< 
< };
< 
< struct _pw3270ApplicationClass {
< 	GtkApplicationClass parent_class;
< };
< 
< 
< G_GNUC_INTERNAL void		  pw3270_application_open(GApplication * application, GFile **files, gint n_files, const gchar *hint);
< 
< G_GNUC_INTERNAL GtkWidget	* pw3270_terminal_new(const gchar *session_file);
< 
< G_GNUC_INTERNAL void		  pw3270_load_plugins_from_path(pw3270Application *app, const char *path);
< 
< // Actions
< G_GNUC_INTERNAL GAction * pw3270_about_action_new();
< G_GNUC_INTERNAL GAction * pw3270_preferences_action_new();
< G_GNUC_INTERNAL GAction * pw3270_new_tab_action_new();
< G_GNUC_INTERNAL GAction * pw3270_new_window_action_new();
< G_GNUC_INTERNAL GAction * pw3270_quit_action_new();
< 
< G_GNUC_INTERNAL GAction * pw3270_open_session_action_new();
< G_GNUC_INTERNAL GAction * pw3270_open_window_action_new();
< G_GNUC_INTERNAL GAction * pw3270_open_tab_action_new();
---
> 	G_GNUC_INTERNAL GAction * pw3270_open_window_action_new();
> 	G_GNUC_INTERNAL GAction * pw3270_open_tab_action_new();
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/attribute.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/attribute.c
30,31c30,31
< #include "private.h"
< #include <stdlib.h>
---
>  #include "private.h"
>  #include <stdlib.h>
35,36c35,36
< struct Attribute {
< 	GObject * object;
---
>  struct Attribute {
>  	GObject * object;
39c39
< };
---
>  };
44c44
< static void parse_error (GMarkupParseContext G_GNUC_UNUSED(*context), GError G_GNUC_UNUSED(*error), gpointer data) {
---
>  static void parse_error (GMarkupParseContext G_GNUC_UNUSED(*context), GError G_GNUC_UNUSED(*error), gpointer data) {
46c46
< }
---
>  }
48c48
< static void parse_text(GMarkupParseContext G_GNUC_UNUSED(*context), const gchar *text, gsize G_GNUC_UNUSED(text_len), gpointer user_data, GError **error) {
---
>  static void parse_text(GMarkupParseContext *context, const gchar *text, gsize text_len, gpointer user_data, GError **error) {
50c50
< 	if(text && ((struct Attribute *) user_data)->translatable ) {
---
>  	if(text && ((struct Attribute *) user_data)->translatable ) {
52c52
< 	}
---
>  	}
54c54
< 	GParamSpec *spec = ((struct Attribute *) user_data)->spec;
---
>  	GParamSpec *spec = ((struct Attribute *) user_data)->spec;
76,79c76,79
< 		    error,
< 		    g_quark_from_static_string("keypad"),
< 		    ENOENT,
< 		    _( "Invalid or unknown property type" )
---
> 			error,
> 			g_quark_from_static_string("keypad"),
> 			ENOENT,
> 			_( "Invalid or unknown property type" )
89c89
< }
---
>  }
91c91
< void attribute_element_start(GMarkupParseContext *context,const gchar **names,const gchar **values, GObject *parent, GError **error) {
---
>  void attribute_element_start(GMarkupParseContext *context,const gchar **names,const gchar **values, GObject *parent, GError **error) {
99,103c99,103
< 	            "attribute",names,values,error,
< 	            G_MARKUP_COLLECT_BOOLEAN|G_MARKUP_COLLECT_OPTIONAL, "translatable", &data->translatable,
< 	            G_MARKUP_COLLECT_STRING, "name", &name,
< 	            G_MARKUP_COLLECT_INVALID
< 	        )) {
---
> 				"attribute",names,values,error,
> 				G_MARKUP_COLLECT_BOOLEAN|G_MARKUP_COLLECT_OPTIONAL, "translatable", &data->translatable,
> 				G_MARKUP_COLLECT_STRING, "name", &name,
> 				G_MARKUP_COLLECT_INVALID
> 			)) {
113,117c113,117
< 		    error,
< 		    g_quark_from_static_string("keypad"),
< 		    ENOENT,
< 		    _( "Property \"%s\" is invalid for this object" ),
< 		    name
---
> 			error,
> 			g_quark_from_static_string("keypad"),
> 			ENOENT,
> 			_( "Property \"%s\" is invalid for this object" ),
> 			name
133c133
< }
---
>  }
135c135
< void attribute_element_end(GMarkupParseContext *context, GObject G_GNUC_UNUSED(*parent), GError G_GNUC_UNUSED(**error)) {
---
>  void attribute_element_end(GMarkupParseContext *context, GObject *parent, GError **error) {
140c140
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/element.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/element.c
30c30
< #include "private.h"
---
>  #include "private.h"
34c34
< enum {
---
>  enum {
43c43
< };
---
>  };
45,46c45,46
< static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);
< static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);
---
>  static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);
>  static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);
48c48
< G_DEFINE_TYPE(KeypadElement, KeypadElement, G_TYPE_OBJECT)
---
>  G_DEFINE_TYPE(KeypadElement, KeypadElement, G_TYPE_OBJECT)
52c52
< static void finalize(GObject *object) {
---
>  static void finalize(GObject *object) {
71c71
< }
---
>  }
73c73
< static void KeypadElement_class_init(KeypadElementClass *klass) {
---
>  static void KeypadElement_class_init(KeypadElementClass *klass) {
83,90c83,90
< 	                                g_param_spec_string (
< 	                                    I_("icon-name"),
< 	                                    I_("icon-name"),
< 	                                    N_("The name of the icon"),
< 	                                    NULL,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
---
> 		g_param_spec_string (
> 			I_("icon-name"),
> 			I_("icon-name"),
> 			N_("The name of the icon"),
> 			NULL,
> 			G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 		)
> 	);
93,100c93,100
< 	                                g_param_spec_string (
< 	                                    I_("action"),
< 	                                    I_("action"),
< 	                                    N_("The name of associated action"),
< 	                                    NULL,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
---
> 		g_param_spec_string (
> 			I_("action"),
> 			I_("action"),
> 			N_("The name of associated action"),
> 			NULL,
> 			G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 		)
> 	);
103,110c103,110
< 	                                g_param_spec_string (
< 	                                    I_("label"),
< 	                                    I_("label"),
< 	                                    N_("The Label of the keypad"),
< 	                                    NULL,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
---
> 		g_param_spec_string (
> 			I_("label"),
> 			I_("label"),
> 			N_("The Label of the keypad"),
> 			NULL,
> 			G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 		)
> 	);
113,122c113,122
< 	                                g_param_spec_uint(
< 	                                    I_("row"),
< 	                                    I_("width"),
< 	                                    _("Element row"),
< 	                                    1,
< 	                                    10,
< 	                                    3,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
---
> 		 g_param_spec_uint(
> 					I_("row"),
> 					I_("width"),
> 					_("Element row"),
> 					1,
> 					10,
> 					3,
> 					G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 			)
> 		);
125,134c125,134
< 	                                g_param_spec_uint(
< 	                                    I_("col"),
< 	                                    I_("width"),
< 	                                    _("Element col"),
< 	                                    1,
< 	                                    10,
< 	                                    3,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
---
> 		 g_param_spec_uint(
> 					I_("col"),
> 					I_("width"),
> 					_("Element col"),
> 					1,
> 					10,
> 					3,
> 					G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 			)
> 		);
137,146c137,146
< 	                                g_param_spec_uint(
< 	                                    I_("width"),
< 	                                    I_("width"),
< 	                                    _("Element width in columns"),
< 	                                    1,
< 	                                    10,
< 	                                    3,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
---
> 		 g_param_spec_uint(
> 					I_("width"),
> 					I_("width"),
> 					_("Element width in columns"),
> 					1,
> 					10,
> 					3,
> 					G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 			)
> 		);
149,158c149,158
< 	                                g_param_spec_uint(
< 	                                    I_("height"),
< 	                                    I_("height"),
< 	                                    _("Element height in rows"),
< 	                                    0,
< 	                                    100,
< 	                                    0,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
---
> 		 g_param_spec_uint(
> 					I_("height"),
> 					I_("height"),
> 					_("Element height in rows"),
> 					0,
> 					100,
> 					0,
> 					G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 			)
> 		);
160c160
< }
---
>  }
162c162
< static void KeypadElement_init(KeypadElement G_GNUC_UNUSED(*object)) {
---
>  static void KeypadElement_init(KeypadElement G_GNUC_UNUSED(*object)) {
165c165
< }
---
>  }
167c167
< static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
---
>  static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
204c204
< }
---
>  }
206c206
< static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
---
>  static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
254c254
< }
---
>  }
256c256
< static void element_start(GMarkupParseContext *context, const gchar *element_name, const gchar **names,const gchar **values, GObject *element, GError **error) {
---
>  static void element_start(GMarkupParseContext *context, const gchar *element_name, const gchar **names,const gchar **values, GObject *element, GError **error) {
265c265
< }
---
>  }
267c267
< static void element_end(GMarkupParseContext *context, const gchar *element_name, GObject *element, GError **error) {
---
>  static void element_end(GMarkupParseContext *context, const gchar *element_name, GObject *element, GError **error) {
276c276
< }
---
>  }
278c278
< void keypad_model_element_parse_context(GObject *element, GMarkupParseContext *context) {
---
>  void keypad_model_element_parse_context(GObject *element, GMarkupParseContext *context) {
280c280
< 	static const GMarkupParser parser = {
---
>    static const GMarkupParser parser = {
284,288c284,288
< 		(void (*)(GMarkupParseContext *, const gchar *, gpointer, GError **))
< 		element_end,
< 		NULL,
< 		NULL,
< 		NULL
---
> 	(void (*)(GMarkupParseContext *, const gchar *, gpointer, GError **))
> 			element_end,
> 			NULL,
> 			NULL,
> 			NULL
293c293
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/load.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/load.c
30,31c30,31
< #include "private.h"
< #include <stdlib.h>
---
>  #include "private.h"
>  #include <stdlib.h>
35c35
< static void element_start(GMarkupParseContext *context, const gchar *element_name, const gchar **names,const gchar **values, GList **keypads, GError **error) {
---
>  static void element_start(GMarkupParseContext *context, const gchar *element_name, const gchar **names,const gchar **values, GList **keypads, GError **error) {
43,50c43,50
< 		            element_name,names,values,error,
< 		            G_MARKUP_COLLECT_STRING, "name", &name,
< 		            G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "label", &label,
< 		            G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "position", &position,
< 		            G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "width", &width,
< 		            G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "height", &height,
< 		            G_MARKUP_COLLECT_INVALID
< 		        )) {
---
>                     element_name,names,values,error,
>                     G_MARKUP_COLLECT_STRING, "name", &name,
>                     G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "label", &label,
>                     G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "position", &position,
>                     G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "width", &width,
>                     G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "height", &height,
>                     G_MARKUP_COLLECT_INVALID
>                 )) {
53c53
< 			return;
---
>             return;
55c55
< 		}
---
>         }
57c57
< 		*keypads = g_list_append(*keypads,keypad);
---
>         *keypads = g_list_append(*keypads,keypad);
83c83
< }
---
>  }
85c85
< static void element_end(GMarkupParseContext *context, const gchar *element_name, GList G_GNUC_UNUSED(**keypads), GError G_GNUC_UNUSED(**error)) {
---
>  static void element_end(GMarkupParseContext *context, const gchar *element_name, GList G_GNUC_UNUSED(**keypads), GError G_GNUC_UNUSED(**error)) {
93c93
< }
---
>  }
95c95
< GList * pw3270_keypad_model_new_from_xml(GList *keypads, const gchar *filename) {
---
>  GList * pw3270_keypad_model_new_from_xml(GList *keypads, const gchar *filename) {
104c104
< 		static const GMarkupParser parser = {
---
>         static const GMarkupParser parser = {
108,113c108,113
< 			(void (*)(GMarkupParseContext *, const gchar *, gpointer, GError **))
< 			element_end,
< 			NULL,
< 			NULL,
< 			NULL
< 		};
---
> 		(void (*)(GMarkupParseContext *, const gchar *, gpointer, GError **))
> 				element_end,
> 				NULL,
> 				NULL,
> 				NULL
>         };
115c115
< 		GMarkupParseContext * context = g_markup_parse_context_new(&parser,G_MARKUP_TREAT_CDATA_AS_TEXT,&keypads,NULL);
---
>  		GMarkupParseContext * context = g_markup_parse_context_new(&parser,G_MARKUP_TREAT_CDATA_AS_TEXT,&keypads,NULL);
130c130
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/model.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/model.c
30,31c30,31
< #include "private.h"
< #include <stdlib.h>
---
>  #include "private.h"
>  #include <stdlib.h>
35c35
< enum {
---
>  enum {
42c42
< };
---
>  };
44c44
< static const char * positions[] = {
---
>  static const char * positions[] = {
49c49
< };
---
>  };
51,52c51,52
< static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);
< static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);
---
>  static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);
>  static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);
54c54
< G_DEFINE_TYPE(KeypadModel, KeypadModel, G_TYPE_OBJECT)
---
>  G_DEFINE_TYPE(KeypadModel, KeypadModel, G_TYPE_OBJECT)
58c58
< static void finalize(GObject *object) {
---
>  static void finalize(GObject *object) {
77c77
< }
---
>  }
79c79
< static void KeypadModel_class_init(KeypadModelClass *klass) {
---
>  static void KeypadModel_class_init(KeypadModelClass *klass) {
91,98c91,98
< 	                                g_param_spec_string (
< 	                                    I_("name"),
< 	                                    N_("Keypad Name"),
< 	                                    N_("The name used to identify the keypad"),
< 	                                    NULL,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
---
> 		g_param_spec_string (
> 			I_("name"),
> 			N_("Keypad Name"),
> 			N_("The name used to identify the keypad"),
> 			NULL,
> 			G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 		)
> 	);
101,108c101,108
< 	                                g_param_spec_string (
< 	                                    I_("label"),
< 	                                    N_("Keypad Label"),
< 	                                    N_("The Label of the keypad"),
< 	                                    NULL,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
---
> 		g_param_spec_string (
> 			I_("label"),
> 			N_("Keypad Label"),
> 			N_("The Label of the keypad"),
> 			NULL,
> 			G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 		)
> 	);
111,118c111,118
< 	                                g_param_spec_string (
< 	                                    I_("position"),
< 	                                    I_("position"),
< 	                                    N_("The position of the keypad"),
< 	                                    NULL,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
---
> 		g_param_spec_string (
> 			I_("position"),
> 			I_("position"),
> 			N_("The position of the keypad"),
> 			NULL,
> 			G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 		)
> 	);
121,130c121,130
< 	                                g_param_spec_uint(
< 	                                    I_("width"),
< 	                                    I_("width"),
< 	                                    _("Keypad width in columns"),
< 	                                    1,
< 	                                    10,
< 	                                    3,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
---
> 		 g_param_spec_uint(
> 					I_("width"),
> 					I_("width"),
> 					_("Keypad width in columns"),
> 					1,
> 					10,
> 					3,
> 					G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 			)
> 		);
133,143c133,143
< 	                                g_param_spec_uint(
< 	                                    I_("height"),
< 	                                    I_("height"),
< 	                                    _("Keypad height in rows"),
< 	                                    0,
< 	                                    100,
< 	                                    0,
< 	                                    G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
< 	                                )
< 	                               );
< }
---
> 		 g_param_spec_uint(
> 					I_("height"),
> 					I_("height"),
> 					_("Keypad height in rows"),
> 					0,
> 					100,
> 					0,
> 					G_PARAM_STATIC_STRINGS | G_PARAM_READABLE | G_PARAM_WRITABLE
> 			)
> 		);
>  }
145c145
< static void KeypadModel_init(KeypadModel *object) {
---
>  static void KeypadModel_init(KeypadModel *object) {
149c149
< }
---
>  }
151c151
< static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
---
>  static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
180c180
< }
---
>  }
182c182
< static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
---
>  static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
218c218
< }
---
>  }
220c220
< void keypad_model_set_position(GObject *model, const gchar *position) {
---
>  void keypad_model_set_position(GObject *model, const gchar *position) {
232c232
< }
---
>  }
234c234
< const gchar * keypad_model_get_position(GObject *model) {
---
>  const gchar * keypad_model_get_position(GObject *model) {
238c238
< 	if(ix < G_N_ELEMENTS(positions))
---
>  	if(ix < G_N_ELEMENTS(positions))
241,242c241,242
< 	return "undefined";
< }
---
>  	return "undefined";
>  }
244c244
< static void element_start(GMarkupParseContext *context, const gchar *element_name, const gchar **names,const gchar **values, KeypadModel *keypad, GError **error) {
---
>  static void element_start(GMarkupParseContext *context, const gchar *element_name, const gchar **names,const gchar **values, KeypadModel *keypad, GError **error) {
254,260c254,260
< 		            element_name,names,values,error,
< 		            G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "row", &row,
< 		            G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "column", &col,
< 		            G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "width", &width,
< 		            G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "height", &height,
< 		            G_MARKUP_COLLECT_INVALID
< 		        )) {
---
>                     element_name,names,values,error,
>                     G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "row", &row,
>                     G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "column", &col,
>                     G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "width", &width,
>                     G_MARKUP_COLLECT_STRING|G_MARKUP_COLLECT_OPTIONAL, "height", &height,
>                     G_MARKUP_COLLECT_INVALID
>                 )) {
262c262
< 			return;
---
>             return;
264c264
< 		}
---
>         }
303c303
< }
---
>  }
305c305
< static void element_end(GMarkupParseContext *context, const gchar *element_name, KeypadModel *keypad, GError G_GNUC_UNUSED(**error)) {
---
>  static void element_end(GMarkupParseContext *context, const gchar *element_name, KeypadModel *keypad, GError G_GNUC_UNUSED(**error)) {
326c326
< }
---
>  }
328c328
< void keypad_model_parse_context(GObject *object, GMarkupParseContext *context) {
---
>  void keypad_model_parse_context(GObject *object, GMarkupParseContext *context) {
330c330
< 	static const GMarkupParser parser = {
---
>    static const GMarkupParser parser = {
334,338c334,338
< 		(void (*)(GMarkupParseContext *, const gchar *, gpointer, GError **))
< 		element_end,
< 		NULL,
< 		NULL,
< 		NULL
---
> 	(void (*)(GMarkupParseContext *, const gchar *, gpointer, GError **))
> 			element_end,
> 			NULL,
> 			NULL,
> 			NULL
347c347
< }
---
>  }
349c349
< KEYPAD_POSITION pw3270_keypad_get_position(GObject *model) {
---
>  KEYPAD_POSITION pw3270_keypad_get_position(GObject *model) {
352c352
< }
---
>  }
354c354
< const gchar * pw3270_keypad_model_get_name(GObject *model) {
---
>  const gchar * pw3270_keypad_model_get_name(GObject *model) {
357c357
< }
---
>  }
359c359
< const gchar * pw3270_keypad_model_get_label(GObject *model) {
---
>  const gchar * pw3270_keypad_model_get_label(GObject *model) {
367c367
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/private.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/private.h
32c32
< #define PRIVATE_H_INCLUDED
---
> 	#define PRIVATE_H_INCLUDED
34c34
< #include <config.h>
---
> 	#include <config.h>
36,38c36,38
< #ifndef GETTEXT_PACKAGE
< #define GETTEXT_PACKAGE PACKAGE_NAME
< #endif
---
> 	#ifndef GETTEXT_PACKAGE
> 		#define GETTEXT_PACKAGE PACKAGE_NAME
> 	#endif
40,42c40,42
< #include <libintl.h>
< #include <glib/gi18n.h>
< #include <gtk/gtk.h>
---
> 	#include <libintl.h>
> 	#include <glib/gi18n.h>
> 	#include <gtk/gtk.h>
44,45c44,45
< #include <lib3270.h>
< #include <lib3270/log.h>
---
> 	#include <lib3270.h>
> 	#include <lib3270/log.h>
47c47
< #include <pw3270/keypad.h>
---
> 	#include <pw3270/keypad.h>
49c49
< G_BEGIN_DECLS
---
> 	G_BEGIN_DECLS
51c51
< #define I_(string) g_intern_static_string (string)
---
> 	#define I_(string) g_intern_static_string (string)
53,58c53,58
< #define PW_TYPE_KEYPAD_ELEMENT				(KeypadElement_get_type())
< #define PW_KEYPAD_ELEMENT(obj)				(G_TYPE_CHECK_INSTANCE_CAST ((obj), PW_TYPE_KEYPAD_ELEMENT, KeypadElement))
< #define PW_KEYPAD_ELEMENT_CLASS(klass)		(G_TYPE_CHECK_CLASS_CAST ((klass), PW_TYPE_KEYPAD_ELEMENT, KeypadModelClass))
< #define PW_IS_KEYPAD_ELEMENT(obj)			(G_TYPE_CHECK_INSTANCE_TYPE ((obj), PW_TYPE_KEYPAD_ELEMENT))
< #define PW_IS_KEYPAD_ELEMENT_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), PW_TYPE_KEYPAD_ELEMENT))
< #define PW_KEYPAD_ELEMENT_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), PW_TYPE_KEYPAD_ELEMENT, KeypadElementClass))
---
> 	#define PW_TYPE_KEYPAD_ELEMENT				(KeypadElement_get_type())
> 	#define PW_KEYPAD_ELEMENT(obj)				(G_TYPE_CHECK_INSTANCE_CAST ((obj), PW_TYPE_KEYPAD_ELEMENT, KeypadElement))
> 	#define PW_KEYPAD_ELEMENT_CLASS(klass)		(G_TYPE_CHECK_CLASS_CAST ((klass), PW_TYPE_KEYPAD_ELEMENT, KeypadModelClass))
> 	#define PW_IS_KEYPAD_ELEMENT(obj)			(G_TYPE_CHECK_INSTANCE_TYPE ((obj), PW_TYPE_KEYPAD_ELEMENT))
> 	#define PW_IS_KEYPAD_ELEMENT_CLASS(klass)	(G_TYPE_CHECK_CLASS_TYPE ((klass), PW_TYPE_KEYPAD_ELEMENT))
> 	#define PW_KEYPAD_ELEMENT_GET_CLASS(obj)	(G_TYPE_INSTANCE_GET_CLASS ((obj), PW_TYPE_KEYPAD_ELEMENT, KeypadElementClass))
60,61c60,61
< typedef struct _KeypadElement {
< 	GObject parent;
---
> 	typedef struct _KeypadElement {
> 		GObject parent;
63,66c63,66
< 	unsigned short row;
< 	unsigned short col;
< 	unsigned short width;
< 	unsigned short height;
---
> 		unsigned short row;
> 		unsigned short col;
> 		unsigned short width;
> 		unsigned short height;
68,70c68,70
< 	gchar * icon_name;
< 	gchar * label;
< 	gchar * action;
---
> 		gchar * icon_name;
> 		gchar * label;
> 		gchar * action;
72c72
< } KeypadElement;
---
> 	} KeypadElement;
74,75c74,75
< typedef struct _KeypadElementClass {
< 	GObjectClass parent;
---
> 	typedef struct _KeypadElementClass {
> 		GObjectClass parent;
77c77
< } KeypadElementClass;
---
> 	} KeypadElementClass;
79c79
< GType KeypadElement_get_type(void) G_GNUC_CONST;
---
> 	GType KeypadElement_get_type(void) G_GNUC_CONST;
81,82c81,82
< struct _KeypadModel {
< 	GObject parent;
---
> 	struct _KeypadModel {
> 		GObject parent;
84,86c84,86
< 	unsigned short width;
< 	unsigned short height;
< 	unsigned short position;
---
> 		unsigned short width;
> 		unsigned short height;
> 		unsigned short position;
88,91c88,91
< 	struct {
< 		unsigned short row;
< 		unsigned short col;
< 	} current;
---
> 		struct {
> 			unsigned short row;
> 			unsigned short col;
> 		} current;
93,94c93,94
< 	gchar *name;
< 	gchar *label;
---
> 		gchar *name;
> 		gchar *label;
96,97c96,97
< 	GList *elements;
< 	GList *widgets;
---
> 		GList *elements;
> 		GList *widgets;
99c99
< };
---
> 	};
101,103c101,103
< struct _KeypadModelClass {
< 	GObjectClass parent;
< 	GQuark domain;
---
> 	struct _KeypadModelClass {
> 		GObjectClass parent;
> 		GQuark domain;
105c105
< };
---
> 	};
107,108c107,108
< G_GNUC_INTERNAL void keypad_model_set_position(GObject *model, const gchar *position);
< G_GNUC_INTERNAL void keypad_model_parse_context(GObject *model, GMarkupParseContext *context);
---
> 	G_GNUC_INTERNAL void keypad_model_set_position(GObject *model, const gchar *position);
> 	G_GNUC_INTERNAL void keypad_model_parse_context(GObject *model, GMarkupParseContext *context);
110c110
< G_GNUC_INTERNAL const gchar * keypad_model_get_position(GObject *mode);
---
> 	G_GNUC_INTERNAL const gchar * keypad_model_get_position(GObject *mode);
112c112
< G_GNUC_INTERNAL void keypad_model_element_parse_context(GObject *element, GMarkupParseContext *context);
---
> 	G_GNUC_INTERNAL void keypad_model_element_parse_context(GObject *element, GMarkupParseContext *context);
114,115c114,115
< G_GNUC_INTERNAL void attribute_element_start(GMarkupParseContext *context,const gchar **names,const gchar **values, GObject *parent, GError **error);
< G_GNUC_INTERNAL void attribute_element_end(GMarkupParseContext *context, GObject *parent, GError **error);
---
> 	G_GNUC_INTERNAL void attribute_element_start(GMarkupParseContext *context,const gchar **names,const gchar **values, GObject *parent, GError **error);
> 	G_GNUC_INTERNAL void attribute_element_end(GMarkupParseContext *context, GObject *parent, GError **error);
117c117
< G_END_DECLS
---
> 	G_END_DECLS
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/testprogram/testprogram.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/testprogram/testprogram.c
31,40c31,40
< /**
<  * @brief PW3270 Keypad module test program.
<  *
<  */
< 
< #include <config.h>
< #include <lib3270/properties.h>
< #include <pw3270/keypad.h>
< #include <v3270.h>
< #include <v3270/trace.h>
---
>  /**
>   * @brief PW3270 Keypad module test program.
>   *
>   */
> 
>  #include <config.h>
>  #include <lib3270/properties.h>
>  #include <pw3270/keypad.h>
>  #include <v3270.h>
>  #include <v3270/trace.h>
42c42
< /*---[ Implement ]----------------------------------------------------------------------------------*/
---
>  /*---[ Implement ]----------------------------------------------------------------------------------*/
44c44
< static void activate(GtkApplication* app, G_GNUC_UNUSED gpointer user_data) {
---
>  static void activate(GtkApplication* app, G_GNUC_UNUSED gpointer user_data) {
77c77
< 	app = gtk_application_new ("br.app.pw3270.keypad",G_APPLICATION_FLAGS_NONE);
---
> 	app = gtk_application_new ("br.com.bb.pw3270.keypad",G_APPLICATION_FLAGS_NONE);
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/widget.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/keypad/widget.c
30c30
< #include "private.h"
---
>  #include "private.h"
34c34
< static void create_child(const KeypadElement *element, GtkGrid *grid) {
---
>  static void create_child(const KeypadElement *element, GtkGrid *grid) {
36c36
< 	GtkWidget * button;
---
>  	GtkWidget * button;
38c38
< 	if(element->icon_name) {
---
>  	if(element->icon_name) {
40,41c40,41
< 	} else if(element->label) {
< 		g_autofree gchar * label = g_strcompress(element->label);
---
>  	} else if(element->label) {
>  		g_autofree gchar * label = g_strcompress(element->label);
45c45
< 	}
---
>  	}
47c47
< 	if(element->action && *element->action) {
---
>  	if(element->action && *element->action) {
49c49
< 	}
---
>  	}
51c51
< 	gtk_button_set_relief(GTK_BUTTON(button),GTK_RELIEF_NORMAL);
---
>  	gtk_button_set_relief(GTK_BUTTON(button),GTK_RELIEF_NORMAL);
58,62c58,62
< 	gtk_grid_attach(
< 	    grid,
< 	    button,
< 	    element->col,element->row,
< 	    element->width,element->height
---
>   	gtk_grid_attach(
> 		grid,
> 		button,
> 		element->col,element->row,
> 		element->width,element->height
65c65
< }
---
>  }
67c67
< static void destroy(GtkWidget *grid, KeypadModel * keypad) {
---
>  static void destroy(GtkWidget *grid, KeypadModel * keypad) {
72c72
< }
---
>  }
74c74
< GtkWidget * pw3270_keypad_get_from_model(GObject *model) {
---
>  GtkWidget * pw3270_keypad_get_from_model(GObject *model) {
93c93
< }
---
>  }
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/os/linux: open.c
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/os/linux/savedesktopicon.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/os/linux/savedesktopicon.c
30,44c30,44
< /**
<  * @brief Implement Linux version of the save desktop icon action.
<  *
<  */
< 
< #include <v3270.h>
< #include <pw3270.h>
< #include <pw3270/application.h>
< #include <v3270/actions.h>
< #include <v3270/keyfile.h>
< #include <v3270/settings.h>
< #include <lib3270.h>
< #include <lib3270/log.h>
< #include <lib3270/properties.h>
< #include <v3270/tools.h>
---
>  /**
>   * @brief Implement Linux version of the save desktop icon action.
>   *
>   */
> 
>  #include <v3270.h>
>  #include <pw3270.h>
>  #include <pw3270/application.h>
>  #include <v3270/actions.h>
>  #include <v3270/keyfile.h>
>  #include <v3270/settings.h>
>  #include <lib3270.h>
>  #include <lib3270/log.h>
>  #include <lib3270/properties.h>
>  #include <v3270/tools.h>
46,47c46,47
< static GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal);
< static void response(GtkWidget *dialog, gint response_id, GtkWidget *terminal);
---
>  static GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal);
>  static void response(GtkWidget *dialog, gint response_id, GtkWidget *terminal);
49c49
< static const struct _entry {
---
>  static const struct _entry {
58c58
< } entries[] = {
---
>  } entries[] = {
106c106
< };
---
>  };
108c108
< GAction * pw3270_action_save_session_shortcut_new(void) {
---
>  GAction * pw3270_action_save_desktop_icon_new(void) {
118c118,152
< }
---
>  }
> 
>  /*
>  static gchar * get_filename(GtkWidget *terminal) {
> 
>  	g_autofree gchar * defname = v3270_keyfile_get_default_filename();
> 	const gchar * current = v3270_key_file_get_filename(terminal);
> 
> 	// If is not the default name, return it.
> 	if(strcmp(defname,current)) {
> 		return g_strdup(current);
> 	}
> 
> 	// It's the default one, create a new one on the user_config dir
> 	g_autofree gchar * config_path = v3270_key_file_get_default_path(terminal);
> 
> 	// Use the hostname
> 	const char * hostname = lib3270_host_get_name(v3270_get_session(terminal));
> 	if(!hostname) {
> 		hostname = G_STRINGIFY(PRODUCT_NAME);
> 	}
> 
> 	// Build the filename
> 	gchar *filename = g_strconcat(config_path,G_DIR_SEPARATOR_S,hostname,".3270",NULL);
> 
> 	unsigned int index = 0;
> 	while(g_file_test(filename,G_FILE_TEST_EXISTS)) {
> 		g_free(filename);
> 		filename = g_strdup_printf("%s" G_DIR_SEPARATOR_S "%s.%u.3270",config_path,hostname,++index);
> 	}
> 
> 	return filename;
> 
>  }
>  */
120c154
< GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal) {
---
>  GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal) {
128,132c162,166
< 	    GTK_WIDGET(g_object_new(
< 	                   GTK_TYPE_DIALOG,
< 	                   "use-header-bar", (use_header ? 1 : 0),
< 	                   NULL
< 	               ));
---
> 		GTK_WIDGET(g_object_new(
> 			GTK_TYPE_DIALOG,
> 			"use-header-bar", (use_header ? 1 : 0),
> 			NULL
> 		));
139,142c173,176
< 	    GTK_DIALOG(dialog),
< 	    _("_Cancel"), GTK_RESPONSE_CANCEL,
< 	    _("_Save"), GTK_RESPONSE_APPLY,
< 	    NULL
---
> 		GTK_DIALOG(dialog),
> 		_("_Cancel"), GTK_RESPONSE_CANCEL,
> 		_("_Save"), GTK_RESPONSE_APPLY,
> 		NULL
158,159c192,193
< 	gtk_grid_set_row_spacing(GTK_GRID(grid),6);
< 	gtk_grid_set_column_spacing(GTK_GRID(grid),12);
---
>  	gtk_grid_set_row_spacing(GTK_GRID(grid),6);
>  	gtk_grid_set_column_spacing(GTK_GRID(grid),12);
200,205c234,239
< 		    inputs[1],
< 		    GTK_FILE_CHOOSER_ACTION_SAVE,
< 		    _("Save to shortcut file"),
< 		    NULL,
< 		    "*.desktop",
< 		    _("Standard desktop files")
---
> 			inputs[1],
> 			GTK_FILE_CHOOSER_ACTION_SAVE,
> 			_("Save to shortcut file"),
> 			NULL,
> 			"*.desktop",
> 			_("Standard desktop files")
228,233c262,267
< 		    inputs[3],
< 		    GTK_FILE_CHOOSER_ACTION_SAVE,
< 		    _("Save to session filename"),
< 		    NULL,
< 		    "*.3270",
< 		    _("3270 session files")
---
> 			inputs[3],
> 			GTK_FILE_CHOOSER_ACTION_SAVE,
> 			_("Save to session filename"),
> 			NULL,
> 			"*.3270",
> 			_("3270 session files")
245c279
< }
---
>  }
247c281
< static void apply(GtkWidget *dialog, GtkWidget *terminal) {
---
>  static void apply(GtkWidget *dialog, GtkWidget *terminal) {
253,259c287,293
< 	    "[Desktop Entry]\n" \
< 	    "Icon=" G_STRINGIFY(PRODUCT_NAME) "\n"  \
< 	    "Terminal=false\n" \
< 	    "Type=Application\n" \
< 	    "StartupNotify=true\n" \
< 	    "Categories=GTK;GNOME;TerminalEmulator\n" \
< 	    "OnlyShowIn=GNOME;Unity\n";
---
> 		"[Desktop Entry]\n" \
> 		"Icon=" G_STRINGIFY(PRODUCT_NAME) "\n"  \
> 		"Terminal=false\n" \
> 		"Type=Application\n" \
> 		"StartupNotify=true\n" \
> 		"Categories=GTK;GNOME;TerminalEmulator\n" \
> 		"OnlyShowIn=GNOME;Unity\n";
284,286c318,320
< 	    terminal,
< 	    gtk_entry_get_text(GTK_ENTRY(inputs[3])),
< 	    &error
---
> 		terminal,
> 		gtk_entry_get_text(GTK_ENTRY(inputs[3])),
> 		&error
301,305c335,339
< 		    g_strconcat(
< 		        buffer,
< 		        " \"",gtk_entry_get_text(GTK_ENTRY(inputs[3])),"\"",
< 		        NULL
< 		    );
---
> 								g_strconcat(
> 									buffer,
> 									" \"",gtk_entry_get_text(GTK_ENTRY(inputs[3])),"\"",
> 									NULL
> 								);
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/os: macos
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/os/windows: open.c
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/os/windows/savedesktopicon.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/os/windows/savedesktopicon.c
30,38c30,38
< /**
<  * @brief Implement Windows version of the save desktop icon action.
<  *
<  * References:
<  *
<  * <https://stackoverflow.com/questions/3906974/how-to-programmatically-create-a-shortcut-using-win32>
<  * <https://docs.microsoft.com/pt-br/windows/win32/shell/links?redirectedfrom=MSDN>
<  *
<  */
---
>  /**
>   * @brief Implement Windows version of the save desktop icon action.
>   *
>   * References:
>   *
>   * <https://stackoverflow.com/questions/3906974/how-to-programmatically-create-a-shortcut-using-win32>
>   * <https://docs.microsoft.com/pt-br/windows/win32/shell/links?redirectedfrom=MSDN>
>   *
>   */
41,57c41,57
< #include <winsock2.h>
< #include <windows.h>
< #include <winnls.h>
< #include <shobjidl.h>
< #include <objbase.h>
< #include <objidl.h>
< #include <shlguid.h>
< 
< #include <v3270.h>
< #include <pw3270.h>
< #include <pw3270/application.h>
< #include <v3270/actions.h>
< #include <lib3270.h>
< #include <lib3270/log.h>
< #include <v3270/tools.h>
< #include <v3270/keyfile.h>
< #include <v3270/settings.h>
---
>  #include <winsock2.h>
>  #include <windows.h>
>  #include <winnls.h>
>  #include <shobjidl.h>
>  #include <objbase.h>
>  #include <objidl.h>
>  #include <shlguid.h>
> 
>  #include <v3270.h>
>  #include <pw3270.h>
>  #include <pw3270/application.h>
>  #include <v3270/actions.h>
>  #include <lib3270.h>
>  #include <lib3270/log.h>
>  #include <v3270/tools.h>
>  #include <v3270/keyfile.h>
>  #include <v3270/settings.h>
59,60c59,60
< static GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal);
< static void response(GtkWidget *dialog, gint response_id, GtkWidget *terminal);
---
>  static GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal);
>  static void response(GtkWidget *dialog, gint response_id, GtkWidget *terminal);
62c62
< static const struct _entry {
---
>  static const struct _entry {
69c69
< } entries[] = {
---
>  } entries[] = {
99c99
< };
---
>  };
101c101
< GAction * pw3270_action_save_session_shortcut_new(void) {
---
>  GAction * pw3270_action_save_desktop_icon_new(void) {
111c111
< }
---
>  }
113c113
< GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal) {
---
>  GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal) {
121,125c121,125
< 	    GTK_WIDGET(g_object_new(
< 	                   GTK_TYPE_DIALOG,
< 	                   "use-header-bar", (use_header ? 1 : 0),
< 	                   NULL
< 	               ));
---
> 		GTK_WIDGET(g_object_new(
> 			GTK_TYPE_DIALOG,
> 			"use-header-bar", (use_header ? 1 : 0),
> 			NULL
> 		));
131,134c131,134
< 	    GTK_DIALOG(dialog),
< 	    _("_Cancel"), GTK_RESPONSE_CANCEL,
< 	    _("_Save"), GTK_RESPONSE_APPLY,
< 	    NULL
---
> 		GTK_DIALOG(dialog),
> 		_("_Cancel"), GTK_RESPONSE_CANCEL,
> 		_("_Save"), GTK_RESPONSE_APPLY,
> 		NULL
150,151c150,151
< 	gtk_grid_set_row_spacing(GTK_GRID(grid),6);
< 	gtk_grid_set_column_spacing(GTK_GRID(grid),12);
---
>  	gtk_grid_set_row_spacing(GTK_GRID(grid),6);
>  	gtk_grid_set_column_spacing(GTK_GRID(grid),12);
182,187c182,187
< 		    inputs[0],
< 		    GTK_FILE_CHOOSER_ACTION_SAVE,
< 		    _("Save to windows shortcut"),
< 		    NULL,
< 		    "*.lnk",
< 		    _("Windows shortcuts")
---
> 			inputs[0],
> 			GTK_FILE_CHOOSER_ACTION_SAVE,
> 			_("Save to windows shortcut"),
> 			NULL,
> 			"*.lnk",
> 			_("Windows shortcuts")
191,193c191,193
< 		                       "%s\\" G_STRINGIFY(PRODUCT_NAME) ".lnk",
< 		                       g_get_user_special_dir(G_USER_DIRECTORY_DESKTOP)
< 		                   );
---
> 								"%s\\" G_STRINGIFY(PRODUCT_NAME) ".lnk",
> 								g_get_user_special_dir(G_USER_DIRECTORY_DESKTOP)
> 							);
201,204c201,204
< 			               "%s\\" G_STRINGIFY(PRODUCT_NAME) "%u.lnk",
< 			               g_get_user_special_dir(G_USER_DIRECTORY_DESKTOP),
< 			               (unsigned int) ++ix
< 			           );
---
> 								"%s\\" G_STRINGIFY(PRODUCT_NAME) "%u.lnk",
> 								g_get_user_special_dir(G_USER_DIRECTORY_DESKTOP),
> 								(unsigned int) ++ix
> 							);
217,222c217,222
< 		    inputs[3],
< 		    GTK_FILE_CHOOSER_ACTION_SAVE,
< 		    _("File for session preferences"),
< 		    NULL,
< 		    "*.3270",
< 		    _("3270 session files")
---
> 			inputs[3],
> 			GTK_FILE_CHOOSER_ACTION_SAVE,
> 			_("File for session preferences"),
> 			NULL,
> 			"*.3270",
> 			_("3270 session files")
229c229
< }
---
>  }
231c231
< static HRESULT CreateShortCut(const char * pszTargetfile, const char * pszTargetargs, const char * pszLinkfile, const char * pszDescription, int iShowmode, const char * pszCurdir, LPSTR pszIconfile, int iIconindex) {
---
>  static HRESULT CreateShortCut(const char * pszTargetfile, const char * pszTargetargs, const char * pszLinkfile, const char * pszDescription, int iShowmode, const char * pszCurdir, LPSTR pszIconfile, int iIconindex) {
240,245c240,245
< 	    CoCreateInstance(
< 	        &CLSID_ShellLink,			// predefined CLSID of the IShellLink object
< 	        NULL,						// pointer to parent interface if part of aggregate
< 	        CLSCTX_INPROC_SERVER,		// caller and called code are in same process
< 	        &IID_IShellLink,			// predefined interface of the IShellLink object
< 	        (void **) &pShellLink);		// Returns a pointer to the IShellLink object
---
> 		CoCreateInstance(
> 			&CLSID_ShellLink,			// predefined CLSID of the IShellLink object
> 			NULL,						// pointer to parent interface if part of aggregate
> 			CLSCTX_INPROC_SERVER,		// caller and called code are in same process
> 			&IID_IShellLink,			// predefined interface of the IShellLink object
> 			(void **) &pShellLink);		// Returns a pointer to the IShellLink object
289,291c289,291
< 	           pShellLink,					// existing IShellLink object
< 	           &IID_IPersistFile,			// pre-defined interface of the IPersistFile object
< 	           (void **) &pPersistFile);	// returns a pointer to the IPersistFile object
---
> 				pShellLink,					// existing IShellLink object
> 				&IID_IPersistFile,			// pre-defined interface of the IPersistFile object
> 				(void **) &pPersistFile);	// returns a pointer to the IPersistFile object
294c294
< 	if(SUCCEEDED(hRes)) {
---
> 	if(SUCCEEDED(hRes)){
303c303
< }
---
>  }
305c305
< void response(GtkWidget *dialog, gint response_id, GtkWidget *terminal) {
---
>  void response(GtkWidget *dialog, gint response_id, GtkWidget *terminal) {
317,319c317,319
< 		    terminal,
< 		    gtk_entry_get_text(GTK_ENTRY(inputs[3])),
< 		    &error
---
> 			terminal,
> 			gtk_entry_get_text(GTK_ENTRY(inputs[3])),
> 			&error
325,333c325,333
< 			                   NULL,										// LPSTR pszTargetfile,
< 			                   gtk_entry_get_text(GTK_ENTRY(inputs[3])),	// LPSTR pszTargetargs,
< 			                   gtk_entry_get_text(GTK_ENTRY(inputs[0])),	// LPSTR pszLinkfile,
< 			                   gtk_entry_get_text(GTK_ENTRY(inputs[1])),	// LPSTR pszDescription,
< 			                   0,
< 			                   NULL,
< 			                   NULL,
< 			                   0
< 			               );
---
> 								NULL,										// LPSTR pszTargetfile,
> 								gtk_entry_get_text(GTK_ENTRY(inputs[3])),	// LPSTR pszTargetargs,
> 								gtk_entry_get_text(GTK_ENTRY(inputs[0])),	// LPSTR pszLinkfile,
> 								gtk_entry_get_text(GTK_ENTRY(inputs[1])),	// LPSTR pszDescription,
> 								0,
> 								NULL,
> 								NULL,
> 								0
> 							);
352c352
< 	gtk_widget_destroy(dialog);
---
>  	gtk_widget_destroy(dialog);
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/settings/actionview.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/settings/actionview.c
31,32c31,32
< #include <winsock2.h>
< #include <windows.h>
---
> 	#include <winsock2.h>
> 	#include <windows.h>
35,39c35,39
< #include <pw3270.h>
< #include <pw3270/settings.h>
< #include <lib3270.h>
< #include <lib3270/log.h>
< #include <pw3270/actions.h>
---
>  #include <pw3270.h>
>  #include <pw3270/settings.h>
>  #include <lib3270.h>
>  #include <lib3270/log.h>
>  #include <pw3270/actions.h>
41,42c41,42
< struct _PW3270SettingsActions {
< 	GtkGrid parent;
---
>  struct _PW3270SettingsActions {
>   	GtkGrid parent;
45c45
< };
---
>  };
47,48c47,48
< struct _PW3270SettingsActionsClass {
< 	GtkGridClass parent;
---
>  struct _PW3270SettingsActionsClass {
>  	GtkGridClass parent;
50,51c50,51
< 	int dunno;
< };
---
>  	int dunno;
>  };
53c53
< G_DEFINE_TYPE(PW3270SettingsActions, PW3270SettingsActions, GTK_TYPE_GRID);
---
>  G_DEFINE_TYPE(PW3270SettingsActions, PW3270SettingsActions, GTK_TYPE_GRID);
55c55
< static void PW3270SettingsActions_class_init(PW3270SettingsActionsClass G_GNUC_UNUSED(*klass)) {
---
>  static void PW3270SettingsActions_class_init(PW3270SettingsActionsClass *klass) {
57c57
< }
---
>  }
59c59
< static void PW3270SettingsActions_init(PW3270SettingsActions *grid) {
---
>  static void PW3270SettingsActions_init(PW3270SettingsActions *grid) {
63c63
< 	static const struct View {
---
>  	static const struct View {
81c81
< 	};
---
>  	};
85c85
< 	gtk_grid_set_column_spacing(GTK_GRID(grid),6);
---
>  	gtk_grid_set_column_spacing(GTK_GRID(grid),6);
87,90c87,90
< 	{
< 		// Create views
< 		GtkTreeSelection * selection;
< 		//GtkWidget *box;
---
>  	{
>  		// Create views
>  		GtkTreeSelection * selection;
>  		GtkWidget *box;
102,105c102,105
< 			    GTK_GRID(grid),
< 			    label,
< 			    (ix*2),0,
< 			    1,1
---
> 				GTK_GRID(grid),
> 				label,
> 				(ix*2),0,
> 				1,1
122,125c122,125
< 			    GTK_GRID(grid),
< 			    box,
< 			    (ix*2),1,
< 			    1,5
---
> 				GTK_GRID(grid),
> 				box,
> 				(ix*2),1,
> 				1,5
130c130
< 	}
---
>  	}
136,137c136,137
< 	// Create buttons
< 	{
---
>  	// Create buttons
>  	{
151c151
< 	}
---
>  	}
153c153
< }
---
>  }
155c155
< GtkWidget * pw3270_settings_actions_new() {
---
>  GtkWidget * pw3270_settings_actions_new() {
158,160c158,160
< 	                      GTK_TYPE_PW3270_SETTINGS_ACTIONS,
< 	                      NULL
< 	                  ));
---
> 			GTK_TYPE_PW3270_SETTINGS_ACTIONS,
> 			NULL
> 		));
162c162
< }
---
>  }
164c164
< Pw3270ActionList * pw3270_settings_action_set(GtkWidget *widget, Pw3270ActionList *action_list, const gchar *action_names) {
---
>  Pw3270ActionList * pw3270_settings_action_set(GtkWidget *widget, Pw3270ActionList *action_list, const gchar *action_names) {
181c181
< 		for(action = 0; actions[action]; action++) {
---
> 		for(action = 0; actions[action];action++) {
183,186c183,186
< 			                  action_list,
< 			                  actions[action],
< 			                  editor->views[columns[column]]
< 			              );
---
> 								action_list,
> 								actions[action],
> 								editor->views[columns[column]]
> 							);
190c190
< 	}
---
>     }
192c192
< 	g_strfreev(views);
---
>    	g_strfreev(views);
197c197
< }
---
>  }
199c199
< gchar * pw3270_settings_action_get(GtkWidget *widget) {
---
>  gchar * pw3270_settings_action_get(GtkWidget *widget) {
203,205c203,205
< 	g_autofree gchar * left_names = pw3270_action_view_get_action_names(editor->views[0]);
< 	g_autofree gchar * right_names = pw3270_action_view_get_action_names(editor->views[2]);
< 	return g_strconcat(left_names,":",right_names,NULL);
---
>   	g_autofree gchar * left_names = pw3270_action_view_get_action_names(editor->views[0]);
>  	g_autofree gchar * right_names = pw3270_action_view_get_action_names(editor->views[2]);
>  	return g_strconcat(left_names,":",right_names,NULL);
207c207
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/settings/dialog.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/settings/dialog.c
31,32c31,32
< #include <winsock2.h>
< #include <windows.h>
---
> 	#include <winsock2.h>
> 	#include <windows.h>
35,58c35,57
< #include <pw3270.h>
< #include <pw3270/settings.h>
< #include <pw3270/actions.h>
< #include <pw3270/window.h>
< #include <lib3270.h>
< #include <lib3270/log.h>
< 
< struct _PW3270SettingsDialog {
< 	GtkDialog		  parent;
< 	GtkNotebook		* tabs;
< 	gboolean		  has_subtitle;
< };
< 
< struct _PW3270SettingsDialogClass	{
< 	GtkDialogClass parent_class;
< };
< 
< G_DEFINE_TYPE(PW3270SettingsDialog, PW3270SettingsDialog, GTK_TYPE_DIALOG);
< 
< static void add(GtkContainer *container, GtkWidget *widget);
< static void page_changed(GtkNotebook *notebook, GtkWidget *child, guint page_num, PW3270SettingsDialog *dialog);
< static void switch_page(GtkNotebook *notebook, PW3270Settings *page, guint page_num, PW3270SettingsDialog *dialog);
< static void dialog_close(GtkDialog *dialog);
< static void response(GtkDialog *dialog, gint response_id);
---
>  #include <pw3270.h>
>  #include <pw3270/settings.h>
>  #include <pw3270/actions.h>
>  #include <lib3270.h>
>  #include <lib3270/log.h>
> 
>  struct _PW3270SettingsDialog {
>   	GtkDialog		  parent;
>   	GtkNotebook		* tabs;
>   	gboolean		  has_subtitle;
>  };
> 
>  struct _PW3270SettingsDialogClass	{
>  	GtkDialogClass parent_class;
>  };
> 
>  G_DEFINE_TYPE(PW3270SettingsDialog, PW3270SettingsDialog, GTK_TYPE_DIALOG);
> 
>  static void add(GtkContainer *container, GtkWidget *widget);
>  static void page_changed(GtkNotebook *notebook, GtkWidget *child, guint page_num, PW3270SettingsDialog *dialog);
>  static void switch_page(GtkNotebook *notebook, PW3270Settings *page, guint page_num, PW3270SettingsDialog *dialog);
>  static void dialog_close(GtkDialog *dialog);
>  static void response(GtkDialog *dialog, gint response_id);
68c67,68
< static void PW3270SettingsDialog_init(PW3270SettingsDialog *dialog) {
---
> static void PW3270SettingsDialog_init(PW3270SettingsDialog *dialog)
> {
74c74
< 	gtk_window_set_destroy_with_parent(GTK_WINDOW(dialog), TRUE);
---
>     gtk_window_set_destroy_with_parent(GTK_WINDOW(dialog), TRUE);
77,80c77,80
< 	    GTK_DIALOG(dialog),
< 	    _("_Cancel"), GTK_RESPONSE_CANCEL,
< 	    _("_Apply"), GTK_RESPONSE_APPLY,
< 	    NULL
---
> 		GTK_DIALOG(dialog),
> 		_("_Cancel"), GTK_RESPONSE_CANCEL,
> 		_("_Apply"), GTK_RESPONSE_APPLY,
> 		NULL
105,109c105,109
< 	    GTK_WIDGET(g_object_new(
< 	                   GTK_TYPE_PW3270_SETTINGS_DIALOG,
< 	                   "use-header-bar", FALSE,
< 	                   NULL
< 	               ));
---
> 		GTK_WIDGET(g_object_new(
> 			GTK_TYPE_PW3270_SETTINGS_DIALOG,
> 			"use-header-bar", FALSE,
> 			NULL
> 		));
117,121c117,121
< 	    GTK_WIDGET(g_object_new(
< 	                   GTK_TYPE_PW3270_SETTINGS_DIALOG,
< 	                   "use-header-bar", (use_header ? 1 : 0),
< 	                   NULL
< 	               ));
---
> 		GTK_WIDGET(g_object_new(
> 			GTK_TYPE_PW3270_SETTINGS_DIALOG,
> 			"use-header-bar", (use_header ? 1 : 0),
> 			NULL
> 		));
133c133
< 		if(PW3270_IS_ACTION(action)) {
---
>         if(PW3270_IS_ACTION(action)) {
135c135
< 		}
---
>         }
139c139
< 	return dialog;
---
>  	return dialog;
147c147
< static void apply(GtkWidget *widget, GSettings *settings) {
---
> static void apply(GtkWidget *widget, GtkWidget G_GNUC_UNUSED(*dialog)) {
150c150
< 		GTK_PW3270_SETTINGS(widget)->apply(widget,settings,GTK_PW3270_SETTINGS(widget)->settings);
---
> 		GTK_PW3270_SETTINGS(widget)->apply(widget,GTK_PW3270_SETTINGS(widget)->settings);
155c155
< static void revert(GtkWidget *widget, GSettings *settings, GtkWidget G_GNUC_UNUSED(*dialog)) {
---
> static void revert(GtkWidget *widget, GtkWidget G_GNUC_UNUSED(*dialog)) {
158c158
< 		GTK_PW3270_SETTINGS(widget)->revert(widget,settings,GTK_PW3270_SETTINGS(widget)->settings);
---
> 		GTK_PW3270_SETTINGS(widget)->revert(widget,GTK_PW3270_SETTINGS(widget)->settings);
167,169d166
< 	g_autoptr(GSettings) settings = pw3270_application_window_settings_new();
< 	g_settings_delay(settings);
< 
173,175c170,172
< 		    GTK_CONTAINER(GTK_PW3270_SETTINGS_DIALOG(dialog)->tabs),
< 		    (GtkCallback) apply,
< 		    settings
---
> 			GTK_CONTAINER(GTK_PW3270_SETTINGS_DIALOG(dialog)->tabs),
> 			(GtkCallback) apply,
> 			dialog
181,183c178,180
< 		    GTK_CONTAINER(GTK_PW3270_SETTINGS_DIALOG(dialog)->tabs),
< 		    (GtkCallback) revert,
< 		    settings
---
> 			GTK_CONTAINER(GTK_PW3270_SETTINGS_DIALOG(dialog)->tabs),
> 			(GtkCallback) revert,
> 			dialog
189d185
< 	g_settings_apply(settings);
191d186
< 
204,206c199
< 
< 		g_autoptr(GSettings) gs = pw3270_application_window_settings_new();
< 		settings->load(widget,gs,settings->settings);
---
> 		settings->load(widget,settings->settings);
211,213c204,206
< 	    GTK_PW3270_SETTINGS_DIALOG(container)->tabs,
< 	    widget,
< 	    label
---
> 		GTK_PW3270_SETTINGS_DIALOG(container)->tabs,
> 		widget,
> 		label
219c212
< 	gtk_notebook_set_show_tabs(notebook,gtk_notebook_get_n_pages(notebook) > 1);
---
>  	gtk_notebook_set_show_tabs(notebook,gtk_notebook_get_n_pages(notebook) > 1);
222c215
< void switch_page(GtkNotebook G_GNUC_UNUSED(*notebook), PW3270Settings *page, guint G_GNUC_UNUSED(page_num), PW3270SettingsDialog *dialog) {
---
> void switch_page(GtkNotebook *notebook, PW3270Settings *page, guint G_GNUC_UNUSED(page_num), PW3270SettingsDialog *dialog) {
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/settings: gsettings.c
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/settings/widget.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/settings/widget.c
31,32c31,32
< #include <winsock2.h>
< #include <windows.h>
---
> 	#include <winsock2.h>
> 	#include <windows.h>
35,45c35,45
< #include <pw3270.h>
< #include <pw3270/settings.h>
< #include <lib3270.h>
< #include <lib3270/log.h>
< 
< G_DEFINE_TYPE(PW3270Settings, PW3270Settings, GTK_TYPE_GRID);
< 
< static void load(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page);
< static void apply(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page);
< static void revert(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page);
< static void finalize(GObject *object);
---
>  #include <pw3270.h>
>  #include <pw3270/settings.h>
>  #include <lib3270.h>
>  #include <lib3270/log.h>
> 
>  G_DEFINE_TYPE(PW3270Settings, PW3270Settings, GTK_TYPE_GRID);
> 
>  static void load(GtkWidget *widget, PW3270SettingsPrivate *settings);
>  static void apply(GtkWidget *widget, PW3270SettingsPrivate *settings);
>  static void revert(GtkWidget *widget, PW3270SettingsPrivate *settings);
>  static void finalize(GObject *object);
49c49
< PW3270Settings * pw3270_settings_new() {
---
>  PW3270Settings * pw3270_settings_new() {
51c51
< }
---
>  }
53c53
< static void PW3270Settings_class_init(PW3270SettingsClass *klass) {
---
>  static void PW3270Settings_class_init(PW3270SettingsClass *klass) {
56c56
< }
---
>  }
58c58
< static void PW3270Settings_init(PW3270Settings *widget) {
---
>  static void PW3270Settings_init(PW3270Settings *widget) {
61,62c61,62
< 	gtk_grid_set_row_spacing(GTK_GRID(widget),6);
< 	gtk_grid_set_column_spacing(GTK_GRID(widget),12);
---
>  	gtk_grid_set_row_spacing(GTK_GRID(widget),6);
>  	gtk_grid_set_column_spacing(GTK_GRID(widget),12);
64c64
< 	widget->settings = NULL;	// Just in case.
---
>  	widget->settings = NULL;	// Just in case.
69c69
< }
---
>  }
71c71
< static void finalize(GObject *object) {
---
>  static void finalize(GObject *object) {
81,82c81,82
< void load(GtkWidget G_GNUC_UNUSED(*widget), GSettings G_GNUC_UNUSED(*settings), PW3270SettingsPage G_GNUC_UNUSED(*page)) {
< }
---
>  void load(GtkWidget G_GNUC_UNUSED(*widget), PW3270SettingsPrivate G_GNUC_UNUSED(*settings)) {
>  }
84,85c84,85
< void apply(GtkWidget G_GNUC_UNUSED(*widget), GSettings G_GNUC_UNUSED(*settings), PW3270SettingsPage G_GNUC_UNUSED(*page)) {
< }
---
>  void apply(GtkWidget G_GNUC_UNUSED(*widget), PW3270SettingsPrivate G_GNUC_UNUSED(*settings)) {
>  }
87,88c87,88
< void revert(GtkWidget G_GNUC_UNUSED(*widget), GSettings G_GNUC_UNUSED(*settings), PW3270SettingsPage G_GNUC_UNUSED(*page)) {
< }
---
>  void revert(GtkWidget G_GNUC_UNUSED(*widget), PW3270SettingsPrivate G_GNUC_UNUSED(*settings)) {
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/actions.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/actions.c
1,2d0
< /* SPDX-License-Identifier: LGPL-3.0-or-later */
< 
4c2,23
<  * Copyright (C) 2008 Banco do Brasil S.A.
---
>  * "Software pw3270, desenvolvido com base nos códigos fontes do WC3270  e X3270
>  * (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
>  * aplicativos mainframe. Registro no INPI sob o nome G3270.
>  *
>  * Copyright (C) <2008> <Banco do Brasil S.A.>
>  *
>  * Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
>  * os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
>  * Free Software Foundation.
>  *
>  * Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
>  * GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
>  * A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
>  * obter mais detalhes.
>  *
>  * Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
>  * programa; se não, escreva para a Free Software Foundation, Inc., 51 Franklin
>  * St, Fifth Floor, Boston, MA  02110-1301  USA
>  *
>  * Este programa está nomeado como - e possui - linhas de código.
>  *
>  * Contatos:
6,14c25,26
<  * This program is free software: you can redistribute it and/or modify
<  * it under the terms of the GNU Lesser General Public License as published
<  * by the Free Software Foundation, either version 3 of the License, or
<  * (at your option) any later version.
<  *
<  * This program is distributed in the hope that it will be useful,
<  * but WITHOUT ANY WARRANTY; without even the implied warranty of
<  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
<  * GNU General Public License for more details.
---
>  * perry.werneck@gmail.com	(Alexandre Perry de Souza Werneck)
>  * erico.mendonca@gmail.com	(Erico Mascarenhas Mendonça)
16,17d27
<  * You should have received a copy of the GNU Lesser General Public License
<  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
20,21c30,31
< #include "private.h"
< #include <pw3270/actions.h>
---
>  #include "private.h"
>  #include <pw3270/actions.h>
23c33
< GtkWidget * pw3270_toolbar_insert_action(GtkWidget *toolbar, const gchar *name, gint pos) {
---
>  GtkWidget * pw3270_toolbar_insert_action(GtkWidget *toolbar, const gchar *name, gint pos) {
51c61
< 	if(window && G_IS_ACTION_MAP(window)) {
---
> 	if(window) {
74c84
< //		debug("%s(%s)=%p",__FUNCTION__,name,action);
---
> 		debug("%s(%s)=%p",__FUNCTION__,name,action);
82,85c92,95
< 		           action,
< 		           GTK_ICON_SIZE_LARGE_TOOLBAR,
< 		           pw3270_toolbar_get_icon_type(GTK_TOOLBAR(toolbar)) == 1
< 		       );
---
> 					action,
> 					GTK_ICON_SIZE_LARGE_TOOLBAR,
> 					pw3270_toolbar_get_icon_type(GTK_TOOLBAR(toolbar)) == 1
> 				);
110c120
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/models.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/models.c
30,33c30,33
< #include "private.h"
< #include <pw3270/application.h>
< #include <pw3270/settings.h>
< #include <pw3270/window.h>
---
>  #include "private.h"
>  #include <pw3270/application.h>
>  #include <pw3270/settings.h>
>  #include <pw3270/window.h>
35c35
< #define GTK_TOOLBAR_DEFAULT_STYLE ((GtkToolbarStyle) -1)
---
>  #define GTK_TOOLBAR_DEFAULT_STYLE ((GtkToolbarStyle) -1)
37c37
< struct _contents {
---
>  struct _contents {
40c40
< };
---
>  };
42c42
< static const struct _models {
---
>  static const struct _models {
47c47
< } models[] = {
---
>  } models[] = {
99c99,100
< 			}, {
---
> 			},
> 			{
104d104
< 
113c113,114
< 			}, {
---
> 			},
> 			{
116,126c117
< 			}, {
< 				.label = NULL
< 			}
< 		}
< 	},
< 
< 	{
< 		"toolbar-position",
< 		"position",
< 		N_("Position"),
< 		(const struct _contents[]) {
---
> 			},
128,139d118
< 				.label = N_( "Top (system default)" ),
< 				.value = 0
< 			}, {
< 				.label = N_( "Left" ),
< 				.value = 3
< 			}, {
< 				.label = N_( "Bottom" ),
< 				.value = 1
< 			}, {
< 				.label = N_( "Right" ),
< 				.value = 2
< 			}, {
144d122
< };
146c124,126
< GtkTreeModel * pw3270_model_from_name(const gchar *name) {
---
>  };
> 
>   GtkTreeModel * pw3270_model_from_name(const gchar *name) {
163,166c143,146
< 			                    &iter,
< 			                    0, gettext(models[model].contents[row].label),
< 			                    1, models[model].contents[row].value,
< 			                    -1);
---
> 								&iter,
> 								0, gettext(models[model].contents[row].label),
> 								1, models[model].contents[row].value,
> 								-1);
175c155
< }
---
>  }
177c157
< void pw3270_model_get_iter_from_value(GtkTreeModel * model, GtkTreeIter *iter, guint value) {
---
>  void pw3270_model_get_iter_from_value(GtkTreeModel * model, GtkTreeIter *iter, guint value) {
196c176
< }
---
>  }
198c178
< guint pw3270_model_get_value_from_iter(GtkTreeModel * model, GtkTreeIter *iter) {
---
>  guint pw3270_model_get_value_from_iter(GtkTreeModel * model, GtkTreeIter *iter) {
204c184
< }
---
>  }
206c186
< static void set_property(GObject *menuitem, GObject *widget) {
---
>  static void set_property(GObject *menuitem, GObject *widget) {
212a193
> 		debug("%s(%s,%d)",__FUNCTION__,name,model->value);
217c198
< }
---
>  }
219c200
< static void set_toggle_menu_item(GtkCheckMenuItem *item, gint *value) {
---
>  static void set_toggle_menu_item(GtkCheckMenuItem *item, gint *value) {
224c205
< }
---
>  }
226c207
< static void property_changed(GObject *widget, GParamSpec G_GNUC_UNUSED(*pspec), GtkContainer *menu) {
---
>  static void property_changed(GObject *widget, GParamSpec G_GNUC_UNUSED(*pspec), GtkContainer *menu) {
228c209
< 	gint value = -1;
---
>  	gint value = -1;
232c213
< //	debug("%s(%p,%s)=%d",__FUNCTION__,widget,name,value);
---
> 	debug("%s(%p,%s)=%d",__FUNCTION__,widget,name,value);
237c218
< }
---
>  }
239c220
< GtkWidget * pw3270_menu_item_from_model(GtkWidget *widget, const gchar *name) {
---
>  GtkWidget * pw3270_menu_item_from_model(GtkWidget *widget, const gchar *name) {
263c244
< 		}
---
>  		}
289c270
< }
---
>  }
291c272
< void pw3270_menu_item_set_value(GtkWidget *menu, guint value) {
---
>  void pw3270_menu_item_set_value(GtkWidget *menu, guint value) {
295c276
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/private.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/private.h
32c32
< #define PRIVATE_H_INCLUDED
---
> 	#define PRIVATE_H_INCLUDED
34c34
< #include <config.h>
---
> 	#include <config.h>
36,38c36,38
< #ifndef GETTEXT_PACKAGE
< #define GETTEXT_PACKAGE PACKAGE_NAME
< #endif
---
> 	#ifndef GETTEXT_PACKAGE
> 		#define GETTEXT_PACKAGE PACKAGE_NAME
> 	#endif
40,41c40,41
< /* not really I18N-related, but also a string marker macro */
< #define I_(string) g_intern_static_string (string)
---
> 	/* not really I18N-related, but also a string marker macro */
> 	#define I_(string) g_intern_static_string (string)
43,45c43,45
< #include <libintl.h>
< #include <glib/gi18n.h>
< #include <gtk/gtk.h>
---
> 	#include <libintl.h>
> 	#include <glib/gi18n.h>
> 	#include <gtk/gtk.h>
47,48c47,48
< #include <pw3270/toolbar.h>
< #include <lib3270/log.h>
---
> 	#include <pw3270/toolbar.h>
> 	#include <lib3270/log.h>
50,51c50,51
< G_GNUC_INTERNAL GtkWidget 		* pw3270_tool_button_new(GAction *action);
< G_GNUC_INTERNAL GtkWidget 		* pw3270_tool_button_new_from_action_name(const gchar * action_name);
---
> 	G_GNUC_INTERNAL GtkWidget 		* pw3270_tool_button_new(GAction *action);
> 	G_GNUC_INTERNAL GtkWidget 		* pw3270_tool_button_new_from_action_name(const gchar * action_name);
53,55c53,55
< GtkTreeModel					* pw3270_model_from_name(const gchar *name);
< GtkWidget						* pw3270_menu_item_from_model(GtkWidget *widget, const gchar *model_name);
< void							  pw3270_menu_item_set_value(GtkWidget *menu, guint value);
---
> 	GtkTreeModel					* pw3270_model_from_name(const gchar *name);
> 	GtkWidget						* pw3270_menu_item_from_model(GtkWidget *widget, const gchar *model_name);
> 	void							  pw3270_menu_item_set_value(GtkWidget *menu, guint value);
57,58c57,58
< G_GNUC_INTERNAL void			  pw3270_model_get_iter_from_value(GtkTreeModel * model, GtkTreeIter *iter, guint value);
< G_GNUC_INTERNAL guint			  pw3270_model_get_value_from_iter(GtkTreeModel * model, GtkTreeIter *iter);
---
> 	G_GNUC_INTERNAL void			  pw3270_model_get_iter_from_value(GtkTreeModel * model, GtkTreeIter *iter, guint value);
> 	G_GNUC_INTERNAL guint			  pw3270_model_get_value_from_iter(GtkTreeModel * model, GtkTreeIter *iter);
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/settings.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/settings.c
30,48c30,48
< #include "private.h"
< #include <pw3270.h>
< #include <pw3270/settings.h>
< #include <pw3270/toolbar.h>
< #include <pw3270/actions.h>
< #include <pw3270/window.h>
< #include <v3270/dialogs.h>
< 
< static void load(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page);
< static void apply(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page);
< 
< /*--[ Constants ]------------------------------------------------------------------------------------*/
< 
< static const struct _comboboxes {
< 	const gchar * name;			///< @brief The gsettings name.
< 	const gchar * label;		///< @brief The combo name.
< 	guint left;
< 	guint top;
< } comboboxes[] = {
---
>  #include "private.h"
>  #include <pw3270.h>
>  #include <pw3270/settings.h>
>  #include <pw3270/toolbar.h>
>  #include <pw3270/actions.h>
>  #include <pw3270/window.h>
>  #include <v3270/dialogs.h>
> 
>  static void load(GtkWidget *widget, PW3270SettingsPrivate *settings);
>  static void apply(GtkWidget *widget, PW3270SettingsPrivate *settings);
> 
>  /*--[ Constants ]------------------------------------------------------------------------------------*/
> 
>  static const struct _comboboxes {
>  	const gchar * name;			///< @brief The gsettings name.
>  	const gchar * label;		///< @brief The combo name.
>  	guint left;
>  	guint top;
>  } comboboxes[] = {
69,75d68
< 	},
< 
< 	{
< 		.left = 3,
< 		.top = 1,
< 		.name = "toolbar-position",
< 		.label = N_("Toolbar position")
78c71
< };
---
>  };
80c73
< struct _PW3270SettingsPage {
---
>  struct _PW3270SettingsPrivate {
81a75
> //	GtkTreeModel * models[G_N_ELEMENTS(comboboxes)];
83c77
< };
---
>  };
85c79
< /*--[ Implement ]------------------------------------------------------------------------------------*/
---
>  /*--[ Implement ]------------------------------------------------------------------------------------*/
87c81
< GtkWidget * pw3270_toolbar_settings_new() {
---
>  GtkWidget * pw3270_toolbar_settings_new() {
89c83
< 	size_t ix;
---
>  	size_t ix;
99c93
< 	PW3270SettingsPage * page = settings->settings = g_new0(PW3270SettingsPage,1);
---
> 	PW3270SettingsPrivate * page = settings->settings = g_new0(PW3270SettingsPrivate,1);
111,113c105,107
< 		    GTK_GRID(settings),
< 		    v3270_dialog_section_new(_("Itens"), _("Select the toolbar itens"), GTK_WIDGET(grid)),
< 		    0,0,4,3
---
> 			GTK_GRID(settings),
> 			v3270_dialog_section_new(_("Itens"), _("Select the toolbar itens"), GTK_WIDGET(grid)),
> 			0,0,4,3
132,134c126,128
< 			    grid,
< 			    label,
< 			    ix * 3,0,2,1
---
> 				grid,
> 				label,
> 				ix * 3,0,2,1
143,145c137,139
< 			    grid,
< 			    box,
< 			    ix * 3,1,2,4
---
> 				grid,
> 				box,
> 				ix * 3,1,2,4
167,169c161,163
< 		    grid,
< 		    box,
< 		    2,2,1,1
---
> 			grid,
> 			box,
> 			2,2,1,1
181,183c175,177
< 		    GTK_GRID(settings),
< 		    v3270_dialog_section_new(_("Style & Position"), _("Setup the toolbar style and position"), GTK_WIDGET(grid)),
< 		    0,5,4,1
---
> 			GTK_GRID(settings),
> 			v3270_dialog_section_new(_("Layout"), _("Setup the toolbar layout"), GTK_WIDGET(grid)),
> 			0,5,4,1
212,218d205
< 		{
< 			GtkWidget * label = gtk_label_new("");
< 			gtk_label_set_markup(GTK_LABEL(label),_("<small><b>The toolbar position only takes effect after restart</b></small>"));
< 			g_object_set(G_OBJECT(label),"margin-top",12,NULL);
< 			gtk_grid_attach(grid,label,0,3,6,1);
< 		}
< 
222c209
< }
---
>  }
224c211
< void load(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page) {
---
>  void load(GtkWidget G_GNUC_UNUSED(*widget), PW3270SettingsPrivate *page) {
226,232c213,214
< 	size_t ix;
< 
< 	if(!G_IS_SETTINGS(settings)) {
< 		g_warning("The settings object is not valid, disabling dialog to avoid segfaults");
< 		gtk_widget_set_sensitive(widget,FALSE);
< 		return;
< 	}
---
>  	size_t ix;
> 	g_autoptr(GSettings) settings = pw3270_application_window_settings_new();
234c216
< 	// Populate views
---
>  	// Populate views
237,238c219,220
< 	// Load current values.
< 	g_autofree gchar * action_names = g_settings_get_string(settings,"toolbar-action-names");
---
>     // Load current values.
>     g_autofree gchar * action_names = g_settings_get_string(settings,"toolbar-action-names");
240c222
< 	gchar ** actions = g_strsplit(action_names,",",-1);
---
>  	gchar ** actions = g_strsplit(action_names,",",-1);
270,272c252,254
< 		    gtk_combo_box_get_model(GTK_COMBO_BOX(page->combos[ix])),
< 		    &iter,
< 		    (guint) g_settings_get_int(settings,comboboxes[ix].name)
---
> 			gtk_combo_box_get_model(GTK_COMBO_BOX(page->combos[ix])),
> 			&iter,
> 			(guint) g_settings_get_int(settings,comboboxes[ix].name)
279c261
< }
---
>  }
281c263
< void apply(GtkWidget G_GNUC_UNUSED(*widget), GSettings *settings, PW3270SettingsPage *page) {
---
>  void apply(GtkWidget G_GNUC_UNUSED(*widget), PW3270SettingsPrivate *page) {
283a266
> 	g_autoptr(GSettings) settings = pw3270_application_window_settings_new();
285c268
< 	g_autofree gchar * action_names = pw3270_action_view_get_action_names(page->views[0]);
---
>  	g_autofree gchar * action_names = pw3270_action_view_get_action_names(page->views[0]);
294,296c277,279
< 			    settings,
< 			    comboboxes[ix].name,
< 			    (gint) pw3270_model_get_value_from_iter(gtk_combo_box_get_model(GTK_COMBO_BOX(page->combos[ix])),&iter)
---
> 					settings,
> 					comboboxes[ix].name,
> 					(gint) pw3270_model_get_value_from_iter(gtk_combo_box_get_model(GTK_COMBO_BOX(page->combos[ix])),&iter)
303c286
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/testprogram/testprogram.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/testprogram/testprogram.c
31,35c31,35
< #include <config.h>
< #include <pw3270/toolbar.h>
< #include <v3270.h>
< #include <v3270/trace.h>
< #include <lib3270/log.h>
---
>  #include <config.h>
>  #include <pw3270/toolbar.h>
>  #include <v3270.h>
>  #include <v3270/trace.h>
>  #include <lib3270/log.h>
37c37
< /*---[ Implement ]----------------------------------------------------------------------------------*/
---
>  /*---[ Implement ]----------------------------------------------------------------------------------*/
39c39
< static void activate(GtkApplication* app, G_GNUC_UNUSED gpointer user_data) {
---
>  static void activate(GtkApplication* app, G_GNUC_UNUSED gpointer user_data) {
56c56
< 		size_t ix;
---
>         size_t ix;
58c58
< 		for(ix = 0; ix < G_N_ELEMENTS(action_names); ix++) {
---
>         for(ix = 0; ix < G_N_ELEMENTS(action_names); ix++) {
60c60
< 		}
---
>         }
94,95c94,95
< 	GtkApplication *app;
< 	int status;
---
>   GtkApplication *app;
>   int status;
97c97
< 	app = gtk_application_new ("br.app.pw3270",G_APPLICATION_FLAGS_NONE);
---
>   app = gtk_application_new ("br.com.bb.pw3270",G_APPLICATION_FLAGS_NONE);
99c99
< 	g_signal_connect (app, "activate", G_CALLBACK(activate), NULL);
---
>   g_signal_connect (app, "activate", G_CALLBACK(activate), NULL);
101,102c101,102
< 	status = g_application_run (G_APPLICATION (app), argc, argv);
< 	g_object_unref (app);
---
>   status = g_application_run (G_APPLICATION (app), argc, argv);
>   g_object_unref (app);
104c104
< 	g_message("rc=%d",status);
---
>   g_message("rc=%d",status);
106c106
< 	return 0;
---
>   return 0;
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/toolbar.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/toolbar/toolbar.c
30,39c30,39
< #include "private.h"
< #include <pw3270/application.h>
< #include <pw3270/settings.h>
< 
< #define GTK_TOOLBAR_DEFAULT_STYLE ((GtkToolbarStyle) -1)
< 
< static gboolean popup_context_menu(GtkToolbar *toolbar, gint x, gint y, gint button_number);
< static void finalize(GObject *object);
< static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);
< static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);
---
>  #include "private.h"
>  #include <pw3270/application.h>
>  #include <pw3270/settings.h>
> 
>  #define GTK_TOOLBAR_DEFAULT_STYLE ((GtkToolbarStyle) -1)
> 
>  static gboolean popup_context_menu(GtkToolbar *toolbar, gint x, gint y, gint button_number);
>  static void finalize(GObject *object);
>  static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);
>  static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);
41c41
< enum {
---
>  enum {
47c47
< };
---
>  };
49c49
< enum {
---
>  enum {
53c53
< };
---
>  };
55c55
< static const gchar * toolbar_menus[] = {
---
>  static const gchar * toolbar_menus[] = {
59c59
< };
---
>  };
61,62c61,62
< struct _pw3270ToolBar {
< 	GtkToolbar parent;
---
>  struct _pw3270ToolBar {
>  	GtkToolbar parent;
67c67
< 	GtkWidget *submenu[G_N_ELEMENTS(toolbar_menus)];
---
>  	GtkWidget *submenu[G_N_ELEMENTS(toolbar_menus)];
69c69
< };
---
>  };
71c71
< struct _pw3270ToolBarClass {
---
>  struct _pw3270ToolBarClass {
76c76
< };
---
>  };
78c78
< G_DEFINE_TYPE(pw3270ToolBar, pw3270ToolBar, GTK_TYPE_TOOLBAR);
---
>  G_DEFINE_TYPE(pw3270ToolBar, pw3270ToolBar, GTK_TYPE_TOOLBAR);
80c80
< static void pw3270ToolBar_class_init(pw3270ToolBarClass *klass) {
---
>  static void pw3270ToolBar_class_init(pw3270ToolBarClass *klass) {
83c83
< 	GtkToolbarClass * toolbar = GTK_TOOLBAR_CLASS(klass);
---
>  	GtkToolbarClass * toolbar = GTK_TOOLBAR_CLASS(klass);
85c85
< 	toolbar->popup_context_menu = popup_context_menu;
---
>  	toolbar->popup_context_menu = popup_context_menu;
87c87
< 	G_OBJECT_CLASS(klass)->finalize = finalize;
---
>  	G_OBJECT_CLASS(klass)->finalize = finalize;
93,100c93,100
< 	    object_class,
< 	    PROP_ACTION_NAMES,
< 	    g_param_spec_string (
< 	        I_("action-names"),
< 	        "Action Names",
< 	        _("The name of the actions in the toolbar"),
< 	        NULL,
< 	        G_PARAM_READABLE|G_PARAM_WRITABLE)
---
> 		object_class,
> 		PROP_ACTION_NAMES,
> 		g_param_spec_string (
> 			I_("action-names"),
> 			"Action Names",
> 			_("The name of the actions in the toolbar"),
> 			NULL,
> 			G_PARAM_READABLE|G_PARAM_WRITABLE)
104,113c104,113
< 	    object_class,
< 	    PROP_ICON_SIZE,
< 	    g_param_spec_int(
< 	        I_("icon-size"),
< 	        "icon size",
< 	        _("The toolbar icon size"),
< 	        INT_MIN,
< 	        INT_MAX,
< 	        0,
< 	        G_PARAM_READABLE|G_PARAM_WRITABLE)
---
> 		object_class,
> 		PROP_ICON_SIZE,
> 		g_param_spec_int(
> 			I_("icon-size"),
> 			"icon size",
> 			_("The toolbar icon size"),
> 			INT_MIN,
> 			INT_MAX,
> 			0,
> 			G_PARAM_READABLE|G_PARAM_WRITABLE)
117,126c117,126
< 	    object_class,
< 	    PROP_STYLE,
< 	    g_param_spec_int(
< 	        I_("style"),
< 	        "style",
< 	        _("The toolbar style"),
< 	        INT_MIN,
< 	        INT_MAX,
< 	        0,
< 	        G_PARAM_READABLE|G_PARAM_WRITABLE)
---
> 		object_class,
> 		PROP_STYLE,
> 		g_param_spec_int(
> 			I_("style"),
> 			"style",
> 			_("The toolbar style"),
> 			INT_MIN,
> 			INT_MAX,
> 			0,
> 			G_PARAM_READABLE|G_PARAM_WRITABLE)
130,139c130,139
< 	    object_class,
< 	    PROP_ICON_TYPE,
< 	    g_param_spec_int(
< 	        I_("icon-type"),
< 	        I_("icon-type"),
< 	        _("The toolbar icon type"),
< 	        0,
< 	        1,
< 	        0,
< 	        G_PARAM_READABLE|G_PARAM_WRITABLE)
---
> 		object_class,
> 		PROP_ICON_TYPE,
> 		g_param_spec_int(
> 			I_("icon-type"),
> 			I_("icon-type"),
> 			_("The toolbar icon type"),
> 			0,
> 			1,
> 			0,
> 			G_PARAM_READABLE|G_PARAM_WRITABLE)
142c142
< }
---
>  }
144c144
< void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
---
>   void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
147,148c147,148
< 	case PROP_ACTION_NAMES:
< 		g_value_take_string(value,pw3270_toolbar_get_actions(GTK_WIDGET(object)));
---
>     case PROP_ACTION_NAMES:
>     	g_value_take_string(value,pw3270_toolbar_get_actions(GTK_WIDGET(object)));
167c167
< }
---
>  }
169c169
< void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
---
>  void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
171,172c171,173
< 	switch (prop_id) {
< 	case PROP_ACTION_NAMES:
---
> 	switch (prop_id)
> 	{
>     case PROP_ACTION_NAMES:
192c193
< }
---
>  }
194c195
< static void detacher(GtkWidget *attach_widget, GtkMenu G_GNUC_UNUSED(*menu)) {
---
>  static void detacher(GtkWidget *attach_widget, GtkMenu G_GNUC_UNUSED(*menu)) {
196,197c197,198
< 	pw3270ToolBar * toolbar = PW3270_TOOLBAR(attach_widget);
< 	toolbar->menu = NULL;
---
>  	pw3270ToolBar * toolbar = PW3270_TOOLBAR(attach_widget);
>  	toolbar->menu = NULL;
199c200
< }
---
>  }
201c202
< static void open_preferences(GtkMenuItem G_GNUC_UNUSED(*menuitem), GtkWidget *toolbar) {
---
>  static void open_preferences(GtkMenuItem G_GNUC_UNUSED(*menuitem), GtkWidget *toolbar) {
217c218
< }
---
>  }
219c220
< static void pw3270ToolBar_init(pw3270ToolBar *widget) {
---
>  static void pw3270ToolBar_init(pw3270ToolBar *widget) {
244c245
< }
---
>  }
246c247
< static void finalize(GObject *object) {
---
>  static void finalize(GObject *object) {
250c251
< }
---
>  }
252c253
< GtkWidget * pw3270_toolbar_new(void) {
---
>  GtkWidget * pw3270_toolbar_new(void) {
254c255
< }
---
>  }
256c257
< gboolean popup_context_menu(GtkToolbar *widget, gint G_GNUC_UNUSED(x), gint G_GNUC_UNUSED(y), gint button_number) {
---
>  gboolean popup_context_menu(GtkToolbar *widget, gint G_GNUC_UNUSED(x), gint G_GNUC_UNUSED(y), gint button_number) {
258c259
< 	pw3270ToolBar * toolbar = PW3270_TOOLBAR(widget);
---
>  	pw3270ToolBar * toolbar = PW3270_TOOLBAR(widget);
272c273
< }
---
>  }
274c275
< void pw3270_toolbar_set_style(GtkToolbar *toolbar, GtkToolbarStyle style) {
---
>  void pw3270_toolbar_set_style(GtkToolbar *toolbar, GtkToolbarStyle style) {
287c288
< }
---
>  }
289c290
< GtkToolbarStyle pw3270_toolbar_get_style(GtkToolbar *toolbar) {
---
>  GtkToolbarStyle pw3270_toolbar_get_style(GtkToolbar *toolbar) {
291c292
< }
---
>  }
293,295c294,296
< gint pw3270_toolbar_get_icon_type(GtkToolbar *toolbar) {
< 	return PW3270_TOOLBAR(toolbar)->icon_type;
< }
---
>  gint pw3270_toolbar_get_icon_type(GtkToolbar *toolbar) {
>  	return PW3270_TOOLBAR(toolbar)->icon_type;
>  }
297c298
< void pw3270_toolbar_set_icon_type(GtkToolbar *toolbar, gint icon_type) {
---
>  void pw3270_toolbar_set_icon_type(GtkToolbar *toolbar, gint icon_type) {
299c300
< 	if(PW3270_TOOLBAR(toolbar)->icon_type == icon_type)
---
>  	if(PW3270_TOOLBAR(toolbar)->icon_type == icon_type)
302c303
< 	PW3270_TOOLBAR(toolbar)->icon_type = icon_type;
---
>  	PW3270_TOOLBAR(toolbar)->icon_type = icon_type;
304,306c305,307
< 	// Redefine icon types
< 	GList * children = gtk_container_get_children(GTK_CONTAINER(toolbar));
< 	GList * item;
---
>  	// Redefine icon types
>  	GList * children = gtk_container_get_children(GTK_CONTAINER(toolbar));
>  	GList * item;
308c309
< 	for(item = children; item; item = g_list_next(item)) {
---
>  	for(item = children;item;item = g_list_next(item)) {
326c327
< 	}
---
>  	}
328c329
< 	g_list_free(children);
---
>  	g_list_free(children);
331c332
< }
---
>  }
333c334
< void pw3270_toolbar_set_icon_size(GtkToolbar *toolbar, GtkIconSize icon_size) {
---
>  void pw3270_toolbar_set_icon_size(GtkToolbar *toolbar, GtkIconSize icon_size) {
345c346
< }
---
>  }
347c348
< GtkIconSize pw3270_toolbar_get_icon_size(GtkToolbar *toolbar) {
---
>  GtkIconSize pw3270_toolbar_get_icon_size(GtkToolbar *toolbar) {
361c362
< }
---
>  }
363c364
< void pw3270_toolbar_set_actions(GtkWidget *toolbar, const gchar *action_names) {
---
>  void pw3270_toolbar_set_actions(GtkWidget *toolbar, const gchar *action_names) {
365,371d365
< 	// The action search requires a toplevel window.
< 	if(!gtk_widget_get_parent(toolbar)) {
< 		g_warning("Can't set actions on an orphan toolbar");
< 		return;
< 	}
< 
< 	// Split action names
377c371
< 	gtk_container_remove_all(GTK_CONTAINER(toolbar));
---
>  	gtk_container_remove_all(GTK_CONTAINER(toolbar));
415c409
< }
---
>  }
417c411
< gchar * pw3270_toolbar_get_actions(GtkWidget *toolbar) {
---
>  gchar * pw3270_toolbar_get_actions(GtkWidget *toolbar) {
421,422c415,416
< 	GList * children = gtk_container_get_children(GTK_CONTAINER(toolbar));
< 	GList * item;
---
>  	GList * children = gtk_container_get_children(GTK_CONTAINER(toolbar));
>  	GList * item;
424c418
< 	for(item = children; item; item = g_list_next(item)) {
---
>  	for(item = children;item;item = g_list_next(item)) {
435c429
< 	}
---
>  	}
437c431
< 	g_list_free(children);
---
>  	g_list_free(children);
440c434
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/actions/close.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/actions/close.c
30,34c30,34
< #include "../private.h"
< #include <pw3270.h>
< #include <pw3270/actions.h>
< #include <lib3270.h>
< #include <lib3270/log.h>
---
>  #include "../private.h"
>  #include <pw3270.h>
>  #include <pw3270/actions.h>
>  #include <lib3270.h>
>  #include <lib3270/log.h>
36c36,37
< static void activate(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkWidget *terminal) {
---
>  /*
>  void pw3270_window_close_activated(GSimpleAction G_GNUC_UNUSED(* action), GVariant G_GNUC_UNUSED(*parameter), gpointer window) {
38c39,47
< 	debug("%s","Window close action was activated");
---
> 	debug("%s(%p)",__FUNCTION__,window);
> 	gtk_window_close(GTK_WINDOW(window));
> 
>  }
>  */
> 
>  static void activate(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkWidget *terminal) {
> 
>  	debug("%s","Window close action was activated");
41c50
< }
---
>  }
44c53
< GAction * pw3270_action_window_close_new(void) {
---
>  GAction * pw3270_action_window_close_new(void) {
56c65
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/actions/connect.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/actions/connect.c
30,38c30,38
< /**
<  * @brief Implement PW3270 "connect" action.
<  *
<  */
< 
< #include <pw3270.h>
< #include <pw3270/actions.h>
< #include <lib3270/properties.h>
< #include "../private.h"
---
>  /**
>   * @brief Implement PW3270 "connect" action.
>   *
>   */
> 
>  #include <pw3270.h>
>  #include <pw3270/actions.h>
>  #include <lib3270/properties.h>
>  #include "../private.h"
40c40
< static void activate(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkWidget *terminal) {
---
>  static void activate(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkWidget *terminal) {
43c43
< 	gtk_widget_activate(terminal);
---
>     gtk_widget_activate(terminal);
45c45
< }
---
>  }
47c47
< GAction * pw3270_action_connect_new(void) {
---
>  GAction * pw3270_action_connect_new(void) {
64c64
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/actions/filetransfer.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/actions/filetransfer.c
30,33c30,33
< #include "../private.h"
< #include <pw3270/window.h>
< #include <pw3270/actions.h>
< #include <v3270/filetransfer.h>
---
>  #include "../private.h"
>  #include <pw3270/window.h>
>  #include <pw3270/actions.h>
>  #include <v3270/filetransfer.h>
35c35
< static void activate(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkWidget *terminal);
---
>  static void activate(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkWidget *terminal);
37c37
< GAction * pw3270_file_transfer_action_new(void) {
---
>  GAction * pw3270_file_transfer_action_new(void) {
50c50
< }
---
>  }
52c52
< void activate(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkWidget *terminal) {
---
>  void activate(GAction G_GNUC_UNUSED(*action), GVariant G_GNUC_UNUSED(*parameter), GtkWidget *terminal) {
84c84
< }
---
>  }
Only in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/actions: hostproperties.c
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/actions/sessionproperties.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/actions/sessionproperties.c
1,2d0
< /* SPDX-License-Identifier: LGPL-3.0-or-later */
< 
4c2,21
<  * Copyright (C) 2008 Banco do Brasil S.A.
---
>  * "Software pw3270, desenvolvido com base nos códigos fontes do WC3270  e X3270
>  * (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
>  * aplicativos mainframe. Registro no INPI sob o nome G3270.
>  *
>  * Copyright (C) <2008> <Banco do Brasil S.A.>
>  *
>  * Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
>  * os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
>  * Free Software Foundation.
>  *
>  * Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
>  * GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
>  * A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
>  * obter mais detalhes.
>  *
>  * Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
>  * programa; se não, escreva para a Free Software Foundation, Inc., 51 Franklin
>  * St, Fifth Floor, Boston, MA  02110-1301  USA
>  *
>  * Este programa está nomeado como - e possui - linhas de código.
6,14c23,26
<  * This program is free software: you can redistribute it and/or modify
<  * it under the terms of the GNU Lesser General Public License as published
<  * by the Free Software Foundation, either version 3 of the License, or
<  * (at your option) any later version.
<  *
<  * This program is distributed in the hope that it will be useful,
<  * but WITHOUT ANY WARRANTY; without even the implied warranty of
<  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
<  * GNU General Public License for more details.
---
>  * Contatos:
>  *
>  * perry.werneck@gmail.com	(Alexandre Perry de Souza Werneck)
>  * erico.mendonca@gmail.com	(Erico Mascarenhas Mendonça)
16,17d27
<  * You should have received a copy of the GNU Lesser General Public License
<  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
20,26c30,36
< #include "../private.h"
< #include <pw3270/window.h>
< #include <pw3270/actions.h>
< #include <v3270/settings.h>
< #include <v3270/dialogs.h>
< #include <v3270/colorscheme.h>
< #include <pw3270/application.h>
---
>  #include "../private.h"
>  #include <pw3270/window.h>
>  #include <pw3270/actions.h>
>  #include <v3270/settings.h>
>  #include <v3270/dialogs.h>
>  #include <v3270/colorscheme.h>
>  #include <pw3270/application.h>
28c38
< static GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal);
---
>  static GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal);
30c40
< GAction * pw3270_action_session_properties_new(void) {
---
>  GAction * pw3270_action_session_properties_new(void) {
40,42c50
< }
< 
< GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal) {
---
>  }
44c52
< 	size_t ix;
---
>  GtkWidget * factory(V3270SimpleAction *action, GtkWidget *terminal) {
46c54
< 	GApplication *application = g_application_get_default();
---
>  	size_t ix;
48c56
< 	GtkWidget * dialog = v3270_settings_dialog_new();
---
>  	GtkWidget * dialog = v3270_settings_dialog_new();
51,68c59,66
< 	// Host settings is conditional.
< 	if(pw3270_application_get_boolean(application,"allow-host-settings",TRUE)) {
< 		gtk_container_add(GTK_CONTAINER(dialog), v3270_host_settings_new());
< 	}
< 
< 	// Add commom settings.
< 	{
< 
< 		GtkWidget * elements[] = {
< 			v3270_color_settings_new(),
< 			v3270_font_settings_new(),
< 			v3270_accelerator_settings_new(),
< 			v3270_clipboard_settings_new()
< 		};
< 
< 		for(ix = 0; ix < G_N_ELEMENTS(elements); ix++) {
< 			gtk_container_add(GTK_CONTAINER(dialog), elements[ix]);
< 		}
---
> 	// Add settings pages.
> 	GtkWidget * elements[] = {
> 		v3270_host_settings_new(),
> 		v3270_color_settings_new(),
> 		v3270_font_settings_new(),
> 		v3270_accelerator_settings_new(),
> 		v3270_clipboard_settings_new()
> 	};
69a68,69
> 	for(ix = 0; ix < G_N_ELEMENTS(elements); ix++) {
> 		gtk_container_add(GTK_CONTAINER(dialog), elements[ix]);
73,75c73,75
< 	    application,
< 	    "pw3270_plugin_set_session_properties",
< 	    dialog
---
> 		g_application_get_default(),
> 		"pw3270_plugin_set_session_properties",
> 		dialog
78c78
< 	// Setup dialog box
---
>  	// Setup dialog box
90c90
< }
---
>  }
Only in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/actions: setcolors.c
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/header.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/header.c
30,34c30,34
< #include "private.h"
< #include <pw3270.h>
< #include <pw3270/toolbar.h>
< #include <pw3270/application.h>
< #include <pw3270/actions.h>
---
>  #include "private.h"
>  #include <pw3270.h>
>  #include <pw3270/toolbar.h>
>  #include <pw3270/application.h>
>  #include <pw3270/actions.h>
36c36
< void pw3270_window_set_header_action_names(GtkWidget *window, const gchar *action_names) {
---
>  void pw3270_window_set_header_action_names(GtkWidget *window, const gchar *action_names) {
50c50
< 		g_autoptr(GtkBuilder) builder = pw3270_application_builder_new(g_application_get_default());
---
> 		g_autoptr(GtkBuilder) builder = pw3270_application_get_builder("window.xml");
54a55,57
> 
> 			g_autoptr(GtkBuilder) app_builder = pw3270_application_get_builder("application.xml");
> 
56,58c59,61
< 			    G_MENU(gtk_builder_get_object(builder,"open-menu")),
< 			    NULL,
< 			    G_MENU_MODEL(gtk_builder_get_object(builder,"help-menu-placeholder"))
---
> 				G_MENU(gtk_builder_get_object(builder,"open-menu")),
> 				NULL,
> 				G_MENU_MODEL(gtk_builder_get_object(app_builder,"help-menu-placeholder"))
62,64c65,67
< 			    G_MENU(gtk_builder_get_object(builder,"preferences-menu")),
< 			    _("View"),
< 			    G_MENU_MODEL(gtk_builder_get_object(builder,"view-menu-placeholder"))
---
> 				G_MENU(gtk_builder_get_object(builder,"preferences-menu")),
> 				_("View"),
> 				G_MENU_MODEL(gtk_builder_get_object(app_builder,"view-menu-placeholder"))
76c79
< 			for(ix=0; elements[ix]; ix++) {
---
> 			for(ix=0;elements[ix];ix++) {
85c88
< 			// And then, the right side actions
---
> 			// And then, the right side actions;
87c90
< 			for(ix=0; elements[ix]; ix++) {
---
> 			for(ix=0;elements[ix];ix++) {
102c105
< }
---
>  }
104c107
< static void on_sensitive(GtkWidget G_GNUC_UNUSED(*button), GParamSpec G_GNUC_UNUSED(*spec), GtkWidget G_GNUC_UNUSED(*widget)) {
---
>  static void on_sensitive(GtkWidget G_GNUC_UNUSED(*button), GParamSpec G_GNUC_UNUSED(*spec), GtkWidget G_GNUC_UNUSED(*widget)) {
110c113
< }
---
>  }
112c115
< static GAction * get_action_from_name(GtkWidget *widget, const gchar *action_name) {
---
>  static GAction * get_action_from_name(GtkWidget *widget, const gchar *action_name) {
119c122
< }
---
>  }
121c124
< GtkWidget * pw3270_header_button_new_from_builder(GtkWidget *widget, GtkBuilder * builder, const gchar *action_name) {
---
>  GtkWidget * pw3270_header_button_new_from_builder(GtkWidget *widget, GtkBuilder * builder, const gchar *action_name) {
166c169
< }
---
>  }
168c171
< gchar * pw3270_window_get_action_names(GtkWidget *window) {
---
>  gchar * pw3270_window_get_action_names(GtkWidget *window) {
177,178c180,181
< 	GList * children = gtk_container_get_children(GTK_CONTAINER(header));
< 	GList * item;
---
>  	GList * children = gtk_container_get_children(GTK_CONTAINER(header));
>  	GList * item;
181c184
< 	for(id = 0; id < 2; id++) {
---
>  	for(id = 0; id < 2; id++) {
185c188
< 		for(item = children; item; item = g_list_next(item)) {
---
>  		for(item = children;item;item = g_list_next(item)) {
205c208
< 	}
---
>  	}
207c210
< 	g_list_free(children);
---
>  	g_list_free(children);
210c213
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/header-settings.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/header-settings.c
30,35c30,35
< #include "private.h"
< #include <pw3270.h>
< #include <pw3270/actions.h>
< #include <pw3270/settings.h>
< #include <pw3270/application.h>
< #include <v3270/dialogs.h>
---
>  #include "private.h"
>  #include <pw3270.h>
>  #include <pw3270/actions.h>
>  #include <pw3270/settings.h>
>  #include <pw3270/application.h>
>  #include <v3270/dialogs.h>
37,38c37,38
< static void load(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page);
< static void apply(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page);
---
>  static void load(GtkWidget *widget, PW3270SettingsPrivate *settings);
>  static void apply(GtkWidget *widget, PW3270SettingsPrivate *settings);
42,44c42,78
< struct _PW3270SettingsPage {
< 	GtkWidget * editor;
< };
---
>   struct _PW3270SettingsPrivate {
>   	GtkWidget * editor;
>   	/*
> 	GtkWidget * views[3];
> 	GtkTreeModel * model;
> 	*/
>  };
> 
>  /*
>  static const struct _views {
> 	const char * label;
> 	gint left;
> 	gint top;
> 	gint height;
>  } views[] = {
> 	{
> 		.label = N_("Left"),
> 		.left = 0,
> 		.top = 0,
> 		.height = 4
> 	},
> 	{
> 		.label = N_("Right"),
> 		.left = 0,
> 		.top = 6,
> 		.height = 4
> 	},
> 	{
> 		.label = N_("Available"),
> 		.left = 2,
> 		.top = 0,
> 		.height = 10
> 	}
>  };
>  */
> 
>  /*--[ Implement ]------------------------------------------------------------------------------------*/
46c80
< /*--[ Implement ]------------------------------------------------------------------------------------*/
---
>  GtkWidget * pw3270_header_settings_new() {
48c82
< GtkWidget * pw3270_header_settings_new() {
---
>  	size_t ix;
58c92
< 	PW3270SettingsPage * page = settings->settings = g_new0(PW3270SettingsPage,1);
---
> 	PW3270SettingsPrivate * page = settings->settings = g_new0(PW3270SettingsPrivate,1);
63,65c97,99
< 	    GTK_GRID(settings),
< 	    v3270_dialog_section_new(_("Title bar actions"), _("Change the position of the title bar icons"), page->editor),
< 	    0,0,4,3
---
> 		GTK_GRID(settings),
> 		v3270_dialog_section_new(_("Title bar actions"), _("Change the position of the title bar icons"), page->editor),
> 		0,0,4,3
71c105
< }
---
>  }
73c107
< void load(GtkWidget *widget, GSettings *settings, PW3270SettingsPage *page) {
---
>  void load(GtkWidget *widget, PW3270SettingsPrivate *page) {
75,79c109
< 	if(!G_IS_SETTINGS(settings)) {
< 		g_warning("The settings object is not valid, disabling dialog to avoid segfaults");
< 		gtk_widget_set_sensitive(widget,FALSE);
< 		return;
< 	}
---
>  	g_autoptr(GSettings) settings = pw3270_application_window_settings_new();
81,82c111,112
< 	// Get avaliable actions.
< 	Pw3270ActionList * action_list = pw3270_action_list_new(GTK_APPLICATION(g_application_get_default()));
---
>  	// Get avaliable actions.
>  	Pw3270ActionList * action_list = pw3270_action_list_new(GTK_APPLICATION(g_application_get_default()));
105,110c135,140
< 			                         gtk_icon_theme_get_default(),
< 			                         menus[ix].icon_name,
< 			                         GTK_ICON_SIZE_MENU,
< 			                         GTK_ICON_LOOKUP_GENERIC_FALLBACK,
< 			                         &error
< 			                     );
---
> 										gtk_icon_theme_get_default(),
> 										menus[ix].icon_name,
> 										GTK_ICON_SIZE_MENU,
> 										GTK_ICON_LOOKUP_GENERIC_FALLBACK,
> 										&error
> 									);
113c143
< 				g_warning("%s",error->message);
---
> 				g_warning(error->message);
119,124c149,154
< 			                  action_list,
< 			                  gettext(menus[ix].label),
< 			                  pixbuf,
< 			                  menus[ix].action_name,
< 			                  PW3270_ACTION_VIEW_ALLOW_MOVE
< 			              );
---
> 								action_list,
> 								gettext(menus[ix].label),
> 								pixbuf,
> 								menus[ix].action_name,
> 								PW3270_ACTION_VIEW_ALLOW_MOVE
> 							);
130c160
< 	g_autofree gchar * action_names = g_settings_get_string(settings,"header-action-names");
---
>     g_autofree gchar * action_names = g_settings_get_string(settings,"header-action-names");
135c165
< }
---
>  }
137c167
< void apply(GtkWidget G_GNUC_UNUSED(*widget), GSettings *settings, PW3270SettingsPage *page) {
---
>  void apply(GtkWidget *widget, PW3270SettingsPrivate *page) {
139c169,170
< 	g_autofree gchar * action_names = pw3270_settings_action_get(page->editor);
---
>  	g_autofree gchar * action_names = pw3270_settings_action_get(page->editor);
> 	g_autoptr(GSettings) settings = pw3270_application_window_settings_new();
142c173
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/keyfile.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/keyfile.c
30,56c30,48
< #include <config.h>
< 
< #ifndef GETTEXT_PACKAGE
< #define GETTEXT_PACKAGE PACKAGE_NAME
< #endif
< 
< #include <libintl.h>
< #include <glib/gi18n.h>
< 
< #include <glib.h>
< #include <glib/gstdio.h>
< #include <fcntl.h>
< #include <sys/types.h>
< #include <sys/stat.h>
< #include <lib3270.h>
< #include <lib3270/log.h>
< #include <v3270.h>
< #include <v3270/settings.h>
< #include <v3270/keyfile.h>
< #include <v3270/actions.h>
< #include <lib3270/properties.h>
< #include <string.h>
< #include <stdlib.h>
< #include <pw3270/application.h>
< 
< struct _V3270KeyFile {
< 	gboolean	  changed;		///< @brief Save file?
---
>  #include <config.h>
>  #include <glib.h>
>  #include <glib/gstdio.h>
>  #include <fcntl.h>
>  #include <sys/types.h>
>  #include <sys/stat.h>
>  #include <lib3270.h>
>  #include <lib3270/log.h>
>  #include <v3270.h>
>  #include <v3270/settings.h>
>  #include <v3270/keyfile.h>
>  #include <v3270/actions.h>
>  #include <lib3270/properties.h>
>  #include <string.h>
>  #include <stdlib.h>
> 
>  struct _V3270KeyFile
>  {
>  	gboolean	  changed;		///< @brief Save file?
59c51
< };
---
>  };
61c53
< static V3270KeyFile * v3270_get_session_descriptor(GtkWidget *terminal) {
---
>  static V3270KeyFile * v3270_get_session_descriptor(GtkWidget *terminal) {
63c55
< 	return (V3270KeyFile *) g_object_get_data(G_OBJECT(terminal),"session-descriptor");
---
>  	return (V3270KeyFile *) g_object_get_data(G_OBJECT(terminal),"session-descriptor");
65c57
< }
---
>  }
67c59
< static void close_keyfile(V3270KeyFile * session) {
---
>  static void close_keyfile(V3270KeyFile * session) {
69c61
< 	if(session->key_file) {
---
>  	if(session->key_file) {
81,114d72
< 	}
< 
< 	g_free(session);
< }
< 
< static void search_for_defaults(V3270KeyFile *session) {
< 
< 	GError *error = NULL;
<  	size_t ix;
< 
<  	// Search for user defaults.
<  	static const gchar *usernames[] = {
<  		"defaults.3270",
<  		"default.3270",
<  	};
< 
<  	for(ix = 0; ix < G_N_ELEMENTS(usernames);ix++) {
< 
< 		g_autofree gchar * default_settings = g_build_filename(g_get_user_config_dir(),usernames[ix],NULL);
< 
< #ifdef DEBUG
< 		g_message("Searching for %s", default_settings);
< #endif // DEBUG
< 
< 		if(g_file_test(default_settings,G_FILE_TEST_IS_REGULAR)) {
< 			if(!g_key_file_load_from_file(session->key_file,default_settings,G_KEY_FILE_NONE,&error)) {
< 				g_warning("Can't load \"%s\": %s",default_settings,error->message);
< 				g_error_free(error);
< 			} else {
< 				g_message("Loading session preferences from %s",default_settings);
< 				return;
< 			}
< 		}
< 
117,125c75,76
<  	// Search for system defaults.
<  	static const gchar *sysnames[] = {
<  		"defaults.3270",
<  		"default.3270",
<  		"defaults.conf",
<  		"default.conf",
<  	};
< 
<  	for(ix = 0; ix < G_N_ELEMENTS(sysnames);ix++) {
---
>  	g_free(session);
>  }
127,149c78
< 		lib3270_autoptr(char) default_settings = lib3270_build_data_filename(sysnames[ix],NULL);
< 
< #ifdef DEBUG
< 		g_message("Searching for %s", default_settings);
< #endif // DEBUG
< 
< 		if(g_file_test(default_settings,G_FILE_TEST_IS_REGULAR)) {
< 			if(!g_key_file_load_from_file(session->key_file,default_settings,G_KEY_FILE_NONE,&error)) {
< 				g_warning("Can't load \"%s\": %s",default_settings,error->message);
< 				g_error_free(error);
< 			} else {
< 				g_message("Loading session preferences from %s",default_settings);
< 				return;
< 			}
< 		}
< 
<  	}
< 
<  	g_message("Can't find default session file");
< 
< }
< 
< V3270KeyFile * v3270_key_file_open(GtkWidget *terminal, const gchar *filename, GError **error) {
---
>  V3270KeyFile * v3270_key_file_open(GtkWidget *terminal, const gchar *filename, GError **error) {
164d92
< 	g_object_set_data_full(G_OBJECT(terminal),"session-descriptor",new_session,(GDestroyNotify) close_keyfile);
170c98
< 		if(!g_key_file_load_from_file(new_session->key_file,new_session->filename,G_KEY_FILE_NONE,error)) {
---
>         if(!g_key_file_load_from_file(new_session->key_file,new_session->filename,G_KEY_FILE_NONE,error)) {
172c100
< 		} else {
---
>         } else {
174c102
< 		}
---
>         }
179c107,123
< 		search_for_defaults(new_session);
---
> 		lib3270_autoptr(char) default_settings = lib3270_build_data_filename("defaults.conf",NULL);
> 
> 		if(g_file_test(default_settings,G_FILE_TEST_IS_REGULAR)) {
> 			if(!g_key_file_load_from_file(new_session->key_file,default_settings,G_KEY_FILE_NONE,error)) {
> 				g_warning("Can't load \"%s\"",default_settings);
> 			} else {
> 				g_message("Loading session preferences from %s",default_settings);
> 			}
> 		} else {
> #ifdef DEBUG
> 			g_message("Can't find default settings file \"%s\"",default_settings);
> #else
> 			g_warning("Can't find default settings file \"%s\"",default_settings);
> #endif // DEBUG
> 		}
> 
> 		new_session->changed = TRUE;
183,185c127,129
< 	if(*error) {
< 		g_warning("Error '%s' loading keyfile", (*error)->message);
< 		return new_session;
---
> 	g_object_set_data_full(G_OBJECT(terminal),"session-descriptor",new_session,(GDestroyNotify) close_keyfile);
> 	if(new_session->changed) {
> 		v3270_key_file_save(terminal,error);
188,201c132,147
< 	// Got key file, load it.
< 	v3270_load_key_file(terminal,new_session->key_file,NULL);
< 	v3270_accelerator_map_load_key_file(terminal,new_session->key_file,NULL);
< 
< 	if(g_key_file_has_group(new_session->key_file,"environment")) {
< 
< 		// Has environment group, set values.
< 		gchar **keys = g_key_file_get_keys(new_session->key_file,"environment",NULL,NULL);
< 
< 		if(keys) {
< 			size_t ix;
< 			for(ix=0; keys[ix]; ix++) {
< 				g_autofree gchar * value = g_key_file_get_string(new_session->key_file,"environment",keys[ix],NULL);
< 				if(value) {
---
> 	if(!*error) {
> 
> 		// Got key file, load it.
> 		v3270_load_key_file(terminal,new_session->key_file,NULL);
> 		v3270_accelerator_map_load_key_file(terminal,new_session->key_file,NULL);
> 
> 		if(g_key_file_has_group(new_session->key_file,"environment")) {
> 
> 			// Has environment group, set values.
> 			gchar **keys = g_key_file_get_keys(new_session->key_file,"environment",NULL,NULL);
> 
> 			if(keys) {
> 				size_t ix;
> 				for(ix=0;keys[ix];ix++) {
> 					g_autofree gchar * value = g_key_file_get_string(new_session->key_file,"environment",keys[ix],NULL);
> 					if(value) {
203,204c149,150
< 					g_autofree gchar * env = g_strconcat(keys[ix],"=",value,NULL);
< 					putenv(env);
---
> 						g_autofree gchar * env = g_strconcat(keys[ix],"=",value,NULL);
> 						putenv(env);
206,208c152,154
< 					if(setenv(keys[ix],value,1)) {
< 						g_warning("Can't set \"%s\" to \"%s\"",keys[ix],value);
< 					}
---
> 						if(setenv(keys[ix],value,1)) {
> 							g_warning("Can't set \"%s\" to \"%s\"",keys[ix],value);
> 						}
209a156
> 					}
211,221d157
< 			}
< 
< 			g_strfreev(keys);
< 		}
< 	}
< 
< 	if(!*error) {
< 
< 		GApplication *application = g_application_get_default();
< 
< 		if(pw3270_application_get_boolean(application,"update-default-session-file",TRUE)) {
223,227c159
< 			GSettings * settings = pw3270_application_get_settings(application);
< 
< 			if(settings) {
< 				g_message("Updating default session file to '%s'",filename);
< 				g_settings_set_string(settings,"default-session-file",filename);
---
> 				g_strfreev(keys);
229d160
< 
232,253d162
< 		if(pw3270_application_get_boolean(application,"add-session-to-recent-manager",TRUE)) {
< 
< 			// new_session->key_file
< 			g_autofree gchar * display_name = g_key_file_get_string(new_session->key_file,"terminal","session-name",NULL);
< 
< 			GtkRecentData recent_data = {
< 
< 				.display_name = display_name,
< 				.app_name = G_STRINGIFY(PRODUCT_NAME),
< 				.description = _("TN3270 Session description"),
< 				.mime_type = "application/x-pw3270",
< 				.app_exec = G_STRINGIFY(PRODUCT_NAME) " %f",
< 
< 			};
< 
< 			gtk_recent_manager_add_full(
< 			    gtk_recent_manager_get_default(),
< 			    filename,
< 			    &recent_data
< 			);
< 
< 		}
256d164
< 
264c172
< 	if(session->key_file) {
---
>  	if(session->key_file) {
276c184
< 	}
---
>  	}
278c186
< }
---
>  }
280c188
< GKeyFile * v3270_key_file_get(GtkWidget *terminal) {
---
>  GKeyFile * v3270_key_file_get(GtkWidget *terminal) {
282c190
< }
---
>  }
284c192
< void v3270_key_file_save_to_file(GtkWidget * terminal, const gchar *filename, GError **error) {
---
>  void v3270_key_file_save_to_file(GtkWidget * terminal, const gchar *filename, GError **error) {
292c200
< 	if(old_session) {
---
>  	if(old_session) {
302c210
< }
---
>  }
304c212
< void v3270_key_file_save(GtkWidget *terminal, GError **error) {
---
>  void v3270_key_file_save(GtkWidget *terminal, GError **error) {
320c228
< }
---
>  }
322,323c230,231
< /// @brief Search standard paths.
< gchar * v3270_key_file_get_default_path(GtkWidget *terminal) {
---
>  /// @brief Search standard paths.
>  gchar * v3270_key_file_get_default_path(GtkWidget *terminal) {
363,366c271,274
< 	        && g_file_test(filename,G_FILE_TEST_IS_REGULAR)
< 	        && g_str_has_prefix(filename,g_get_user_data_dir())
< 	        && !g_str_has_prefix(filename,g_get_user_config_dir())
< 	  ) {
---
> 			&& g_file_test(filename,G_FILE_TEST_IS_REGULAR)
> 			&& g_str_has_prefix(filename,g_get_user_data_dir())
> 			&& !g_str_has_prefix(filename,g_get_user_config_dir())
> 		) {
372,384c280
< }
< 
< gchar * v3270_keyfile_get_default_filename(void) {
< 
< 	GSettings *settings = pw3270_application_get_settings(g_application_get_default());
< 	if(settings) {
< 
< 		g_autofree gchar * def_key_file = g_settings_get_string(settings,"default-session-file");
< 
< 		if(def_key_file && *def_key_file) {
< 
< 			if(g_file_test(def_key_file,G_FILE_TEST_IS_REGULAR))
< 				return g_strdup(def_key_file);
---
>  }
386,394c282
< 			g_autofree gchar * def_key_full = g_build_filename(g_get_user_config_dir(),def_key_file,NULL);
< 
< 			if(g_file_test(def_key_full,G_FILE_TEST_IS_REGULAR))
< 				return g_strdup(def_key_full);
< 		}
< 
< 	}
< 
< 	// No default key file, use the old scheme.
---
>  gchar * v3270_keyfile_get_default_filename(void) {
402d289
< 
404c291
< }
---
>  }
406c293
< gchar * v3270_key_file_build_filename(GtkWidget *terminal) {
---
>  gchar * v3270_key_file_build_filename(GtkWidget *terminal) {
408c295
< 	g_autofree gchar * defname = v3270_keyfile_get_default_filename();
---
>   	g_autofree gchar * defname = v3270_keyfile_get_default_filename();
431c318
< }
---
>  }
433c320
< const gchar * v3270_key_file_get_filename(GtkWidget *terminal) {
---
>  const gchar * v3270_key_file_get_filename(GtkWidget *terminal) {
435c322
< 	V3270KeyFile *session = v3270_get_session_descriptor(terminal);
---
>  	V3270KeyFile *session = v3270_get_session_descriptor(terminal);
437c324
< 	if(session && *session->filename)
---
>  	if(session && *session->filename)
442c329
< }
---
>  }
444c331
< void v3270_key_file_set_boolean(GtkWidget *terminal, const gchar *group_name, const gchar *key, gboolean value) {
---
>  void v3270_key_file_set_boolean(GtkWidget *terminal, const gchar *group_name, const gchar *key, gboolean value) {
452c339
< gboolean v3270_key_file_can_write(GtkWidget *widget) {
---
>  gboolean v3270_key_file_can_write(GtkWidget *widget) {
476c363,364
< }
---
>  }
> 
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/page.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/page.c
30,39c30,39
< #include "private.h"
< #include <pw3270/actions.h>
< #include <pw3270/application.h>
< #include <lib3270/toggle.h>
< #include <v3270/settings.h>
< #include <v3270/dialogs.h>
< #include <v3270/actions.h>
< #include <v3270/print.h>
< #include <v3270/keyfile.h>
< #include <pw3270.h>
---
>  #include "private.h"
>  #include <pw3270/actions.h>
>  #include <pw3270/application.h>
>  #include <lib3270/toggle.h>
>  #include <v3270/settings.h>
>  #include <v3270/dialogs.h>
>  #include <v3270/actions.h>
>  #include <v3270/print.h>
>  #include <v3270/keyfile.h>
>  #include <pw3270.h>
43c43
< typedef struct _pw3270TabLabel {
---
>  typedef struct _pw3270TabLabel {
45c45
< 	GtkLabel parent;
---
>  	GtkLabel parent;
47c47
< } pw3270TabLabel;
---
>  } pw3270TabLabel;
49c49
< typedef struct _pw3270TabLabelClass {
---
>  typedef struct _pw3270TabLabelClass {
51c51
< 	GtkLabelClass parent_class;
---
>  	GtkLabelClass parent_class;
53c53
< } pw3270TabLabelClass;
---
>  } pw3270TabLabelClass;
55c55
< G_DEFINE_TYPE(pw3270TabLabel, pw3270TabLabel, GTK_TYPE_LABEL);
---
>  G_DEFINE_TYPE(pw3270TabLabel, pw3270TabLabel, GTK_TYPE_LABEL);
57c57
< static void popup_menu_detach(GtkWidget G_GNUC_UNUSED(*label), GtkMenu *menu) {
---
>  static void popup_menu_detach(GtkWidget G_GNUC_UNUSED(*label), GtkMenu *menu) {
59c59
< 	debug("%s(%p)",__FUNCTION__,menu);
---
>  	debug("%s(%p)",__FUNCTION__,menu);
61c61
< }
---
>  }
63,65c63,65
< static void popup_menu_deactivated(GtkMenu *menu, GtkWidget G_GNUC_UNUSED(*label)) {
< 	gtk_menu_detach(menu);
< }
---
>  static void popup_menu_deactivated(GtkMenu *menu, GtkWidget G_GNUC_UNUSED(*label)) {
>  	gtk_menu_detach(menu);
>  }
68,70c68,70
< static void menu_destroy(GtkWidget *menu) {
< 	debug("%s(%p)",__FUNCTION__,menu);
< }
---
>  static void menu_destroy(GtkWidget *menu) {
>  	debug("%s(%p)",__FUNCTION__,menu);
>  }
73c73
< static gboolean tab_label_button_press(GtkWidget *label, GdkEventButton *event) {
---
>  static gboolean tab_label_button_press(GtkWidget *label, GdkEventButton *event) {
99c99
< }
---
>  }
101c101
< static void pw3270TabLabel_class_init(pw3270TabLabelClass *klass) {
---
>  static void pw3270TabLabel_class_init(pw3270TabLabelClass *klass) {
105c105
< }
---
>  }
107c107
< static void pw3270TabLabel_init(pw3270TabLabel G_GNUC_UNUSED(*widget)) {
---
>  static void pw3270TabLabel_init(pw3270TabLabel G_GNUC_UNUSED(*widget)) {
109c109
< }
---
>  }
113,122c113,122
< static gboolean on_terminal_focus(GtkWidget *terminal, GdkEvent G_GNUC_UNUSED(*event), GtkWidget * window);
< static void session_changed(GtkWidget *terminal, GtkWidget *label);
< static void disconnected(GtkWidget *terminal, GtkWindow * window);
< static void connected(GtkWidget *terminal, const gchar *host, GtkWindow * window);
< static void destroy(GtkWidget *terminal, GtkWindow * window);
< static void close_page(GtkButton *button, GtkWidget *terminal);
< static gboolean terminal_popup(GtkWidget *widget, gboolean selected, gboolean online, GdkEvent *event, pw3270ApplicationWindow * window);
< static gboolean oia_popup(GtkWidget *widget, guint field, GdkEvent *event, pw3270ApplicationWindow * window);
< static void label_populate_popup(GtkLabel *label, GtkMenu *menu, GtkWidget *terminal);
< static void label_disconnect(GtkWidget *label, GtkWidget *terminal);
---
>  static gboolean on_terminal_focus(GtkWidget *terminal, GdkEvent G_GNUC_UNUSED(*event), GtkWidget * window);
>  static void session_changed(GtkWidget *terminal, GtkWidget *label);
>  static void disconnected(GtkWidget *terminal, GtkWindow * window);
>  static void connected(GtkWidget *terminal, const gchar *host, GtkWindow * window);
>  static void destroy(GtkWidget *terminal, GtkWindow * window);
>  static void close_page(GtkButton *button, GtkWidget *terminal);
>  static gboolean terminal_popup(GtkWidget *widget, gboolean selected, gboolean online, GdkEvent *event, pw3270ApplicationWindow * window);
>  static gboolean oia_popup(GtkWidget *widget, guint field, GdkEvent *event, pw3270ApplicationWindow * window);
>  static void label_populate_popup(GtkLabel *label, GtkMenu *menu, GtkWidget *terminal);
>  static void label_disconnect(GtkWidget *label, GtkWidget *terminal);
124c124
< gint pw3270_application_window_append_page(GtkWidget * window, GtkWidget * terminal) {
---
>  gint pw3270_application_window_append_page(GtkWidget * window, GtkWidget * terminal) {
127,134c127,134
< 	GtkWidget * label =
< 	    GTK_WIDGET(
< 	        g_object_new(
< 	            pw3270TabLabel_get_type(),
< 	            "label", v3270_get_session_name(terminal),
< 	            "selectable", TRUE,
< 	            NULL)
< 	    );
---
>  	GtkWidget * label =
> 		GTK_WIDGET(
> 			g_object_new(
> 			pw3270TabLabel_get_type(),
> 			"label", v3270_get_session_name(terminal),
> 			"selectable", TRUE,
> 			NULL)
> 		);
140,142c140,142
< 	GtkWidget * tab			= gtk_box_new(GTK_ORIENTATION_HORIZONTAL,2);
< 	GtkWidget * button		= gtk_button_new_from_icon_name("window-close-symbolic",GTK_ICON_SIZE_MENU);
< 	GtkNotebook	* notebook	= PW3270_APPLICATION_WINDOW(window)->notebook;
---
>  	GtkWidget * tab			= gtk_box_new(GTK_ORIENTATION_HORIZONTAL,2);
>  	GtkWidget * button		= gtk_button_new_from_icon_name("window-close-symbolic",GTK_ICON_SIZE_MENU);
>  	GtkNotebook	* notebook	= PW3270_APPLICATION_WINDOW(window)->notebook;
144c144
< 	gtk_button_set_relief(GTK_BUTTON(button),GTK_RELIEF_NONE);
---
>  	gtk_button_set_relief(GTK_BUTTON(button),GTK_RELIEF_NONE);
158,159c158,159
< 	gtk_box_pack_start(GTK_BOX(tab),label,FALSE,FALSE,0);
< 	gtk_box_pack_end(GTK_BOX(tab),button,FALSE,FALSE,0);
---
>  	gtk_box_pack_start(GTK_BOX(tab),label,FALSE,FALSE,0);
>  	gtk_box_pack_end(GTK_BOX(tab),button,FALSE,FALSE,0);
172c172
< }
---
>  }
174c174
< static gboolean on_terminal_focus(GtkWidget *terminal, GdkEvent G_GNUC_UNUSED(*event), GtkWidget * window) {
---
>  static gboolean on_terminal_focus(GtkWidget *terminal, GdkEvent G_GNUC_UNUSED(*event), GtkWidget * window) {
178,179c178,179
< 	return FALSE;
< }
---
>  	return FALSE;
>  }
181c181
< static void session_changed(GtkWidget *terminal, GtkWidget *label) {
---
>  static void session_changed(GtkWidget *terminal, GtkWidget *label) {
198c198
< }
---
>  }
200c200
< static void disconnected(GtkWidget *terminal, GtkWindow * window) {
---
>  static void disconnected(GtkWidget *terminal, GtkWindow * window) {
202c202
< 	debug("%s",__FUNCTION__);
---
>  	debug("%s",__FUNCTION__);
204c204
< 	if(terminal != gtk_window_get_default_widget(window))
---
>  	if(terminal != gtk_window_get_default_widget(window))
209c209
< }
---
>  }
211c211
< static void connected(GtkWidget *terminal, const gchar *host, GtkWindow * window) {
---
>  static void connected(GtkWidget *terminal, const gchar *host, GtkWindow * window) {
213c213
< 	debug("%s(%s)",__FUNCTION__,host);
---
>  	debug("%s(%s)",__FUNCTION__,host);
215c215
< 	if(terminal != gtk_window_get_default_widget(window))
---
>  	if(terminal != gtk_window_get_default_widget(window))
220c220
< }
---
>  }
222c222
< static void destroy(GtkWidget *terminal, GtkWindow * window) {
---
>  static void destroy(GtkWidget *terminal, GtkWindow * window) {
233c233
< }
---
>  }
235c235
< static void close_page(GtkButton G_GNUC_UNUSED(*button), GtkWidget *terminal) {
---
>   static void close_page(GtkButton G_GNUC_UNUSED(*button), GtkWidget *terminal) {
237c237
< 	debug("%s",__FUNCTION__);
---
>  	debug("%s",__FUNCTION__);
243c243
< }
---
>  }
245c245
< static void on_rename_session_response(GtkDialog *dialog, gint response_id, GtkWidget *terminal) {
---
>  static void on_rename_session_response(GtkDialog *dialog, gint response_id, GtkWidget *terminal) {
254,255c254,255
< 	gtk_widget_destroy(GTK_WIDGET(dialog));
< }
---
>  	gtk_widget_destroy(GTK_WIDGET(dialog));
>  }
257c257
< static void rename_session(GtkWidget G_GNUC_UNUSED(*widget), GtkWidget *terminal) {
---
>  static void rename_session(GtkWidget G_GNUC_UNUSED(*widget), GtkWidget *terminal) {
259c259
< 	debug("%s",__FUNCTION__);
---
>  	debug("%s",__FUNCTION__);
261,267c261,267
< 	GtkWidget * dialog = v3270_dialog_new_with_buttons(
< 	                         _("Rename Session"),
< 	                         terminal,
< 	                         _("Apply"), GTK_RESPONSE_APPLY,
< 	                         _("Cancel"), GTK_RESPONSE_CANCEL,
< 	                         NULL
< 	                     );
---
>  	GtkWidget * dialog = v3270_dialog_new_with_buttons(
> 								_("Rename Session"),
> 								terminal,
> 								_("Apply"), GTK_RESPONSE_APPLY,
> 								_("Cancel"), GTK_RESPONSE_CANCEL,
> 								NULL
> 							);
306c306
< }
---
>  }
308c308
< static gboolean terminal_popup(GtkWidget *widget, gboolean selected, gboolean online, GdkEvent *event, pw3270ApplicationWindow * window) {
---
>  static gboolean terminal_popup(GtkWidget *widget, gboolean selected, gboolean online, GdkEvent *event, pw3270ApplicationWindow * window) {
333c333
< }
---
>  }
335c335
< static gboolean oia_popup(GtkWidget *widget, guint field, GdkEvent *event, pw3270ApplicationWindow * window) {
---
>  static gboolean oia_popup(GtkWidget *widget, guint field, GdkEvent *event, pw3270ApplicationWindow * window) {
354c354
< }
---
>  }
356c356
< static void label_populate_popup(GtkLabel G_GNUC_UNUSED(*label), GtkMenu *menu, GtkWidget *terminal) {
---
>  static void label_populate_popup(GtkLabel G_GNUC_UNUSED(*label), GtkMenu *menu, GtkWidget *terminal) {
392c392
< }
---
>  }
394,397c394,397
< static void label_disconnect(GtkWidget *label, GtkWidget *terminal) {
< 	debug("%s(%p)",__FUNCTION__,label);
< 	g_signal_handlers_disconnect_by_data(G_OBJECT(terminal),label);
< }
---
>  static void label_disconnect(GtkWidget *label, GtkWidget *terminal) {
>  	debug("%s(%p)",__FUNCTION__,label);
>  	g_signal_handlers_disconnect_by_data(G_OBJECT(terminal),label);
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/private.h lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/private.h
32c32
< #define PRIVATE_H_INCLUDED
---
> 	#define PRIVATE_H_INCLUDED
34c34
< #include <config.h>
---
> 	#include <config.h>
36,38c36,38
< #ifndef GETTEXT_PACKAGE
< #define GETTEXT_PACKAGE PACKAGE_NAME
< #endif
---
> 	#ifndef GETTEXT_PACKAGE
> 		#define GETTEXT_PACKAGE PACKAGE_NAME
> 	#endif
40,42c40,42
< #include <libintl.h>
< #include <glib/gi18n.h>
< #include <gtk/gtk.h>
---
> 	#include <libintl.h>
> 	#include <glib/gi18n.h>
> 	#include <gtk/gtk.h>
44,47c44,47
< #include <pw3270/window.h>
< #include <v3270.h>
< #include <lib3270.h>
< #include <lib3270/log.h>
---
> 	#include <pw3270/window.h>
> 	#include <v3270.h>
> 	#include <lib3270.h>
> 	#include <lib3270/log.h>
49,53c49,53
< enum pw3270ApplicationWindowPopup {
< 	PW3270_APP_WINDOW_POPUP_OVER_SELECTED_AREA,
< 	PW3270_APP_WINDOW_POPUP_OVER_UNSELECTED_AREA,
< 	PW3270_APP_WINDOW_POPUP_OVER_OIA,
< 	PW3270_APP_WINDOW_POPUP_WHEN_OFFLINE,
---
> 	enum pw3270ApplicationWindowPopup {
> 		PW3270_APP_WINDOW_POPUP_OVER_SELECTED_AREA,
> 		PW3270_APP_WINDOW_POPUP_OVER_UNSELECTED_AREA,
> 		PW3270_APP_WINDOW_POPUP_OVER_OIA,
> 		PW3270_APP_WINDOW_POPUP_WHEN_OFFLINE,
55,56c55,56
< 	PW3270_APP_WINDOW_POPUP_COUNT
< };
---
> 		PW3270_APP_WINDOW_POPUP_COUNT
> 	};
58c58
< #define PW3270_APP_WINDOW_POPUP_DEFAULT PW3270_APP_WINDOW_POPUP_OVER_UNSELECTED_AREA
---
> 	#define PW3270_APP_WINDOW_POPUP_DEFAULT PW3270_APP_WINDOW_POPUP_OVER_UNSELECTED_AREA
60c60
< struct _pw3270ApplicationWindow {
---
> 	struct _pw3270ApplicationWindow {
62c62
< 	GtkApplicationWindow parent;
---
> 		GtkApplicationWindow parent;
64,66c64,66
< 	GtkWidget	* terminal;	///< @brief The active terminal.
< 	GtkNotebook * notebook;
< 	GtkToolbar	* toolbar;
---
> 		GtkWidget	* terminal;	///< @brief The active terminal.
> 		GtkNotebook * notebook;
> 		GtkToolbar	* toolbar;
68c68
< 	GList		* keypads;		///< @brief Keypads.
---
> 		GList		* keypads;		///< @brief Keypads.
70,75c70,75
< 	struct {
< 		int width;						///< @brief Window width.
< 		int height;						///< @brief Window height.
< 		unsigned int is_maximized : 1;	///< @brief Non zero if window is maximized.
< 		unsigned int is_fullscreen : 1;	///< @brief Non zero if window is fullscreen.
< 	} state;
---
> 		struct {
> 			int width;				///< @brief Window width.
> 			int height;				///< @brief Window height.
> 			int is_maximized : 1;	///< @brief Non zero if window is maximized.
> 			int is_fullscreen : 1;	///< @brief Non zero if window is fullscreen.
> 		} state;
77c77
< 	GtkWidget	* popups[PW3270_APP_WINDOW_POPUP_COUNT];
---
> 		GtkWidget	* popups[PW3270_APP_WINDOW_POPUP_COUNT];
79c79
< };
---
> 	};
81c81
< struct _pw3270ApplicationWindowClass {
---
> 	struct _pw3270ApplicationWindowClass {
83c83
< 	GtkApplicationWindowClass parent_class;
---
> 		GtkApplicationWindowClass parent_class;
85c85
< };
---
> 	};
87,94c87,94
< // Actions
< G_GNUC_INTERNAL GAction * pw3270_action_host_properties_new(void);
< G_GNUC_INTERNAL GAction * pw3270_set_color_action_new(void);
< G_GNUC_INTERNAL GAction * pw3270_file_transfer_action_new(void);
< G_GNUC_INTERNAL GAction * pw3270_action_window_close_new(void);
< G_GNUC_INTERNAL GAction	* pw3270_action_connect_new(void);
< G_GNUC_INTERNAL GAction	* pw3270_action_save_session_preferences_new(void);
< G_GNUC_INTERNAL GAction * pw3270_action_save_session_shortcut_new(void);
---
> 	// Actions
> 	G_GNUC_INTERNAL GAction * pw3270_action_host_properties_new(void);
> 	G_GNUC_INTERNAL GAction * pw3270_set_color_action_new(void);
> 	G_GNUC_INTERNAL GAction * pw3270_file_transfer_action_new(void);
> 	G_GNUC_INTERNAL GAction * pw3270_action_window_close_new(void);
> 	G_GNUC_INTERNAL GAction	* pw3270_action_connect_new(void);
> 	G_GNUC_INTERNAL GAction	* pw3270_action_save_session_preferences_new(void);
> 	G_GNUC_INTERNAL GAction * pw3270_action_save_desktop_icon_new(void);
96c96
< GAction * pw3270_action_session_properties_new(void);
---
> 	GAction * pw3270_action_session_properties_new(void);
98,100c98,100
< // Header bar
< G_GNUC_INTERNAL void	  pw3270_window_set_header_action_names(GtkWidget *window, const gchar *action_names);
< G_GNUC_INTERNAL	gchar	* pw3270_window_get_action_names(GtkWidget *window);
---
> 	// Header bar
> 	G_GNUC_INTERNAL void	  pw3270_window_set_header_action_names(GtkWidget *window, const gchar *action_names);
> 	G_GNUC_INTERNAL	gchar	* pw3270_window_get_action_names(GtkWidget *window);
102,103c102,103
< // Terminal actions.
< G_GNUC_INTERNAL GAction * pw3270_model_number_action_new(GtkWidget *terminal);
---
> 	// Terminal actions.
> 	G_GNUC_INTERNAL GAction * pw3270_model_number_action_new(GtkWidget *terminal);
105,106c105,106
< G_GNUC_INTERNAL void pw3270_window_open_activated(GSimpleAction * action, GVariant *parameter, gpointer window);
< G_GNUC_INTERNAL void pw3270_window_close_activated(GSimpleAction * action, GVariant *parameter, gpointer window);
---
>     G_GNUC_INTERNAL void pw3270_window_open_activated(GSimpleAction * action, GVariant *parameter, gpointer window);
>     G_GNUC_INTERNAL void pw3270_window_close_activated(GSimpleAction * action, GVariant *parameter, gpointer window);
108,109c108,109
< // Window widgets & tools.
< G_GNUC_INTERNAL GtkWidget * pw3270_header_button_new_from_builder(GtkWidget *widget, GtkBuilder * builder, const gchar *action_name);
---
> 	// Window widgets & tools.
> 	G_GNUC_INTERNAL GtkWidget * pw3270_header_button_new_from_builder(GtkWidget *widget, GtkBuilder * builder, const gchar *action_name);
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/terminal.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/terminal.c
30c30
< #include "private.h"
---
>  #include "private.h"
32,46c32,45
< #include <glib.h>
< #include <glib/gstdio.h>
< #include <fcntl.h>
< #include <sys/types.h>
< #include <sys/stat.h>
< #include <stdlib.h>
< 
< #include <pw3270/actions.h>
< #include <lib3270/toggle.h>
< #include <v3270/settings.h>
< #include <v3270/actions.h>
< #include <v3270/keyfile.h>
< #include <v3270/print.h>
< #include <lib3270/os.h>
< #include <pw3270/application.h>
---
>  #include <glib.h>
>  #include <glib/gstdio.h>
>  #include <fcntl.h>
>  #include <sys/types.h>
>  #include <sys/stat.h>
>  #include <stdlib.h>
> 
>  #include <pw3270/actions.h>
>  #include <lib3270/toggle.h>
>  #include <v3270/settings.h>
>  #include <v3270/actions.h>
>  #include <v3270/keyfile.h>
>  #include <v3270/print.h>
>  #include <lib3270/os.h>
48c47
< static void destroy(GtkWidget *terminal, gpointer G_GNUC_UNUSED(dunno)) {
---
>  static void destroy(GtkWidget *terminal, gpointer G_GNUC_UNUSED(dunno)) {
50c49
< }
---
>  }
52c51
< static void toggle_changed(GtkWidget *widget, LIB3270_TOGGLE_ID G_GNUC_UNUSED(toggle_id), gboolean toggle_state, const gchar *toggle_name, gpointer G_GNUC_UNUSED(dunno)) {
---
>  static void toggle_changed(GtkWidget *widget, LIB3270_TOGGLE_ID G_GNUC_UNUSED(toggle_id), gboolean toggle_state, const gchar *toggle_name, gpointer G_GNUC_UNUSED(dunno)) {
55c54
< }
---
>  }
57c56
< static void save_settings(GtkWidget *terminal, gpointer G_GNUC_UNUSED(dunno)) {
---
>  static void save_settings(GtkWidget *terminal, gpointer G_GNUC_UNUSED(dunno)) {
59c58
< }
---
>  }
61,62c60,61
< static void print_done(GtkWidget *widget, GtkPrintOperation *operation, GtkPrintOperationResult result, gpointer G_GNUC_UNUSED(dunno)) {
< 	debug("%s(%u)",__FUNCTION__,(unsigned int) result);
---
>  static void print_done(GtkWidget *widget, GtkPrintOperation *operation, GtkPrintOperationResult result, gpointer G_GNUC_UNUSED(dunno)) {
>  	debug("%s(%u)",__FUNCTION__,(unsigned int) result);
64c63
< 	if(result != GTK_PRINT_OPERATION_RESULT_APPLY)
---
>  	if(result != GTK_PRINT_OPERATION_RESULT_APPLY)
72c71
< }
---
>  }
74c73
< static void print_setup(G_GNUC_UNUSED GtkWidget *widget, GtkPrintOperation *operation, gpointer G_GNUC_UNUSED(dunno) ) {
---
>  static void print_setup(G_GNUC_UNUSED GtkWidget *widget, GtkPrintOperation *operation, gpointer G_GNUC_UNUSED(dunno) ) {
76c75
< 	debug("%s(%p)",__FUNCTION__,operation);
---
>  	debug("%s(%p)",__FUNCTION__,operation);
79c78
< }
---
>  }
81c80
< static GtkResponseType load_popup_response(GtkWidget *widget, const gchar *popup_name, gpointer G_GNUC_UNUSED(dunno)) {
---
>  static GtkResponseType load_popup_response(GtkWidget *widget, const gchar *popup_name, gpointer G_GNUC_UNUSED(dunno)) {
107c106
< }
---
>  }
109c108
< static gboolean save_popup_response(GtkWidget *widget, const gchar *popup_name, GtkResponseType response, gpointer G_GNUC_UNUSED(dunno)) {
---
>  static gboolean save_popup_response(GtkWidget *widget, const gchar *popup_name, GtkResponseType response, gpointer G_GNUC_UNUSED(dunno)) {
122c121
< }
---
>  }
124c123
< void v3270_set_default_session(GtkWidget *terminal) {
---
>  GtkWidget * pw3270_terminal_new(const gchar *session_file) {
126,127c125,126
< 	GError				* error = NULL;
< 	g_autofree gchar	* filename = v3270_keyfile_get_default_filename();
---
>  	GtkWidget	* terminal = v3270_new();
>  	GError		* error = NULL;
129c128
< 	v3270_key_file_open(terminal,filename,&error);
---
>  	gtk_widget_show_all(terminal);
131,162c130
< 	if(error) {
< 
< 		GtkWidget * dialog = gtk_message_dialog_new_with_markup(
< 		                         GTK_WINDOW(gtk_widget_get_toplevel(terminal)),
< 		                         GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT,
< 		                         GTK_MESSAGE_ERROR,
< 		                         GTK_BUTTONS_CANCEL,
< 		                         _("Can't use default session file")
< 		                     );
< 
< 		gtk_message_dialog_format_secondary_text(GTK_MESSAGE_DIALOG(dialog),"%s",error->message);
< 
< 		gtk_window_set_title(GTK_WINDOW(dialog),_("Can't load session file"));
< 
< 		gtk_widget_show_all(dialog);
< 
< 		g_signal_connect(dialog,"close",G_CALLBACK(gtk_widget_destroy),NULL);
< 		g_signal_connect(dialog,"response",G_CALLBACK(gtk_widget_destroy),NULL);
< 
< 		g_error_free(error);
< 
< 	}
< }
< 
< GtkWidget * pw3270_terminal_new(const gchar *session_file) {
< 
< 	GtkWidget	* terminal = v3270_new();
< 	GError		* error = NULL;
< 
< 	gtk_widget_show_all(terminal);
< 
< 	if(session_file) {
---
>  	if(session_file) {
167c135
< 	} else {
---
>  	} else {
174c142
< 	}
---
>  	}
176,180c144,148
< 	// Setup signals.
< 	g_signal_connect(G_OBJECT(terminal),"save-settings",G_CALLBACK(save_settings),NULL);
< 	g_signal_connect(G_OBJECT(terminal),"toggle_changed",G_CALLBACK(toggle_changed),NULL);
< 	g_signal_connect(G_OBJECT(terminal),"print-done",G_CALLBACK(print_done),NULL);
< 	g_signal_connect(G_OBJECT(terminal),"print-setup",G_CALLBACK(print_setup),NULL);
---
>  	// Setup signals.
>  	g_signal_connect(G_OBJECT(terminal),"save-settings",G_CALLBACK(save_settings),NULL);
>  	g_signal_connect(G_OBJECT(terminal),"toggle_changed",G_CALLBACK(toggle_changed),NULL);
>  	g_signal_connect(G_OBJECT(terminal),"print-done",G_CALLBACK(print_done),NULL);
>  	g_signal_connect(G_OBJECT(terminal),"print-setup",G_CALLBACK(print_setup),NULL);
183c151
< 	g_signal_connect(G_OBJECT(terminal),"save-popup-response",G_CALLBACK(save_popup_response),NULL);
---
>  	g_signal_connect(G_OBJECT(terminal),"save-popup-response",G_CALLBACK(save_popup_response),NULL);
185c153
< 	if(error) {
---
>  	if(error) {
188,193c156,161
< 		                         GTK_WINDOW(gtk_widget_get_toplevel(terminal)),
< 		                         GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT,
< 		                         GTK_MESSAGE_ERROR,
< 		                         GTK_BUTTONS_CANCEL,
< 		                         _("Can't use \"%s\""),session_file
< 		                     );
---
> 										GTK_WINDOW(gtk_widget_get_toplevel(terminal)),
> 										GTK_DIALOG_MODAL|GTK_DIALOG_DESTROY_WITH_PARENT,
> 										GTK_MESSAGE_ERROR,
> 										GTK_BUTTONS_CANCEL,
> 										_("Can't use \"%s\""),session_file
> 									);
207,212d174
< 	pw3270_application_plugin_call(
< 	    g_application_get_default(),
< 	    "pw3270_plugin_setup_terminal",
< 	    terminal
< 	);
< 
214c176
< }
---
>  }
216c178
< GtkWidget * pw3270_application_window_new_tab(GtkWidget *widget, const gchar *session_file) {
---
>  GtkWidget * pw3270_application_window_new_tab(GtkWidget *widget, const gchar *session_file) {
226c188
< }
---
>  }
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/testprogram/testprogram.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/testprogram/testprogram.c
31,36c31,36
< #include <config.h>
< #include <pw3270/application.h>
< #include <pw3270/toolbar.h>
< #include <v3270.h>
< #include <v3270/trace.h>
< #include <lib3270/log.h>
---
>  #include <config.h>
>  #include <pw3270/application.h>
>  #include <pw3270/toolbar.h>
>  #include <v3270.h>
>  #include <v3270/trace.h>
>  #include <lib3270/log.h>
38c38
< /*---[ Implement ]----------------------------------------------------------------------------------*/
---
>  /*---[ Implement ]----------------------------------------------------------------------------------*/
80,81c80,81
< 	GtkApplication *app;
< 	int status;
---
>   GtkApplication *app;
>   int status;
83,85c83,85
< 	app = pw3270_application_new("br.app.pw3270",G_APPLICATION_HANDLES_OPEN);
< 	status = g_application_run (G_APPLICATION (app), argc, argv);
< 	g_object_unref (app);
---
>   app = pw3270_application_new("br.com.bb.pw3270",G_APPLICATION_HANDLES_OPEN);
>   status = g_application_run (G_APPLICATION (app), argc, argv);
>   g_object_unref (app);
87c87
< 	return status;
---
>   return status;
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/tools.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/tools.c
30,31c30,31
< #include "private.h"
< #include <pw3270/window.h>
---
>  #include "private.h"
>  #include <pw3270/application.h>
33,36c33,34
< GtkWidget * pw3270_window_get_terminal(GtkWidget *window) {
< 	g_return_val_if_fail(PW3270_IS_APPLICATION_WINDOW(window),NULL);
< 	return PW3270_APPLICATION_WINDOW(window)->terminal;
< }
---
>  /*
>  GtkWidget * pw3270_setup_image_button(GtkWidget *button, const gchar *image_name) {
38c36
< H3270 * pw3270_window_get_session_handle(GtkWidget *window) {
---
> 	gtk_button_set_image(GTK_BUTTON(button),gtk_image_new_from_icon_name(image_name,GTK_ICON_SIZE_MENU));
40c38,40
< 	g_return_val_if_fail(PW3270_IS_APPLICATION_WINDOW(window),NULL);
---
> 	gtk_widget_set_can_focus(button,FALSE);
> 	gtk_widget_set_can_default(button,FALSE);
> 	gtk_widget_set_focus_on_click(button,FALSE);
42,44c42
< 	GtkWidget * terminal = PW3270_APPLICATION_WINDOW(window)->terminal;
< 	if(!terminal)
< 		return NULL;
---
> 	return button;
46c44,45
< 	return v3270_get_session(terminal);
---
>  }
> */
48c47,55
< }
---
> /*
>  gboolean pw3270_settings_set_int(const gchar *key, gint value) {
> 
> 	GSettings * settings = pw3270_application_get_settings(g_application_get_default());
> 	if(settings)
> 		return g_settings_set_int(settings,key,value);
> 	return FALSE;
>  }
> */
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/window.c lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/src/objects/window/window.c
1,2d0
< /* SPDX-License-Identifier: LGPL-3.0-or-later */
< 
4c2,19
<  * Copyright (C) 2008 Banco do Brasil S.A.
---
>  * "Software pw3270, desenvolvido com base nos códigos fontes do WC3270  e X3270
>  * (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
>  * aplicativos mainframe. Registro no INPI sob o nome G3270.
>  *
>  * Copyright (C) <2008> <Banco do Brasil S.A.>
>  *
>  * Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
>  * os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
>  * Free Software Foundation.
>  *
>  * Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
>  * GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
>  * A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
>  * obter mais detalhes.
>  *
>  * Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
>  * programa; se não, escreva para a Free Software Foundation, Inc., 51 Franklin
>  * St, Fifth Floor, Boston, MA  02110-1301  USA
6,9c21
<  * This program is free software: you can redistribute it and/or modify
<  * it under the terms of the GNU Lesser General Public License as published
<  * by the Free Software Foundation, either version 3 of the License, or
<  * (at your option) any later version.
---
>  * Este programa está nomeado como - e possui - linhas de código.
11,14c23,26
<  * This program is distributed in the hope that it will be useful,
<  * but WITHOUT ANY WARRANTY; without even the implied warranty of
<  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
<  * GNU General Public License for more details.
---
>  * Contatos:
>  *
>  * perry.werneck@gmail.com	(Alexandre Perry de Souza Werneck)
>  * erico.mendonca@gmail.com	(Erico Mascarenhas Mendonça)
16,17d27
<  * You should have received a copy of the GNU Lesser General Public License
<  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
20,27c30,37
< #include "private.h"
< #include <pw3270.h>
< #include <pw3270/toolbar.h>
< #include <pw3270/application.h>
< #include <pw3270/actions.h>
< #include <pw3270/keypad.h>
< #include <v3270/settings.h>
< #include <v3270/keyfile.h>
---
>  #include "private.h"
>  #include <pw3270.h>
>  #include <pw3270/toolbar.h>
>  #include <pw3270/application.h>
>  #include <pw3270/actions.h>
>  #include <pw3270/keypad.h>
>  #include <v3270/settings.h>
>  #include <v3270/keyfile.h>
29,30c39,40
< static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);
< static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);
---
>  static void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec *pspec);
>  static void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec *pspec);
32c42
< G_DEFINE_TYPE(pw3270ApplicationWindow, pw3270ApplicationWindow, GTK_TYPE_APPLICATION_WINDOW);
---
>  G_DEFINE_TYPE(pw3270ApplicationWindow, pw3270ApplicationWindow, GTK_TYPE_APPLICATION_WINDOW);
34c44
< enum {
---
>  enum {
37c47
< };
---
>  };
39c49
< static void destroy(GtkWidget *widget) {
---
>  static void destroy(GtkWidget *widget) {
72c82
< }
---
>  }
74c84
< static void size_allocate(GtkWidget *widget, GtkAllocation *allocation) {
---
>  static void size_allocate(GtkWidget *widget, GtkAllocation *allocation) {
76c86
< 	// https://developer.gnome.org/SaveWindowState/
---
>  	// https://developer.gnome.org/SaveWindowState/
85c95
< }
---
>  }
87c97
< static gboolean window_state_event(GtkWidget *widget, GdkEventWindowState *event) {
---
>  static gboolean window_state_event(GtkWidget *widget, GdkEventWindowState *event) {
89,90c99,100
< 	// https://developer.gnome.org/SaveWindowState/
< 	gboolean res = GDK_EVENT_PROPAGATE;
---
>   	// https://developer.gnome.org/SaveWindowState/
>   	gboolean res = GDK_EVENT_PROPAGATE;
92c102
< 	if(GTK_WIDGET_CLASS(pw3270ApplicationWindow_parent_class)->window_state_event != NULL) {
---
>   	if(GTK_WIDGET_CLASS(pw3270ApplicationWindow_parent_class)->window_state_event != NULL) {
94c104
< 	}
---
>   	}
96,97c106,107
< 	{
< 		pw3270ApplicationWindow * window = PW3270_APPLICATION_WINDOW(widget);
---
>   	{
>   		pw3270ApplicationWindow * window = PW3270_APPLICATION_WINDOW(widget);
101c111
< 	}
---
>   	}
104c114
< }
---
>  }
106c116
< static void constructed(GObject *object) {
---
>  static void constructed(GObject *object) {
110c120
< 	pw3270ApplicationWindow * window = PW3270_APPLICATION_WINDOW(object);
---
>  	pw3270ApplicationWindow * window = PW3270_APPLICATION_WINDOW(object);
132c142
< }
---
>  }
134c144
< static void pw3270ApplicationWindow_class_init(pw3270ApplicationWindowClass *klass) {
---
>  static void pw3270ApplicationWindow_class_init(pw3270ApplicationWindowClass *klass) {
136,149c146,152
< 	static const char * icon_search_paths[] = {
< 		"icons",
< #ifdef _WIN32
< 		"share/icons",
< #endif // _WIN32
< 	};
< 
< 	size_t ix;
< 	for(ix = 0; ix < G_N_ELEMENTS(icon_search_paths); ix++) {
< #if defined(DEBUG)
< 		lib3270_autoptr(char) path = g_build_filename(g_get_current_dir(),icon_search_paths[ix],NULL);
< #elif defined(_WIN32)
< 		g_autofree gchar * appdir = g_win32_get_package_installation_directory_of_module(NULL);
< 		lib3270_autoptr(char) path = g_build_filename(appdir,icon_search_paths[ix],NULL);
---
> #ifdef DEBUG
> 	{
> 		gtk_icon_theme_append_search_path(
> 			gtk_icon_theme_get_default(),
> 			"./icons"
> 		);
> 	}
151,153c154,155
< 		lib3270_autoptr(char) path = lib3270_build_data_filename(icon_search_paths[ix],NULL);
< #endif
< 
---
> 	{
> 		lib3270_autoptr(char) path = lib3270_build_data_filename("icons",NULL);
155d156
< 			g_message("Adding '%s' on icon search path",path);
160,182d160
< 		} else {
< 
< 			g_message("Folder '%s' is not valid",path);
< 
< 		}
< 
< 	}
< 
< #if defined(DEBUG) || defined(_WIN32)
< 	{
< 		gchar **paths = NULL;
< 		gint n_paths = 0;
< 
< 		gtk_icon_theme_get_search_path (
< 		    gtk_icon_theme_get_default(),
< 			&paths,
< 			&n_paths
< 		);
< 
< 		g_message("Icon search path:");
< 		gint p;
< 		for(p = 0; p < n_paths;p++) {
< 			g_message("\t%s",paths[p]);
186a165
> 
202,208c181,187
< 		    object_class,
< 		    PROP_ACTION_NAMES,
< 		    g_param_spec_string ("action-names",
< 		                         N_("Action Names"),
< 		                         N_("The name of the actions in the header bar"),
< 		                         NULL,
< 		                         G_PARAM_WRITABLE|G_PARAM_READABLE)
---
> 			object_class,
> 			PROP_ACTION_NAMES,
> 			g_param_spec_string ("action-names",
> 				N_("Action Names"),
> 				N_("The name of the actions in the header bar"),
> 				NULL,
> 				G_PARAM_WRITABLE|G_PARAM_READABLE)
212c191
< }
---
>  }
214c193
< void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
---
>  void set_property(GObject *object, guint prop_id, const GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
220c199
< }
---
>  }
222c201
< void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
---
>  void get_property(GObject *object, guint prop_id, GValue *value, GParamSpec G_GNUC_UNUSED(*pspec)) {
224,225c203,204
< 	if(prop_id == PROP_ACTION_NAMES) {
< 		g_value_take_string(value,pw3270_window_get_action_names(GTK_WIDGET(object)));
---
>  	if(prop_id == PROP_ACTION_NAMES) {
>     	g_value_take_string(value,pw3270_window_get_action_names(GTK_WIDGET(object)));
228c207
< }
---
>  }
230c209
< static void save_keypad_state(GtkWidget *keypad, GtkWidget *window, gboolean visible) {
---
>  static void save_keypad_state(GtkWidget *keypad, GtkWidget *window, gboolean visible) {
232,233c211,212
< 	GtkWidget * terminal = pw3270_application_window_get_active_terminal(window);
< 	if(!terminal)
---
>  	GtkWidget * terminal = pw3270_application_window_get_active_terminal(window);
>  	if(!terminal)
241,244c220,223
< 	    keyfile,
< 	    "keypads",
< 	    gtk_widget_get_name(keypad),
< 	    visible
---
> 		keyfile,
> 		"keypads",
> 		gtk_widget_get_name(keypad),
> 		visible
249c228
< }
---
>  }
251c230
< static void keypad_hide(GtkWidget *keypad, GtkWidget *window) {
---
>  static void keypad_hide(GtkWidget *keypad, GtkWidget *window) {
253c232
< }
---
>  }
255c234
< static void keypad_show(GtkWidget *keypad, GtkWidget *window) {
---
>  static void keypad_show(GtkWidget *keypad, GtkWidget *window) {
257c236
< }
---
>  }
259c238
< static GtkWidget * setup_keypad(pw3270ApplicationWindow *window, GObject * model) {
---
>  static GtkWidget * setup_keypad(pw3270ApplicationWindow *window, GObject * model) {
279,283c258,262
< 	    g_property_action_new(
< 	        action_name,
< 	        widget,
< 	        "visible"
< 	    );
---
> 			g_property_action_new(
> 				action_name,
> 				widget,
> 				"visible"
> 			);
286,287c265,266
< 	    G_ACTION_MAP(window),
< 	    G_ACTION(action)
---
> 		G_ACTION_MAP(window),
> 		G_ACTION(action)
292c271
< }
---
>  }
294c273
< static void pw3270ApplicationWindow_init(pw3270ApplicationWindow *widget) {
---
>  static void pw3270ApplicationWindow_init(pw3270ApplicationWindow *widget) {
320a300,317
> 	/*
> 	{
> 		// Create new tab action widget
> 		GtkWidget * new_tab = gtk_button_new_from_icon_name("tab-new-symbolic",GTK_ICON_SIZE_LARGE_TOOLBAR);
> 		gtk_button_set_relief(GTK_BUTTON(new_tab),GTK_RELIEF_NONE);
> 		gtk_actionable_set_action_name(GTK_ACTIONABLE(new_tab),g_intern_static_string("app.new.tab"));
> 
> 		gtk_widget_set_margin_start(new_tab,6);
> 		gtk_widget_set_margin_end(new_tab,6);
> 		gtk_widget_set_margin_bottom(new_tab,0);
> 		gtk_widget_set_valign(new_tab,GTK_ALIGN_END);
> 
> 		gtk_button_set_image_position(GTK_BUTTON(new_tab),GTK_POS_BOTTOM);
> 		gtk_widget_show_all(new_tab);
> 		gtk_notebook_set_action_widget(widget->notebook,new_tab,GTK_PACK_START);
> 	}
> 	*/
> 
333,334c330,331
< 		    G_ACTION_MAP(widget),
< 		    G_ACTION(g_property_action_new("toolbar", widget->toolbar, "visible"))
---
> 			G_ACTION_MAP(widget),
> 			G_ACTION(g_property_action_new("toolbar", widget->toolbar, "visible"))
361,365c358,362
< 		    settings,
< 		    "toolbar-visible",
< 		    widget->toolbar,
< 		    "visible",
< 		    G_SETTINGS_BIND_DEFAULT
---
> 			settings,
> 			"toolbar-visible",
> 			widget->toolbar,
> 			"visible",
> 			G_SETTINGS_BIND_DEFAULT
369,373c366,370
< 		    settings,
< 		    "toolbar-icon-type",
< 		    widget->toolbar,
< 		    "icon-type",
< 		    G_SETTINGS_BIND_DEFAULT
---
> 			settings,
> 			"toolbar-icon-type",
> 			widget->toolbar,
> 			"icon-type",
> 			G_SETTINGS_BIND_DEFAULT
377,381c374,378
< 		    settings,
< 		    "toolbar-style",
< 		    widget->toolbar,
< 		    "style",
< 		    G_SETTINGS_BIND_DEFAULT
---
> 			settings,
> 			"toolbar-style",
> 			widget->toolbar,
> 			"style",
> 			G_SETTINGS_BIND_DEFAULT
385,389c382,386
< 		    settings,
< 		    "toolbar-icon-size",
< 		    widget->toolbar,
< 		    "icon-size",
< 		    G_SETTINGS_BIND_DEFAULT
---
> 			settings,
> 			"toolbar-icon-size",
> 			widget->toolbar,
> 			"icon-size",
> 			G_SETTINGS_BIND_DEFAULT
404c401
< 		for(keypad = keypads; keypad; keypad = g_list_next(keypad)) {
---
> 		for(keypad = keypads;keypad;keypad = g_list_next(keypad)) {
408,410c405,407
< 				    vBox,
< 				    setup_keypad(widget, G_OBJECT(keypad->data)),
< 				    FALSE,FALSE,0
---
> 					vBox,
> 					setup_keypad(widget, G_OBJECT(keypad->data)),
> 					FALSE,FALSE,0
417c414
< 		for(keypad = keypads; keypad; keypad = g_list_next(keypad)) {
---
> 		for(keypad = keypads;keypad;keypad = g_list_next(keypad)) {
421,423c418,420
< 				    hBox,
< 				    setup_keypad(widget, G_OBJECT(keypad->data)),
< 				    FALSE,FALSE,0
---
> 					hBox,
> 					setup_keypad(widget, G_OBJECT(keypad->data)),
> 					FALSE,FALSE,0
433c430
< 		for(keypad = keypads; keypad; keypad = g_list_next(keypad)) {
---
> 		for(keypad = keypads;keypad;keypad = g_list_next(keypad)) {
437,439c434,436
< 				    vBox,
< 				    setup_keypad(widget, G_OBJECT(keypad->data)),
< 				    FALSE,FALSE,0
---
> 					vBox,
> 					setup_keypad(widget, G_OBJECT(keypad->data)),
> 					FALSE,FALSE,0
446c443
< 		for(keypad = keypads; keypad; keypad = g_list_next(keypad)) {
---
> 		for(keypad = keypads;keypad;keypad = g_list_next(keypad)) {
450,452c447,449
< 				    hBox,
< 				    setup_keypad(widget, G_OBJECT(keypad->data)),
< 				    FALSE,FALSE,0
---
> 					hBox,
> 					setup_keypad(widget, G_OBJECT(keypad->data)),
> 					FALSE,FALSE,0
475a473
> 			pw3270_action_host_properties_new(),
476a475,476
> 			pw3270_set_color_action_new(),
> 
477a478
> 
478a480
> 
479a482
> 
485,487c488
< #ifndef __APPLE__
< 			pw3270_action_save_session_shortcut_new(),
< #endif // __APPLE__
---
> 			pw3270_action_save_desktop_icon_new(),
506,508d506
< #ifdef __APPLE__
< 	gtk_application_window_set_show_menubar(GTK_APPLICATION_WINDOW(widget),TRUE);
< #else
510,511c508,509
< 	    G_ACTION_MAP(widget),
< 	    G_ACTION(g_property_action_new("menubar", widget, "show-menubar"))
---
> 		G_ACTION_MAP(widget),
> 		G_ACTION(g_property_action_new("menubar", widget, "show-menubar"))
513d510
< #endif // !__APPLE__
516,520c513,517
< 	    settings,
< 	    "toolbar-action-names",
< 	    widget->toolbar,
< 	    "action-names",
< 	    G_SETTINGS_BIND_DEFAULT
---
> 		settings,
> 		"toolbar-action-names",
> 		widget->toolbar,
> 		"action-names",
> 		G_SETTINGS_BIND_DEFAULT
524c521
< }
---
>  }
526c523
< static void page_added(GtkNotebook *notebook, GtkWidget *child, guint G_GNUC_UNUSED(page_num), GtkApplication * application) {
---
>  static void page_added(GtkNotebook *notebook, GtkWidget *child, guint G_GNUC_UNUSED(page_num), GtkApplication * application) {
530c527
< 	gtk_notebook_set_show_tabs(notebook,gtk_notebook_get_n_pages(notebook) > 1);
---
>  	gtk_notebook_set_show_tabs(notebook,gtk_notebook_get_n_pages(notebook) > 1);
532,533c529,530
< 	// Call plugins
< 	int (*call)(GtkWidget *);
---
>  	// Call plugins
>   	int (*call)(GtkWidget *);
535,536c532,533
< 	GSList * item;
< 	for(item = pw3270_application_get_plugins(G_APPLICATION(application)); item; item = g_slist_next(item)) {
---
>   	GSList * item;
>   	for(item = pw3270_application_get_plugins(G_APPLICATION(application)); item; item = g_slist_next(item)) {
539,540c536,537
< 		}
< 	}
---
>        }
>   	}
542c539
< }
---
>  }
544c541
< static void page_removed(GtkNotebook *notebook, GtkWidget *child, guint G_GNUC_UNUSED(page_num), GtkApplication * application) {
---
>  static void page_removed(GtkNotebook *notebook, GtkWidget *child, guint G_GNUC_UNUSED(page_num), GtkApplication * application) {
548c545
< 	gtk_notebook_set_show_tabs(notebook,gtk_notebook_get_n_pages(notebook) > 1);
---
>  	gtk_notebook_set_show_tabs(notebook,gtk_notebook_get_n_pages(notebook) > 1);
550,551c547,548
< 	// Call plugins
< 	int (*call)(GtkWidget *);
---
>  	// Call plugins
>   	int (*call)(GtkWidget *);
553,554c550,551
< 	GSList * item;
< 	for(item = pw3270_application_get_plugins(G_APPLICATION(application)); item; item = g_slist_next(item)) {
---
>   	GSList * item;
>   	for(item = pw3270_application_get_plugins(G_APPLICATION(application)); item; item = g_slist_next(item)) {
557,558c554,555
< 		}
< 	}
---
>        }
>   	}
560c557
< }
---
>  }
562c559
< GtkWidget * pw3270_application_window_new(GtkApplication * application, const gchar *session_file) {
---
>  GtkWidget * pw3270_application_window_new(GtkApplication * application, const gchar *session_file) {
572,575c569,572
< 	    g_object_new(
< 	        PW3270_TYPE_APPLICATION_WINDOW,
< 	        "application", application,
< 	        NULL);
---
> 		g_object_new(
> 			PW3270_TYPE_APPLICATION_WINDOW,
> 			"application", application,
> 			NULL);
583c580,581
< 	g_autoptr(GtkBuilder) builder = pw3270_application_builder_new(G_APPLICATION(application));
---
> 	g_autoptr(GtkBuilder) builder = pw3270_application_get_builder("window.xml");
> 	pw3270_load_placeholders(G_APPLICATION(application), builder);
614,618c612,614
< #if defined(__APPLE__)
< 			style = PW3270_UI_STYLE_GNOME;
< 			g_settings_set_int(settings,"header-icon-type",1);
< #elif defined( G_OS_UNIX )
< 			style = PW3270_UI_STYLE_GNOME;
---
> 
> #ifdef G_OS_UNIX
>             style = PW3270_UI_STYLE_GNOME;
621,622c617,618
< #elif defined( G_OS_WIN32 )
< 			style = PW3270_UI_STYLE_CLASSICAL;
---
> #else
>             style = PW3270_UI_STYLE_CLASSICAL;
625,626d620
< #else
< 			#error Unsupported platform
646,650c640,644
< 			    settings,
< 			    "has-subtitle",
< 			    header,
< 			    "has-subtitle",
< 			    G_SETTINGS_BIND_DEFAULT
---
> 				settings,
> 				"has-subtitle",
> 				header,
> 				"has-subtitle",
> 				G_SETTINGS_BIND_DEFAULT
657,661c651,655
< 			    settings,
< 			    "header-action-names",
< 			    window,
< 			    "action-names",
< 			    G_SETTINGS_BIND_DEFAULT
---
> 				settings,
> 				"header-action-names",
> 				window,
> 				"action-names",
> 				G_SETTINGS_BIND_DEFAULT
670d663
< #ifndef __APPLE__
672,676c665,669
< 		    settings,
< 		    "menubar-visible",
< 		    window,
< 		    "show-menubar",
< 		    G_SETTINGS_BIND_DEFAULT
---
> 			settings,
> 			"menubar-visible",
> 			window,
> 			"show-menubar",
> 			G_SETTINGS_BIND_DEFAULT
678d670
< #endif // !__APPLE__
723a716,717
> 	// gtk_window_set_interactive_debugging(TRUE);
> 
726c720
< }
---
>  }
728c722
< void pw3270_window_set_current_page(GtkWidget *window, gint page_num) {
---
>  void pw3270_window_set_current_page(GtkWidget *window, gint page_num) {
739c733
< }
---
>  }
741c735
< void pw3270_window_set_subtitle(GtkWidget *window, const gchar *subtitle) {
---
>  void pw3270_window_set_subtitle(GtkWidget *window, const gchar *subtitle) {
745c739
< 	GtkWidget * title_bar = gtk_window_get_titlebar(GTK_WINDOW(window));
---
>  	GtkWidget * title_bar = gtk_window_get_titlebar(GTK_WINDOW(window));
747c741
< 	if(title_bar && GTK_IS_HEADER_BAR(title_bar) && gtk_header_bar_get_has_subtitle(GTK_HEADER_BAR(title_bar))) {
---
>  	if(title_bar && GTK_IS_HEADER_BAR(title_bar) && gtk_header_bar_get_has_subtitle(GTK_HEADER_BAR(title_bar))) {
751c745
< }
---
>  }
753,755c747,749
< GtkWidget * pw3270_application_window_get_active_terminal(GtkWidget *widget) {
< 	return PW3270_APPLICATION_WINDOW(widget)->terminal;
< }
---
>  GtkWidget * pw3270_application_window_get_active_terminal(GtkWidget *widget) {
>  	return PW3270_APPLICATION_WINDOW(widget)->terminal;
>  }
757c751
< void pw3270_application_window_set_active_terminal(GtkWidget *widget, GtkWidget *terminal) {
---
>  void pw3270_application_window_set_active_terminal(GtkWidget *widget, GtkWidget *terminal) {
761c755
< 	pw3270ApplicationWindow * window = PW3270_APPLICATION_WINDOW(widget);
---
>  	pw3270ApplicationWindow * window = PW3270_APPLICATION_WINDOW(widget);
763c757
< 	if(window->terminal == terminal)
---
>  	if(window->terminal == terminal)
846c840,881
< }
---
>  }
> 
>  GSettings *pw3270_application_window_settings_new() {
> 
>  	// Get settings
> 	g_autofree gchar * path = g_strconcat("/apps/" PACKAGE_NAME "/", g_get_application_name(), "/window/",NULL);
> 	debug("path=%s",path);
> 
> #ifdef DEBUG
> 
> 	GError * error = NULL;
> 	GSettingsSchemaSource * source =
> 		g_settings_schema_source_new_from_directory(
> 			".",
> 			NULL,
> 			TRUE,
> 			&error
> 		);
> 
> 	g_assert_no_error(error);
> 
> 	GSettingsSchema * schema =
> 		g_settings_schema_source_lookup(
> 			source,
> 			"br.com.bb." PACKAGE_NAME ".window",
> 			TRUE);
> 
> 	debug("schema %s=%p path=%s","br.com.bb." PACKAGE_NAME ".window",schema,path);
> 
> 	GSettings * settings = g_settings_new_full(schema, NULL, path);
> 
> 	g_settings_schema_source_unref(source);
> 
> #else
> 
> 	GSettings * settings = g_settings_new_with_path("br.com.bb." PACKAGE_NAME ".window", path);
> 
> #endif // DEBUG
> 
> 	return settings;
> 
>  }
848c883
< GList * pw3270_application_window_get_keypads(GtkWidget *window) {
---
>  GList * pw3270_application_window_get_keypads(GtkWidget *window) {
853c888
< }
---
>  }
Only in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/ui: application.xml
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/ui: linux.ui.xml
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/ui: macos.ui.xml
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/ui: windows.ui.xml
Only in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/ui: window.xml
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4: validate-metainfo.sh
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/.vscode/c_cpp_properties.json lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/.vscode/c_cpp_properties.json
23,24c23
<             "intelliSenseMode": "msvc-x64",
<             "configurationProvider": "ms-vscode.makefile-tools"
---
>             "intelliSenseMode": "msvc-x64"
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win: ci-build.sh
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/copydeps.sh.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/copydeps.sh.in
5c5
< BUILDDIR=@BUILDDIR@
---
> BASEDIR=@BASEDIR@
82,83c82,83
< APPLICATION_PATH=${BUILDDIR}/.bin/Release
< RUNTIME_PATH=${BUILDDIR}/.bin/runtime
---
> APPLICATION_PATH=${BASEDIR}/.bin/Release
> RUNTIME_PATH=${BASEDIR}/.bin/runtime
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/gtk.css lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/gtk.css
0a1
> /* Disable F10 */
2,10c3,4
< 
< 	/* Disable F10 */
< 	unbind "<shift>F10"
< 	unbind "F10"
< 
< 	/* Disable Print-Screen */ 
< 	unbind "<shift>Print"
< 	unbind "Print"
< 
---
>      unbind "<shift>F10"
>      unbind "F10"
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/install-cross.sh lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/install-cross.sh
2d1
< myDIR=$(dirname $(readlink -f ${0}))
4c3,4
< install_packages() {
---
> install_packages()
> {
6,17c6
< 	TEMPFILE=$(mktemp)
< 	
< 	for spec in $(find ${myDIR} -name "${1}*.spec")
< 	do
< 		echo "Parsing ${spec}"
< 		grep -i "^Requires:" "${spec}" | grep -v "%" | cut -d: -f2- | tr -d '[:blank:]' | cut -d'>' -f1 >> ${TEMPFILE}
< 		grep -i "^BuildRequires:" "${spec}" | grep -v "%" | cut -d: -f2- | tr -d '[:blank:]'  | cut -d'>' -f1 >> ${TEMPFILE}
< 	done
< 	
< 	cat ${TEMPFILE} \
< 		| sort --unique \
< 		| xargs sudo zypper --non-interactive --verbose in
---
> TEMPFILE=$(mktemp)
19c8,53
< 	rm -f ${TEMPFILE}
---
> cat > ${TEMPFILE} << EOF
> libopenssl
> libopenssl-devel
> libintl-devel
> libepoxy0
> libgdk_pixbuf-2_0-0
> atk-devel
> pango-devel
> win_iconv-devel
> pixman-devel
> glib2-devel
> cairo-devel
> freetype-devel
> winpthreads-devel
> gtk3-devel
> cross-gcc-c++
> cross-pkg-config
> cross-cpp
> cross-binutils
> cross-nsis
> filesystem
> gettext-tools
> gtk3-data
> gtk3-tools
> headers
> gnome-icon-theme
> hicolor-icon-theme
> gdk-pixbuf-loader-rsvg
> gdk-pixbuf-query-loaders
> EOF
> 
> # Instala apicativos e temas necessários
> sudo zypper --non-interactive in \
> 	adwaita-icon-theme \
> 	gettext-tools \
> 	glib2-devel \
> 	optipng \
> 	rsvg-view \
> 	ImageMagick
> 
> while read FILE
> do
> 	sudo zypper --non-interactive in ${1}-${FILE}
> done < ${TEMPFILE}
> 
> rm -f ${TEMPFILE}
24,32c58,59
< 	echo "${0} [options]"
< 	echo ""
< 	echo "Options:"
< 	echo ""
< 
< 	echo "  --ar	Install required OBS repositories for zypper"
< 	echo "  --32	Install cross compiler for 32 bits windows using zypper"
< 	echo "  --64	Install cross compiler for 64 bits windows using zypper"
< 	echo "  --all	Install cross compiler for 32 and 64 bits windows using zypper"
---
> 	echo "Use ${0} --32 for 32 bits cross-compiler"
> 	echo "Use ${0} --64 for 64 bits cross-compiler"
46,50c73,75
< 		AR)
< 			echo "Adding required repositories"
< 			sudo zypper ar obs://windows:mingw:win32 windows_mingw_win32
< 			sudo zypper ar obs://windows:mingw:win64 windows_mingw_win64
< 			sudo zypper ar obs://home:PerryWerneck:pw3270 home_PerryWerneck_pw3270
---
> 		ar)
> 			zypper ar --refresh http://download.opensuse.org/repositories/windows:/mingw:/win32/openSUSE_42.3/ mingw32
> 			zypper ar --refresh http://download.opensuse.org/repositories/windows:/mingw:/win64/openSUSE_42.3/ mingw64
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/makeruntime.sh.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/makeruntime.sh.in
28,34d27
< #
< # Referencias:
< #
< # https://www.gtk.org/docs/installations/windows/
< # http://drup.org/gtk-warning-error-loading-icon-couldnt-recognize-image-file-format
< #
< 
46c39
< GDK_LOADERS=$(${PKG_CONFIG} --variable=gdk_pixbuf_binarydir gdk-pixbuf-2.0 | sed -e "s@${prefix}@@g")
---
> # GDK_LOADERS=$(${PKG_CONFIG} --variable=gdk_pixbuf_binarydir gdk-pixbuf-2.0 | sed -e "s@${prefix}@@g")
48,50c41,43
< TARGET="@BUILDDIR@/.bin/runtime"
< BINDIR="@BUILDDIR@/.bin/Release/"
< SCHEMADIR="@BUILDDIR@/schemas/"
---
> TARGET="@BASEDIR@/.bin/runtime"
> BINDIR="@BASEDIR@/.bin/Release/"
> SCHEMADIR="@BASEDIR@/schemas/"
209,217c202,210
< copy_loaders() {
< 
< 	mkdir -p "${TARGET}/${GDK_LOADERS}"
< 	cp -rv "${prefix}/${GDK_LOADERS}/loaders" "${TARGET}/${GDK_LOADERS}"
< 	if [ "$?" != "0" ]; then
< 		exit -1
< 	fi
< 
< }
---
> #copy_loaders() {
> #
> #	mkdir -p "${TARGET}/${GDK_LOADERS}"
> #	cp -rv "${prefix}/${GDK_LOADERS}/loaders" "${TARGET}/${GDK_LOADERS}"
> #	if [ "$?" != "0" ]; then
> #		exit -1
> #	fi
> #
> #}
248d240
< 		--targetdir="${TARGET}/share/glib-2.0/schemas" \
266a259,267
> #	echo "[Settings]" >> ${TARGET}/etc/gtk-3.0/settings.ini
> #	echo "gtk-theme-name = win32" >> ${TARGET}/etc/gtk-3.0/settings.ini
> 
> #	echo "gtk-theme-name = MS-Windows" >> ${TARGET}/etc/gtk-3.0/settings.ini
> #	echo "gtk-icon-theme-name = ${1}" >> ${TARGET}/etc/gtk-3.0/settings.ini
> #	echo "gtk-fallback-icon-theme = ${1}" >> ${TARGET}/etc/gtk-3.0/settings.ini
> #	echo "gtk-font-name = Sans 10" >> ${TARGET}/etc/gtk-3.0/settings.ini
> #	echo "gtk-button-images = 1" >> ${TARGET}/etc/gtk-3.0/settings.ini
> 
285,289c286,290
< #	cp -rv /usr/share/themes/${1} ${TARGET}/share/themes
< #	if [ "$?" != 0 ]; then
< #		echo "Can´t copy ${1} theme"
< #		exit -1
< #	fi
---
> 	cp -rv /usr/share/themes/${1} ${TARGET}/share/themes
> 	if [ "$?" != 0 ]; then
> 		echo "Can´t copy ${1} theme"
> 		exit -1
> 	fi
342c343
< copy_loaders
---
> # copy_loaders
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/pack.sh lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/pack.sh
33c33
< PACKAGE_EXTRAS="libhllapi pw3270-keypads"
---
> PACKAGE_EXTRAS="libhllapi"
39c39
< BUILD_BRANCH="master"
---
> BUILD_UNSTABLE=0
85a86
> 	echo -e "\e]2;Cloning ${1}\a"
89,92c90,94
< 	TEMPVAR=$(echo ${1}_branch | sed -e "s@-@@g")
< 	BRANCH=${!TEMPVAR}		
< 	if [ -z ${BRANCH} ]; then
< 		BRANCH=${BUILD_BRANCH}
---
> 	if [ "${BUILD_UNSTABLE}" == "1" ]; then
> 		BRANCH="develop"
> 	else
> 		TEMPVAR=${1}_branch
> 		BRANCH=${!TEMPVAR}
95d96
< 	echo -e "\e]2;Cloning ${1} ${BRANCH}\a"
131,133c132
< 				echo "Parsing ${spec}"
< 				grep -i "^Requires:" "${spec}" | grep -v "%" | cut -d: -f2- | tr -d '[:blank:]' >> ${WORKDIR}/sources/pre-reqs
< 				grep -i "^BuildRequires:" "${spec}" | grep -v "%" | cut -d: -f2- | tr -d '[:blank:]' >> ${WORKDIR}/sources/pre-reqs
---
> 				grep -i buildrequires "${spec}" | grep -v "%" | cut -d: -f2- | tr -d '[:blank:]' >> ${WORKDIR}/sources/pre-reqs
139c138
< 	
---
> 
156d154
< 			| cut -d'>' -f1 \
159c157
< 			| xargs sudo zypper --non-interactive --verbose in
---
> 			| xargs sudo zypper --non-interactive --quiet in
173c171
< 				failed "autogen.sh has failed"
---
> 				failed "Erro em autogen.sh"
234d231
< 			CACHE_FILE=${cache} \
243d239
< 				--cache-file=${cache} \
429,434d424
< 		if [ "${BUILD_BRANCH}" == "develop" ]; then
< 			APP_OPTIONS="--enable-unstable"
< 		else
< 			APP_OPTIONS=""
< 		fi
< 
456,457c446
< 				--datarootdir=${WORKDIR}/build/${ARCH}/share \
< 				${APP_OPTIONS}
---
> 				--datarootdir=${WORKDIR}/build/${ARCH}/share
460a450
> 
465,482d454
< 		if [ ! -e "branding/${PRODUCT_NAME}.svg" ]; then
< 		
< 			if [ -e "${PROJECTDIR}/${PRODUCT_NAME}.svg" ]; then
< 				echo "Getting icon from ${PROJECTDIR}/${PRODUCT_NAME}.svg"
< 				ln -s "$(readlink -f "${PROJECTDIR}/${PRODUCT_NAME}.svg")" "branding/${PRODUCT_NAME}.svg"
< 
< 			elif [ -e "${PROJECTDIR}/branding/${PRODUCT_NAME}.svg" ]; then
< 				echo "Getting icon from ${PROJECTDIR}/branding/${PRODUCT_NAME}.svg"
< 				ln -s "$(readlink -f "${PROJECTDIR}/branding/${PRODUCT_NAME}.svg")" "branding/${PRODUCT_NAME}.svg"
< 	
< 			else
< 				echo "Using default icon"
< 				ln -s "pw3270.svg" "branding/${PRODUCT_NAME}.svg"
< 			
< 			fi
< 		
< 		fi
< 		
510,513c482
< 		
< 		#
< 		# Make runtime
< 		#
---
> 
524c493,494
< 				failed "Can't convert ${PRODUCT_NAME}.svg to icon"
---
> 				cleanup
> 				exit -1
529c499,500
< 				failed "Can't convert ${1}.svg to icon"
---
> 				cleanup
> 				exit -1
564,565c535,537
< 		mkdir -p "${WORKDIR}/build/${ARCH}/runtime"
< 		
---
> 		rm -fr ${WORKDIR}/build/${ARCH}/runtime
> 		mkdir -p ${WORKDIR}/build/${ARCH}/runtime
> 
571,573c543
< 			${SCRIPT} \
< 				--output-dir="${WORKDIR}/build/${ARCH}/runtime" \
< 				--bindir="${WORKDIR}/build/${ARCH}"
---
> 			${SCRIPT} --output-dir="${WORKDIR}/build/${ARCH}/runtime" --bindir="${WORKDIR}/build/${ARCH}"
578c548
< 		
---
> 
580c550
< 	
---
> 
592,593c562
< 	case ${BUILD_BRANCH} in
< 	develop)
---
> 	if [ ${BUILD_UNSTABLE} == "1" ]; then
596,598c565
< 		;;
< 		
< 	master)
---
> 	else
601,607c568
< 		;;
< 		
< 	*)
< 		TARGET_PATH="/${PRODUCT_NAME}/${BUILD_BRANCH}/${ARCH}"
< 		FILENAME=${PROJECTDIR}/dist/${BUILD_BRANCH}/${ARCH}/$(basename ${1})
< 		
< 	esac
---
> 	fi
619c580,589
< 	if [ ! -z "${XDG_PUBLICSHARE_DIR}" ] && [ -d "${XDG_PUBLICSHARE_DIR}/win/${PRODUCT_NAME}" ]; then
---
> 	if [ -d ~/public_html/win/${PRODUCT_NAME} ]; then
> 
> 		mkdir -p "~/public_html/win/${TARGET_PATH}"
> 		if [ "$?" != "0" ]; then
> 			failed "Can't create ~/public_html/win/${TARGET_PATH}"
> 		fi
> 
> 		if [ "${CLEAR_TARGET_PATH}" == "1" ]; then
> 			rm -fr ~/public_html/win/${TARGET_PATH}/*
> 		fi
621c591,596
< 		mkdir -p "${XDG_PUBLICSHARE_DIR}/win/${TARGET_PATH}"	
---
> 		ln -f -v "${FILENAME}" ~/public_html/win/${TARGET_PATH}
> 	fi
> 
> 	if [ ! -z "${XDG_PUBLICSHARE_DIR}" ] && [ -d "${XDG_PUBLICSHARE_DIR}/${PRODUCT_NAME}" ]; then
> 
> 		mkdir -p "${XDG_PUBLICSHARE_DIR}/${TARGET_PATH}"	
623c598
< 			failed "Can't create ${XDG_PUBLICSHARE_DIR}/win/${TARGET_PATH}"
---
> 			failed "Can't create ${XDG_PUBLICSHARE_DIR}/${TARGET_PATH}"
627c602
< 			rm -fr ${XDG_PUBLICSHARE_DIR}/win/${TARGET_PATH}/*
---
> 			rm -fr ${XDG_PUBLICSHARE_DIR}/${TARGET_PATH}/*
630c605
< 		ln -f -v "${FILENAME}" ${XDG_PUBLICSHARE_DIR}/win/${TARGET_PATH}
---
> 		ln -f -v "${FILENAME}" ${XDG_PUBLICSHARE_DIR}/${TARGET_PATH}
815a791,805
> 
> #			if [ ${BUILD_UNSTABLE} == "1" ]; then
> #				CLEAR_TARGET="${PRODUCT_NAME}/unstable"
> #			else
> #				CLEAR_TARGET="${PRODUCT_NAME}/stable"
> #			fi
> #
> #			if [ -d ~/public_html/win/${STORAGE_PATH} ]; then
> #				echo rm -fr ~/public_html/win/${CLEAR_TARGET}/{x86_32,x86_64}
> #			fi
> #
> #			if [ ! -z "${XDG_PUBLICSHARE_DIR}" ] && [ -d "${XDG_PUBLICSHARE_DIR}/${CLEAR_TARGET}" ]; then
> #				echo rm -fr ${XDG_PUBLICSHARE_DIR}/${CLEAR_TARGET}/{x86_32,x86_64}
> #			fi
> 
839c829
< 			BUILD_BRANCH="develop"
---
> 			BUILD_UNSTABLE=1
843,847c833
< 			BUILD_BRANCH="develop"
< 			;;
< 
< 		BRANCH)
< 			BUILD_BRANCH=${value}
---
> 			BUILD_UNSTABLE=1
870,872d855
< 			echo "  --unstable		Build unstable version (--branch=develop)"
< 			echo "  --branch		Build selected branch (current=${BUILD_BRANCH}"
< 
875d857
< 	
878,880d859
< 
< 			echo "  --extra-packages	Set extra packages (current are ${PACKAGE_EXTRAS})"
< 
881a861
> 			echo "  --unstable		Build unstable version"
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/pw3270.nsi.in lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/pw3270.nsi.in
1d0
< # SPDX-License-Identifier: LGPL-3.0-or-later
3c2,4
< #  Copyright (C) 2021 Perry Werneck <perry.werneck@gmail.com>
---
> # "Software pw3270, desenvolvido com base nos códigos fontes do WC3270  e X3270
> # (Paul Mattes Paul.Mattes@usa.net), de emulação de terminal 3270 para acesso a
> # aplicativos mainframe. Registro no INPI sob o nome G3270.
5,8c6
< #  This program is free software: you can redistribute it and/or modify
< #  it under the terms of the GNU Lesser General Public License as published
< #  by the Free Software Foundation, either version 3 of the License, or
< #  (at your option) any later version.
---
> # Copyright (C) <2008> <Banco do Brasil S.A.>
10,13c8,10
< #  This program is distributed in the hope that it will be useful,
< #  but WITHOUT ANY WARRANTY; without even the implied warranty of
< #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
< #  GNU General Public License for more details.
---
> # Este programa é software livre. Você pode redistribuí-lo e/ou modificá-lo sob
> # os termos da GPL v.2 - Licença Pública Geral  GNU,  conforme  publicado  pela
> # Free Software Foundation.
15,16c12,24
< #  You should have received a copy of the GNU Lesser General Public License
< #  along with this program.  If not, see <https://www.gnu.org/licenses/>.
---
> # Este programa é distribuído na expectativa de  ser  útil,  mas  SEM  QUALQUER
> # GARANTIA; sem mesmo a garantia implícita de COMERCIALIZAÇÃO ou  de  ADEQUAÇÃO
> # A QUALQUER PROPÓSITO EM PARTICULAR. Consulte a Licença Pública Geral GNU para
> # obter mais detalhes.
> #
> # Você deve ter recebido uma cópia da Licença Pública Geral GNU junto com este
> # programa;  se  não, escreva para a Free Software Foundation, Inc., 59 Temple
> # Place, Suite 330, Boston, MA, 02111-1307, USA
> #
> # Contatos:
> #
> # perry.werneck@gmail.com	(Alexandre Perry de Souza Werneck)
> # erico.mendonca@gmail.com	(Erico Mascarenhas de Mendonça)
98,99c106,107
< 		file "/oname=$INSTDIR\lib@LIBRARY_NAME@.dll"		"bin\lib@LIBRARY_NAME@.dll"
< 		file "/oname=$INSTDIR\libv3270.dll"					"bin\libv3270.dll"
---
> 		file "/oname=$INSTDIR\lib@LIBRARY_NAME@.dll"			"bin\lib@LIBRARY_NAME@.dll"
> 		file "/oname=$INSTDIR\libv3270.dll"				"bin\libv3270.dll"
103,121d110
< 		# icons & logos
< 		CreateDirectory "$INSTDIR\icons"
< 		file "/oname=$INSTDIR\icons\gtk-connect-symbolic.svg"			"share\@PRODUCT_NAME@\icons\gtk-connect-symbolic.svg"
< 		file "/oname=$INSTDIR\icons\gtk-disconnect-symbolic.svg"		"share\@PRODUCT_NAME@\icons\gtk-disconnect-symbolic.svg"
< 		file "/oname=$INSTDIR\icons\connect-symbolic.svg"				"share\@PRODUCT_NAME@\icons\connect-symbolic.svg"
< 		file "/oname=$INSTDIR\icons\disconnect-symbolic.svg"			"share\@PRODUCT_NAME@\icons\disconnect-symbolic.svg"
< 		file "/oname=$INSTDIR\icons\@PRODUCT_NAME@.svg"					"share\@PRODUCT_NAME@\@PRODUCT_NAME@.svg"
< 
< 		file "/oname=$INSTDIR\@PRODUCT_NAME@-logo.svg"					"share\@PRODUCT_NAME@\@PRODUCT_NAME@-logo.svg"
< 		file "/oname=$INSTDIR\@PRODUCT_NAME@.svg"						"share\@PRODUCT_NAME@\@PRODUCT_NAME@.svg"
< 		file "/oname=$INSTDIR\@PRODUCT_NAME@.png"						"share\@PRODUCT_NAME@\@PRODUCT_NAME@.png"
< 
< 		# Schema
< 		CreateDirectory "$INSTDIR\schemas"
< 		file "/oname=$INSTDIR\schemas\@PRODUCT_NAME@-application.gschema.xml"	"share\glib-2.0\schemas\@PRODUCT_NAME@-application.gschema.xml"
< 		file "/oname=$INSTDIR\schemas\@PRODUCT_NAME@-window.gschema.xml"		"share\glib-2.0\schemas\@PRODUCT_NAME@-window.gschema.xml"
< 
< 		file "/oname=$INSTDIR\gschemas.compiled"								"runtime/share/glib-2.0/schemas/gschemas.compiled"
< 
123c112,114
< 		file "/oname=$INSTDIR\colors.conf"								"share\@PRODUCT_NAME@\colors.conf"
---
> 		file "/oname=$INSTDIR\@PRODUCT_NAME@-logo.png"			"share\@PRODUCT_NAME@\@PRODUCT_NAME@-logo.png"
> 		file "/oname=$INSTDIR\@PRODUCT_NAME@.png"			"share\@PRODUCT_NAME@\@PRODUCT_NAME@.png"
> 		file "/oname=$INSTDIR\colors.conf"				"share\@PRODUCT_NAME@\colors.conf"
126,127c117,118
< 		file "/oname=$INSTDIR\AUTHORS"									"AUTHORS"
< 		file "/oname=$INSTDIR\LICENSE"									"LICENSE"
---
> 		file "/oname=$INSTDIR\AUTHORS"					"AUTHORS"
> 		file "/oname=$INSTDIR\LICENSE"					"LICENSE"
136c127,128
< 		file "/oname=$INSTDIR\@PRODUCT_NAME@.ui.xml" 	"share\@PRODUCT_NAME@\@PRODUCT_NAME@.ui.xml"
---
> 		file "/oname=$INSTDIR\ui\application.xml" 	"share\@PRODUCT_NAME@\ui\application.xml"
> 		file "/oname=$INSTDIR\ui\window.xml" 		"share\@PRODUCT_NAME@\ui\window.xml"
144,146c136,143
< 		file "/oname=$INSTDIR\locale\pt_BR\LC_MESSAGES\@PACKAGE_NAME@.mo"														"share\locale\pt_BR\LC_MESSAGES\@PACKAGE_NAME@.mo"
< 		file "/oname=$INSTDIR\locale\pt_BR\LC_MESSAGES\lib@LIBRARY_NAME@-@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@.mo"	"share\locale\pt_BR\LC_MESSAGES\lib@LIBRARY_NAME@-@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@.mo"
< 		file "/oname=$INSTDIR\locale\pt_BR\LC_MESSAGES\libv3270-@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@.mo"				"share\locale\pt_BR\LC_MESSAGES\libv3270-@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@.mo"
---
> 		file "/oname=$INSTDIR\locale\pt_BR\LC_MESSAGES\@PACKAGE_NAME@.mo"	"share\locale\pt_BR\LC_MESSAGES\@PACKAGE_NAME@.mo"
> 		file "/oname=$INSTDIR\locale\pt_BR\LC_MESSAGES\lib@LIBRARY_NAME@.mo"	"share\locale\pt_BR\LC_MESSAGES\lib@LIBRARY_NAME@.mo"
> 		file "/oname=$INSTDIR\locale\pt_BR\LC_MESSAGES\libv3270.mo"		"share\locale\pt_BR\LC_MESSAGES\libv3270.mo"
> 
> 		# Customized icons
> 		CreateDirectory "$INSTDIR\icons"
> 		file "/oname=$INSTDIR\icons\gtk-connect-symbolic.svg"			"share\@PRODUCT_NAME@\icons\gtk-connect-symbolic.svg"
> 		file "/oname=$INSTDIR\icons\gtk-disconnect-symbolic.svg"		"share\@PRODUCT_NAME@\icons\gtk-disconnect-symbolic.svg"
178c175
< 		WriteRegStr 	HKLM	"Software\@PRODUCT_NAME@"				"InstallLocation"	"$INSTDIR"
---
> 		WriteRegStr 	HKLM	"Software\@PRODUCT_NAME@"			"InstallLocation"	"$INSTDIR"
181c178
< 		WriteRegDWORD	HKLM	"Software\@PRODUCT_NAME@\toggles"		"autoconnect"			0x00000001
---
> 		WriteRegDWORD	HKLM	"Software\@PRODUCT_NAME@\toggles"		"autoconnect"		0x00000001
209,210c206,207
< 		WriteRegStr 	HKLM	"Software\@PRODUCT_NAME@"				"font-family"			"Lucida Console"
< 		WriteRegStr		HKLM	"Software\@PRODUCT_NAME@"				"colors"				"rgb(24,24,24);rgb(79,156,254);rgb(237,74,70);rgb(235,110,183);rgb(131,199,70);rgb(86,216,201);rgb(239,197,65);rgb(222,222,222);rgb(59,59,59);rgb(54,142,171);rgb(250,145,83);rgb(165,128,226);rgb(112,180,51);rgb(65,199,185);rgb(219,179,45);rgb(119,119,119);rgb(131,199,70);rgb(237,74,70);rgb(65,199,185);rgb(250,145,83);rgb(37,37,37);rgb(222,222,222);rgb(222,222,222);rgb(24,24,24);rgb(222,222,222);rgb(79,156,254);rgb(131,199,70);rgb(239,197,65);rgb(239,197,65)"
---
> 		WriteRegStr 	HKLM	"Software\@PRODUCT_NAME@"			"font-family"		"Lucida Console"
> 		WriteRegStr	HKLM	"Software\@PRODUCT_NAME@"			"colors"		"rgb(24,24,24);rgb(79,156,254);rgb(237,74,70);rgb(235,110,183);rgb(131,199,70);rgb(86,216,201);rgb(239,197,65);rgb(222,222,222);rgb(59,59,59);rgb(54,142,171);rgb(250,145,83);rgb(165,128,226);rgb(112,180,51);rgb(65,199,185);rgb(219,179,45);rgb(119,119,119);rgb(131,199,70);rgb(237,74,70);rgb(65,199,185);rgb(250,145,83);rgb(37,37,37);rgb(222,222,222);rgb(222,222,222);rgb(24,24,24);rgb(222,222,222);rgb(79,156,254);rgb(131,199,70);rgb(239,197,65);rgb(239,197,65)"
233c230
< 			file "/oname=$INSTDIR\locale\pt_BR\LC_MESSAGES\libipc3270-@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@.mo"	"share\locale\pt_BR\LC_MESSAGES\libipc3270-@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@.mo"
---
> 			file "/oname=$INSTDIR\locale\pt_BR\LC_MESSAGES\libipc3270.mo"	"share\locale\pt_BR\LC_MESSAGES\libipc3270.mo"
256,258d252
< 			CreateDirectory "$INSTDIR\locale\pt_BR\LC_MESSAGES"
< 			file "/oname=$INSTDIR\locale\pt_BR\LC_MESSAGES\libhllapi-@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@.mo"	"share\locale\pt_BR\LC_MESSAGES\libhllapi-@PACKAGE_MAJOR_VERSION@.@PACKAGE_MINOR_VERSION@.mo"
< 
352a347
> 
390,396d384
< 	#---[ Check if already installed ]--------------------------------------------------------------------
< 
< 	${If} ${FileExists} "$INSTDIR\@PRODUCT_NAME@.exe"
< 		MessageBox MB_OK|MB_ICONEXCLAMATION "@PRODUCT_NAME@ is already installed. Please uninstall it first" /SD IDOK
< 		Abort
< 	${EndIf}
< 
527d514
< Function .onInstSuccess
529,532d515
< 	# Update GTK Image loaders
< 	
< 
< FunctionEnd
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/x86_32/mingw32-pw3270.spec lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/x86_32/mingw32-pw3270.spec
42,46d41
< Requires:		mingw32-gtk3
< Requires:		mingw32-lib3270 = %{version}
< Requires:		mingw32-hicolor-icon-theme
< Requires:		mingw32(libpixbufloader-svg.dll)
< 
57c52
< BuildRequires:	inkscape
---
> BuildRequires:	rsvg-view
diff -r source-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/x86_64/mingw64-pw3270.spec lookaside-pw3270-5.4.tar.gz-extracted/pw3270-5.4/win/x86_64/mingw64-pw3270.spec
44,45d43
< Requires:		mingw64-hicolor-icon-theme
< Requires:		mingw64(libpixbufloader-svg.dll)
52c50
< BuildRequires:	inkscape
---
> BuildRequires:	rsvg-view
Only in source-pw3270-5.4.tar.gz-extracted/pw3270-5.4: wine-run.sh
