Source package : Saaghar
File name       : Saaghar-3.0.0.tar.gz
Lookaside URL   : https://src.fedoraproject.org/repo/pkgs/Saaghar/Saaghar-3.0.0.tar.gz/sha512/e4920f286bae9305c470d48e54b06049ec5a8cbaf70385a22328ba9363086679b40a6c745600392bceedf33464d8e15b247de02f260af44062eb1dfcc5b585b3/Saaghar-3.0.0.tar.gz
Source URL      : https://github.com/srazi/Saaghar/releases/download/v3.0.0/Saaghar-3.0.0.tar.gz

source file type: /tmp/fedora-lookaside-verification--620412-UnEb0Nzwp0B1/source-Saaghar-3.0.0.tar.gz: gzip compressed data, was "Saaghar-3.0.0.tar", last modified: Thu Dec 22 12:42:51 2016, from Unix, original size modulo 2^32 6852608
lookaside file type: /tmp/fedora-lookaside-verification--620412-UnEb0Nzwp0B1/lookaside-Saaghar-3.0.0.tar.gz: gzip compressed data, last modified: Sat Feb 18 21:19:05 2017, from Unix, original size modulo 2^32 6809600


diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/AUTHORS lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/AUTHORS
1c1
< S. Razi Alavizadeh <s.r.alavizadeh@gmail.com>, <http://pozh.org>
---
> S. Razi Alavizadeh <s.r.alavizadeh@gmail.com>, <http://pozh.org>
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/CHANGELOG lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/CHANGELOG
1,287c1,287
< == 2.5.0-->3.0.0 ==
< - Not released
< New Features:
< --------------------------
< Add multi-threaded search.
< Add task notification.
< New search option dialog with new selection-manager and ability to select categories as search range.
< Add ability to download audio and synced lyrics from internet.
< Add ability to import multiple categories and poems at once.
< Add a modern vista like BreadCrumb navigation bar with quick-access menu and new selection-manager.
< Open local database using drag-n-drop.
< dev-only: Add some dev. tools. You have to compile using DEV_TOOLS define.
< 
< Improved Features:
< --------------------------
< A new design for "About Saaghar" dialog.
< Add Qt5 support to QMusicPlayer using phonon4qt5 and also QtMultiMedia.
< Use a 100x faster SQL query that excludes JOIN for search individual poets.
< Use vertical title-bar for bottom and top search docks.
< Check for update use another thread than GUI thread.
< Animated scroll to item.
< Add context menu to close all search result dock-windows.
< Limit number of opened search widgets to 200.
< Don't toggle search-toolbar on Ctrl+F.
< Set application layout direction even if qt_*.qm is not loaded. (also it is a workaround for Qt5 not setting layout direction)
< Improved size computation of tabbar, and bigger active tab.
< Add small margin to start of paragraphs.
< Remove poem's number empty space for text books.
< Fallback to default theme if icon is not provided by current theme.
< Use Latin  numerals for non-Persian poems.
< Use MVC for outline.
< 
< Fixed Bugs:
< --------------------------
< Fix critical issue on skipping poems of categories with one sub-category.
< Correctly load database if it is not.
< Improved computation of paragraph height, and fix a rare loop in resize event.
< Fix print and print preview.
< A workaround to correctly sync text and audio for mono-audio synced by Ganjoor Desktop.
< Windows XP: Fixed black background.
< Fixed libpng warning: iCCP: known incorrect sRGB profile.
< Don't use Kashida for IranNastaliq
< Add OneSecondBugFix to sync xml data. (element after Ganjoor Desktop 2.78)
< Fixed detecting layout direction of viewer.
< 
< 
< == 1.0.94-->2.5.0 ==
< New Features:
< --------------------------
< Added an outline widget with filtering feature.
< Added two new icon sets (dark-glass (default) and iconic)
< The search result contains all occurrences from each poem, and the occurrences from each poem are highlighted by same color.
< Ability to search within titles!
< The font and color of each text item (e.g. Titles, Sections, Poem,...) are customizable!
< Ability to set an audio file to each poem also it supports Audio Albums. Morever, Saaghr automatically loads the Ganjoor XML lyric file for loaded audio file if it exists.
< Added simple lyric syncer. (ganjoor xml format)
< Ability to fetch data-sets list from local and remote servers and installing datasets (also Saaghar can install photo if it's available)
< Now search engine search any variant of similar characters. Morever, it can search He-Ye as Kasre-ye Ezafe! e.g: for searching "koshte-ye eshgh" we can search "koshte eshgh"! (it's complex and slow!)
< Added support for LTR contents.
< Ability to select interface language.
< Added an option for changing view style of poems.
< {Windows Vista+] Added support of Aero blur effect of Windows 7.
< 
< Improved Features:
< --------------------------
< New highlighter algorithm correctly and accurately highlights RTL text.
< Added a new splash-screen with a new look-n-feel.
< New source structure.
< Improved TabBar.
< Added "Apply" button to Settings dialog.
< The search result widgets can track viewed items, and highlight current item.
< The search result widgets show count of all results and filtered results.
< Added a dialog for advanced search options
< The text of paragraphs is selectable.
< Now 'SaagharWidget' has a contextmenu and it also supports a better copy.
< Now Saaghar can launch without database.
< The history saves and restores vertical position of a page.
< Unnecessary function call to 'navigateToPage()' was removed from NavigateToPage's constructor.
< The way of calling random methods was improved.
< The view menu was reordered
< All icons are customizable.
< The Persian translation was updated to more standard and native Persian.
< In settings dialog the 'empty.png' is used for action without an icon.
< The display text of categories and titles are simplified and cleaned!
< The 'folder' tags of bookmark file use 'id' attribute for tracking their type. (internal)
< On application startup, opening last opened tabs don't push to the stack!
< For paragraph an elided version of its text is sent to bookmark manager!
< The height computation of paragraphs was improved.
< Disabling bookmarksManager completely when bookmark file has I/O errors.
< The 'convertToHtml()' uses non-breakable space in an improved way.
< Added a fancy scrollbar for description's container.
< Now, while pressing pageup and pagedown and arrow keys the viewport is scrolled to item.
< Clicking on searchTable's item doesn't refresh page if it's the same poem.
< There are some improvments in loading poems.
< Used Qt::ElideMiddle for treeWidgets.
< Support compiling with Qt5 (but it's not supported)
< Better check for new version, the other servers were added for fetching update information.
< Handling setting's changes that need to relaunch.
< Added tab's tooltip.
< Enabled text justification in paragraphs.
< 
< Fixed Bugs:
< --------------------------
< The computation of menubar width was corrected!
< Import database was improved, if one of new poet has no subcats (a null poet) it will not insert to database!
< Don't apply background image, when it doesn't exist.
< Fix height computation for home and sections and titles.
< Fixed infinite loop on new home tab.
< Don't show splash if "checkForUpdates()" was called from menu, also don't show it when starting freshly.
< The bug about undo/redo action's text was fixed.
< The bug of bookmark manager about using a new interface language was fixed.
< Some bugs about computation of row's height and scrolling to current item were fixed.
< The 'convertToHtml()' and 'convertToTeX()' recognize text paragraphs.
< Some bugs about justification by spaces and bookmark section and 'scrollToFirstItemContains()' were fixed!
< Fixed long undo/redo action name.
< Fixed showing the caption of dataset that is installed badly.
< Fixed focus on search toolbar.
< [Mac] The width of number's cells was corrected.
< 
< == 0.9.69-->1.0.94 ==
< New Features:
< --------------------------
< The advanced search has ability to searching Rhymes and Radifs. (Rhyme-meter and Radif-meter).
< Ability to bookmark/unbookmark verses.
< Ability to filter bookmarks by its title and comment.
< Ability to import bookmarks from database.(Desktop Ganjoor's Bookmarks)
< Now, Saaghar has Undo/Redo support.
< For better performance and perfect highlighting support, the paragraph containers and the poet's description container changed from 'QTableWidgetItem' to 'QTextEdit'.
< Added 'ParagraphHighlighter' class for highlighting paragraphs and poet's description.
< Ability to disabling 'Splash-Screen'.
< 
< Improved Features:
< --------------------------
< Removing border of search-page's navigator button.
< The '.pro' file was improved for supporting custom PREFIX on linux OSes.
< Added 'placeholderText' for 'SearchResultWidget::filterLineEdit'.
< The 'scrollToFirstItemContains()' was improved, for jumping to the right beyt.
< Added two convenient global variable: SaagharWidget::currentLocationList, SaagharWidget::currentPoemTitle.
< Now, scrollToFirstItemContains() returns matched item.
< Now, 'SaagharWidget::identifier()' returns 'QStringList' as replace of 'QString'.
< Now, 'parentCatClicked()' and 'showHome()' and 'nextPoem()' and 'previousPoem()' use 'processClickedItem()'.
< The 'updateTabsSubMenus()' changed as a SLOT. and connected to 'captionChanged()' SIGNAL.
< The 'namedActionTriggered(bool checked)' changed to 'namedActionTriggered(bool checked = false)'
< On Windows and Mac default database path changed, but old path are supported.
< Now, a new tab and a refreshed tab know about highlight phrase, and are highlighted.
< Declaring of 'lineEditSearchText' moved to 'SaagharWidget' as a static variable.
< Initializing of 'isPortable' and calling 'loadGlobalSettings()' moved to the first of constructor and 'restoreGeometry()' and 'restoreState()' moved to the end of constructor.
< 
< Fixed Bugs:
< --------------------------
< The FSF address for GPL license was updated.
< Removed user specific steps from '.pro' file.
< The height computation bug was fixed, using column's width in replace of viewport's width.
< The 'cleanString()' deletes spaces if it's needed.
< The 'scrollToFirstItemContains()' was fixed when using non-list mode, just apply cleanString() to 'keyword'!
< Now search filter skips charachters with 'QChar::DirNSM' unicode direction, by using 'cleanString()' function.
< For new paragraph widget copy and select problems were fixed.
< A bug fixed in 'scrollToFirstItemContains()', 'cleanString()' moved to its correct position.
< The computation of width of 'numItem' was corrected.
< When deleting last empty row, if row has a widget it should not be deleted.
< 
< == 0.8.21-->0.9.69 ==
< New Features:
< --------------------------
< New: An advanced search method was implemented.
< New: The menubar is movable!(Windows and Linuxes without Unity Desktop)
< New: Added preview of fonts.
< New: Paged search results!
< New: Every image formats supported by Qt can be selected as background photo!
< New: Added ability to filtering search results(it's  realtime!).
< New: The search field widget has a better look and feel! It has an embeded progressbar!
< New: The current search result's page number and search result's pages count were added to 'SearchResultWidget'!
< New: User can search more than one poet for search range.
< New: The behavior of Random & Faal buttons are customizable.
< New: There is an option for disabling poet's photo in home page.
< New: Now, for better look, mouse click doesn't select the row.
< New: Auto Vertical layout for 'searchToolBar'!
< New: The ability to hide/show every toolbars.
< New: The ability to change button style and icon size of 'mainToolBar'.
< New: The ability to lock toolbars!
< New: Added list of opened and recently closed tabs!
< New: Added an shortcut menu to the corner of tab widget!
< New: The highlighter supports a list of words for highlighting!
< New: The 'qStringMacHelper()' was added, and it acts on database stuffs.
< New: Added a transparent splash-screen!
< New: Added the new command-line option '-fresh' for starting a fresh instance, for example, it's needed when 'new window' action is clicked.
< New: Added 'Ganjoor Verification' action.
< New: Added some backgrounds and 'splash' image.
< 
< Improved Features:
< --------------------------
< Improved: The view of parent buttons are improved.
< Improved: Pages are auto-refreshed when needed.
< Improved: Now, the highlighter highlights whole of a word that contains TATWEEL!
< Improved: Better search for words that contain ZWNJ!
< Improved: Added text justification for MacOSX by using SPACE in replace of TATWEEL, forcely!
< Improved: The 'QWidget::setUpdatesEnabled()' added in some places with big visual effects!
< Improved: The display of search result was improved, the results are snipped.
< Improved: The category names are snipped, now.
< Improved: The way that settings dialog works, was changed!(internal)
< Improved: There is a better and normalized "Tab's Caption" and complete and long "Window's Title"
< Improved: The search result widget is improved and moved to the new 'SearchResultWidget' class.
< Improved: New method for writing and reading settings.(internal)
< Improved: All icons are customizable.
< Improved: Now, QGanjoorDbBrowser::cleanString() works better, 'skipNonAlphabet' flag was removed!
< Improved: A simpler method for action connection.(internal)
< Improved: Calling 'SaagharWidget::resizeTable()' on resizing of 'QTableWidget::viewport()'! By this fix resizing of search results pages are handeled!
< Improved: Replacing ZWNJ by RLM+ZWNJ+RLM for Qt bug about ZWNJ on MacOSX!
< Improved: Now, the highlighter highlights by rounded rectangles!
< Improved: The 'computeRowHeight()' improved by an empirical value! numOfRows = (5/4)*numOfRows
< Improved: Unnecessary database queries from 'resizeTable()' were removed.
< Improved: A temporary and tricky way for some problems with database!!(i.e.: defined second Mesra when there is no a defined first Mesra)
< improved: The 'new search method' was removed and merged to the 'advanced search algorithm'.
< Improved: A new icon for better look when background is dark.
< 
< Fixed Bugs:
< --------------------------
< Fixed: There was a query bug when selecting a poet while searching! 'text' changed to 'verse.text'!
< Fixed: The 'Qt::WA_OpaquePaintEvent' attribute creates a bug on linux. The margin of 'QScrollBar' was not repainted correctly.
< Fixed: The bug about calculation of row's height for description and poem's title was fixed.
< Fixed: The 'select-mask.png' was corrected.
< Fixed: Clearing height's memory at start of 'showPoem()'! fixing the bug about computing second row's height.
< Fixed: 'SaagharWidget::scrollToFirstItemContains' was fixed for advanced search method.
< Fixed: Tabs opened from search-page were not connected to 'searchDelegate'.
< Fixed: The bug about highlighting search results on Linux with default style was fixed! replaced 'QStyledItemDelegate' by 'QItemDelegate'!
< Fixed: The highlighter supports highlighting items with icon.(e.g.: home's item)
< Fixed: The original(not cleaned) version of verses are shown on search results page!
< Fixed: Fixed a bug about searching selected poets.
< Fixed: Some fixes about translation part.
< Fixed: The old action 'labelMaxResultAction' was removed.
< Fixed: Some small bugs were fixed.
< 
< == 0.8.13-->0.8.21 ==
< New Features:
< New: The Mesras are 'Justified', now,
< New: The Full Screen View was added,
< New: The ability to check for updates, was added.
< 
< Improved Features:
< Improved: The Poet's description is shown just in his/her first page,
< Improved: The computation of height of poet's description, was improved in several ways.
< 
< Fixed Bugs:
< Fixed: The bug that cause application hangs when searching for some phrases was fixed,
< Fixed: The bug created because of 'taking address of temporary' was fixed,
< Fixed: The height of poet's description was not computed in SaagharWidget::resizeTable(), it was fixed now,
< Fixed: The description of poets with one category was skipped, now it's displayed,
< Fixed: qmake .pro file was corrected, wildcards in '.pro' is not supported on MAC OS X,
< Fixed: The geometry of screen is saved,
< Fixed: A few bugs were fixed.
< 
< == 0.7.2-->0.8.13 ==
< New Features:
< Added a new powerfull search method, (not completed, it's a demo)
< The 'Main ToolBar' is fully customizable.
< Mouse cursor changes on clickable items, and item is highlighted.
< Saaghar supports importing of new sets of poem.
< Saaghar interface is translated to Persian.
< Added 'Random' button.
< Added ability to select a new Database path.
< If database is not opened, there is a choice for select a new path.
< Added 'Remove Poet' action for removing a poet and all his/her books from database.
< The Ctrl+W shortcut closes current Tab.
< Adding support for minGW compiler on Windows.
< Added the ability of loading fonts on application startup from a special 'fonts' folder.
< 
< Improved Features:
< Row height of 'Paragraph' and 'Single' items are adjusted on resizing.
< After application start, the computation of table's width is correct.
< Match highlighter when searching  is completely real-time.
< Random algorithm was improved.
< Changing 'Search dockWidget' to a 'toolBar'.
< Added poet's name to search Tab's title.
< Because of unknown licenses some icons have changed and also the colors of some icons are modified.
< Show a default photo for poets without photo.
< Saaghar has a better TeX output.
< 'Description' added to GanjoorPoet object.
< Warning when importing to a database that isn't writable.
< 
< Fixed Bugs:
< The spacer column doesn't span now. (some versions of Qt can't render item-view properly when spans cross each other)
< Fixed MainWindow::getSaagharWidget(int)'s bug that occurs when deleting current Tab.
< Some shortcuts are corrected.
< Fixed some little bug.
< 
< == Version 0.7.2 ==
<  * Initial version. 21 DEC 2010
---
> == 2.5.0-->3.0.0 ==
> - Not released
> New Features:
> --------------------------
> Add multi-threaded search.
> Add task notification.
> New search option dialog with new selection-manager and ability to select categories as search range.
> Add ability to download audio and synced lyrics from internet.
> Add ability to import multiple categories and poems at once.
> Add a modern vista like BreadCrumb navigation bar with quick-access menu and new selection-manager.
> Open local database using drag-n-drop.
> dev-only: Add some dev. tools. You have to compile using DEV_TOOLS define.
> 
> Improved Features:
> --------------------------
> A new design for "About Saaghar" dialog.
> Add Qt5 support to QMusicPlayer using phonon4qt5 and also QtMultiMedia.
> Use a 100x faster SQL query that excludes JOIN for search individual poets.
> Use vertical title-bar for bottom and top search docks.
> Check for update use another thread than GUI thread.
> Animated scroll to item.
> Add context menu to close all search result dock-windows.
> Limit number of opened search widgets to 200.
> Don't toggle search-toolbar on Ctrl+F.
> Set application layout direction even if qt_*.qm is not loaded. (also it is a workaround for Qt5 not setting layout direction)
> Improved size computation of tabbar, and bigger active tab.
> Add small margin to start of paragraphs.
> Remove poem's number empty space for text books.
> Fallback to default theme if icon is not provided by current theme.
> Use Latin  numerals for non-Persian poems.
> Use MVC for outline.
> 
> Fixed Bugs:
> --------------------------
> Fix critical issue on skipping poems of categories with one sub-category.
> Correctly load database if it is not.
> Improved computation of paragraph height, and fix a rare loop in resize event.
> Fix print and print preview.
> A workaround to correctly sync text and audio for mono-audio synced by Ganjoor Desktop.
> Windows XP: Fixed black background.
> Fixed libpng warning: iCCP: known incorrect sRGB profile.
> Don't use Kashida for IranNastaliq
> Add OneSecondBugFix to sync xml data. (element after Ganjoor Desktop 2.78)
> Fixed detecting layout direction of viewer.
> 
> 
> == 1.0.94-->2.5.0 ==
> New Features:
> --------------------------
> Added an outline widget with filtering feature.
> Added two new icon sets (dark-glass (default) and iconic)
> The search result contains all occurrences from each poem, and the occurrences from each poem are highlighted by same color.
> Ability to search within titles!
> The font and color of each text item (e.g. Titles, Sections, Poem,...) are customizable!
> Ability to set an audio file to each poem also it supports Audio Albums. Morever, Saaghr automatically loads the Ganjoor XML lyric file for loaded audio file if it exists.
> Added simple lyric syncer. (ganjoor xml format)
> Ability to fetch data-sets list from local and remote servers and installing datasets (also Saaghar can install photo if it's available)
> Now search engine search any variant of similar characters. Morever, it can search He-Ye as Kasre-ye Ezafe! e.g: for searching "koshte-ye eshgh" we can search "koshte eshgh"! (it's complex and slow!)
> Added support for LTR contents.
> Ability to select interface language.
> Added an option for changing view style of poems.
> {Windows Vista+] Added support of Aero blur effect of Windows 7.
> 
> Improved Features:
> --------------------------
> New highlighter algorithm correctly and accurately highlights RTL text.
> Added a new splash-screen with a new look-n-feel.
> New source structure.
> Improved TabBar.
> Added "Apply" button to Settings dialog.
> The search result widgets can track viewed items, and highlight current item.
> The search result widgets show count of all results and filtered results.
> Added a dialog for advanced search options
> The text of paragraphs is selectable.
> Now 'SaagharWidget' has a contextmenu and it also supports a better copy.
> Now Saaghar can launch without database.
> The history saves and restores vertical position of a page.
> Unnecessary function call to 'navigateToPage()' was removed from NavigateToPage's constructor.
> The way of calling random methods was improved.
> The view menu was reordered
> All icons are customizable.
> The Persian translation was updated to more standard and native Persian.
> In settings dialog the 'empty.png' is used for action without an icon.
> The display text of categories and titles are simplified and cleaned!
> The 'folder' tags of bookmark file use 'id' attribute for tracking their type. (internal)
> On application startup, opening last opened tabs don't push to the stack!
> For paragraph an elided version of its text is sent to bookmark manager!
> The height computation of paragraphs was improved.
> Disabling bookmarksManager completely when bookmark file has I/O errors.
> The 'convertToHtml()' uses non-breakable space in an improved way.
> Added a fancy scrollbar for description's container.
> Now, while pressing pageup and pagedown and arrow keys the viewport is scrolled to item.
> Clicking on searchTable's item doesn't refresh page if it's the same poem.
> There are some improvments in loading poems.
> Used Qt::ElideMiddle for treeWidgets.
> Support compiling with Qt5 (but it's not supported)
> Better check for new version, the other servers were added for fetching update information.
> Handling setting's changes that need to relaunch.
> Added tab's tooltip.
> Enabled text justification in paragraphs.
> 
> Fixed Bugs:
> --------------------------
> The computation of menubar width was corrected!
> Import database was improved, if one of new poet has no subcats (a null poet) it will not insert to database!
> Don't apply background image, when it doesn't exist.
> Fix height computation for home and sections and titles.
> Fixed infinite loop on new home tab.
> Don't show splash if "checkForUpdates()" was called from menu, also don't show it when starting freshly.
> The bug about undo/redo action's text was fixed.
> The bug of bookmark manager about using a new interface language was fixed.
> Some bugs about computation of row's height and scrolling to current item were fixed.
> The 'convertToHtml()' and 'convertToTeX()' recognize text paragraphs.
> Some bugs about justification by spaces and bookmark section and 'scrollToFirstItemContains()' were fixed!
> Fixed long undo/redo action name.
> Fixed showing the caption of dataset that is installed badly.
> Fixed focus on search toolbar.
> [Mac] The width of number's cells was corrected.
> 
> == 0.9.69-->1.0.94 ==
> New Features:
> --------------------------
> The advanced search has ability to searching Rhymes and Radifs. (Rhyme-meter and Radif-meter).
> Ability to bookmark/unbookmark verses.
> Ability to filter bookmarks by its title and comment.
> Ability to import bookmarks from database.(Desktop Ganjoor's Bookmarks)
> Now, Saaghar has Undo/Redo support.
> For better performance and perfect highlighting support, the paragraph containers and the poet's description container changed from 'QTableWidgetItem' to 'QTextEdit'.
> Added 'ParagraphHighlighter' class for highlighting paragraphs and poet's description.
> Ability to disabling 'Splash-Screen'.
> 
> Improved Features:
> --------------------------
> Removing border of search-page's navigator button.
> The '.pro' file was improved for supporting custom PREFIX on linux OSes.
> Added 'placeholderText' for 'SearchResultWidget::filterLineEdit'.
> The 'scrollToFirstItemContains()' was improved, for jumping to the right beyt.
> Added two convenient global variable: SaagharWidget::currentLocationList, SaagharWidget::currentPoemTitle.
> Now, scrollToFirstItemContains() returns matched item.
> Now, 'SaagharWidget::identifier()' returns 'QStringList' as replace of 'QString'.
> Now, 'parentCatClicked()' and 'showHome()' and 'nextPoem()' and 'previousPoem()' use 'processClickedItem()'.
> The 'updateTabsSubMenus()' changed as a SLOT. and connected to 'captionChanged()' SIGNAL.
> The 'namedActionTriggered(bool checked)' changed to 'namedActionTriggered(bool checked = false)'
> On Windows and Mac default database path changed, but old path are supported.
> Now, a new tab and a refreshed tab know about highlight phrase, and are highlighted.
> Declaring of 'lineEditSearchText' moved to 'SaagharWidget' as a static variable.
> Initializing of 'isPortable' and calling 'loadGlobalSettings()' moved to the first of constructor and 'restoreGeometry()' and 'restoreState()' moved to the end of constructor.
> 
> Fixed Bugs:
> --------------------------
> The FSF address for GPL license was updated.
> Removed user specific steps from '.pro' file.
> The height computation bug was fixed, using column's width in replace of viewport's width.
> The 'cleanString()' deletes spaces if it's needed.
> The 'scrollToFirstItemContains()' was fixed when using non-list mode, just apply cleanString() to 'keyword'!
> Now search filter skips charachters with 'QChar::DirNSM' unicode direction, by using 'cleanString()' function.
> For new paragraph widget copy and select problems were fixed.
> A bug fixed in 'scrollToFirstItemContains()', 'cleanString()' moved to its correct position.
> The computation of width of 'numItem' was corrected.
> When deleting last empty row, if row has a widget it should not be deleted.
> 
> == 0.8.21-->0.9.69 ==
> New Features:
> --------------------------
> New: An advanced search method was implemented.
> New: The menubar is movable!(Windows and Linuxes without Unity Desktop)
> New: Added preview of fonts.
> New: Paged search results!
> New: Every image formats supported by Qt can be selected as background photo!
> New: Added ability to filtering search results(it's  realtime!).
> New: The search field widget has a better look and feel! It has an embeded progressbar!
> New: The current search result's page number and search result's pages count were added to 'SearchResultWidget'!
> New: User can search more than one poet for search range.
> New: The behavior of Random & Faal buttons are customizable.
> New: There is an option for disabling poet's photo in home page.
> New: Now, for better look, mouse click doesn't select the row.
> New: Auto Vertical layout for 'searchToolBar'!
> New: The ability to hide/show every toolbars.
> New: The ability to change button style and icon size of 'mainToolBar'.
> New: The ability to lock toolbars!
> New: Added list of opened and recently closed tabs!
> New: Added an shortcut menu to the corner of tab widget!
> New: The highlighter supports a list of words for highlighting!
> New: The 'qStringMacHelper()' was added, and it acts on database stuffs.
> New: Added a transparent splash-screen!
> New: Added the new command-line option '-fresh' for starting a fresh instance, for example, it's needed when 'new window' action is clicked.
> New: Added 'Ganjoor Verification' action.
> New: Added some backgrounds and 'splash' image.
> 
> Improved Features:
> --------------------------
> Improved: The view of parent buttons are improved.
> Improved: Pages are auto-refreshed when needed.
> Improved: Now, the highlighter highlights whole of a word that contains TATWEEL!
> Improved: Better search for words that contain ZWNJ!
> Improved: Added text justification for MacOSX by using SPACE in replace of TATWEEL, forcely!
> Improved: The 'QWidget::setUpdatesEnabled()' added in some places with big visual effects!
> Improved: The display of search result was improved, the results are snipped.
> Improved: The category names are snipped, now.
> Improved: The way that settings dialog works, was changed!(internal)
> Improved: There is a better and normalized "Tab's Caption" and complete and long "Window's Title"
> Improved: The search result widget is improved and moved to the new 'SearchResultWidget' class.
> Improved: New method for writing and reading settings.(internal)
> Improved: All icons are customizable.
> Improved: Now, QGanjoorDbBrowser::cleanString() works better, 'skipNonAlphabet' flag was removed!
> Improved: A simpler method for action connection.(internal)
> Improved: Calling 'SaagharWidget::resizeTable()' on resizing of 'QTableWidget::viewport()'! By this fix resizing of search results pages are handeled!
> Improved: Replacing ZWNJ by RLM+ZWNJ+RLM for Qt bug about ZWNJ on MacOSX!
> Improved: Now, the highlighter highlights by rounded rectangles!
> Improved: The 'computeRowHeight()' improved by an empirical value! numOfRows = (5/4)*numOfRows
> Improved: Unnecessary database queries from 'resizeTable()' were removed.
> Improved: A temporary and tricky way for some problems with database!!(i.e.: defined second Mesra when there is no a defined first Mesra)
> improved: The 'new search method' was removed and merged to the 'advanced search algorithm'.
> Improved: A new icon for better look when background is dark.
> 
> Fixed Bugs:
> --------------------------
> Fixed: There was a query bug when selecting a poet while searching! 'text' changed to 'verse.text'!
> Fixed: The 'Qt::WA_OpaquePaintEvent' attribute creates a bug on linux. The margin of 'QScrollBar' was not repainted correctly.
> Fixed: The bug about calculation of row's height for description and poem's title was fixed.
> Fixed: The 'select-mask.png' was corrected.
> Fixed: Clearing height's memory at start of 'showPoem()'! fixing the bug about computing second row's height.
> Fixed: 'SaagharWidget::scrollToFirstItemContains' was fixed for advanced search method.
> Fixed: Tabs opened from search-page were not connected to 'searchDelegate'.
> Fixed: The bug about highlighting search results on Linux with default style was fixed! replaced 'QStyledItemDelegate' by 'QItemDelegate'!
> Fixed: The highlighter supports highlighting items with icon.(e.g.: home's item)
> Fixed: The original(not cleaned) version of verses are shown on search results page!
> Fixed: Fixed a bug about searching selected poets.
> Fixed: Some fixes about translation part.
> Fixed: The old action 'labelMaxResultAction' was removed.
> Fixed: Some small bugs were fixed.
> 
> == 0.8.13-->0.8.21 ==
> New Features:
> New: The Mesras are 'Justified', now,
> New: The Full Screen View was added,
> New: The ability to check for updates, was added.
> 
> Improved Features:
> Improved: The Poet's description is shown just in his/her first page,
> Improved: The computation of height of poet's description, was improved in several ways.
> 
> Fixed Bugs:
> Fixed: The bug that cause application hangs when searching for some phrases was fixed,
> Fixed: The bug created because of 'taking address of temporary' was fixed,
> Fixed: The height of poet's description was not computed in SaagharWidget::resizeTable(), it was fixed now,
> Fixed: The description of poets with one category was skipped, now it's displayed,
> Fixed: qmake .pro file was corrected, wildcards in '.pro' is not supported on MAC OS X,
> Fixed: The geometry of screen is saved,
> Fixed: A few bugs were fixed.
> 
> == 0.7.2-->0.8.13 ==
> New Features:
> Added a new powerfull search method, (not completed, it's a demo)
> The 'Main ToolBar' is fully customizable.
> Mouse cursor changes on clickable items, and item is highlighted.
> Saaghar supports importing of new sets of poem.
> Saaghar interface is translated to Persian.
> Added 'Random' button.
> Added ability to select a new Database path.
> If database is not opened, there is a choice for select a new path.
> Added 'Remove Poet' action for removing a poet and all his/her books from database.
> The Ctrl+W shortcut closes current Tab.
> Adding support for minGW compiler on Windows.
> Added the ability of loading fonts on application startup from a special 'fonts' folder.
> 
> Improved Features:
> Row height of 'Paragraph' and 'Single' items are adjusted on resizing.
> After application start, the computation of table's width is correct.
> Match highlighter when searching  is completely real-time.
> Random algorithm was improved.
> Changing 'Search dockWidget' to a 'toolBar'.
> Added poet's name to search Tab's title.
> Because of unknown licenses some icons have changed and also the colors of some icons are modified.
> Show a default photo for poets without photo.
> Saaghar has a better TeX output.
> 'Description' added to GanjoorPoet object.
> Warning when importing to a database that isn't writable.
> 
> Fixed Bugs:
> The spacer column doesn't span now. (some versions of Qt can't render item-view properly when spans cross each other)
> Fixed MainWindow::getSaagharWidget(int)'s bug that occurs when deleting current Tab.
> Some shortcuts are corrected.
> Fixed some little bug.
> 
> == Version 0.7.2 ==
>  * Initial version. 21 DEC 2010
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/data.pri lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/data.pri
1,210c1,210
< #DEPENDPATH += . build
< #INCLUDEPATH += .
< 
< RESOURCES += $$PWD/saaghar.qrc
< 
< win32 {
<     RC_FILE = $$PWD/win.rc
<     utilities.files += $$PWD/saaghar.ico
< }
< 
< mac {
<     ICON = $$PWD/saaghar.icns
<     QMAKE_INFO_PLIST = $$PWD/Info.plist
< }
< 
< unix:!macx {
<     desktop.files += $$PWD/Saaghar.desktop
<     icon.files = $$PWD/images/saaghar.png
< }
< 
< backgrounds.path = $${RESOURCES_PATH}/themes/backgrounds
< backgrounds.files = \
<     $$PWD/backgrounds/bgpatterns_1.png \
<     $$PWD/backgrounds/bgpatterns_2.png \
<     $$PWD/backgrounds/bgpatterns_3.png \
<     $$PWD/backgrounds/bgpatterns_4.png \
<     $$PWD/backgrounds/grav-rand_1.png \
<     $$PWD/backgrounds/grav-rand_2.png \
<     $$PWD/backgrounds/grav-rand_3.png \
<     $$PWD/backgrounds/grav-rand_4.png \
<     $$PWD/backgrounds/saaghar-pattern_1.png \
<     $$PWD/backgrounds/woodw-blue_1.png \
<     $$PWD/backgrounds/woodw-golden_1.png \
<     $$PWD/backgrounds/woodw-golden_2.png \
<     $$PWD/backgrounds/woodw-green_1.png \
<     $$PWD/backgrounds/woodw_3d_1.png
< 
< lightGrayIcons.path = $${RESOURCES_PATH}/themes/iconsets/light-gray
< lightGrayIcons.files = \
<     $$PWD/iconsets/light-gray/browse_net.png \
<     $$PWD/iconsets/light-gray/cancel.png \
<     $$PWD/iconsets/light-gray/check-updates.png \
<     $$PWD/iconsets/light-gray/clear-left.png \
<     $$PWD/iconsets/light-gray/clear-right.png \
<     $$PWD/iconsets/light-gray/close-tab.png \
<     $$PWD/iconsets/light-gray/copy.png \
<     $$PWD/iconsets/light-gray/down.png \
<     $$PWD/iconsets/light-gray/exit.png \
<     $$PWD/iconsets/light-gray/export.png \
<     $$PWD/iconsets/light-gray/export-pdf.png \
<     $$PWD/iconsets/light-gray/faal.png \
<     $$PWD/iconsets/light-gray/filter.png \
<     $$PWD/iconsets/light-gray/fullscreen.png \
<     $$PWD/iconsets/light-gray/home.png \
<     $$PWD/iconsets/light-gray/import-to-database.png \
<     $$PWD/iconsets/light-gray/left.png \
<     $$PWD/iconsets/light-gray/new_tab.png \
<     $$PWD/iconsets/light-gray/new_window.png \
<     $$PWD/iconsets/light-gray/next.png \
<     $$PWD/iconsets/light-gray/no-fullscreen.png \
<     $$PWD/iconsets/light-gray/ocr-verification.png \
<     $$PWD/iconsets/light-gray/previous.png \
<     $$PWD/iconsets/light-gray/print.png \
<     $$PWD/iconsets/light-gray/print-preview.png \
<     $$PWD/iconsets/light-gray/qt-logo.png \
<     $$PWD/iconsets/light-gray/random.png \
<     $$PWD/iconsets/light-gray/remove-poet.png \
<     $$PWD/iconsets/light-gray/right.png \
<     $$PWD/iconsets/light-gray/search.png \
<     $$PWD/iconsets/light-gray/search-options.png \
<     $$PWD/iconsets/light-gray/select-mask.png \
<     $$PWD/iconsets/light-gray/settings.png \
<     $$PWD/iconsets/light-gray/up.png \
<     $$PWD/iconsets/light-gray/root-node.png \
<     $$PWD/iconsets/light-gray/README
< 
< classicIcons.path = $${RESOURCES_PATH}/themes/iconsets/classic
< classicIcons.files = \
<     $$PWD/iconsets/classic/add-tab.png \
<     $$PWD/iconsets/classic/album.png \
<     $$PWD/iconsets/classic/arrow-down.png \
<     $$PWD/iconsets/classic/bookmark-folder.png \
<     $$PWD/iconsets/classic/bookmark-off.png \
<     $$PWD/iconsets/classic/bookmark-on.png \
<     $$PWD/iconsets/classic/bookmarks-import.png \
<     $$PWD/iconsets/classic/browse_net.png \
<     $$PWD/iconsets/classic/cancel.png \
<     $$PWD/iconsets/classic/check-updates.png \
<     $$PWD/iconsets/classic/clear-left.png \
<     $$PWD/iconsets/classic/clear-right.png \
<     $$PWD/iconsets/classic/close-tab.png \
<     $$PWD/iconsets/classic/copy.png \
<     $$PWD/iconsets/classic/down.png \
<     $$PWD/iconsets/classic/exit.png \
<     $$PWD/iconsets/classic/export-pdf.png \
<     $$PWD/iconsets/classic/export.png \
<     $$PWD/iconsets/classic/faal.png \
<     $$PWD/iconsets/classic/filter.png \
<     $$PWD/iconsets/classic/fullscreen.png \
<     $$PWD/iconsets/classic/home.png \
<     $$PWD/iconsets/classic/import-to-database.png \
<     $$PWD/iconsets/classic/left.png \
<     $$PWD/iconsets/classic/music-player.png \
<     $$PWD/iconsets/classic/new_tab.png \
<     $$PWD/iconsets/classic/new_window.png \
<     $$PWD/iconsets/classic/next.png \
<     $$PWD/iconsets/classic/no-fullscreen.png \
<     $$PWD/iconsets/classic/no-photo.png \
<     $$PWD/iconsets/classic/ocr-verification.png \
<     $$PWD/iconsets/classic/one-hemistich-line.png \
<     $$PWD/iconsets/classic/outline.png \
<     $$PWD/iconsets/classic/previous.png \
<     $$PWD/iconsets/classic/print-preview.png \
<     $$PWD/iconsets/classic/print.png \
<     $$PWD/iconsets/classic/qt-logo.png \
<     $$PWD/iconsets/classic/random.png \
<     $$PWD/iconsets/classic/redo.png \
<     $$PWD/iconsets/classic/refresh.png \
<     $$PWD/iconsets/classic/remove-poet.png \
<     $$PWD/iconsets/classic/right.png \
<     $$PWD/iconsets/classic/search-options.png \
<     $$PWD/iconsets/classic/search.png \
<     $$PWD/iconsets/classic/select-mask.png \
<     $$PWD/iconsets/classic/settings.png \
<     $$PWD/iconsets/classic/stepped-hemistich-line.png \
<     $$PWD/iconsets/classic/two-hemistich-line.png \
<     $$PWD/iconsets/classic/un-bookmark.png \
<     $$PWD/iconsets/classic/undo.png \
<     $$PWD/iconsets/classic/up.png \
<     $$PWD/iconsets/classic/container-node.png \
<     $$PWD/iconsets/classic/leaf-node.png \
<     $$PWD/iconsets/classic/root-node.png \
<     $$PWD/iconsets/classic/README
< 
< iconicCyanIcons.path = $${RESOURCES_PATH}/themes/iconsets/iconic-cyan
< iconicCyanIcons.files = \
<     $$PWD/iconsets/iconic-cyan/add-tab.png \
<     $$PWD/iconsets/iconic-cyan/album.png \
<     $$PWD/iconsets/iconic-cyan/arrow-down.png \
<     $$PWD/iconsets/iconic-cyan/bookmark-folder.png \
<     $$PWD/iconsets/iconic-cyan/bookmark-off.png \
<     $$PWD/iconsets/iconic-cyan/bookmark-off1.png \
<     $$PWD/iconsets/iconic-cyan/bookmark-on-0.png \
<     $$PWD/iconsets/iconic-cyan/bookmark-on.png \
<     $$PWD/iconsets/iconic-cyan/cancel.png \
<     $$PWD/iconsets/iconic-cyan/check-updates.png \
<     $$PWD/iconsets/iconic-cyan/clear-left.png \
<     $$PWD/iconsets/iconic-cyan/clear-right.png \
<     $$PWD/iconsets/iconic-cyan/close-tab.png \
<     $$PWD/iconsets/iconic-cyan/copy.png \
<     $$PWD/iconsets/iconic-cyan/down.png \
<     $$PWD/iconsets/iconic-cyan/download-sets-repositories.png \
<     $$PWD/iconsets/iconic-cyan/exit.png \
<     $$PWD/iconsets/iconic-cyan/export-pdf.png \
<     $$PWD/iconsets/iconic-cyan/faal.png \
<     $$PWD/iconsets/iconic-cyan/fullscreen.png \
<     $$PWD/iconsets/iconic-cyan/help-contents.png \
<     $$PWD/iconsets/iconic-cyan/home.png \
<     $$PWD/iconsets/iconic-cyan/left.png \
<     $$PWD/iconsets/iconic-cyan/lock-toolbars.png \
<     $$PWD/iconsets/iconic-cyan/music-player.png \
<     $$PWD/iconsets/iconic-cyan/new_tab.png \
<     $$PWD/iconsets/iconic-cyan/new_window.png \
<     $$PWD/iconsets/iconic-cyan/next.png \
<     $$PWD/iconsets/iconic-cyan/next1.png \
<     $$PWD/iconsets/iconic-cyan/no-fullscreen.png \
<     $$PWD/iconsets/iconic-cyan/no-photo.png \
<     $$PWD/iconsets/iconic-cyan/ocr-verification.png \
<     $$PWD/iconsets/iconic-cyan/one-hemistich-line.png \
<     $$PWD/iconsets/iconic-cyan/outline.png \
<     $$PWD/iconsets/iconic-cyan/previous.png \
<     $$PWD/iconsets/iconic-cyan/previous1.png \
<     $$PWD/iconsets/iconic-cyan/qt-logo.png \
<     $$PWD/iconsets/iconic-cyan/random.png \
<     $$PWD/iconsets/iconic-cyan/redo.png \
<     $$PWD/iconsets/iconic-cyan/refresh.png \
<     $$PWD/iconsets/iconic-cyan/right.png \
<     $$PWD/iconsets/iconic-cyan/search-options.png \
<     $$PWD/iconsets/iconic-cyan/search.png \
<     $$PWD/iconsets/iconic-cyan/select-mask.png \
<     $$PWD/iconsets/iconic-cyan/settings.png \
<     $$PWD/iconsets/iconic-cyan/stepped-hemistich-line.png \
<     $$PWD/iconsets/iconic-cyan/two-hemistich-line.png \
<     $$PWD/iconsets/iconic-cyan/undo.png \
<     $$PWD/iconsets/iconic-cyan/up.png \
<     $$PWD/iconsets/iconic-cyan/container-node.png \
<     $$PWD/iconsets/iconic-cyan/leaf-node.png \
<     $$PWD/iconsets/iconic-cyan/root-node.png \
<     $$PWD/iconsets/iconic-cyan/bookmarks-import.png \
<     $$PWD/iconsets/iconic-cyan/browse_net.png \
<     $$PWD/iconsets/iconic-cyan/download-audio-repositories.png \
<     $$PWD/iconsets/iconic-cyan/export.png \
<     $$PWD/iconsets/iconic-cyan/import-to-database.png \
<     $$PWD/iconsets/iconic-cyan/print-preview.png \
<     $$PWD/iconsets/iconic-cyan/print.png \
<     $$PWD/iconsets/iconic-cyan/remove-poet.png \
<     $$PWD/iconsets/iconic-cyan/un-bookmark.png \
<     $$PWD/iconsets/iconic-cyan/README
< 
< 
< exists( $$PWD/fonts/*.ttf ) {
<     fonts.path = $${RESOURCES_PATH}/fonts
<     fonts.files = $$files($$PWD/fonts/*)
< mac {
<     QMAKE_BUNDLE_DATA += fonts
< }
< else {
<     INSTALLS += fonts
< }
< }
---
> #DEPENDPATH += . build
> #INCLUDEPATH += .
> 
> RESOURCES += $$PWD/saaghar.qrc
> 
> win32 {
>     RC_FILE = $$PWD/win.rc
>     utilities.files += $$PWD/saaghar.ico
> }
> 
> mac {
>     ICON = $$PWD/saaghar.icns
>     QMAKE_INFO_PLIST = $$PWD/Info.plist
> }
> 
> unix:!macx {
>     desktop.files += $$PWD/Saaghar.desktop
>     icon.files = $$PWD/images/saaghar.png
> }
> 
> backgrounds.path = $${RESOURCES_PATH}/themes/backgrounds
> backgrounds.files = \
>     $$PWD/backgrounds/bgpatterns_1.png \
>     $$PWD/backgrounds/bgpatterns_2.png \
>     $$PWD/backgrounds/bgpatterns_3.png \
>     $$PWD/backgrounds/bgpatterns_4.png \
>     $$PWD/backgrounds/grav-rand_1.png \
>     $$PWD/backgrounds/grav-rand_2.png \
>     $$PWD/backgrounds/grav-rand_3.png \
>     $$PWD/backgrounds/grav-rand_4.png \
>     $$PWD/backgrounds/saaghar-pattern_1.png \
>     $$PWD/backgrounds/woodw-blue_1.png \
>     $$PWD/backgrounds/woodw-golden_1.png \
>     $$PWD/backgrounds/woodw-golden_2.png \
>     $$PWD/backgrounds/woodw-green_1.png \
>     $$PWD/backgrounds/woodw_3d_1.png
> 
> lightGrayIcons.path = $${RESOURCES_PATH}/themes/iconsets/light-gray
> lightGrayIcons.files = \
>     $$PWD/iconsets/light-gray/browse_net.png \
>     $$PWD/iconsets/light-gray/cancel.png \
>     $$PWD/iconsets/light-gray/check-updates.png \
>     $$PWD/iconsets/light-gray/clear-left.png \
>     $$PWD/iconsets/light-gray/clear-right.png \
>     $$PWD/iconsets/light-gray/close-tab.png \
>     $$PWD/iconsets/light-gray/copy.png \
>     $$PWD/iconsets/light-gray/down.png \
>     $$PWD/iconsets/light-gray/exit.png \
>     $$PWD/iconsets/light-gray/export.png \
>     $$PWD/iconsets/light-gray/export-pdf.png \
>     $$PWD/iconsets/light-gray/faal.png \
>     $$PWD/iconsets/light-gray/filter.png \
>     $$PWD/iconsets/light-gray/fullscreen.png \
>     $$PWD/iconsets/light-gray/home.png \
>     $$PWD/iconsets/light-gray/import-to-database.png \
>     $$PWD/iconsets/light-gray/left.png \
>     $$PWD/iconsets/light-gray/new_tab.png \
>     $$PWD/iconsets/light-gray/new_window.png \
>     $$PWD/iconsets/light-gray/next.png \
>     $$PWD/iconsets/light-gray/no-fullscreen.png \
>     $$PWD/iconsets/light-gray/ocr-verification.png \
>     $$PWD/iconsets/light-gray/previous.png \
>     $$PWD/iconsets/light-gray/print.png \
>     $$PWD/iconsets/light-gray/print-preview.png \
>     $$PWD/iconsets/light-gray/qt-logo.png \
>     $$PWD/iconsets/light-gray/random.png \
>     $$PWD/iconsets/light-gray/remove-poet.png \
>     $$PWD/iconsets/light-gray/right.png \
>     $$PWD/iconsets/light-gray/search.png \
>     $$PWD/iconsets/light-gray/search-options.png \
>     $$PWD/iconsets/light-gray/select-mask.png \
>     $$PWD/iconsets/light-gray/settings.png \
>     $$PWD/iconsets/light-gray/up.png \
>     $$PWD/iconsets/light-gray/root-node.png \
>     $$PWD/iconsets/light-gray/README
> 
> classicIcons.path = $${RESOURCES_PATH}/themes/iconsets/classic
> classicIcons.files = \
>     $$PWD/iconsets/classic/add-tab.png \
>     $$PWD/iconsets/classic/album.png \
>     $$PWD/iconsets/classic/arrow-down.png \
>     $$PWD/iconsets/classic/bookmark-folder.png \
>     $$PWD/iconsets/classic/bookmark-off.png \
>     $$PWD/iconsets/classic/bookmark-on.png \
>     $$PWD/iconsets/classic/bookmarks-import.png \
>     $$PWD/iconsets/classic/browse_net.png \
>     $$PWD/iconsets/classic/cancel.png \
>     $$PWD/iconsets/classic/check-updates.png \
>     $$PWD/iconsets/classic/clear-left.png \
>     $$PWD/iconsets/classic/clear-right.png \
>     $$PWD/iconsets/classic/close-tab.png \
>     $$PWD/iconsets/classic/copy.png \
>     $$PWD/iconsets/classic/down.png \
>     $$PWD/iconsets/classic/exit.png \
>     $$PWD/iconsets/classic/export-pdf.png \
>     $$PWD/iconsets/classic/export.png \
>     $$PWD/iconsets/classic/faal.png \
>     $$PWD/iconsets/classic/filter.png \
>     $$PWD/iconsets/classic/fullscreen.png \
>     $$PWD/iconsets/classic/home.png \
>     $$PWD/iconsets/classic/import-to-database.png \
>     $$PWD/iconsets/classic/left.png \
>     $$PWD/iconsets/classic/music-player.png \
>     $$PWD/iconsets/classic/new_tab.png \
>     $$PWD/iconsets/classic/new_window.png \
>     $$PWD/iconsets/classic/next.png \
>     $$PWD/iconsets/classic/no-fullscreen.png \
>     $$PWD/iconsets/classic/no-photo.png \
>     $$PWD/iconsets/classic/ocr-verification.png \
>     $$PWD/iconsets/classic/one-hemistich-line.png \
>     $$PWD/iconsets/classic/outline.png \
>     $$PWD/iconsets/classic/previous.png \
>     $$PWD/iconsets/classic/print-preview.png \
>     $$PWD/iconsets/classic/print.png \
>     $$PWD/iconsets/classic/qt-logo.png \
>     $$PWD/iconsets/classic/random.png \
>     $$PWD/iconsets/classic/redo.png \
>     $$PWD/iconsets/classic/refresh.png \
>     $$PWD/iconsets/classic/remove-poet.png \
>     $$PWD/iconsets/classic/right.png \
>     $$PWD/iconsets/classic/search-options.png \
>     $$PWD/iconsets/classic/search.png \
>     $$PWD/iconsets/classic/select-mask.png \
>     $$PWD/iconsets/classic/settings.png \
>     $$PWD/iconsets/classic/stepped-hemistich-line.png \
>     $$PWD/iconsets/classic/two-hemistich-line.png \
>     $$PWD/iconsets/classic/un-bookmark.png \
>     $$PWD/iconsets/classic/undo.png \
>     $$PWD/iconsets/classic/up.png \
>     $$PWD/iconsets/classic/container-node.png \
>     $$PWD/iconsets/classic/leaf-node.png \
>     $$PWD/iconsets/classic/root-node.png \
>     $$PWD/iconsets/classic/README
> 
> iconicCyanIcons.path = $${RESOURCES_PATH}/themes/iconsets/iconic-cyan
> iconicCyanIcons.files = \
>     $$PWD/iconsets/iconic-cyan/add-tab.png \
>     $$PWD/iconsets/iconic-cyan/album.png \
>     $$PWD/iconsets/iconic-cyan/arrow-down.png \
>     $$PWD/iconsets/iconic-cyan/bookmark-folder.png \
>     $$PWD/iconsets/iconic-cyan/bookmark-off.png \
>     $$PWD/iconsets/iconic-cyan/bookmark-off1.png \
>     $$PWD/iconsets/iconic-cyan/bookmark-on-0.png \
>     $$PWD/iconsets/iconic-cyan/bookmark-on.png \
>     $$PWD/iconsets/iconic-cyan/cancel.png \
>     $$PWD/iconsets/iconic-cyan/check-updates.png \
>     $$PWD/iconsets/iconic-cyan/clear-left.png \
>     $$PWD/iconsets/iconic-cyan/clear-right.png \
>     $$PWD/iconsets/iconic-cyan/close-tab.png \
>     $$PWD/iconsets/iconic-cyan/copy.png \
>     $$PWD/iconsets/iconic-cyan/down.png \
>     $$PWD/iconsets/iconic-cyan/download-sets-repositories.png \
>     $$PWD/iconsets/iconic-cyan/exit.png \
>     $$PWD/iconsets/iconic-cyan/export-pdf.png \
>     $$PWD/iconsets/iconic-cyan/faal.png \
>     $$PWD/iconsets/iconic-cyan/fullscreen.png \
>     $$PWD/iconsets/iconic-cyan/help-contents.png \
>     $$PWD/iconsets/iconic-cyan/home.png \
>     $$PWD/iconsets/iconic-cyan/left.png \
>     $$PWD/iconsets/iconic-cyan/lock-toolbars.png \
>     $$PWD/iconsets/iconic-cyan/music-player.png \
>     $$PWD/iconsets/iconic-cyan/new_tab.png \
>     $$PWD/iconsets/iconic-cyan/new_window.png \
>     $$PWD/iconsets/iconic-cyan/next.png \
>     $$PWD/iconsets/iconic-cyan/next1.png \
>     $$PWD/iconsets/iconic-cyan/no-fullscreen.png \
>     $$PWD/iconsets/iconic-cyan/no-photo.png \
>     $$PWD/iconsets/iconic-cyan/ocr-verification.png \
>     $$PWD/iconsets/iconic-cyan/one-hemistich-line.png \
>     $$PWD/iconsets/iconic-cyan/outline.png \
>     $$PWD/iconsets/iconic-cyan/previous.png \
>     $$PWD/iconsets/iconic-cyan/previous1.png \
>     $$PWD/iconsets/iconic-cyan/qt-logo.png \
>     $$PWD/iconsets/iconic-cyan/random.png \
>     $$PWD/iconsets/iconic-cyan/redo.png \
>     $$PWD/iconsets/iconic-cyan/refresh.png \
>     $$PWD/iconsets/iconic-cyan/right.png \
>     $$PWD/iconsets/iconic-cyan/search-options.png \
>     $$PWD/iconsets/iconic-cyan/search.png \
>     $$PWD/iconsets/iconic-cyan/select-mask.png \
>     $$PWD/iconsets/iconic-cyan/settings.png \
>     $$PWD/iconsets/iconic-cyan/stepped-hemistich-line.png \
>     $$PWD/iconsets/iconic-cyan/two-hemistich-line.png \
>     $$PWD/iconsets/iconic-cyan/undo.png \
>     $$PWD/iconsets/iconic-cyan/up.png \
>     $$PWD/iconsets/iconic-cyan/container-node.png \
>     $$PWD/iconsets/iconic-cyan/leaf-node.png \
>     $$PWD/iconsets/iconic-cyan/root-node.png \
>     $$PWD/iconsets/iconic-cyan/bookmarks-import.png \
>     $$PWD/iconsets/iconic-cyan/browse_net.png \
>     $$PWD/iconsets/iconic-cyan/download-audio-repositories.png \
>     $$PWD/iconsets/iconic-cyan/export.png \
>     $$PWD/iconsets/iconic-cyan/import-to-database.png \
>     $$PWD/iconsets/iconic-cyan/print-preview.png \
>     $$PWD/iconsets/iconic-cyan/print.png \
>     $$PWD/iconsets/iconic-cyan/remove-poet.png \
>     $$PWD/iconsets/iconic-cyan/un-bookmark.png \
>     $$PWD/iconsets/iconic-cyan/README
> 
> 
> exists( $$PWD/fonts/*.ttf ) {
>     fonts.path = $${RESOURCES_PATH}/fonts
>     fonts.files = $$files($$PWD/fonts/*)
> mac {
>     QMAKE_BUNDLE_DATA += fonts
> }
> else {
>     INSTALLS += fonts
> }
> }
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/fonts/Apache-license-v2.txt lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/fonts/Apache-license-v2.txt
1,200c1,200
< Apache License
<                            Version 2.0, January 2004
<                         http://www.apache.org/licenses/
< 
<    TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
< 
<    1. Definitions.
< 
<       "License" shall mean the terms and conditions for use, reproduction,
<       and distribution as defined by Sections 1 through 9 of this document.
< 
<       "Licensor" shall mean the copyright owner or entity authorized by
<       the copyright owner that is granting the License.
< 
<       "Legal Entity" shall mean the union of the acting entity and all
<       other entities that control, are controlled by, or are under common
<       control with that entity. For the purposes of this definition,
<       "control" means (i) the power, direct or indirect, to cause the
<       direction or management of such entity, whether by contract or
<       otherwise, or (ii) ownership of fifty percent (50%) or more of the
<       outstanding shares, or (iii) beneficial ownership of such entity.
< 
<       "You" (or "Your") shall mean an individual or Legal Entity
<       exercising permissions granted by this License.
< 
<       "Source" form shall mean the preferred form for making modifications,
<       including but not limited to software source code, documentation
<       source, and configuration files.
< 
<       "Object" form shall mean any form resulting from mechanical
<       transformation or translation of a Source form, including but
<       not limited to compiled object code, generated documentation,
<       and conversions to other media types.
< 
<       "Work" shall mean the work of authorship, whether in Source or
<       Object form, made available under the License, as indicated by a
<       copyright notice that is included in or attached to the work
<       (an example is provided in the Appendix below).
< 
<       "Derivative Works" shall mean any work, whether in Source or Object
<       form, that is based on (or derived from) the Work and for which the
<       editorial revisions, annotations, elaborations, or other modifications
<       represent, as a whole, an original work of authorship. For the purposes
<       of this License, Derivative Works shall not include works that remain
<       separable from, or merely link (or bind by name) to the interfaces of,
<       the Work and Derivative Works thereof.
< 
<       "Contribution" shall mean any work of authorship, including
<       the original version of the Work and any modifications or additions
<       to that Work or Derivative Works thereof, that is intentionally
<       submitted to Licensor for inclusion in the Work by the copyright owner
<       or by an individual or Legal Entity authorized to submit on behalf of
<       the copyright owner. For the purposes of this definition, "submitted"
<       means any form of electronic, verbal, or written communication sent
<       to the Licensor or its representatives, including but not limited to
<       communication on electronic mailing lists, source code control systems,
<       and issue tracking systems that are managed by, or on behalf of, the
<       Licensor for the purpose of discussing and improving the Work, but
<       excluding communication that is conspicuously marked or otherwise
<       designated in writing by the copyright owner as "Not a Contribution."
< 
<       "Contributor" shall mean Licensor and any individual or Legal Entity
<       on behalf of whom a Contribution has been received by Licensor and
<       subsequently incorporated within the Work.
< 
<    2. Grant of Copyright License. Subject to the terms and conditions of
<       this License, each Contributor hereby grants to You a perpetual,
<       worldwide, non-exclusive, no-charge, royalty-free, irrevocable
<       copyright license to reproduce, prepare Derivative Works of,
<       publicly display, publicly perform, sublicense, and distribute the
<       Work and such Derivative Works in Source or Object form.
< 
<    3. Grant of Patent License. Subject to the terms and conditions of
<       this License, each Contributor hereby grants to You a perpetual,
<       worldwide, non-exclusive, no-charge, royalty-free, irrevocable
<       (except as stated in this section) patent license to make, have made,
<       use, offer to sell, sell, import, and otherwise transfer the Work,
<       where such license applies only to those patent claims licensable
<       by such Contributor that are necessarily infringed by their
<       Contribution(s) alone or by combination of their Contribution(s)
<       with the Work to which such Contribution(s) was submitted. If You
<       institute patent litigation against any entity (including a
<       cross-claim or counterclaim in a lawsuit) alleging that the Work
<       or a Contribution incorporated within the Work constitutes direct
<       or contributory patent infringement, then any patent licenses
<       granted to You under this License for that Work shall terminate
<       as of the date such litigation is filed.
< 
<    4. Redistribution. You may reproduce and distribute copies of the
<       Work or Derivative Works thereof in any medium, with or without
<       modifications, and in Source or Object form, provided that You
<       meet the following conditions:
< 
<       (a) You must give any other recipients of the Work or
<           Derivative Works a copy of this License; and
< 
<       (b) You must cause any modified files to carry prominent notices
<           stating that You changed the files; and
< 
<       (c) You must retain, in the Source form of any Derivative Works
<           that You distribute, all copyright, patent, trademark, and
<           attribution notices from the Source form of the Work,
<           excluding those notices that do not pertain to any part of
<           the Derivative Works; and
< 
<       (d) If the Work includes a "NOTICE" text file as part of its
<           distribution, then any Derivative Works that You distribute must
<           include a readable copy of the attribution notices contained
<           within such NOTICE file, excluding those notices that do not
<           pertain to any part of the Derivative Works, in at least one
<           of the following places: within a NOTICE text file distributed
<           as part of the Derivative Works; within the Source form or
<           documentation, if provided along with the Derivative Works; or,
<           within a display generated by the Derivative Works, if and
<           wherever such third-party notices normally appear. The contents
<           of the NOTICE file are for informational purposes only and
<           do not modify the License. You may add Your own attribution
<           notices within Derivative Works that You distribute, alongside
<           or as an addendum to the NOTICE text from the Work, provided
<           that such additional attribution notices cannot be construed
<           as modifying the License.
< 
<       You may add Your own copyright statement to Your modifications and
<       may provide additional or different license terms and conditions
<       for use, reproduction, or distribution of Your modifications, or
<       for any such Derivative Works as a whole, provided Your use,
<       reproduction, and distribution of the Work otherwise complies with
<       the conditions stated in this License.
< 
<    5. Submission of Contributions. Unless You explicitly state otherwise,
<       any Contribution intentionally submitted for inclusion in the Work
<       by You to the Licensor shall be under the terms and conditions of
<       this License, without any additional terms or conditions.
<       Notwithstanding the above, nothing herein shall supersede or modify
<       the terms of any separate license agreement you may have executed
<       with Licensor regarding such Contributions.
< 
<    6. Trademarks. This License does not grant permission to use the trade
<       names, trademarks, service marks, or product names of the Licensor,
<       except as required for reasonable and customary use in describing the
<       origin of the Work and reproducing the content of the NOTICE file.
< 
<    7. Disclaimer of Warranty. Unless required by applicable law or
<       agreed to in writing, Licensor provides the Work (and each
<       Contributor provides its Contributions) on an "AS IS" BASIS,
<       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
<       implied, including, without limitation, any warranties or conditions
<       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
<       PARTICULAR PURPOSE. You are solely responsible for determining the
<       appropriateness of using or redistributing the Work and assume any
<       risks associated with Your exercise of permissions under this License.
< 
<    8. Limitation of Liability. In no event and under no legal theory,
<       whether in tort (including negligence), contract, or otherwise,
<       unless required by applicable law (such as deliberate and grossly
<       negligent acts) or agreed to in writing, shall any Contributor be
<       liable to You for damages, including any direct, indirect, special,
<       incidental, or consequential damages of any character arising as a
<       result of this License or out of the use or inability to use the
<       Work (including but not limited to damages for loss of goodwill,
<       work stoppage, computer failure or malfunction, or any and all
<       other commercial damages or losses), even if such Contributor
<       has been advised of the possibility of such damages.
< 
<    9. Accepting Warranty or Additional Liability. While redistributing
<       the Work or Derivative Works thereof, You may choose to offer,
<       and charge a fee for, acceptance of support, warranty, indemnity,
<       or other liability obligations and/or rights consistent with this
<       License. However, in accepting such obligations, You may act only
<       on Your own behalf and on Your sole responsibility, not on behalf
<       of any other Contributor, and only if You agree to indemnify,
<       defend, and hold each Contributor harmless for any liability
<       incurred by, or claims asserted against, such Contributor by reason
<       of your accepting any such warranty or additional liability.
< 
<    END OF TERMS AND CONDITIONS
< 
<    APPENDIX: How to apply the Apache License to your work.
< 
<       To apply the Apache License to your work, attach the following
<       boilerplate notice, with the fields enclosed by brackets "[]"
<       replaced with your own identifying information. (Don't include
<       the brackets!)  The text should be enclosed in the appropriate
<       comment syntax for the file format. We also recommend that a
<       file or class name and description of purpose be included on the
<       same "printed page" as the copyright notice for easier
<       identification within third-party archives.
< 
<    Copyright [yyyy] [name of copyright owner]
< 
<    Licensed under the Apache License, Version 2.0 (the "License");
<    you may not use this file except in compliance with the License.
<    You may obtain a copy of the License at
< 
<        http://www.apache.org/licenses/LICENSE-2.0
< 
<    Unless required by applicable law or agreed to in writing, software
<    distributed under the License is distributed on an "AS IS" BASIS,
<    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<    See the License for the specific language governing permissions and
---
> Apache License
>                            Version 2.0, January 2004
>                         http://www.apache.org/licenses/
> 
>    TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
> 
>    1. Definitions.
> 
>       "License" shall mean the terms and conditions for use, reproduction,
>       and distribution as defined by Sections 1 through 9 of this document.
> 
>       "Licensor" shall mean the copyright owner or entity authorized by
>       the copyright owner that is granting the License.
> 
>       "Legal Entity" shall mean the union of the acting entity and all
>       other entities that control, are controlled by, or are under common
>       control with that entity. For the purposes of this definition,
>       "control" means (i) the power, direct or indirect, to cause the
>       direction or management of such entity, whether by contract or
>       otherwise, or (ii) ownership of fifty percent (50%) or more of the
>       outstanding shares, or (iii) beneficial ownership of such entity.
> 
>       "You" (or "Your") shall mean an individual or Legal Entity
>       exercising permissions granted by this License.
> 
>       "Source" form shall mean the preferred form for making modifications,
>       including but not limited to software source code, documentation
>       source, and configuration files.
> 
>       "Object" form shall mean any form resulting from mechanical
>       transformation or translation of a Source form, including but
>       not limited to compiled object code, generated documentation,
>       and conversions to other media types.
> 
>       "Work" shall mean the work of authorship, whether in Source or
>       Object form, made available under the License, as indicated by a
>       copyright notice that is included in or attached to the work
>       (an example is provided in the Appendix below).
> 
>       "Derivative Works" shall mean any work, whether in Source or Object
>       form, that is based on (or derived from) the Work and for which the
>       editorial revisions, annotations, elaborations, or other modifications
>       represent, as a whole, an original work of authorship. For the purposes
>       of this License, Derivative Works shall not include works that remain
>       separable from, or merely link (or bind by name) to the interfaces of,
>       the Work and Derivative Works thereof.
> 
>       "Contribution" shall mean any work of authorship, including
>       the original version of the Work and any modifications or additions
>       to that Work or Derivative Works thereof, that is intentionally
>       submitted to Licensor for inclusion in the Work by the copyright owner
>       or by an individual or Legal Entity authorized to submit on behalf of
>       the copyright owner. For the purposes of this definition, "submitted"
>       means any form of electronic, verbal, or written communication sent
>       to the Licensor or its representatives, including but not limited to
>       communication on electronic mailing lists, source code control systems,
>       and issue tracking systems that are managed by, or on behalf of, the
>       Licensor for the purpose of discussing and improving the Work, but
>       excluding communication that is conspicuously marked or otherwise
>       designated in writing by the copyright owner as "Not a Contribution."
> 
>       "Contributor" shall mean Licensor and any individual or Legal Entity
>       on behalf of whom a Contribution has been received by Licensor and
>       subsequently incorporated within the Work.
> 
>    2. Grant of Copyright License. Subject to the terms and conditions of
>       this License, each Contributor hereby grants to You a perpetual,
>       worldwide, non-exclusive, no-charge, royalty-free, irrevocable
>       copyright license to reproduce, prepare Derivative Works of,
>       publicly display, publicly perform, sublicense, and distribute the
>       Work and such Derivative Works in Source or Object form.
> 
>    3. Grant of Patent License. Subject to the terms and conditions of
>       this License, each Contributor hereby grants to You a perpetual,
>       worldwide, non-exclusive, no-charge, royalty-free, irrevocable
>       (except as stated in this section) patent license to make, have made,
>       use, offer to sell, sell, import, and otherwise transfer the Work,
>       where such license applies only to those patent claims licensable
>       by such Contributor that are necessarily infringed by their
>       Contribution(s) alone or by combination of their Contribution(s)
>       with the Work to which such Contribution(s) was submitted. If You
>       institute patent litigation against any entity (including a
>       cross-claim or counterclaim in a lawsuit) alleging that the Work
>       or a Contribution incorporated within the Work constitutes direct
>       or contributory patent infringement, then any patent licenses
>       granted to You under this License for that Work shall terminate
>       as of the date such litigation is filed.
> 
>    4. Redistribution. You may reproduce and distribute copies of the
>       Work or Derivative Works thereof in any medium, with or without
>       modifications, and in Source or Object form, provided that You
>       meet the following conditions:
> 
>       (a) You must give any other recipients of the Work or
>           Derivative Works a copy of this License; and
> 
>       (b) You must cause any modified files to carry prominent notices
>           stating that You changed the files; and
> 
>       (c) You must retain, in the Source form of any Derivative Works
>           that You distribute, all copyright, patent, trademark, and
>           attribution notices from the Source form of the Work,
>           excluding those notices that do not pertain to any part of
>           the Derivative Works; and
> 
>       (d) If the Work includes a "NOTICE" text file as part of its
>           distribution, then any Derivative Works that You distribute must
>           include a readable copy of the attribution notices contained
>           within such NOTICE file, excluding those notices that do not
>           pertain to any part of the Derivative Works, in at least one
>           of the following places: within a NOTICE text file distributed
>           as part of the Derivative Works; within the Source form or
>           documentation, if provided along with the Derivative Works; or,
>           within a display generated by the Derivative Works, if and
>           wherever such third-party notices normally appear. The contents
>           of the NOTICE file are for informational purposes only and
>           do not modify the License. You may add Your own attribution
>           notices within Derivative Works that You distribute, alongside
>           or as an addendum to the NOTICE text from the Work, provided
>           that such additional attribution notices cannot be construed
>           as modifying the License.
> 
>       You may add Your own copyright statement to Your modifications and
>       may provide additional or different license terms and conditions
>       for use, reproduction, or distribution of Your modifications, or
>       for any such Derivative Works as a whole, provided Your use,
>       reproduction, and distribution of the Work otherwise complies with
>       the conditions stated in this License.
> 
>    5. Submission of Contributions. Unless You explicitly state otherwise,
>       any Contribution intentionally submitted for inclusion in the Work
>       by You to the Licensor shall be under the terms and conditions of
>       this License, without any additional terms or conditions.
>       Notwithstanding the above, nothing herein shall supersede or modify
>       the terms of any separate license agreement you may have executed
>       with Licensor regarding such Contributions.
> 
>    6. Trademarks. This License does not grant permission to use the trade
>       names, trademarks, service marks, or product names of the Licensor,
>       except as required for reasonable and customary use in describing the
>       origin of the Work and reproducing the content of the NOTICE file.
> 
>    7. Disclaimer of Warranty. Unless required by applicable law or
>       agreed to in writing, Licensor provides the Work (and each
>       Contributor provides its Contributions) on an "AS IS" BASIS,
>       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
>       implied, including, without limitation, any warranties or conditions
>       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
>       PARTICULAR PURPOSE. You are solely responsible for determining the
>       appropriateness of using or redistributing the Work and assume any
>       risks associated with Your exercise of permissions under this License.
> 
>    8. Limitation of Liability. In no event and under no legal theory,
>       whether in tort (including negligence), contract, or otherwise,
>       unless required by applicable law (such as deliberate and grossly
>       negligent acts) or agreed to in writing, shall any Contributor be
>       liable to You for damages, including any direct, indirect, special,
>       incidental, or consequential damages of any character arising as a
>       result of this License or out of the use or inability to use the
>       Work (including but not limited to damages for loss of goodwill,
>       work stoppage, computer failure or malfunction, or any and all
>       other commercial damages or losses), even if such Contributor
>       has been advised of the possibility of such damages.
> 
>    9. Accepting Warranty or Additional Liability. While redistributing
>       the Work or Derivative Works thereof, You may choose to offer,
>       and charge a fee for, acceptance of support, warranty, indemnity,
>       or other liability obligations and/or rights consistent with this
>       License. However, in accepting such obligations, You may act only
>       on Your own behalf and on Your sole responsibility, not on behalf
>       of any other Contributor, and only if You agree to indemnify,
>       defend, and hold each Contributor harmless for any liability
>       incurred by, or claims asserted against, such Contributor by reason
>       of your accepting any such warranty or additional liability.
> 
>    END OF TERMS AND CONDITIONS
> 
>    APPENDIX: How to apply the Apache License to your work.
> 
>       To apply the Apache License to your work, attach the following
>       boilerplate notice, with the fields enclosed by brackets "[]"
>       replaced with your own identifying information. (Don't include
>       the brackets!)  The text should be enclosed in the appropriate
>       comment syntax for the file format. We also recommend that a
>       file or class name and description of purpose be included on the
>       same "printed page" as the copyright notice for easier
>       identification within third-party archives.
> 
>    Copyright [yyyy] [name of copyright owner]
> 
>    Licensed under the Apache License, Version 2.0 (the "License");
>    you may not use this file except in compliance with the License.
>    You may obtain a copy of the License at
> 
>        http://www.apache.org/licenses/LICENSE-2.0
> 
>    Unless required by applicable law or agreed to in writing, software
>    distributed under the License is distributed on an "AS IS" BASIS,
>    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
>    See the License for the specific language governing permissions and
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/fonts/DroidNaskh_withdot-license.txt lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/fonts/DroidNaskh_withdot-license.txt
1,4c1,4
< This font is a modified version of DroidNaskh.
< License: Apache License Version 2.0
< Modified by: Razi Alavizadeh <s.r.alavizadeh@gmail.com>
< 
---
> This font is a modified version of DroidNaskh.
> License: Apache License Version 2.0
> Modified by: Razi Alavizadeh <s.r.alavizadeh@gmail.com>
> 
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/iconsets/classic/README lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/iconsets/classic/README
1,6c1,6
< This is the classic iconset.
< 
< ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
< Producer/Collector: S. Razi Alavizadeh
< Lisence: GPL
< Version: 0.1
---
> This is the classic iconset.
> 
> ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
> Producer/Collector: S. Razi Alavizadeh
> Lisence: GPL
> Version: 0.1
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/iconsets/default/README lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/iconsets/default/README
1,6c1,6
< This is the dark-glass iconset.
< Based on "Dark Glass" icon set.
< ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
< Producer/Collector: S. Razi Alavizadeh
< Lisence: GPL
< Version: 0.1
---
> This is the dark-glass iconset.
> Based on "Dark Glass" icon set.
> ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
> Producer/Collector: S. Razi Alavizadeh
> Lisence: GPL
> Version: 0.1
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/iconsets/iconic-cyan/README lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/iconsets/iconic-cyan/README
1,6c1,6
< This is the iconic-cyan iconset.
< Based on "iconic" icon set.
< ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
< Producer/Collector: S. Razi Alavizadeh
< Lisence: GPL
< Version: 0.1
---
> This is the iconic-cyan iconset.
> Based on "iconic" icon set.
> ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
> Producer/Collector: S. Razi Alavizadeh
> Lisence: GPL
> Version: 0.1
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/iconsets/light-gray/README lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/iconsets/light-gray/README
1,9c1,9
< This is 'light-gray' iconset created for Saaghar version 0.9.69.
< Most icons of this iconset comes from "Carpelinx" icon pack.
< 
< Note: There are some modification by Saaghar developer(S. Razi Alavizadeh).
< 
< ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
< Producer/Collector: Sahand Soltandoost
< Lisence: GPL
< Version: 0.2
---
> This is 'light-gray' iconset created for Saaghar version 0.9.69.
> Most icons of this iconset comes from "Carpelinx" icon pack.
> 
> Note: There are some modification by Saaghar developer(S. Razi Alavizadeh).
> 
> ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
> Producer/Collector: Sahand Soltandoost
> Lisence: GPL
> Version: 0.2
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/Info.plist lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/Info.plist
1,20c1,20
< <?xml version="1.0" encoding="UTF-8"?>
< <!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
< <plist version="1.0">
< 	<dict>
< 		<key>CFBundleIconFile</key>
< 		<string>saaghar.icns</string>
< 		<key>CFBundlePackageType</key>
< 		<string>APPL</string>
< 		<key>CFBundleSignature</key>
< 		<string>????</string>
< 		<key>CFBundleExecutable</key>
< 		<string>Saaghar</string>
< 		<key>CFBundleGetInfoString</key>
< 		<string>Copyright (c) 2010-2011, S. Razi Alavizadeh</string>
< 		<key>CFBundleIdentifier</key>
< 		<string>Saaghar</string>
< 		<key>CFBundleName</key>
< 		<string>Saaghar</string>
< 	</dict>
< </plist>
---
> <?xml version="1.0" encoding="UTF-8"?>
> <!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
> <plist version="1.0">
> 	<dict>
> 		<key>CFBundleIconFile</key>
> 		<string>saaghar.icns</string>
> 		<key>CFBundlePackageType</key>
> 		<string>APPL</string>
> 		<key>CFBundleSignature</key>
> 		<string>????</string>
> 		<key>CFBundleExecutable</key>
> 		<string>Saaghar</string>
> 		<key>CFBundleGetInfoString</key>
> 		<string>Copyright (c) 2010-2011, S. Razi Alavizadeh</string>
> 		<key>CFBundleIdentifier</key>
> 		<string>Saaghar</string>
> 		<key>CFBundleName</key>
> 		<string>Saaghar</string>
> 	</dict>
> </plist>
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/Saaghar.desktop lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/Saaghar.desktop
1,11c1,11
< [Desktop Entry]
< Categories=Office;Publishing;Qt;X-SuSE-Core-Office;X-Mandriva-Office-Publishing;X-Misc;
< Exec=saaghar
< GenericName=Saaghar
< Comment=A Persian poetry software
< Icon=saaghar
< Name=Saaghar
< StartupNotify=false
< Terminal=false
< Type=Application
< 
---
> [Desktop Entry]
> Categories=Office;Publishing;Qt;X-SuSE-Core-Office;X-Mandriva-Office-Publishing;X-Misc;
> Exec=saaghar
> GenericName=Saaghar
> Comment=A Persian poetry software
> Icon=saaghar
> Name=Saaghar
> StartupNotify=false
> Terminal=false
> Type=Application
> 
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/saaghar.qrc lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/saaghar.qrc
1,75c1,75
< <RCC>
<     <qresource prefix="/resources">
<         <file>images/empty.png</file>
<         <file>images/saaghar-splash.png</file>
<         <file>images/saaghar-splash-mask.png</file>
<         <file>images/saaghar.png</file>
<         <file>images/transp.png</file>
<         <file>images/semi-white.png</file>
<         <file>images/saaghar-about.png</file>
<         <file>iconsets/default/root-node.png</file>
<         <file>iconsets/default/container-node.png</file>
<         <file>iconsets/default/leaf-node.png</file>
<         <file>iconsets/default/download-audio-repositories.png</file>
<         <file>iconsets/default/download-sets-repositories.png</file>
<         <file>iconsets/default/add-tab.png</file>
<         <file>iconsets/default/arrow-down.png</file>
<         <file>iconsets/default/album.png</file>
<         <file>iconsets/default/bookmark-folder.png</file>
<         <file>iconsets/default/bookmarks-import.png</file>
<         <file>iconsets/default/bookmark-off.png</file>
<         <file>iconsets/default/bookmark-on.png</file>
<         <file>iconsets/default/outline.png</file>
<         <file>iconsets/default/redo.png</file>
<         <file>iconsets/default/un-bookmark.png</file>
<         <file>iconsets/default/undo.png</file>
<         <file>iconsets/default/browse_net.png</file>
<         <file>iconsets/default/cancel.png</file>
<         <file>iconsets/default/check-updates.png</file>
<         <file>iconsets/default/clear-left.png</file>
<         <file>iconsets/default/clear-right.png</file>
<         <file>iconsets/default/close-tab.png</file>
<         <file>iconsets/default/copy.png</file>
<         <file>iconsets/default/down.png</file>
<         <file>iconsets/default/exit.png</file>
<         <file>iconsets/default/export-pdf.png</file>
<         <file>iconsets/default/export.png</file>
<         <file>iconsets/default/faal.png</file>
<         <file>iconsets/default/filter.png</file>
<         <file>iconsets/default/fullscreen.png</file>
<         <file>iconsets/default/home.png</file>
<         <file>iconsets/default/import-to-database.png</file>
<         <file>iconsets/default/left.png</file>
<         <file>iconsets/default/music-player.png</file>
<         <file>iconsets/default/new_tab.png</file>
<         <file>iconsets/default/new_window.png</file>
<         <file>iconsets/default/next.png</file>
<         <file>iconsets/default/no-fullscreen.png</file>
<         <file>iconsets/default/no-photo.png</file>
<         <file>iconsets/default/ocr-verification.png</file>
<         <file>iconsets/default/one-hemistich-line.png</file>
<         <file>iconsets/default/previous.png</file>
<         <file>iconsets/default/print-preview.png</file>
<         <file>iconsets/default/print.png</file>
<         <file>iconsets/default/qt-logo.png</file>
<         <file>iconsets/default/random.png</file>
<         <file>iconsets/default/refresh.png</file>
<         <file>iconsets/default/remove-poet.png</file>
<         <file>iconsets/default/right.png</file>
<         <file>iconsets/default/search-options.png</file>
<         <file>iconsets/default/search.png</file>
<         <file>iconsets/default/select-mask.png</file>
<         <file>iconsets/default/settings.png</file>
<         <file>iconsets/default/stepped-hemistich-line.png</file>
<         <file>iconsets/default/two-hemistich-line.png</file>
<         <file>iconsets/default/up.png</file>
<         <file>cats-buttons/button-home-single.png</file>
<         <file>cats-buttons/button-home-single_hovered.png</file>
<         <file>cats-buttons/button-home-single_pressed.png</file>
<         <file>cats-buttons/button-home-start.png</file>
<         <file>cats-buttons/button-home-start_hovered.png</file>
<         <file>cats-buttons/button-home-start_pressed.png</file>
<         <file>cats-buttons/button-last.png</file>
<         <file>cats-buttons/button-middle.png</file>
<     </qresource>
< </RCC>
---
> <RCC>
>     <qresource prefix="/resources">
>         <file>images/empty.png</file>
>         <file>images/saaghar-splash.png</file>
>         <file>images/saaghar-splash-mask.png</file>
>         <file>images/saaghar.png</file>
>         <file>images/transp.png</file>
>         <file>images/semi-white.png</file>
>         <file>images/saaghar-about.png</file>
>         <file>iconsets/default/root-node.png</file>
>         <file>iconsets/default/container-node.png</file>
>         <file>iconsets/default/leaf-node.png</file>
>         <file>iconsets/default/download-audio-repositories.png</file>
>         <file>iconsets/default/download-sets-repositories.png</file>
>         <file>iconsets/default/add-tab.png</file>
>         <file>iconsets/default/arrow-down.png</file>
>         <file>iconsets/default/album.png</file>
>         <file>iconsets/default/bookmark-folder.png</file>
>         <file>iconsets/default/bookmarks-import.png</file>
>         <file>iconsets/default/bookmark-off.png</file>
>         <file>iconsets/default/bookmark-on.png</file>
>         <file>iconsets/default/outline.png</file>
>         <file>iconsets/default/redo.png</file>
>         <file>iconsets/default/un-bookmark.png</file>
>         <file>iconsets/default/undo.png</file>
>         <file>iconsets/default/browse_net.png</file>
>         <file>iconsets/default/cancel.png</file>
>         <file>iconsets/default/check-updates.png</file>
>         <file>iconsets/default/clear-left.png</file>
>         <file>iconsets/default/clear-right.png</file>
>         <file>iconsets/default/close-tab.png</file>
>         <file>iconsets/default/copy.png</file>
>         <file>iconsets/default/down.png</file>
>         <file>iconsets/default/exit.png</file>
>         <file>iconsets/default/export-pdf.png</file>
>         <file>iconsets/default/export.png</file>
>         <file>iconsets/default/faal.png</file>
>         <file>iconsets/default/filter.png</file>
>         <file>iconsets/default/fullscreen.png</file>
>         <file>iconsets/default/home.png</file>
>         <file>iconsets/default/import-to-database.png</file>
>         <file>iconsets/default/left.png</file>
>         <file>iconsets/default/music-player.png</file>
>         <file>iconsets/default/new_tab.png</file>
>         <file>iconsets/default/new_window.png</file>
>         <file>iconsets/default/next.png</file>
>         <file>iconsets/default/no-fullscreen.png</file>
>         <file>iconsets/default/no-photo.png</file>
>         <file>iconsets/default/ocr-verification.png</file>
>         <file>iconsets/default/one-hemistich-line.png</file>
>         <file>iconsets/default/previous.png</file>
>         <file>iconsets/default/print-preview.png</file>
>         <file>iconsets/default/print.png</file>
>         <file>iconsets/default/qt-logo.png</file>
>         <file>iconsets/default/random.png</file>
>         <file>iconsets/default/refresh.png</file>
>         <file>iconsets/default/remove-poet.png</file>
>         <file>iconsets/default/right.png</file>
>         <file>iconsets/default/search-options.png</file>
>         <file>iconsets/default/search.png</file>
>         <file>iconsets/default/select-mask.png</file>
>         <file>iconsets/default/settings.png</file>
>         <file>iconsets/default/stepped-hemistich-line.png</file>
>         <file>iconsets/default/two-hemistich-line.png</file>
>         <file>iconsets/default/up.png</file>
>         <file>cats-buttons/button-home-single.png</file>
>         <file>cats-buttons/button-home-single_hovered.png</file>
>         <file>cats-buttons/button-home-single_pressed.png</file>
>         <file>cats-buttons/button-home-start.png</file>
>         <file>cats-buttons/button-home-start_hovered.png</file>
>         <file>cats-buttons/button-home-start_pressed.png</file>
>         <file>cats-buttons/button-last.png</file>
>         <file>cats-buttons/button-middle.png</file>
>     </qresource>
> </RCC>
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/win.rc lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/data/win.rc
1,35c1,35
< IDI_ICON1               ICON    DISCARDABLE     "saaghar.ico"
< 
< 
< #include "windows.h"
< #include "../src/version.h"
< 
< 1 VERSIONINFO
< FILEVERSION VER_FILEVERSION
< PRODUCTVERSION VER_PRODUCTVERSION, 0, 0
< FILEFLAGSMASK 0
< FILEOS 0x40000
< FILETYPE 1
< {
< 	BLOCK "StringFileInfo"
< 	{
< 		BLOCK "040904E4"
< 		{
< 			VALUE "CompanyName",        VER_COMPANYNAME_STR
< 			VALUE "FileDescription",    VER_FILEDESCRIPTION_STR
< 			VALUE "FileVersion",        VER_FILEVERSION_STR
< 			VALUE "InternalName",       VER_INTERNALNAME_STR
< 			VALUE "LegalCopyright",     VER_LEGALCOPYRIGHT_STR
< 			VALUE "LegalTrademarks1",   VER_LEGALTRADEMARKS1_STR
< 			VALUE "LegalTrademarks2",   VER_LEGALTRADEMARKS2_STR
< 			VALUE "OriginalFilename",   VER_ORIGINALFILENAME_STR
< 			VALUE "ProductName",        VER_PRODUCTNAME_STR
< 			VALUE "ProductVersion",     VER_PRODUCTVERSION_STR
< 		}
< 	}
< 	
< 	BLOCK "VarFileInfo"
< 	{
< 		VALUE "Translation", 0x409, 1252
< 	}
< }
---
> IDI_ICON1               ICON    DISCARDABLE     "saaghar.ico"
> 
> 
> #include "windows.h"
> #include "../src/version.h"
> 
> 1 VERSIONINFO
> FILEVERSION VER_FILEVERSION
> PRODUCTVERSION VER_PRODUCTVERSION, 0, 0
> FILEFLAGSMASK 0
> FILEOS 0x40000
> FILETYPE 1
> {
> 	BLOCK "StringFileInfo"
> 	{
> 		BLOCK "040904E4"
> 		{
> 			VALUE "CompanyName",        VER_COMPANYNAME_STR
> 			VALUE "FileDescription",    VER_FILEDESCRIPTION_STR
> 			VALUE "FileVersion",        VER_FILEVERSION_STR
> 			VALUE "InternalName",       VER_INTERNALNAME_STR
> 			VALUE "LegalCopyright",     VER_LEGALCOPYRIGHT_STR
> 			VALUE "LegalTrademarks1",   VER_LEGALTRADEMARKS1_STR
> 			VALUE "LegalTrademarks2",   VER_LEGALTRADEMARKS2_STR
> 			VALUE "OriginalFilename",   VER_ORIGINALFILENAME_STR
> 			VALUE "ProductName",        VER_PRODUCTNAME_STR
> 			VALUE "ProductVersion",     VER_PRODUCTVERSION_STR
> 		}
> 	}
> 	
> 	BLOCK "VarFileInfo"
> 	{
> 		VALUE "Translation", 0x409, 1252
> 	}
> }
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/doc/doc.pri lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/doc/doc.pri
1,2c1,2
< utilities.files += $$PWD/Saaghar-Manual.pdf \
<     $$PWD/saaghar_preface.gdb
---
> utilities.files += $$PWD/Saaghar-Manual.pdf \
>     $$PWD/saaghar_preface.gdb
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/.gitignore lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/.gitignore
1,17c1,17
< OTHERS
< OTHERS/*
< .hgignore
< .hgsub
< .hgtags
< .hgsubstate
< .hg/*
< .hg
< Saaghar-Win
< Saaghar-Win/*
< *.pro.user*
< sqlite-driver
< sqlite-driver/*
< *.autosave
< gh-pages
< scripts/pngcrush*
< Thumbs.db
---
> OTHERS
> OTHERS/*
> .hgignore
> .hgsub
> .hgtags
> .hgsubstate
> .hg/*
> .hg
> Saaghar-Win
> Saaghar-Win/*
> *.pro.user*
> sqlite-driver
> sqlite-driver/*
> *.autosave
> gh-pages
> scripts/pngcrush*
> Thumbs.db
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/GPLv2Fa lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/GPLv2Fa
1,33c1,33
< ﻿این برنامه به صورت رایگان و آزاد در اختیار شما قرار گرفته است. شما می‌توانید از آن استفاده کنید یا آن را کپی کنید و در اختیار دیگران بگذارید. تهیه‌کنندهٔ این برنامه آن را همانطور که هست و بدون هیچگونه ضمانتی در اختیار شما گذاشته است و هیچگونه مسئولیتی در قبال عدم کارکرد درست را نمی‌پذیرد.
< قوانین استفاده از این برنامه مطابق مجوز GPL ویرایش ۲ و به شرح زیر است:
< ۱. شما می توانید نسخه‌های تغییر نکردهٔ کد اصلی برنامه را همانطور که آن را دریافت می کنید از طریق هر بستری  تکثیر و یا توزیع کنید، به شرطی که بطور واضح و صحیح در هر کدام، یک کپی از اعلان حق تالیف و حدود مسئولیت را گنجانده و تمامی اعلانهایی که به این پروانه ارجاع  می‌دهند را به همراه اشاره به عدم وجود هرگونه تضمین، دست‌نخورده باقی بگذارید و به هر دریافت‌کنندهٔ برنامه یک نسخه از این پروانه را به همراه برنامه بدهید. شما ممکن است برای انجام عملیات فیریکی انتقال یک نسخه، حق الزحمه دریافت نموده و یا حتی در ازای دریافت پولی از طرف خودتان برنامه را ضمانت نمایید.
< ۲. شما می‌توانید نسخه‌های خودتان از برنامه -و یا هر جزیی از آن- را تغییر داده و در نتیجه؛ کار جدیدی بر اساس برنامهٔ اولیه تولید نموده و آن را تکثیر و توزیع نمایید به شرطی که در عین پایبندی به اصول بند (۱) که در بالا آمد تمام اصول زیر را رعایت نمایید:
< الف) شما باید در فایلهای تغییر داده شده به طور واضح مشخص نمایید که شما آنها را تغییر داده‌اید و تاریخ تغییر را نیز ثبت نمایید.
< ب) شما باید به طور واضح کل هر کاری را که به صورت جزء و یا کل از برنامه مشتق شده است و قصد انتشار و یا توزیع آن را دارید تحت این پروانه و به صورت رایگان در اختیار همگان قرار دهید.
< ج) در صورتی که برنامهٔ تغییر داده شده در حالت عادی با کاربر تعامل دارد می بایست هنگام اجرا در وضعیت تعاملی با کاربر یک اعلان شامل پیام حق تالیف مرتبط و توضیحی دربارهٔ عدم وجود هرگونه تضمین برای این برنامه (و یا اگر خود شما تضمینی ارایه می‌دهید، آن تضمین) و همچنین امکان توزیع و تکثیر برنامه در صورت رعایت قوانین این پروانه توسط کاربر و همچنین نحوهٔ دستیابی کاربر به این قوانین را نمایش دهد. (استثنا: اگر برنامه اصلی خود تعاملی است اما چنین پیامی نمایش نمی‌دهد شما هم مجبور به نمایش این پیام نیستید.)
< این الزامات شامل کل کار تغییر یافته می‌شوند. اگر قسمتهای قابل جداسازی از کار از برنامه مشتق نشده باشند، و منطقاً کارهای جدا و مستقل محسوب شوند، آن گاه این پروانه و قوانینش شامل آن کارهای مستقل که بصورت کار جدا توزیع می کنید نمی‌شود ولی وقتی آنها را به عنوان قسمتهایی از یک کل، بر اساس برنامه، توزیع می‌کنید کل توزیع  می بایست بر اساس قوانین این پروانه باشد که کل کار شامل تمام قسمتهای  مختلف آن را  بدون در نظر گرفتن اینکه مؤلف آن قسمت کیست، در بر خواهد گرفت.
< به این ترتیب قصد این قسمت ادعای مالکیت و یا جدل بر سر حقوق شما برای کارهایی که کل آن را شما نوشته‌اید نیست، بلکه هدف داشتن حق کنترل توزیع کارهای مشتق شده و یا کارهای اشتراکی بر اساس برنامه می‌باشد.
< به علاوه وجود محض کار دیگری که بر اساس برنامه (و یا کاری بر اساس برنامه)  نیست روی همان بستر توزیع برنامه دلیلی برای پوشیده شدن آن کار توسط این پروانه نمی شود.
< ۳. شما می توانید برنامه را بصورت کد اجرایی تکثیر و توزیع کنید (و یا کاری که بر اساس آن صورت گرفته؛ طی تعریف بند ۲) به شرطی که بندهای (۱) و (۲) را رعایت نموده و یکی از کارهای زیر را نیز انجام دهید:
< الف) به همراه آن کد اصلی برنامه را نیز، به صورت خوانا برای ماشین الحاق نمایید که خود می‌بایست تحت قوانین بندهای (۱) و (۲) بالا - از طریق روش شناخته شده ای برای کاربر- توزیع شود و یا
< ب) به همراه آن پیشنهادی، معتبر برای ۳ سال ارایه نمایید که آمادگی ارسال کد اصلی را به هر شخص ثالثی به طور رایگان -جدای از هزینه‌های شما برای انتقال فیزیکی کد اصلی- و به صورت خوانا برای ماشین طبق شرایط بندهای (۱) و (۲) بالا و از طریق بستر مناسب اعلام نمایید و یا
< ج) به همراه آن اطلاعاتی را که در مورد پیشنهاد دریافت کد اصلی برنامه دریافت کرده‌اید را ارسال نمایید (این راه حل فقط وقتی مجاز است که شما برنامه را به صورت غیرتجاری و در فرم اجرایی به همراه اعلانی مانند آنچه در بند (ب) گفته شد دریافت داشته‌اید.)
< منظور از کد اصلی کار فرم برگزیده برای ایجاد تغییرات در کار است. برای یک برنامه اجرایی کد اصلی کامل به معنی تمام کدهای برنامه به همراه کد قسمتهای مختلف آن، به علاوه تعاریف رابطها، به علاوه کدهای استفاده شده برای کنترل عملیات کمپایل شدن و نصب برنامه اجرایی می‌باشد. به هر حال به عنوان یک استثنا لازم نیست کد اصلی توزیع شده شامل برنامه‌هایی از جمله سیستم عاملی که برنامه روی آن اجرا می‌شود و ملحقاتش (کمپایلر، کرنل و غیره) که به طور عادی توزیع می‌شوند (چه به صورت کد اصلی و یا اجرایی) باشد، مگر اینکه آن ملحقات به همراه کد اجرایی نیز باشند.
< اگر توزیع نسخه اجرایی بر اساس پیشنهاد برای دریافت آنها از طریق دسترسی به منبع خاصی است، آنگاه ارایهٔ دسترسی مشابه برای دریافت کد اصلی از همان منبع به عنوان ایجاد کردن امکان دسترسی به کد منبع محسوب می‌شود، حتی اگر کاربران مجبور به دریافت کد اصلی به همراه کد اجرایی نباشند.
< ۴. شما نمی‌توانید برنامه را تکثیر کنید، تغییر دهید، توزیع نمایید و یا برای استفاده از آن پروانه‌ای صادر کنید مگر این که صریحاً مطابق این پروانه عمل نمایید. هر تلاش دیگری برای تکثیر، توزیع، ارایهٔ پروانه و یا تغییر برنامه از درجهٔ اعتبار ساقط است و به طور خودکار منجر به فسخ حقوق شما به موجب این پروانه خواهد شد. به هر ترتیب، اعتبار پروانه گیرنده‌ای که نسخه‌ای  از برنامه و یا حقوقی مطابق این پروانه را دریافت داشته است تا وقتی که آنها به این پروانه پایبند باشند ساقط نخواهد گردید.
< ۵. شما مجبور نیستید این پروانه را قبول کنید، چون آن را امضا ننموده‌اید. اما هیچ چیز دیگری به شما اجازهٔ تغییر یا توزیع برنامه یا کار مشتق از آن را نمی‌دهد. در صورتی که این پروانه را قبول ندارید فعالیتهای نامبرده غیرقانونی محسوب می‌شوند. شما با تغییر یا توزیع برنامه (یا هر کاری بر اساس برنامه) پایبندی به این پروانه را نشان داده‌اید و تمامی قوانین و مقررات برای تکثیر یا تغییر برنامه یا کارهایی که بر اساس آن انجام شده را قبول نموده‌اید.
< ۶.  هر دفعه که برنامه (یا کاری بر اساس آن) را توزیع می‌نمایید، دریافت‌کننده به طور خودکار یک پروانه برای کپی، توزیع و یا تغییر برنامه بر اساس این پروانه را از صاحب اصلی حق امتیاز برنامه دریافت می‌نماید. شما امکان محدود کردن حقوق دریافت‌کننده، که در این پروانه به آنها اشاره شده را ندارید. شما مسئول اجبار دریافت‌کنندگان به پیروی از این قوانین نیستید.
< ۷. اگر بر اساس قضاوت دادگاه و یا ادعای مالکیت حق امتیاز و یا به هر دلیل دیگر (نه فقط دلایل مرتبط با حق امتیاز) شرایطی بر شما اعمال گردید (چه بر اساس دستور دادگاه و یا توافق یا به هر دلیل دیگر) که مقررات این پروانه را نقض می‌کرد، آن شرایط دلیلی برای عدم پایبندی شما به این پروانه نخواهند بود. اگر شما نتوانید برنامه را به نحوی که به طور همزمان با مقررات این پروانه و دیگر مقررات جاری حق تالیف سازگار باشد توزیع نمایید می‌بایست در کل از توزیع برنامه خودداری نمایید. به عنوان نمونه، اگر پروانهٔ حقوق یک برنامه اجازه توزیع رایگان آن را توسط همهٔ کسانی که به طور مستقیم و یا غیرمستقیم از طریق شما دریافتش نموده‌اند نمی دهد، تنها راه برای سازگار ماندن با این پروانه و پروانهٔ یاد شده خودداری از توزیع برنامه است.
< اگر بنا به شرایط خاصی و در مورد خاصی اجرای قسمتی از این بند میسر نبود لازم است تا دیدگاه کلی این بند در نظر گرفته شود و در ضمن کل قسمت برای دیگر موارد اجرا گردد.
< هدف این بند وادار کردن شما به جدل با دیگر حقوق مالکیت و یا مشاجره بر سر اعتبار آنها نیست بلکه هدف حفاظت از یکپارچگی سیستم توزیع نرم افزارهای آزاد است که با پرداختن به پروانه‌های همگانی میسر می‌گردد. افراد زیادی با امیدوار بودن به استواری این سیستم خدمات بسیار ارزشمندی به نرم‌افزارهای آزاد نموده‌اند و این در حالی است که آنها در انتخاب پروانهٔ دیگری برای توزیع نرم‌افزار خود آزادند.
< هدف این بند روشن کردن چیزی است که معتقدیم نتیجهٔ عملی شدن طرز فکر حاکم بر این پروانه است.
< ۸. اگر توزیع و یا استفاده از برنامه به دلیل وجود قوانین خاص مالکیت محدود به کشورهای خاصی می‌شود صاحب اصلی حق امتیاز برای توزیع مطابق این پروانه می‌بایست محدودهٔ جغرافیایی خاصی را برای توزیع برنامه مشخص نموده و سیستمهای لازم برای توزیع برنامه فقط در آن محدوده را فراهم نماید؛ در نتیجه توزیع فقط در کشورهایی امکانپذیر است که مجاز به دریافت برنامه هستند و نه دیگر کشورها، در این صورت لازم است تا پروانه به صورت مکتوب محتوی این محدودیتها نیز گردد.
< ۹. بنیاد نرم‌افزارهای آزاد ممکن است گاه گاه این پروانه را بازبینی نموده و یا نسخه‌های جدیدی از آن را ارایه نماید. این نسخه‌ها در دید کلی مشابه همین پروانه خواهد بود ولی ممکن است تغییراتی برای همخوانی آنها برای حل مشکلات و مسایل جدید اعمال گردد.
< به هر نسخه یک شمارهٔ نگارش خاص اختصاص خواهد یافت. اگر برنامه به یک نسخه خاص و «تمام نسخه‌های بعدی» اشاره نماید شما امکان پیروی از قوانین و مقررات آن نسخهٔ خاص و یا هر یک از نسخه‌های بعدی که توسط بنیاد نرم‌افزارهای آزاد منتشر گردیده را دارید. اگر برنامه به نسخهٔ خاصی از پروانه اشاره نمی‌کند شما مجازید هر نسخه‌ای که تا کنون توسط بنیاد یاد شده منتشر شده را انتخاب نمایید.
< ۱۰. اگر شما می‌خواهید قسمتهایی از برنامه را با دیگر برنامه‌های آزاد که قوانین توزیعشان متفاوت است ترکیب نمایید با تولیدکننده تماس حاصل نموده و رضایت مکتوب وی را کسب نمایید. برای نرم‌افزارهای بنیاد نرم‌افزارهای آزاد به این بنیاد بنویسید. ما گاهی اوقات استثنایی برای این موضوع قایل می‌شویم، تصمیم ما بر پایهٔ دو هدف حفظ آزادی تمامی نرم‌افزارهای مشتق شده از نرم‌افزارهای آزاد ما و همچنین ارتقا شراکت و استفادهٔ دوباره از نرم‌افزار به طور عمومی خواهد بود.
< 
< بدون تعهد:
< 
< 
< ۱۱. از آنجایی که برای برنامه به صورت رایگان پروانه صادر شده است هیچ تعهدی برای برنامه - تا آنجا که قوانین جاری موجودند - وجود ندارد. برنامه «همان است که هست» بدون هیچگونه تعهدی در هر زمینه‌ای، چه با برداشت شفاهی و یا ضمنی، چه تجاری و یا سازگاری، مگر وقتی که خلاف این مسأله توسط صاحبان اصلی و یا توزیع‌کنندگان ثالث مکتوب شده باشد. تمام مخاطرات مرتبط با کیفیت و کارآیی برنامه در ارتباط مستقیم با شماست. اگر برنامه دارای مشکل باشد شما تمام هزینه‌های نگهداری، تعمیر و یا اصلاح را بر عهده خواهید گرفت.
< ۱۲. تحت هیچ شرایطی، مگر وقتی که قانونی مقرر کرده باشد و یا بر اساس مجوز مکتوب صاحب امتیاز یا هر توزیع کنندهٔ ثالث که برنامه را تغییر داده و یا توزیع می‌کند، آنها هیچ مسوولیتی در قبال هر خسارتی از جمله خسارات کلی، خاص، واقعه و یا پیامدهای استفاده و یا عدم امکان استفاده از برنامه (از جمله از دست رفتن اطلاعات، تولید اطلاعات غلط و یا ضررهایی برای شما و یا اشخاص ثالث و یا عدم کارآیی برنامه در کار کردن با دیگر برنامه ها) را  ندارند حتی اگر آنها به احتمال وقوع این خسارات اشاره کرده باشند.
---
> ﻿این برنامه به صورت رایگان و آزاد در اختیار شما قرار گرفته است. شما می‌توانید از آن استفاده کنید یا آن را کپی کنید و در اختیار دیگران بگذارید. تهیه‌کنندهٔ این برنامه آن را همانطور که هست و بدون هیچگونه ضمانتی در اختیار شما گذاشته است و هیچگونه مسئولیتی در قبال عدم کارکرد درست را نمی‌پذیرد.
> قوانین استفاده از این برنامه مطابق مجوز GPL ویرایش ۲ و به شرح زیر است:
> ۱. شما می توانید نسخه‌های تغییر نکردهٔ کد اصلی برنامه را همانطور که آن را دریافت می کنید از طریق هر بستری  تکثیر و یا توزیع کنید، به شرطی که بطور واضح و صحیح در هر کدام، یک کپی از اعلان حق تالیف و حدود مسئولیت را گنجانده و تمامی اعلانهایی که به این پروانه ارجاع  می‌دهند را به همراه اشاره به عدم وجود هرگونه تضمین، دست‌نخورده باقی بگذارید و به هر دریافت‌کنندهٔ برنامه یک نسخه از این پروانه را به همراه برنامه بدهید. شما ممکن است برای انجام عملیات فیریکی انتقال یک نسخه، حق الزحمه دریافت نموده و یا حتی در ازای دریافت پولی از طرف خودتان برنامه را ضمانت نمایید.
> ۲. شما می‌توانید نسخه‌های خودتان از برنامه -و یا هر جزیی از آن- را تغییر داده و در نتیجه؛ کار جدیدی بر اساس برنامهٔ اولیه تولید نموده و آن را تکثیر و توزیع نمایید به شرطی که در عین پایبندی به اصول بند (۱) که در بالا آمد تمام اصول زیر را رعایت نمایید:
> الف) شما باید در فایلهای تغییر داده شده به طور واضح مشخص نمایید که شما آنها را تغییر داده‌اید و تاریخ تغییر را نیز ثبت نمایید.
> ب) شما باید به طور واضح کل هر کاری را که به صورت جزء و یا کل از برنامه مشتق شده است و قصد انتشار و یا توزیع آن را دارید تحت این پروانه و به صورت رایگان در اختیار همگان قرار دهید.
> ج) در صورتی که برنامهٔ تغییر داده شده در حالت عادی با کاربر تعامل دارد می بایست هنگام اجرا در وضعیت تعاملی با کاربر یک اعلان شامل پیام حق تالیف مرتبط و توضیحی دربارهٔ عدم وجود هرگونه تضمین برای این برنامه (و یا اگر خود شما تضمینی ارایه می‌دهید، آن تضمین) و همچنین امکان توزیع و تکثیر برنامه در صورت رعایت قوانین این پروانه توسط کاربر و همچنین نحوهٔ دستیابی کاربر به این قوانین را نمایش دهد. (استثنا: اگر برنامه اصلی خود تعاملی است اما چنین پیامی نمایش نمی‌دهد شما هم مجبور به نمایش این پیام نیستید.)
> این الزامات شامل کل کار تغییر یافته می‌شوند. اگر قسمتهای قابل جداسازی از کار از برنامه مشتق نشده باشند، و منطقاً کارهای جدا و مستقل محسوب شوند، آن گاه این پروانه و قوانینش شامل آن کارهای مستقل که بصورت کار جدا توزیع می کنید نمی‌شود ولی وقتی آنها را به عنوان قسمتهایی از یک کل، بر اساس برنامه، توزیع می‌کنید کل توزیع  می بایست بر اساس قوانین این پروانه باشد که کل کار شامل تمام قسمتهای  مختلف آن را  بدون در نظر گرفتن اینکه مؤلف آن قسمت کیست، در بر خواهد گرفت.
> به این ترتیب قصد این قسمت ادعای مالکیت و یا جدل بر سر حقوق شما برای کارهایی که کل آن را شما نوشته‌اید نیست، بلکه هدف داشتن حق کنترل توزیع کارهای مشتق شده و یا کارهای اشتراکی بر اساس برنامه می‌باشد.
> به علاوه وجود محض کار دیگری که بر اساس برنامه (و یا کاری بر اساس برنامه)  نیست روی همان بستر توزیع برنامه دلیلی برای پوشیده شدن آن کار توسط این پروانه نمی شود.
> ۳. شما می توانید برنامه را بصورت کد اجرایی تکثیر و توزیع کنید (و یا کاری که بر اساس آن صورت گرفته؛ طی تعریف بند ۲) به شرطی که بندهای (۱) و (۲) را رعایت نموده و یکی از کارهای زیر را نیز انجام دهید:
> الف) به همراه آن کد اصلی برنامه را نیز، به صورت خوانا برای ماشین الحاق نمایید که خود می‌بایست تحت قوانین بندهای (۱) و (۲) بالا - از طریق روش شناخته شده ای برای کاربر- توزیع شود و یا
> ب) به همراه آن پیشنهادی، معتبر برای ۳ سال ارایه نمایید که آمادگی ارسال کد اصلی را به هر شخص ثالثی به طور رایگان -جدای از هزینه‌های شما برای انتقال فیزیکی کد اصلی- و به صورت خوانا برای ماشین طبق شرایط بندهای (۱) و (۲) بالا و از طریق بستر مناسب اعلام نمایید و یا
> ج) به همراه آن اطلاعاتی را که در مورد پیشنهاد دریافت کد اصلی برنامه دریافت کرده‌اید را ارسال نمایید (این راه حل فقط وقتی مجاز است که شما برنامه را به صورت غیرتجاری و در فرم اجرایی به همراه اعلانی مانند آنچه در بند (ب) گفته شد دریافت داشته‌اید.)
> منظور از کد اصلی کار فرم برگزیده برای ایجاد تغییرات در کار است. برای یک برنامه اجرایی کد اصلی کامل به معنی تمام کدهای برنامه به همراه کد قسمتهای مختلف آن، به علاوه تعاریف رابطها، به علاوه کدهای استفاده شده برای کنترل عملیات کمپایل شدن و نصب برنامه اجرایی می‌باشد. به هر حال به عنوان یک استثنا لازم نیست کد اصلی توزیع شده شامل برنامه‌هایی از جمله سیستم عاملی که برنامه روی آن اجرا می‌شود و ملحقاتش (کمپایلر، کرنل و غیره) که به طور عادی توزیع می‌شوند (چه به صورت کد اصلی و یا اجرایی) باشد، مگر اینکه آن ملحقات به همراه کد اجرایی نیز باشند.
> اگر توزیع نسخه اجرایی بر اساس پیشنهاد برای دریافت آنها از طریق دسترسی به منبع خاصی است، آنگاه ارایهٔ دسترسی مشابه برای دریافت کد اصلی از همان منبع به عنوان ایجاد کردن امکان دسترسی به کد منبع محسوب می‌شود، حتی اگر کاربران مجبور به دریافت کد اصلی به همراه کد اجرایی نباشند.
> ۴. شما نمی‌توانید برنامه را تکثیر کنید، تغییر دهید، توزیع نمایید و یا برای استفاده از آن پروانه‌ای صادر کنید مگر این که صریحاً مطابق این پروانه عمل نمایید. هر تلاش دیگری برای تکثیر، توزیع، ارایهٔ پروانه و یا تغییر برنامه از درجهٔ اعتبار ساقط است و به طور خودکار منجر به فسخ حقوق شما به موجب این پروانه خواهد شد. به هر ترتیب، اعتبار پروانه گیرنده‌ای که نسخه‌ای  از برنامه و یا حقوقی مطابق این پروانه را دریافت داشته است تا وقتی که آنها به این پروانه پایبند باشند ساقط نخواهد گردید.
> ۵. شما مجبور نیستید این پروانه را قبول کنید، چون آن را امضا ننموده‌اید. اما هیچ چیز دیگری به شما اجازهٔ تغییر یا توزیع برنامه یا کار مشتق از آن را نمی‌دهد. در صورتی که این پروانه را قبول ندارید فعالیتهای نامبرده غیرقانونی محسوب می‌شوند. شما با تغییر یا توزیع برنامه (یا هر کاری بر اساس برنامه) پایبندی به این پروانه را نشان داده‌اید و تمامی قوانین و مقررات برای تکثیر یا تغییر برنامه یا کارهایی که بر اساس آن انجام شده را قبول نموده‌اید.
> ۶.  هر دفعه که برنامه (یا کاری بر اساس آن) را توزیع می‌نمایید، دریافت‌کننده به طور خودکار یک پروانه برای کپی، توزیع و یا تغییر برنامه بر اساس این پروانه را از صاحب اصلی حق امتیاز برنامه دریافت می‌نماید. شما امکان محدود کردن حقوق دریافت‌کننده، که در این پروانه به آنها اشاره شده را ندارید. شما مسئول اجبار دریافت‌کنندگان به پیروی از این قوانین نیستید.
> ۷. اگر بر اساس قضاوت دادگاه و یا ادعای مالکیت حق امتیاز و یا به هر دلیل دیگر (نه فقط دلایل مرتبط با حق امتیاز) شرایطی بر شما اعمال گردید (چه بر اساس دستور دادگاه و یا توافق یا به هر دلیل دیگر) که مقررات این پروانه را نقض می‌کرد، آن شرایط دلیلی برای عدم پایبندی شما به این پروانه نخواهند بود. اگر شما نتوانید برنامه را به نحوی که به طور همزمان با مقررات این پروانه و دیگر مقررات جاری حق تالیف سازگار باشد توزیع نمایید می‌بایست در کل از توزیع برنامه خودداری نمایید. به عنوان نمونه، اگر پروانهٔ حقوق یک برنامه اجازه توزیع رایگان آن را توسط همهٔ کسانی که به طور مستقیم و یا غیرمستقیم از طریق شما دریافتش نموده‌اند نمی دهد، تنها راه برای سازگار ماندن با این پروانه و پروانهٔ یاد شده خودداری از توزیع برنامه است.
> اگر بنا به شرایط خاصی و در مورد خاصی اجرای قسمتی از این بند میسر نبود لازم است تا دیدگاه کلی این بند در نظر گرفته شود و در ضمن کل قسمت برای دیگر موارد اجرا گردد.
> هدف این بند وادار کردن شما به جدل با دیگر حقوق مالکیت و یا مشاجره بر سر اعتبار آنها نیست بلکه هدف حفاظت از یکپارچگی سیستم توزیع نرم افزارهای آزاد است که با پرداختن به پروانه‌های همگانی میسر می‌گردد. افراد زیادی با امیدوار بودن به استواری این سیستم خدمات بسیار ارزشمندی به نرم‌افزارهای آزاد نموده‌اند و این در حالی است که آنها در انتخاب پروانهٔ دیگری برای توزیع نرم‌افزار خود آزادند.
> هدف این بند روشن کردن چیزی است که معتقدیم نتیجهٔ عملی شدن طرز فکر حاکم بر این پروانه است.
> ۸. اگر توزیع و یا استفاده از برنامه به دلیل وجود قوانین خاص مالکیت محدود به کشورهای خاصی می‌شود صاحب اصلی حق امتیاز برای توزیع مطابق این پروانه می‌بایست محدودهٔ جغرافیایی خاصی را برای توزیع برنامه مشخص نموده و سیستمهای لازم برای توزیع برنامه فقط در آن محدوده را فراهم نماید؛ در نتیجه توزیع فقط در کشورهایی امکانپذیر است که مجاز به دریافت برنامه هستند و نه دیگر کشورها، در این صورت لازم است تا پروانه به صورت مکتوب محتوی این محدودیتها نیز گردد.
> ۹. بنیاد نرم‌افزارهای آزاد ممکن است گاه گاه این پروانه را بازبینی نموده و یا نسخه‌های جدیدی از آن را ارایه نماید. این نسخه‌ها در دید کلی مشابه همین پروانه خواهد بود ولی ممکن است تغییراتی برای همخوانی آنها برای حل مشکلات و مسایل جدید اعمال گردد.
> به هر نسخه یک شمارهٔ نگارش خاص اختصاص خواهد یافت. اگر برنامه به یک نسخه خاص و «تمام نسخه‌های بعدی» اشاره نماید شما امکان پیروی از قوانین و مقررات آن نسخهٔ خاص و یا هر یک از نسخه‌های بعدی که توسط بنیاد نرم‌افزارهای آزاد منتشر گردیده را دارید. اگر برنامه به نسخهٔ خاصی از پروانه اشاره نمی‌کند شما مجازید هر نسخه‌ای که تا کنون توسط بنیاد یاد شده منتشر شده را انتخاب نمایید.
> ۱۰. اگر شما می‌خواهید قسمتهایی از برنامه را با دیگر برنامه‌های آزاد که قوانین توزیعشان متفاوت است ترکیب نمایید با تولیدکننده تماس حاصل نموده و رضایت مکتوب وی را کسب نمایید. برای نرم‌افزارهای بنیاد نرم‌افزارهای آزاد به این بنیاد بنویسید. ما گاهی اوقات استثنایی برای این موضوع قایل می‌شویم، تصمیم ما بر پایهٔ دو هدف حفظ آزادی تمامی نرم‌افزارهای مشتق شده از نرم‌افزارهای آزاد ما و همچنین ارتقا شراکت و استفادهٔ دوباره از نرم‌افزار به طور عمومی خواهد بود.
> 
> بدون تعهد:
> 
> 
> ۱۱. از آنجایی که برای برنامه به صورت رایگان پروانه صادر شده است هیچ تعهدی برای برنامه - تا آنجا که قوانین جاری موجودند - وجود ندارد. برنامه «همان است که هست» بدون هیچگونه تعهدی در هر زمینه‌ای، چه با برداشت شفاهی و یا ضمنی، چه تجاری و یا سازگاری، مگر وقتی که خلاف این مسأله توسط صاحبان اصلی و یا توزیع‌کنندگان ثالث مکتوب شده باشد. تمام مخاطرات مرتبط با کیفیت و کارآیی برنامه در ارتباط مستقیم با شماست. اگر برنامه دارای مشکل باشد شما تمام هزینه‌های نگهداری، تعمیر و یا اصلاح را بر عهده خواهید گرفت.
> ۱۲. تحت هیچ شرایطی، مگر وقتی که قانونی مقرر کرده باشد و یا بر اساس مجوز مکتوب صاحب امتیاز یا هر توزیع کنندهٔ ثالث که برنامه را تغییر داده و یا توزیع می‌کند، آنها هیچ مسوولیتی در قبال هر خسارتی از جمله خسارات کلی، خاص، واقعه و یا پیامدهای استفاده و یا عدم امکان استفاده از برنامه (از جمله از دست رفتن اطلاعات، تولید اطلاعات غلط و یا ضررهایی برای شما و یا اشخاص ثالث و یا عدم کارآیی برنامه در کار کردن با دیگر برنامه ها) را  ندارند حتی اگر آنها به احتمال وقوع این خسارات اشاره کرده باشند.
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/GPLv3 lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/GPLv3
1,675c1,675
< ﻿
<                     GNU GENERAL PUBLIC LICENSE
<                        Version 3, 29 June 2007
< 
<  Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
<  Everyone is permitted to copy and distribute verbatim copies
<  of this license document, but changing it is not allowed.
< 
<                             Preamble
< 
<   The GNU General Public License is a free, copyleft license for
< software and other kinds of works.
< 
<   The licenses for most software and other practical works are designed
< to take away your freedom to share and change the works.  By contrast,
< the GNU General Public License is intended to guarantee your freedom to
< share and change all versions of a program--to make sure it remains free
< software for all its users.  We, the Free Software Foundation, use the
< GNU General Public License for most of our software; it applies also to
< any other work released this way by its authors.  You can apply it to
< your programs, too.
< 
<   When we speak of free software, we are referring to freedom, not
< price.  Our General Public Licenses are designed to make sure that you
< have the freedom to distribute copies of free software (and charge for
< them if you wish), that you receive source code or can get it if you
< want it, that you can change the software or use pieces of it in new
< free programs, and that you know you can do these things.
< 
<   To protect your rights, we need to prevent others from denying you
< these rights or asking you to surrender the rights.  Therefore, you have
< certain responsibilities if you distribute copies of the software, or if
< you modify it: responsibilities to respect the freedom of others.
< 
<   For example, if you distribute copies of such a program, whether
< gratis or for a fee, you must pass on to the recipients the same
< freedoms that you received.  You must make sure that they, too, receive
< or can get the source code.  And you must show them these terms so they
< know their rights.
< 
<   Developers that use the GNU GPL protect your rights with two steps:
< (1) assert copyright on the software, and (2) offer you this License
< giving you legal permission to copy, distribute and/or modify it.
< 
<   For the developers' and authors' protection, the GPL clearly explains
< that there is no warranty for this free software.  For both users' and
< authors' sake, the GPL requires that modified versions be marked as
< changed, so that their problems will not be attributed erroneously to
< authors of previous versions.
< 
<   Some devices are designed to deny users access to install or run
< modified versions of the software inside them, although the manufacturer
< can do so.  This is fundamentally incompatible with the aim of
< protecting users' freedom to change the software.  The systematic
< pattern of such abuse occurs in the area of products for individuals to
< use, which is precisely where it is most unacceptable.  Therefore, we
< have designed this version of the GPL to prohibit the practice for those
< products.  If such problems arise substantially in other domains, we
< stand ready to extend this provision to those domains in future versions
< of the GPL, as needed to protect the freedom of users.
< 
<   Finally, every program is threatened constantly by software patents.
< States should not allow patents to restrict development and use of
< software on general-purpose computers, but in those that do, we wish to
< avoid the special danger that patents applied to a free program could
< make it effectively proprietary.  To prevent this, the GPL assures that
< patents cannot be used to render the program non-free.
< 
<   The precise terms and conditions for copying, distribution and
< modification follow.
< 
<                        TERMS AND CONDITIONS
< 
<   0. Definitions.
< 
<   "This License" refers to version 3 of the GNU General Public License.
< 
<   "Copyright" also means copyright-like laws that apply to other kinds of
< works, such as semiconductor masks.
< 
<   "The Program" refers to any copyrightable work licensed under this
< License.  Each licensee is addressed as "you".  "Licensees" and
< "recipients" may be individuals or organizations.
< 
<   To "modify" a work means to copy from or adapt all or part of the work
< in a fashion requiring copyright permission, other than the making of an
< exact copy.  The resulting work is called a "modified version" of the
< earlier work or a work "based on" the earlier work.
< 
<   A "covered work" means either the unmodified Program or a work based
< on the Program.
< 
<   To "propagate" a work means to do anything with it that, without
< permission, would make you directly or secondarily liable for
< infringement under applicable copyright law, except executing it on a
< computer or modifying a private copy.  Propagation includes copying,
< distribution (with or without modification), making available to the
< public, and in some countries other activities as well.
< 
<   To "convey" a work means any kind of propagation that enables other
< parties to make or receive copies.  Mere interaction with a user through
< a computer network, with no transfer of a copy, is not conveying.
< 
<   An interactive user interface displays "Appropriate Legal Notices"
< to the extent that it includes a convenient and prominently visible
< feature that (1) displays an appropriate copyright notice, and (2)
< tells the user that there is no warranty for the work (except to the
< extent that warranties are provided), that licensees may convey the
< work under this License, and how to view a copy of this License.  If
< the interface presents a list of user commands or options, such as a
< menu, a prominent item in the list meets this criterion.
< 
<   1. Source Code.
< 
<   The "source code" for a work means the preferred form of the work
< for making modifications to it.  "Object code" means any non-source
< form of a work.
< 
<   A "Standard Interface" means an interface that either is an official
< standard defined by a recognized standards body, or, in the case of
< interfaces specified for a particular programming language, one that
< is widely used among developers working in that language.
< 
<   The "System Libraries" of an executable work include anything, other
< than the work as a whole, that (a) is included in the normal form of
< packaging a Major Component, but which is not part of that Major
< Component, and (b) serves only to enable use of the work with that
< Major Component, or to implement a Standard Interface for which an
< implementation is available to the public in source code form.  A
< "Major Component", in this context, means a major essential component
< (kernel, window system, and so on) of the specific operating system
< (if any) on which the executable work runs, or a compiler used to
< produce the work, or an object code interpreter used to run it.
< 
<   The "Corresponding Source" for a work in object code form means all
< the source code needed to generate, install, and (for an executable
< work) run the object code and to modify the work, including scripts to
< control those activities.  However, it does not include the work's
< System Libraries, or general-purpose tools or generally available free
< programs which are used unmodified in performing those activities but
< which are not part of the work.  For example, Corresponding Source
< includes interface definition files associated with source files for
< the work, and the source code for shared libraries and dynamically
< linked subprograms that the work is specifically designed to require,
< such as by intimate data communication or control flow between those
< subprograms and other parts of the work.
< 
<   The Corresponding Source need not include anything that users
< can regenerate automatically from other parts of the Corresponding
< Source.
< 
<   The Corresponding Source for a work in source code form is that
< same work.
< 
<   2. Basic Permissions.
< 
<   All rights granted under this License are granted for the term of
< copyright on the Program, and are irrevocable provided the stated
< conditions are met.  This License explicitly affirms your unlimited
< permission to run the unmodified Program.  The output from running a
< covered work is covered by this License only if the output, given its
< content, constitutes a covered work.  This License acknowledges your
< rights of fair use or other equivalent, as provided by copyright law.
< 
<   You may make, run and propagate covered works that you do not
< convey, without conditions so long as your license otherwise remains
< in force.  You may convey covered works to others for the sole purpose
< of having them make modifications exclusively for you, or provide you
< with facilities for running those works, provided that you comply with
< the terms of this License in conveying all material for which you do
< not control copyright.  Those thus making or running the covered works
< for you must do so exclusively on your behalf, under your direction
< and control, on terms that prohibit them from making any copies of
< your copyrighted material outside their relationship with you.
< 
<   Conveying under any other circumstances is permitted solely under
< the conditions stated below.  Sublicensing is not allowed; section 10
< makes it unnecessary.
< 
<   3. Protecting Users' Legal Rights From Anti-Circumvention Law.
< 
<   No covered work shall be deemed part of an effective technological
< measure under any applicable law fulfilling obligations under article
< 11 of the WIPO copyright treaty adopted on 20 December 1996, or
< similar laws prohibiting or restricting circumvention of such
< measures.
< 
<   When you convey a covered work, you waive any legal power to forbid
< circumvention of technological measures to the extent such circumvention
< is effected by exercising rights under this License with respect to
< the covered work, and you disclaim any intention to limit operation or
< modification of the work as a means of enforcing, against the work's
< users, your or third parties' legal rights to forbid circumvention of
< technological measures.
< 
<   4. Conveying Verbatim Copies.
< 
<   You may convey verbatim copies of the Program's source code as you
< receive it, in any medium, provided that you conspicuously and
< appropriately publish on each copy an appropriate copyright notice;
< keep intact all notices stating that this License and any
< non-permissive terms added in accord with section 7 apply to the code;
< keep intact all notices of the absence of any warranty; and give all
< recipients a copy of this License along with the Program.
< 
<   You may charge any price or no price for each copy that you convey,
< and you may offer support or warranty protection for a fee.
< 
<   5. Conveying Modified Source Versions.
< 
<   You may convey a work based on the Program, or the modifications to
< produce it from the Program, in the form of source code under the
< terms of section 4, provided that you also meet all of these conditions:
< 
<     a) The work must carry prominent notices stating that you modified
<     it, and giving a relevant date.
< 
<     b) The work must carry prominent notices stating that it is
<     released under this License and any conditions added under section
<     7.  This requirement modifies the requirement in section 4 to
<     "keep intact all notices".
< 
<     c) You must license the entire work, as a whole, under this
<     License to anyone who comes into possession of a copy.  This
<     License will therefore apply, along with any applicable section 7
<     additional terms, to the whole of the work, and all its parts,
<     regardless of how they are packaged.  This License gives no
<     permission to license the work in any other way, but it does not
<     invalidate such permission if you have separately received it.
< 
<     d) If the work has interactive user interfaces, each must display
<     Appropriate Legal Notices; however, if the Program has interactive
<     interfaces that do not display Appropriate Legal Notices, your
<     work need not make them do so.
< 
<   A compilation of a covered work with other separate and independent
< works, which are not by their nature extensions of the covered work,
< and which are not combined with it such as to form a larger program,
< in or on a volume of a storage or distribution medium, is called an
< "aggregate" if the compilation and its resulting copyright are not
< used to limit the access or legal rights of the compilation's users
< beyond what the individual works permit.  Inclusion of a covered work
< in an aggregate does not cause this License to apply to the other
< parts of the aggregate.
< 
<   6. Conveying Non-Source Forms.
< 
<   You may convey a covered work in object code form under the terms
< of sections 4 and 5, provided that you also convey the
< machine-readable Corresponding Source under the terms of this License,
< in one of these ways:
< 
<     a) Convey the object code in, or embodied in, a physical product
<     (including a physical distribution medium), accompanied by the
<     Corresponding Source fixed on a durable physical medium
<     customarily used for software interchange.
< 
<     b) Convey the object code in, or embodied in, a physical product
<     (including a physical distribution medium), accompanied by a
<     written offer, valid for at least three years and valid for as
<     long as you offer spare parts or customer support for that product
<     model, to give anyone who possesses the object code either (1) a
<     copy of the Corresponding Source for all the software in the
<     product that is covered by this License, on a durable physical
<     medium customarily used for software interchange, for a price no
<     more than your reasonable cost of physically performing this
<     conveying of source, or (2) access to copy the
<     Corresponding Source from a network server at no charge.
< 
<     c) Convey individual copies of the object code with a copy of the
<     written offer to provide the Corresponding Source.  This
<     alternative is allowed only occasionally and noncommercially, and
<     only if you received the object code with such an offer, in accord
<     with subsection 6b.
< 
<     d) Convey the object code by offering access from a designated
<     place (gratis or for a charge), and offer equivalent access to the
<     Corresponding Source in the same way through the same place at no
<     further charge.  You need not require recipients to copy the
<     Corresponding Source along with the object code.  If the place to
<     copy the object code is a network server, the Corresponding Source
<     may be on a different server (operated by you or a third party)
<     that supports equivalent copying facilities, provided you maintain
<     clear directions next to the object code saying where to find the
<     Corresponding Source.  Regardless of what server hosts the
<     Corresponding Source, you remain obligated to ensure that it is
<     available for as long as needed to satisfy these requirements.
< 
<     e) Convey the object code using peer-to-peer transmission, provided
<     you inform other peers where the object code and Corresponding
<     Source of the work are being offered to the general public at no
<     charge under subsection 6d.
< 
<   A separable portion of the object code, whose source code is excluded
< from the Corresponding Source as a System Library, need not be
< included in conveying the object code work.
< 
<   A "User Product" is either (1) a "consumer product", which means any
< tangible personal property which is normally used for personal, family,
< or household purposes, or (2) anything designed or sold for incorporation
< into a dwelling.  In determining whether a product is a consumer product,
< doubtful cases shall be resolved in favor of coverage.  For a particular
< product received by a particular user, "normally used" refers to a
< typical or common use of that class of product, regardless of the status
< of the particular user or of the way in which the particular user
< actually uses, or expects or is expected to use, the product.  A product
< is a consumer product regardless of whether the product has substantial
< commercial, industrial or non-consumer uses, unless such uses represent
< the only significant mode of use of the product.
< 
<   "Installation Information" for a User Product means any methods,
< procedures, authorization keys, or other information required to install
< and execute modified versions of a covered work in that User Product from
< a modified version of its Corresponding Source.  The information must
< suffice to ensure that the continued functioning of the modified object
< code is in no case prevented or interfered with solely because
< modification has been made.
< 
<   If you convey an object code work under this section in, or with, or
< specifically for use in, a User Product, and the conveying occurs as
< part of a transaction in which the right of possession and use of the
< User Product is transferred to the recipient in perpetuity or for a
< fixed term (regardless of how the transaction is characterized), the
< Corresponding Source conveyed under this section must be accompanied
< by the Installation Information.  But this requirement does not apply
< if neither you nor any third party retains the ability to install
< modified object code on the User Product (for example, the work has
< been installed in ROM).
< 
<   The requirement to provide Installation Information does not include a
< requirement to continue to provide support service, warranty, or updates
< for a work that has been modified or installed by the recipient, or for
< the User Product in which it has been modified or installed.  Access to a
< network may be denied when the modification itself materially and
< adversely affects the operation of the network or violates the rules and
< protocols for communication across the network.
< 
<   Corresponding Source conveyed, and Installation Information provided,
< in accord with this section must be in a format that is publicly
< documented (and with an implementation available to the public in
< source code form), and must require no special password or key for
< unpacking, reading or copying.
< 
<   7. Additional Terms.
< 
<   "Additional permissions" are terms that supplement the terms of this
< License by making exceptions from one or more of its conditions.
< Additional permissions that are applicable to the entire Program shall
< be treated as though they were included in this License, to the extent
< that they are valid under applicable law.  If additional permissions
< apply only to part of the Program, that part may be used separately
< under those permissions, but the entire Program remains governed by
< this License without regard to the additional permissions.
< 
<   When you convey a copy of a covered work, you may at your option
< remove any additional permissions from that copy, or from any part of
< it.  (Additional permissions may be written to require their own
< removal in certain cases when you modify the work.)  You may place
< additional permissions on material, added by you to a covered work,
< for which you have or can give appropriate copyright permission.
< 
<   Notwithstanding any other provision of this License, for material you
< add to a covered work, you may (if authorized by the copyright holders of
< that material) supplement the terms of this License with terms:
< 
<     a) Disclaiming warranty or limiting liability differently from the
<     terms of sections 15 and 16 of this License; or
< 
<     b) Requiring preservation of specified reasonable legal notices or
<     author attributions in that material or in the Appropriate Legal
<     Notices displayed by works containing it; or
< 
<     c) Prohibiting misrepresentation of the origin of that material, or
<     requiring that modified versions of such material be marked in
<     reasonable ways as different from the original version; or
< 
<     d) Limiting the use for publicity purposes of names of licensors or
<     authors of the material; or
< 
<     e) Declining to grant rights under trademark law for use of some
<     trade names, trademarks, or service marks; or
< 
<     f) Requiring indemnification of licensors and authors of that
<     material by anyone who conveys the material (or modified versions of
<     it) with contractual assumptions of liability to the recipient, for
<     any liability that these contractual assumptions directly impose on
<     those licensors and authors.
< 
<   All other non-permissive additional terms are considered "further
< restrictions" within the meaning of section 10.  If the Program as you
< received it, or any part of it, contains a notice stating that it is
< governed by this License along with a term that is a further
< restriction, you may remove that term.  If a license document contains
< a further restriction but permits relicensing or conveying under this
< License, you may add to a covered work material governed by the terms
< of that license document, provided that the further restriction does
< not survive such relicensing or conveying.
< 
<   If you add terms to a covered work in accord with this section, you
< must place, in the relevant source files, a statement of the
< additional terms that apply to those files, or a notice indicating
< where to find the applicable terms.
< 
<   Additional terms, permissive or non-permissive, may be stated in the
< form of a separately written license, or stated as exceptions;
< the above requirements apply either way.
< 
<   8. Termination.
< 
<   You may not propagate or modify a covered work except as expressly
< provided under this License.  Any attempt otherwise to propagate or
< modify it is void, and will automatically terminate your rights under
< this License (including any patent licenses granted under the third
< paragraph of section 11).
< 
<   However, if you cease all violation of this License, then your
< license from a particular copyright holder is reinstated (a)
< provisionally, unless and until the copyright holder explicitly and
< finally terminates your license, and (b) permanently, if the copyright
< holder fails to notify you of the violation by some reasonable means
< prior to 60 days after the cessation.
< 
<   Moreover, your license from a particular copyright holder is
< reinstated permanently if the copyright holder notifies you of the
< violation by some reasonable means, this is the first time you have
< received notice of violation of this License (for any work) from that
< copyright holder, and you cure the violation prior to 30 days after
< your receipt of the notice.
< 
<   Termination of your rights under this section does not terminate the
< licenses of parties who have received copies or rights from you under
< this License.  If your rights have been terminated and not permanently
< reinstated, you do not qualify to receive new licenses for the same
< material under section 10.
< 
<   9. Acceptance Not Required for Having Copies.
< 
<   You are not required to accept this License in order to receive or
< run a copy of the Program.  Ancillary propagation of a covered work
< occurring solely as a consequence of using peer-to-peer transmission
< to receive a copy likewise does not require acceptance.  However,
< nothing other than this License grants you permission to propagate or
< modify any covered work.  These actions infringe copyright if you do
< not accept this License.  Therefore, by modifying or propagating a
< covered work, you indicate your acceptance of this License to do so.
< 
<   10. Automatic Licensing of Downstream Recipients.
< 
<   Each time you convey a covered work, the recipient automatically
< receives a license from the original licensors, to run, modify and
< propagate that work, subject to this License.  You are not responsible
< for enforcing compliance by third parties with this License.
< 
<   An "entity transaction" is a transaction transferring control of an
< organization, or substantially all assets of one, or subdividing an
< organization, or merging organizations.  If propagation of a covered
< work results from an entity transaction, each party to that
< transaction who receives a copy of the work also receives whatever
< licenses to the work the party's predecessor in interest had or could
< give under the previous paragraph, plus a right to possession of the
< Corresponding Source of the work from the predecessor in interest, if
< the predecessor has it or can get it with reasonable efforts.
< 
<   You may not impose any further restrictions on the exercise of the
< rights granted or affirmed under this License.  For example, you may
< not impose a license fee, royalty, or other charge for exercise of
< rights granted under this License, and you may not initiate litigation
< (including a cross-claim or counterclaim in a lawsuit) alleging that
< any patent claim is infringed by making, using, selling, offering for
< sale, or importing the Program or any portion of it.
< 
<   11. Patents.
< 
<   A "contributor" is a copyright holder who authorizes use under this
< License of the Program or a work on which the Program is based.  The
< work thus licensed is called the contributor's "contributor version".
< 
<   A contributor's "essential patent claims" are all patent claims
< owned or controlled by the contributor, whether already acquired or
< hereafter acquired, that would be infringed by some manner, permitted
< by this License, of making, using, or selling its contributor version,
< but do not include claims that would be infringed only as a
< consequence of further modification of the contributor version.  For
< purposes of this definition, "control" includes the right to grant
< patent sublicenses in a manner consistent with the requirements of
< this License.
< 
<   Each contributor grants you a non-exclusive, worldwide, royalty-free
< patent license under the contributor's essential patent claims, to
< make, use, sell, offer for sale, import and otherwise run, modify and
< propagate the contents of its contributor version.
< 
<   In the following three paragraphs, a "patent license" is any express
< agreement or commitment, however denominated, not to enforce a patent
< (such as an express permission to practice a patent or covenant not to
< sue for patent infringement).  To "grant" such a patent license to a
< party means to make such an agreement or commitment not to enforce a
< patent against the party.
< 
<   If you convey a covered work, knowingly relying on a patent license,
< and the Corresponding Source of the work is not available for anyone
< to copy, free of charge and under the terms of this License, through a
< publicly available network server or other readily accessible means,
< then you must either (1) cause the Corresponding Source to be so
< available, or (2) arrange to deprive yourself of the benefit of the
< patent license for this particular work, or (3) arrange, in a manner
< consistent with the requirements of this License, to extend the patent
< license to downstream recipients.  "Knowingly relying" means you have
< actual knowledge that, but for the patent license, your conveying the
< covered work in a country, or your recipient's use of the covered work
< in a country, would infringe one or more identifiable patents in that
< country that you have reason to believe are valid.
< 
<   If, pursuant to or in connection with a single transaction or
< arrangement, you convey, or propagate by procuring conveyance of, a
< covered work, and grant a patent license to some of the parties
< receiving the covered work authorizing them to use, propagate, modify
< or convey a specific copy of the covered work, then the patent license
< you grant is automatically extended to all recipients of the covered
< work and works based on it.
< 
<   A patent license is "discriminatory" if it does not include within
< the scope of its coverage, prohibits the exercise of, or is
< conditioned on the non-exercise of one or more of the rights that are
< specifically granted under this License.  You may not convey a covered
< work if you are a party to an arrangement with a third party that is
< in the business of distributing software, under which you make payment
< to the third party based on the extent of your activity of conveying
< the work, and under which the third party grants, to any of the
< parties who would receive the covered work from you, a discriminatory
< patent license (a) in connection with copies of the covered work
< conveyed by you (or copies made from those copies), or (b) primarily
< for and in connection with specific products or compilations that
< contain the covered work, unless you entered into that arrangement,
< or that patent license was granted, prior to 28 March 2007.
< 
<   Nothing in this License shall be construed as excluding or limiting
< any implied license or other defenses to infringement that may
< otherwise be available to you under applicable patent law.
< 
<   12. No Surrender of Others' Freedom.
< 
<   If conditions are imposed on you (whether by court order, agreement or
< otherwise) that contradict the conditions of this License, they do not
< excuse you from the conditions of this License.  If you cannot convey a
< covered work so as to satisfy simultaneously your obligations under this
< License and any other pertinent obligations, then as a consequence you may
< not convey it at all.  For example, if you agree to terms that obligate you
< to collect a royalty for further conveying from those to whom you convey
< the Program, the only way you could satisfy both those terms and this
< License would be to refrain entirely from conveying the Program.
< 
<   13. Use with the GNU Affero General Public License.
< 
<   Notwithstanding any other provision of this License, you have
< permission to link or combine any covered work with a work licensed
< under version 3 of the GNU Affero General Public License into a single
< combined work, and to convey the resulting work.  The terms of this
< License will continue to apply to the part which is the covered work,
< but the special requirements of the GNU Affero General Public License,
< section 13, concerning interaction through a network will apply to the
< combination as such.
< 
<   14. Revised Versions of this License.
< 
<   The Free Software Foundation may publish revised and/or new versions of
< the GNU General Public License from time to time.  Such new versions will
< be similar in spirit to the present version, but may differ in detail to
< address new problems or concerns.
< 
<   Each version is given a distinguishing version number.  If the
< Program specifies that a certain numbered version of the GNU General
< Public License "or any later version" applies to it, you have the
< option of following the terms and conditions either of that numbered
< version or of any later version published by the Free Software
< Foundation.  If the Program does not specify a version number of the
< GNU General Public License, you may choose any version ever published
< by the Free Software Foundation.
< 
<   If the Program specifies that a proxy can decide which future
< versions of the GNU General Public License can be used, that proxy's
< public statement of acceptance of a version permanently authorizes you
< to choose that version for the Program.
< 
<   Later license versions may give you additional or different
< permissions.  However, no additional obligations are imposed on any
< author or copyright holder as a result of your choosing to follow a
< later version.
< 
<   15. Disclaimer of Warranty.
< 
<   THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
< APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
< HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
< OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
< THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
< PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
< IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
< ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
< 
<   16. Limitation of Liability.
< 
<   IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
< WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
< THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
< GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
< USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
< DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
< PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
< EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
< SUCH DAMAGES.
< 
<   17. Interpretation of Sections 15 and 16.
< 
<   If the disclaimer of warranty and limitation of liability provided
< above cannot be given local legal effect according to their terms,
< reviewing courts shall apply local law that most closely approximates
< an absolute waiver of all civil liability in connection with the
< Program, unless a warranty or assumption of liability accompanies a
< copy of the Program in return for a fee.
< 
<                      END OF TERMS AND CONDITIONS
< 
<             How to Apply These Terms to Your New Programs
< 
<   If you develop a new program, and you want it to be of the greatest
< possible use to the public, the best way to achieve this is to make it
< free software which everyone can redistribute and change under these terms.
< 
<   To do so, attach the following notices to the program.  It is safest
< to attach them to the start of each source file to most effectively
< state the exclusion of warranty; and each file should have at least
< the "copyright" line and a pointer to where the full notice is found.
< 
<     <one line to give the program's name and a brief idea of what it does.>
<     Copyright (C) <year>  <name of author>
< 
<     This program is free software: you can redistribute it and/or modify
<     it under the terms of the GNU General Public License as published by
<     the Free Software Foundation, either version 3 of the License, or
<     (at your option) any later version.
< 
<     This program is distributed in the hope that it will be useful,
<     but WITHOUT ANY WARRANTY; without even the implied warranty of
<     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
<     GNU General Public License for more details.
< 
<     You should have received a copy of the GNU General Public License
<     along with this program.  If not, see <http://www.gnu.org/licenses/>.
< 
< Also add information on how to contact you by electronic and paper mail.
< 
<   If the program does terminal interaction, make it output a short
< notice like this when it starts in an interactive mode:
< 
<     <program>  Copyright (C) <year>  <name of author>
<     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
<     This is free software, and you are welcome to redistribute it
<     under certain conditions; type `show c' for details.
< 
< The hypothetical commands `show w' and `show c' should show the appropriate
< parts of the General Public License.  Of course, your program's commands
< might be different; for a GUI interface, you would use an "about box".
< 
<   You should also get your employer (if you work as a programmer) or school,
< if any, to sign a "copyright disclaimer" for the program, if necessary.
< For more information on this, and how to apply and follow the GNU GPL, see
< <http://www.gnu.org/licenses/>.
< 
<   The GNU General Public License does not permit incorporating your program
< into proprietary programs.  If your program is a subroutine library, you
< may consider it more useful to permit linking proprietary applications with
< the library.  If this is what you want to do, use the GNU Lesser General
< Public License instead of this License.  But first, please read
< <http://www.gnu.org/philosophy/why-not-lgpl.html>.
---
> ﻿
>                     GNU GENERAL PUBLIC LICENSE
>                        Version 3, 29 June 2007
> 
>  Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
>  Everyone is permitted to copy and distribute verbatim copies
>  of this license document, but changing it is not allowed.
> 
>                             Preamble
> 
>   The GNU General Public License is a free, copyleft license for
> software and other kinds of works.
> 
>   The licenses for most software and other practical works are designed
> to take away your freedom to share and change the works.  By contrast,
> the GNU General Public License is intended to guarantee your freedom to
> share and change all versions of a program--to make sure it remains free
> software for all its users.  We, the Free Software Foundation, use the
> GNU General Public License for most of our software; it applies also to
> any other work released this way by its authors.  You can apply it to
> your programs, too.
> 
>   When we speak of free software, we are referring to freedom, not
> price.  Our General Public Licenses are designed to make sure that you
> have the freedom to distribute copies of free software (and charge for
> them if you wish), that you receive source code or can get it if you
> want it, that you can change the software or use pieces of it in new
> free programs, and that you know you can do these things.
> 
>   To protect your rights, we need to prevent others from denying you
> these rights or asking you to surrender the rights.  Therefore, you have
> certain responsibilities if you distribute copies of the software, or if
> you modify it: responsibilities to respect the freedom of others.
> 
>   For example, if you distribute copies of such a program, whether
> gratis or for a fee, you must pass on to the recipients the same
> freedoms that you received.  You must make sure that they, too, receive
> or can get the source code.  And you must show them these terms so they
> know their rights.
> 
>   Developers that use the GNU GPL protect your rights with two steps:
> (1) assert copyright on the software, and (2) offer you this License
> giving you legal permission to copy, distribute and/or modify it.
> 
>   For the developers' and authors' protection, the GPL clearly explains
> that there is no warranty for this free software.  For both users' and
> authors' sake, the GPL requires that modified versions be marked as
> changed, so that their problems will not be attributed erroneously to
> authors of previous versions.
> 
>   Some devices are designed to deny users access to install or run
> modified versions of the software inside them, although the manufacturer
> can do so.  This is fundamentally incompatible with the aim of
> protecting users' freedom to change the software.  The systematic
> pattern of such abuse occurs in the area of products for individuals to
> use, which is precisely where it is most unacceptable.  Therefore, we
> have designed this version of the GPL to prohibit the practice for those
> products.  If such problems arise substantially in other domains, we
> stand ready to extend this provision to those domains in future versions
> of the GPL, as needed to protect the freedom of users.
> 
>   Finally, every program is threatened constantly by software patents.
> States should not allow patents to restrict development and use of
> software on general-purpose computers, but in those that do, we wish to
> avoid the special danger that patents applied to a free program could
> make it effectively proprietary.  To prevent this, the GPL assures that
> patents cannot be used to render the program non-free.
> 
>   The precise terms and conditions for copying, distribution and
> modification follow.
> 
>                        TERMS AND CONDITIONS
> 
>   0. Definitions.
> 
>   "This License" refers to version 3 of the GNU General Public License.
> 
>   "Copyright" also means copyright-like laws that apply to other kinds of
> works, such as semiconductor masks.
> 
>   "The Program" refers to any copyrightable work licensed under this
> License.  Each licensee is addressed as "you".  "Licensees" and
> "recipients" may be individuals or organizations.
> 
>   To "modify" a work means to copy from or adapt all or part of the work
> in a fashion requiring copyright permission, other than the making of an
> exact copy.  The resulting work is called a "modified version" of the
> earlier work or a work "based on" the earlier work.
> 
>   A "covered work" means either the unmodified Program or a work based
> on the Program.
> 
>   To "propagate" a work means to do anything with it that, without
> permission, would make you directly or secondarily liable for
> infringement under applicable copyright law, except executing it on a
> computer or modifying a private copy.  Propagation includes copying,
> distribution (with or without modification), making available to the
> public, and in some countries other activities as well.
> 
>   To "convey" a work means any kind of propagation that enables other
> parties to make or receive copies.  Mere interaction with a user through
> a computer network, with no transfer of a copy, is not conveying.
> 
>   An interactive user interface displays "Appropriate Legal Notices"
> to the extent that it includes a convenient and prominently visible
> feature that (1) displays an appropriate copyright notice, and (2)
> tells the user that there is no warranty for the work (except to the
> extent that warranties are provided), that licensees may convey the
> work under this License, and how to view a copy of this License.  If
> the interface presents a list of user commands or options, such as a
> menu, a prominent item in the list meets this criterion.
> 
>   1. Source Code.
> 
>   The "source code" for a work means the preferred form of the work
> for making modifications to it.  "Object code" means any non-source
> form of a work.
> 
>   A "Standard Interface" means an interface that either is an official
> standard defined by a recognized standards body, or, in the case of
> interfaces specified for a particular programming language, one that
> is widely used among developers working in that language.
> 
>   The "System Libraries" of an executable work include anything, other
> than the work as a whole, that (a) is included in the normal form of
> packaging a Major Component, but which is not part of that Major
> Component, and (b) serves only to enable use of the work with that
> Major Component, or to implement a Standard Interface for which an
> implementation is available to the public in source code form.  A
> "Major Component", in this context, means a major essential component
> (kernel, window system, and so on) of the specific operating system
> (if any) on which the executable work runs, or a compiler used to
> produce the work, or an object code interpreter used to run it.
> 
>   The "Corresponding Source" for a work in object code form means all
> the source code needed to generate, install, and (for an executable
> work) run the object code and to modify the work, including scripts to
> control those activities.  However, it does not include the work's
> System Libraries, or general-purpose tools or generally available free
> programs which are used unmodified in performing those activities but
> which are not part of the work.  For example, Corresponding Source
> includes interface definition files associated with source files for
> the work, and the source code for shared libraries and dynamically
> linked subprograms that the work is specifically designed to require,
> such as by intimate data communication or control flow between those
> subprograms and other parts of the work.
> 
>   The Corresponding Source need not include anything that users
> can regenerate automatically from other parts of the Corresponding
> Source.
> 
>   The Corresponding Source for a work in source code form is that
> same work.
> 
>   2. Basic Permissions.
> 
>   All rights granted under this License are granted for the term of
> copyright on the Program, and are irrevocable provided the stated
> conditions are met.  This License explicitly affirms your unlimited
> permission to run the unmodified Program.  The output from running a
> covered work is covered by this License only if the output, given its
> content, constitutes a covered work.  This License acknowledges your
> rights of fair use or other equivalent, as provided by copyright law.
> 
>   You may make, run and propagate covered works that you do not
> convey, without conditions so long as your license otherwise remains
> in force.  You may convey covered works to others for the sole purpose
> of having them make modifications exclusively for you, or provide you
> with facilities for running those works, provided that you comply with
> the terms of this License in conveying all material for which you do
> not control copyright.  Those thus making or running the covered works
> for you must do so exclusively on your behalf, under your direction
> and control, on terms that prohibit them from making any copies of
> your copyrighted material outside their relationship with you.
> 
>   Conveying under any other circumstances is permitted solely under
> the conditions stated below.  Sublicensing is not allowed; section 10
> makes it unnecessary.
> 
>   3. Protecting Users' Legal Rights From Anti-Circumvention Law.
> 
>   No covered work shall be deemed part of an effective technological
> measure under any applicable law fulfilling obligations under article
> 11 of the WIPO copyright treaty adopted on 20 December 1996, or
> similar laws prohibiting or restricting circumvention of such
> measures.
> 
>   When you convey a covered work, you waive any legal power to forbid
> circumvention of technological measures to the extent such circumvention
> is effected by exercising rights under this License with respect to
> the covered work, and you disclaim any intention to limit operation or
> modification of the work as a means of enforcing, against the work's
> users, your or third parties' legal rights to forbid circumvention of
> technological measures.
> 
>   4. Conveying Verbatim Copies.
> 
>   You may convey verbatim copies of the Program's source code as you
> receive it, in any medium, provided that you conspicuously and
> appropriately publish on each copy an appropriate copyright notice;
> keep intact all notices stating that this License and any
> non-permissive terms added in accord with section 7 apply to the code;
> keep intact all notices of the absence of any warranty; and give all
> recipients a copy of this License along with the Program.
> 
>   You may charge any price or no price for each copy that you convey,
> and you may offer support or warranty protection for a fee.
> 
>   5. Conveying Modified Source Versions.
> 
>   You may convey a work based on the Program, or the modifications to
> produce it from the Program, in the form of source code under the
> terms of section 4, provided that you also meet all of these conditions:
> 
>     a) The work must carry prominent notices stating that you modified
>     it, and giving a relevant date.
> 
>     b) The work must carry prominent notices stating that it is
>     released under this License and any conditions added under section
>     7.  This requirement modifies the requirement in section 4 to
>     "keep intact all notices".
> 
>     c) You must license the entire work, as a whole, under this
>     License to anyone who comes into possession of a copy.  This
>     License will therefore apply, along with any applicable section 7
>     additional terms, to the whole of the work, and all its parts,
>     regardless of how they are packaged.  This License gives no
>     permission to license the work in any other way, but it does not
>     invalidate such permission if you have separately received it.
> 
>     d) If the work has interactive user interfaces, each must display
>     Appropriate Legal Notices; however, if the Program has interactive
>     interfaces that do not display Appropriate Legal Notices, your
>     work need not make them do so.
> 
>   A compilation of a covered work with other separate and independent
> works, which are not by their nature extensions of the covered work,
> and which are not combined with it such as to form a larger program,
> in or on a volume of a storage or distribution medium, is called an
> "aggregate" if the compilation and its resulting copyright are not
> used to limit the access or legal rights of the compilation's users
> beyond what the individual works permit.  Inclusion of a covered work
> in an aggregate does not cause this License to apply to the other
> parts of the aggregate.
> 
>   6. Conveying Non-Source Forms.
> 
>   You may convey a covered work in object code form under the terms
> of sections 4 and 5, provided that you also convey the
> machine-readable Corresponding Source under the terms of this License,
> in one of these ways:
> 
>     a) Convey the object code in, or embodied in, a physical product
>     (including a physical distribution medium), accompanied by the
>     Corresponding Source fixed on a durable physical medium
>     customarily used for software interchange.
> 
>     b) Convey the object code in, or embodied in, a physical product
>     (including a physical distribution medium), accompanied by a
>     written offer, valid for at least three years and valid for as
>     long as you offer spare parts or customer support for that product
>     model, to give anyone who possesses the object code either (1) a
>     copy of the Corresponding Source for all the software in the
>     product that is covered by this License, on a durable physical
>     medium customarily used for software interchange, for a price no
>     more than your reasonable cost of physically performing this
>     conveying of source, or (2) access to copy the
>     Corresponding Source from a network server at no charge.
> 
>     c) Convey individual copies of the object code with a copy of the
>     written offer to provide the Corresponding Source.  This
>     alternative is allowed only occasionally and noncommercially, and
>     only if you received the object code with such an offer, in accord
>     with subsection 6b.
> 
>     d) Convey the object code by offering access from a designated
>     place (gratis or for a charge), and offer equivalent access to the
>     Corresponding Source in the same way through the same place at no
>     further charge.  You need not require recipients to copy the
>     Corresponding Source along with the object code.  If the place to
>     copy the object code is a network server, the Corresponding Source
>     may be on a different server (operated by you or a third party)
>     that supports equivalent copying facilities, provided you maintain
>     clear directions next to the object code saying where to find the
>     Corresponding Source.  Regardless of what server hosts the
>     Corresponding Source, you remain obligated to ensure that it is
>     available for as long as needed to satisfy these requirements.
> 
>     e) Convey the object code using peer-to-peer transmission, provided
>     you inform other peers where the object code and Corresponding
>     Source of the work are being offered to the general public at no
>     charge under subsection 6d.
> 
>   A separable portion of the object code, whose source code is excluded
> from the Corresponding Source as a System Library, need not be
> included in conveying the object code work.
> 
>   A "User Product" is either (1) a "consumer product", which means any
> tangible personal property which is normally used for personal, family,
> or household purposes, or (2) anything designed or sold for incorporation
> into a dwelling.  In determining whether a product is a consumer product,
> doubtful cases shall be resolved in favor of coverage.  For a particular
> product received by a particular user, "normally used" refers to a
> typical or common use of that class of product, regardless of the status
> of the particular user or of the way in which the particular user
> actually uses, or expects or is expected to use, the product.  A product
> is a consumer product regardless of whether the product has substantial
> commercial, industrial or non-consumer uses, unless such uses represent
> the only significant mode of use of the product.
> 
>   "Installation Information" for a User Product means any methods,
> procedures, authorization keys, or other information required to install
> and execute modified versions of a covered work in that User Product from
> a modified version of its Corresponding Source.  The information must
> suffice to ensure that the continued functioning of the modified object
> code is in no case prevented or interfered with solely because
> modification has been made.
> 
>   If you convey an object code work under this section in, or with, or
> specifically for use in, a User Product, and the conveying occurs as
> part of a transaction in which the right of possession and use of the
> User Product is transferred to the recipient in perpetuity or for a
> fixed term (regardless of how the transaction is characterized), the
> Corresponding Source conveyed under this section must be accompanied
> by the Installation Information.  But this requirement does not apply
> if neither you nor any third party retains the ability to install
> modified object code on the User Product (for example, the work has
> been installed in ROM).
> 
>   The requirement to provide Installation Information does not include a
> requirement to continue to provide support service, warranty, or updates
> for a work that has been modified or installed by the recipient, or for
> the User Product in which it has been modified or installed.  Access to a
> network may be denied when the modification itself materially and
> adversely affects the operation of the network or violates the rules and
> protocols for communication across the network.
> 
>   Corresponding Source conveyed, and Installation Information provided,
> in accord with this section must be in a format that is publicly
> documented (and with an implementation available to the public in
> source code form), and must require no special password or key for
> unpacking, reading or copying.
> 
>   7. Additional Terms.
> 
>   "Additional permissions" are terms that supplement the terms of this
> License by making exceptions from one or more of its conditions.
> Additional permissions that are applicable to the entire Program shall
> be treated as though they were included in this License, to the extent
> that they are valid under applicable law.  If additional permissions
> apply only to part of the Program, that part may be used separately
> under those permissions, but the entire Program remains governed by
> this License without regard to the additional permissions.
> 
>   When you convey a copy of a covered work, you may at your option
> remove any additional permissions from that copy, or from any part of
> it.  (Additional permissions may be written to require their own
> removal in certain cases when you modify the work.)  You may place
> additional permissions on material, added by you to a covered work,
> for which you have or can give appropriate copyright permission.
> 
>   Notwithstanding any other provision of this License, for material you
> add to a covered work, you may (if authorized by the copyright holders of
> that material) supplement the terms of this License with terms:
> 
>     a) Disclaiming warranty or limiting liability differently from the
>     terms of sections 15 and 16 of this License; or
> 
>     b) Requiring preservation of specified reasonable legal notices or
>     author attributions in that material or in the Appropriate Legal
>     Notices displayed by works containing it; or
> 
>     c) Prohibiting misrepresentation of the origin of that material, or
>     requiring that modified versions of such material be marked in
>     reasonable ways as different from the original version; or
> 
>     d) Limiting the use for publicity purposes of names of licensors or
>     authors of the material; or
> 
>     e) Declining to grant rights under trademark law for use of some
>     trade names, trademarks, or service marks; or
> 
>     f) Requiring indemnification of licensors and authors of that
>     material by anyone who conveys the material (or modified versions of
>     it) with contractual assumptions of liability to the recipient, for
>     any liability that these contractual assumptions directly impose on
>     those licensors and authors.
> 
>   All other non-permissive additional terms are considered "further
> restrictions" within the meaning of section 10.  If the Program as you
> received it, or any part of it, contains a notice stating that it is
> governed by this License along with a term that is a further
> restriction, you may remove that term.  If a license document contains
> a further restriction but permits relicensing or conveying under this
> License, you may add to a covered work material governed by the terms
> of that license document, provided that the further restriction does
> not survive such relicensing or conveying.
> 
>   If you add terms to a covered work in accord with this section, you
> must place, in the relevant source files, a statement of the
> additional terms that apply to those files, or a notice indicating
> where to find the applicable terms.
> 
>   Additional terms, permissive or non-permissive, may be stated in the
> form of a separately written license, or stated as exceptions;
> the above requirements apply either way.
> 
>   8. Termination.
> 
>   You may not propagate or modify a covered work except as expressly
> provided under this License.  Any attempt otherwise to propagate or
> modify it is void, and will automatically terminate your rights under
> this License (including any patent licenses granted under the third
> paragraph of section 11).
> 
>   However, if you cease all violation of this License, then your
> license from a particular copyright holder is reinstated (a)
> provisionally, unless and until the copyright holder explicitly and
> finally terminates your license, and (b) permanently, if the copyright
> holder fails to notify you of the violation by some reasonable means
> prior to 60 days after the cessation.
> 
>   Moreover, your license from a particular copyright holder is
> reinstated permanently if the copyright holder notifies you of the
> violation by some reasonable means, this is the first time you have
> received notice of violation of this License (for any work) from that
> copyright holder, and you cure the violation prior to 30 days after
> your receipt of the notice.
> 
>   Termination of your rights under this section does not terminate the
> licenses of parties who have received copies or rights from you under
> this License.  If your rights have been terminated and not permanently
> reinstated, you do not qualify to receive new licenses for the same
> material under section 10.
> 
>   9. Acceptance Not Required for Having Copies.
> 
>   You are not required to accept this License in order to receive or
> run a copy of the Program.  Ancillary propagation of a covered work
> occurring solely as a consequence of using peer-to-peer transmission
> to receive a copy likewise does not require acceptance.  However,
> nothing other than this License grants you permission to propagate or
> modify any covered work.  These actions infringe copyright if you do
> not accept this License.  Therefore, by modifying or propagating a
> covered work, you indicate your acceptance of this License to do so.
> 
>   10. Automatic Licensing of Downstream Recipients.
> 
>   Each time you convey a covered work, the recipient automatically
> receives a license from the original licensors, to run, modify and
> propagate that work, subject to this License.  You are not responsible
> for enforcing compliance by third parties with this License.
> 
>   An "entity transaction" is a transaction transferring control of an
> organization, or substantially all assets of one, or subdividing an
> organization, or merging organizations.  If propagation of a covered
> work results from an entity transaction, each party to that
> transaction who receives a copy of the work also receives whatever
> licenses to the work the party's predecessor in interest had or could
> give under the previous paragraph, plus a right to possession of the
> Corresponding Source of the work from the predecessor in interest, if
> the predecessor has it or can get it with reasonable efforts.
> 
>   You may not impose any further restrictions on the exercise of the
> rights granted or affirmed under this License.  For example, you may
> not impose a license fee, royalty, or other charge for exercise of
> rights granted under this License, and you may not initiate litigation
> (including a cross-claim or counterclaim in a lawsuit) alleging that
> any patent claim is infringed by making, using, selling, offering for
> sale, or importing the Program or any portion of it.
> 
>   11. Patents.
> 
>   A "contributor" is a copyright holder who authorizes use under this
> License of the Program or a work on which the Program is based.  The
> work thus licensed is called the contributor's "contributor version".
> 
>   A contributor's "essential patent claims" are all patent claims
> owned or controlled by the contributor, whether already acquired or
> hereafter acquired, that would be infringed by some manner, permitted
> by this License, of making, using, or selling its contributor version,
> but do not include claims that would be infringed only as a
> consequence of further modification of the contributor version.  For
> purposes of this definition, "control" includes the right to grant
> patent sublicenses in a manner consistent with the requirements of
> this License.
> 
>   Each contributor grants you a non-exclusive, worldwide, royalty-free
> patent license under the contributor's essential patent claims, to
> make, use, sell, offer for sale, import and otherwise run, modify and
> propagate the contents of its contributor version.
> 
>   In the following three paragraphs, a "patent license" is any express
> agreement or commitment, however denominated, not to enforce a patent
> (such as an express permission to practice a patent or covenant not to
> sue for patent infringement).  To "grant" such a patent license to a
> party means to make such an agreement or commitment not to enforce a
> patent against the party.
> 
>   If you convey a covered work, knowingly relying on a patent license,
> and the Corresponding Source of the work is not available for anyone
> to copy, free of charge and under the terms of this License, through a
> publicly available network server or other readily accessible means,
> then you must either (1) cause the Corresponding Source to be so
> available, or (2) arrange to deprive yourself of the benefit of the
> patent license for this particular work, or (3) arrange, in a manner
> consistent with the requirements of this License, to extend the patent
> license to downstream recipients.  "Knowingly relying" means you have
> actual knowledge that, but for the patent license, your conveying the
> covered work in a country, or your recipient's use of the covered work
> in a country, would infringe one or more identifiable patents in that
> country that you have reason to believe are valid.
> 
>   If, pursuant to or in connection with a single transaction or
> arrangement, you convey, or propagate by procuring conveyance of, a
> covered work, and grant a patent license to some of the parties
> receiving the covered work authorizing them to use, propagate, modify
> or convey a specific copy of the covered work, then the patent license
> you grant is automatically extended to all recipients of the covered
> work and works based on it.
> 
>   A patent license is "discriminatory" if it does not include within
> the scope of its coverage, prohibits the exercise of, or is
> conditioned on the non-exercise of one or more of the rights that are
> specifically granted under this License.  You may not convey a covered
> work if you are a party to an arrangement with a third party that is
> in the business of distributing software, under which you make payment
> to the third party based on the extent of your activity of conveying
> the work, and under which the third party grants, to any of the
> parties who would receive the covered work from you, a discriminatory
> patent license (a) in connection with copies of the covered work
> conveyed by you (or copies made from those copies), or (b) primarily
> for and in connection with specific products or compilations that
> contain the covered work, unless you entered into that arrangement,
> or that patent license was granted, prior to 28 March 2007.
> 
>   Nothing in this License shall be construed as excluding or limiting
> any implied license or other defenses to infringement that may
> otherwise be available to you under applicable patent law.
> 
>   12. No Surrender of Others' Freedom.
> 
>   If conditions are imposed on you (whether by court order, agreement or
> otherwise) that contradict the conditions of this License, they do not
> excuse you from the conditions of this License.  If you cannot convey a
> covered work so as to satisfy simultaneously your obligations under this
> License and any other pertinent obligations, then as a consequence you may
> not convey it at all.  For example, if you agree to terms that obligate you
> to collect a royalty for further conveying from those to whom you convey
> the Program, the only way you could satisfy both those terms and this
> License would be to refrain entirely from conveying the Program.
> 
>   13. Use with the GNU Affero General Public License.
> 
>   Notwithstanding any other provision of this License, you have
> permission to link or combine any covered work with a work licensed
> under version 3 of the GNU Affero General Public License into a single
> combined work, and to convey the resulting work.  The terms of this
> License will continue to apply to the part which is the covered work,
> but the special requirements of the GNU Affero General Public License,
> section 13, concerning interaction through a network will apply to the
> combination as such.
> 
>   14. Revised Versions of this License.
> 
>   The Free Software Foundation may publish revised and/or new versions of
> the GNU General Public License from time to time.  Such new versions will
> be similar in spirit to the present version, but may differ in detail to
> address new problems or concerns.
> 
>   Each version is given a distinguishing version number.  If the
> Program specifies that a certain numbered version of the GNU General
> Public License "or any later version" applies to it, you have the
> option of following the terms and conditions either of that numbered
> version or of any later version published by the Free Software
> Foundation.  If the Program does not specify a version number of the
> GNU General Public License, you may choose any version ever published
> by the Free Software Foundation.
> 
>   If the Program specifies that a proxy can decide which future
> versions of the GNU General Public License can be used, that proxy's
> public statement of acceptance of a version permanently authorizes you
> to choose that version for the Program.
> 
>   Later license versions may give you additional or different
> permissions.  However, no additional obligations are imposed on any
> author or copyright holder as a result of your choosing to follow a
> later version.
> 
>   15. Disclaimer of Warranty.
> 
>   THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
> APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
> HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
> OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
> THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
> PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
> IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
> ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
> 
>   16. Limitation of Liability.
> 
>   IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
> WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
> THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
> GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
> USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
> DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
> PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
> EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
> SUCH DAMAGES.
> 
>   17. Interpretation of Sections 15 and 16.
> 
>   If the disclaimer of warranty and limitation of liability provided
> above cannot be given local legal effect according to their terms,
> reviewing courts shall apply local law that most closely approximates
> an absolute waiver of all civil liability in connection with the
> Program, unless a warranty or assumption of liability accompanies a
> copy of the Program in return for a fee.
> 
>                      END OF TERMS AND CONDITIONS
> 
>             How to Apply These Terms to Your New Programs
> 
>   If you develop a new program, and you want it to be of the greatest
> possible use to the public, the best way to achieve this is to make it
> free software which everyone can redistribute and change under these terms.
> 
>   To do so, attach the following notices to the program.  It is safest
> to attach them to the start of each source file to most effectively
> state the exclusion of warranty; and each file should have at least
> the "copyright" line and a pointer to where the full notice is found.
> 
>     <one line to give the program's name and a brief idea of what it does.>
>     Copyright (C) <year>  <name of author>
> 
>     This program is free software: you can redistribute it and/or modify
>     it under the terms of the GNU General Public License as published by
>     the Free Software Foundation, either version 3 of the License, or
>     (at your option) any later version.
> 
>     This program is distributed in the hope that it will be useful,
>     but WITHOUT ANY WARRANTY; without even the implied warranty of
>     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
>     GNU General Public License for more details.
> 
>     You should have received a copy of the GNU General Public License
>     along with this program.  If not, see <http://www.gnu.org/licenses/>.
> 
> Also add information on how to contact you by electronic and paper mail.
> 
>   If the program does terminal interaction, make it output a short
> notice like this when it starts in an interactive mode:
> 
>     <program>  Copyright (C) <year>  <name of author>
>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
>     This is free software, and you are welcome to redistribute it
>     under certain conditions; type `show c' for details.
> 
> The hypothetical commands `show w' and `show c' should show the appropriate
> parts of the General Public License.  Of course, your program's commands
> might be different; for a GUI interface, you would use an "about box".
> 
>   You should also get your employer (if you work as a programmer) or school,
> if any, to sign a "copyright disclaimer" for the program, if necessary.
> For more information on this, and how to apply and follow the GNU GPL, see
> <http://www.gnu.org/licenses/>.
> 
>   The GNU General Public License does not permit incorporating your program
> into proprietary programs.  If your program is a subroutine library, you
> may consider it more useful to permit linking proprietary applications with
> the library.  If this is what you want to do, use the GNU Lesser General
> Public License instead of this License.  But first, please read
> <http://www.gnu.org/philosophy/why-not-lgpl.html>.
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/LICENSE lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/LICENSE
1,8c1,8
< ﻿After version 0.9.x of Saaghar, some internal components of it are dual licensed. This means Saaghar is dual licenced, too.
< GPL:
<    for Open Source development.
< 
< Commercial licence:
<    for other users.
< 
< If you want to purchase a commercial licence, please contact me by sending an email to: s.r.alavizadeh@gmail.com .
---
> ﻿After version 0.9.x of Saaghar, some internal components of it are dual licensed. This means Saaghar is dual licenced, too.
> GPL:
>    for Open Source development.
> 
> Commercial licence:
>    for other users.
> 
> If you want to purchase a commercial licence, please contact me by sending an email to: s.r.alavizadeh@gmail.com .
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/locale/locale.pri lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/locale/locale.pri
1,5c1,5
< TRANSLATIONS += $$PWD/saaghar_fa.ts
< 
< utilities.files += \
<     $$PWD/saaghar_fa.qm \
<     $$PWD/qt_fa.qm
---
> TRANSLATIONS += $$PWD/saaghar_fa.ts
> 
> utilities.files += \
>     $$PWD/saaghar_fa.qm \
>     $$PWD/qt_fa.qm
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/locale/saaghar_fa.ts lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/locale/saaghar_fa.ts
1,3341c1,3341
< <?xml version="1.0" encoding="utf-8"?>
< <!DOCTYPE TS>
< <TS version="2.1" language="fa_IR">
< <context>
<     <name>AboutDialog</name>
<     <message>
<         <location filename="../src/aboutdialog.ui" line="20"/>
<         <location filename="../src/aboutdialog.cpp" line="33"/>
<         <source>About Saaghar</source>
<         <translation>درباره ساغر</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.ui" line="58"/>
<         <source>Close</source>
<         <translation>بستن</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="89"/>
<         <source>Revision: %1&lt;br /&gt;</source>
<         <translation>ویرایش: %1 &lt;br /&gt;</translation>
<     </message>
<     <message>
<         <source>Telegram Channel (Persian): </source>
<         <translation type="vanished">کانال تلگرام:</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="94"/>
<         <source>Telegram Channel: </source>
<         <translation>کانال تلگرام: ‎</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="95"/>
<         <source>Telegram Bot: </source>
<         <translation>ربات تلگرام: ‎</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="97"/>
<         <source>Site (English): </source>
<         <translation>تارنما (انگلیسی):  </translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="98"/>
<         <source>Site (Persian): </source>
<         <translation>تارنما (پارسی):  </translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="99"/>
<         <source>Mailing List: </source>
<         <translation>خبرنامه ایمیلی:  </translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="99"/>
<         <source>Saaghar Google Group</source>
<         <translation>گروه گوگلی ساغر</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="100"/>
<         <source>Facebook Page: </source>
<         <translation>صفحه فیسبوک:  </translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="103"/>
<         <source>Nasser Alavizadeh</source>
<         <translation>ناصر علوی‌زاده</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="103"/>
<         <source>(Logo Idea/Design)</source>
<         <translation>(ایده/طراحی نماد)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="104"/>
<         <source>Hamid Reza Mohammadi</source>
<         <translation>حمیدرضا محمدی</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="104"/>
<         <source>(Ganjoor Founder)</source>
<         <translation>(پدیدآورنده گنجور)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="106"/>
<         <source>Hedayat Vatankhah</source>
<         <translation>هدایت وطن‌خواه</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="106"/>
<         <source>(Fedora/MeeGo Package)</source>
<         <translation>(بسته فدورا/میگو)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="107"/>
<         <source>Forud A</source>
<         <translation>فرود</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="107"/>
<         <source>(Arch Package)</source>
<         <translation>(بسته آرچ)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="108"/>
<         <source>Javad Kouhi</source>
<         <translation>جواد کوهی</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="108"/>
<         <source>(BSD Port)</source>
<         <translation>(پورت BSD)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="109"/>
<         <source>Novid</source>
<         <translation>نوید</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="109"/>
<         <location filename="../src/aboutdialog.cpp" line="110"/>
<         <source>(Ubuntu Package)</source>
<         <translation>(بسته اوبونتو)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="110"/>
<         <source>Danial Behzadi</source>
<         <translation>دانیال بهزادی</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="112"/>
<         <source>Siyvash Kiani</source>
<         <translation>سیاوش کیانی</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="112"/>
<         <source>(Expert Assistance in Literature)</source>
<         <translation>(همکاری در تخصص ادبیات)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="113"/>
<         <source>Sahand Soltandoost</source>
<         <translation>سهند سلطان‌دوست</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="113"/>
<         <source>(Light-Gray Iconset)</source>
<         <translation>(مجموعه نماد Light-Gray)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="114"/>
<         <source>Open Iconic Project</source>
<         <translation>پروژه Open Iconic</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="114"/>
<         <source>(Iconic-Cyan Iconset, &lt;i&gt;modified version&lt;/i&gt;)</source>
<         <translation>(مجموعه نماد Iconic-Cyan, &lt;i&gt;نسخه ویرایش‌شده&lt;/i&gt;)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="115"/>
<         <source>Qt Creator Team</source>
<         <translation>تیم Qt Creator</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="115"/>
<         <source>(Code of Tasks Notification)</source>
<         <translation>(کد اعلان وظیفه‌ها)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="116"/>
<         <source>QIron Developer</source>
<         <translation>توسعه‌دهنده QIron</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="116"/>
<         <source>(Code of BreadCrumbBar)</source>
<         <translation>(کد BreadCrumbBar)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="117"/>
<         <source>All Ganjoor Project Contributors</source>
<         <translation>تمامی همکاری‌کننده‌ها در پروژه گنجور</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="117"/>
<         <source>(Persian-Datasets/Audio)</source>
<         <translation>(پایگاه‌داده پارسی-خوانش‌ها)</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="120"/>
<         <source>&lt;br /&gt;&lt;br /&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</source>
<         <translation>&lt;br /&gt;&lt;p dir=&quot;rtl&quot;&gt;ساغر برنامه‌ای رایگان و آزاد است و با امید به اینکه مفید و قابل استفاده باشد، منتشر شده است، اما بدون هیچ ضمانتی؛ حتی بدون ضمانت تجاری یا سازگاری برای هدف خاصی.&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&lt;/p&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="124"/>
<         <source>&lt;h3&gt;Saaghar %1&lt;/h3&gt;%2Build Time: %3&lt;br /&gt;&lt;br /&gt;%4 is a Persian poem viewer software written using Qt (C++). It uses %5 database for Persian poems.&lt;br /&gt;&lt;br /&gt;%6&lt;h4&gt;Related Pages:&lt;/h4&gt;%7&lt;h4&gt;Special Thanks to:&lt;/h4&gt;%8%9</source>
<         <translation>&lt;h3&gt;ساغر %1&lt;/h3&gt;%2تاریخ ساخت: %3&lt;br /&gt;&lt;br /&gt;%4 نرم‌افزار نمایش شعر پارسی است که با استفاده از Qt (C++)‎ نوشته شده است. برای متن‌ها و شعرهای پارسی از پایگاه‌داده %5 استفاده می‌کند.&lt;br /&gt;&lt;br /&gt;%6&lt;h4&gt;صفحه‌های مرتبط:&lt;/h4&gt;%7&lt;h4&gt;تشکر ویژه از:&lt;/h4&gt;%8%9</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="131"/>
<         <source>Saaghar</source>
<         <translation>ساغر</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="132"/>
<         <source>Ganjoor</source>
<         <translation>گنجور</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="133"/>
<         <source>Copyright 2010-2016 %1. All right reserved.</source>
<         <translation>حق مولف ۲۰۱۰-۲۰۱۶ (۱۳۸۹-۱۳۹۵) %1. تمام حقوق محفوظ است.</translation>
<     </message>
<     <message>
<         <location filename="../src/aboutdialog.cpp" line="133"/>
<         <source>Razi Alavizadeh</source>
<         <translation>رضی علوی‌زاده</translation>
<     </message>
< </context>
< <context>
<     <name>AlbumManager</name>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1598"/>
<         <source>Save this album</source>
<         <translation>رونوشت آلبوم</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1599"/>
<         <source>Load Album...</source>
<         <translation>بارگذاری آلبوم...</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1600"/>
<         <source>New Album...</source>
<         <translation>آلبوم تازه...</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1602"/>
<         <source>Rename this album...</source>
<         <translation>تغییر نام آلبوم...</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1603"/>
<         <source>Remove this album...</source>
<         <translation>حذف آلبوم...</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1604"/>
<         <source>Save as this album...</source>
<         <translation>رونوشت‌برداری از آلبوم...</translation>
<     </message>
< </context>
< <context>
<     <name>AudioRepoDownloader</name>
<     <message>
<         <source>Data Base Updater</source>
<         <translation type="vanished">بروز رسان پایگاه‌داده</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="17"/>
<         <source>Get New Audios</source>
<         <translation>دریافت خوانش‌های تازه</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="27"/>
<         <source>Download to Album:</source>
<         <translation>دریافت به آلبوم:</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="37"/>
<         <source>You have to set album location...</source>
<         <translation>باید پرونده آلبوم را انتخاب کنید...</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="44"/>
<         <source>Browse</source>
<         <translation>گزیدن</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="55"/>
<         <source>Select and click &apos;Download &amp; Add to Album&apos; button.</source>
<         <translation>انتخاب کرده و بر روی دکمه «دریافت و اضافه کردن به آلبوم» کلیک کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="112"/>
<         <source>Title</source>
<         <translation>سرنویس</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="117"/>
<         <source>Size</source>
<         <translation>اندازه</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="129"/>
<         <source>Group By:</source>
<         <translation>گروه‌بندی برحسب:</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="136"/>
<         <source>Poet</source>
<         <translation>سخن‌سرا</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="143"/>
<         <source>Voice</source>
<         <translation>صدا</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="154"/>
<         <source>Collapse All</source>
<         <translation>جمع کردن</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="161"/>
<         <source>Expand All</source>
<         <translation>گستردن</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="185"/>
<         <source>Keep Downloaded Files</source>
<         <translation>بایگانی پرونده‌های دریافت شده</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="208"/>
<         <source>Download Progress:</source>
<         <translation>پیشرفت دریافت:</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="241"/>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="756"/>
<         <source>Download &amp;&amp; Add to Album</source>
<         <translation>دریافت و اضافه کردن به آلبوم</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="248"/>
<         <source>Close</source>
<         <translation>بستن</translation>
<     </message>
<     <message>
<         <source>Cancel</source>
<         <translation type="vanished">رد</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="203"/>
<         <source>KB</source>
<         <translation>کیلو بایت</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="220"/>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="564"/>
<         <source>Not Available</source>
<         <translation>نامشخص</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="225"/>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="569"/>
<         <source>%1 (voice: %2)</source>
<         <translation>%1 (صدا: %2)</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="226"/>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="570"/>
<         <source>%1 (poet: %2)</source>
<         <translation>%1 (سخن‌سرا: %2)</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="279"/>
<         <source>Select From Repositories List...</source>
<         <translation>از بین فهرست مخزن‌ها انتخاب کنید...</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="281"/>
<         <source>Click To Add/Remove...</source>
<         <translation>برای حذف/اضافه کلیک کنید...</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="468"/>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="661"/>
<         <source>Error!</source>
<         <translation>خطا!</translation>
<     </message>
<     <message>
<         <source>You have not write permission to database file, the import procedure can not proceed.
< DataBase Path: %2</source>
<         <translation type="vanished">به پرونده پایگاه‌داده دسترسی نوشتنی ندارید، فرایند افزودن نَسک تازه نمی‌تواند ادامه پیدا کند.
< مسیر پایگاه‌داده: %2</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="696"/>
<         <source>Warning!</source>
<         <translation>هشدار!‏ </translation>
<     </message>
<     <message>
<         <source>There are some conflict with your installed database. If you continue, these poets will be removed!</source>
<         <translation type="vanished">بخش‌هایی از نَسک تازه در پایگاه‌داده نصب شده موجودند. اگر ادامه دهید سخن‌سرایانی که این بخش‌ها را دربرمی‌گیرند از پایگاه‌داده فعلی حذف خواهند شد!</translation>
<     </message>
<     <message>
<         <source>These poets are present in installed database:
< </source>
<         <translation type="vanished">سخن‌سراهایی که در پایگاه‌داده فعلی موجودند:</translation>
<     </message>
<     <message>
<         <source>There are some errors, the import procedure was not completed</source>
<         <translation type="vanished">خطایی رخ داده است، فرایند افزودن نَسک تازه کامل نشد</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="368"/>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="370"/>
<         <source>Please select download location...</source>
<         <translation>لطفا مکان دریافت را انتخاب کنید...</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="391"/>
<         <source>Present in Album</source>
<         <translation>موجود در آلبوم</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="399"/>
<         <source>Not in Album</source>
<         <translation>ناموجود در آلبوم</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="468"/>
<         <source>Can not create temp path.</source>
<         <translation>نمی‌تواند مسیر موقت را بسازد.</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="597"/>
<         <source>Select Album to Download Audios</source>
<         <translation>برای دریافت خوانش‌ها آلبومی را انتخاب کنید</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="652"/>
<         <source>Stop</source>
<         <translation>توقف</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="661"/>
<         <source>Can not create download path.</source>
<         <translation>نمی‌تواند مسیر دریافت را بسازد.</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="677"/>
<         <source>Finished!</source>
<         <translation>تمام!</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="697"/>
<         <source>Download in progress! Are you sure to stop downloading?</source>
<         <translation>فرایند دریافت در جریان است! آیا از متوقف کردن دریافت اطمینان داری؟</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="731"/>
<         <source>MP3 file</source>
<         <translation>پرونده MP3</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="732"/>
<         <source>sync. file</source>
<         <translation>پرونده همگام‌سازی</translation>
<     </message>
<     <message>
<         <source>Download &amp;&amp; Install</source>
<         <translation type="vanished">دریافت و نصب</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="794"/>
<         <source>Add/Remove Repository Address</source>
<         <translation>حذف/اضافه آدرس مخزن</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="796"/>
<         <source>Insert each address in a separate line!</source>
<         <translation>هر آدرس را در خط جداگانه‌ای وارد کنید!</translation>
<     </message>
< </context>
< <context>
<     <name>Bookmarks</name>
<     <message>
<         <location filename="../src/bookmarks.cpp" line="64"/>
<         <source>Title</source>
<         <translation>سرنویس</translation>
<     </message>
<     <message>
<         <location filename="../src/bookmarks.cpp" line="64"/>
<         <source>Comments</source>
<         <translation>توضیحات</translation>
<     </message>
<     <message>
<         <location filename="../src/bookmarks.cpp" line="179"/>
<         <location filename="../src/bookmarks.cpp" line="209"/>
<         <location filename="../src/bookmarks.cpp" line="294"/>
<         <location filename="../src/bookmarks.cpp" line="315"/>
<         <location filename="../src/bookmarks.cpp" line="320"/>
<         <source>Verses</source>
<         <translation>چامه‌ها</translation>
<     </message>
<     <message>
<         <location filename="../src/bookmarks.cpp" line="467"/>
<         <source>Bookmark</source>
<         <translation>نشان</translation>
<     </message>
<     <message>
<         <location filename="../src/bookmarks.cpp" line="468"/>
<         <source>This bookmark has comment if you remove it, the comment will be deleted, too.
< This operation can not be undoed!
< Bookmark&apos;s&apos; Title:
< %1
< 
< Bookmark&apos;s Comment:
< %2</source>
<         <translation>این نشان دارای توضیحات است، اگر آن را بردارید توضیحات مربوط به آن نیز پاک خواهد شد.
< این عمل پاک کردن برگشت‌ناپذیر است!
< سرنویس:
< %1
< 
< توضیحات:
< %2</translation>
<     </message>
< </context>
< <context>
<     <name>ConcurrentTask</name>
<     <message>
<         <location filename="../src/concurrenttasks.cpp" line="438"/>
<         <source>Update: %1</source>
<         <translation>بروزرسانی: %1</translation>
<     </message>
<     <message>
<         <location filename="../src/concurrenttasks.cpp" line="438"/>
<         <source>Canceled by user</source>
<         <translation>توسط کاربر باطل شد</translation>
<     </message>
<     <message>
<         <location filename="../src/concurrenttasks.cpp" line="438"/>
<         <source>Error ocurred</source>
<         <translation>خطا رخ داد</translation>
<     </message>
< </context>
< <context>
<     <name>CustomizeRandomDialog</name>
<     <message>
<         <location filename="../src/settings.cpp" line="480"/>
<         <source>Customize Faal &amp; Random</source>
<         <translation>شخصی‌سازی فال و بخت‌آورد</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.cpp" line="481"/>
<         <source>Open in new Tab</source>
<         <translation>در صفحه جدید بازکن</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.cpp" line="482"/>
<         <source>Select Random Range:</source>
<         <translation>انتخاب محدوده بخت‌آورد:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.cpp" line="483"/>
<         <source>Ok</source>
<         <translation>قبول</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.cpp" line="484"/>
<         <source>Cancel</source>
<         <translation>رد</translation>
<     </message>
< </context>
< <context>
<     <name>DataBaseUpdater</name>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="17"/>
<         <source>Data Base Updater</source>
<         <translation>بروز رسان پایگاه‌داده</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="179"/>
<         <source>Select From Repositories List...</source>
<         <translation>از بین فهرست مخزن‌ها انتخاب کنید...</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="60"/>
<         <source>Select and click &apos;Download &amp; Install&apos; button.</source>
<         <translation>انتخاب کنید و بر روی دکمه «دریافت و نصب» کلیک کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="71"/>
<         <source>Title</source>
<         <translation>سرنویس</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="76"/>
<         <source>Size</source>
<         <translation>اندازه</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="81"/>
<         <source>Release Date</source>
<         <translation>تاریخ انتشار</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="86"/>
<         <source>Information</source>
<         <translation>اطلاعات</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="94"/>
<         <source>Keep Downloaded Files</source>
<         <translation>بایگانی پرونده‌های دریافت شده</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="109"/>
<         <source>Download Location:</source>
<         <translation>مکان دریافت:</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="262"/>
<         <location filename="../src/databaseupdater.cpp" line="264"/>
<         <source>Please select download location...</source>
<         <translation>لطفا مکان دریافت را انتخاب کنید...</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="119"/>
<         <source>Browse</source>
<         <translation>گزیدن</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="131"/>
<         <source>Download Progress:</source>
<         <translation>پیشرفت دریافت:</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="164"/>
<         <location filename="../src/databaseupdater.cpp" line="564"/>
<         <source>Download &amp;&amp; Install</source>
<         <translation>دریافت و نصب</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.ui" line="171"/>
<         <source>Cancel</source>
<         <translation>رد</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="129"/>
<         <source>KB</source>
<         <translation>کیلو بایت</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="168"/>
<         <source>Go to Release Information</source>
<         <translation>رفتن به اطلاعات انتشار</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="181"/>
<         <source>Click To Add/Remove...</source>
<         <translation>برای حذف/اضافه کلیک کنید...</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="287"/>
<         <source>Installed</source>
<         <translation>نصب شده</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="295"/>
<         <source>Ready To Install</source>
<         <translation>آماده برای نصب</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="191"/>
<         <location filename="../src/databaseupdater.cpp" line="240"/>
<         <location filename="../src/databaseupdater.cpp" line="359"/>
<         <location filename="../src/databaseupdater.cpp" line="437"/>
<         <source>Error!</source>
<         <translation>خطا!</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="359"/>
<         <source>Can not create temp path.</source>
<         <translation>نمی‌تواند مسیر موقت را بسازد.</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="410"/>
<         <source>Select Download Location</source>
<         <translation>انتخاب مکان دریافت</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="417"/>
<         <source>Stop</source>
<         <translation>توقف</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="203"/>
<         <location filename="../src/databaseupdater.cpp" line="426"/>
<         <location filename="../src/databaseupdater.cpp" line="505"/>
<         <source>Warning!</source>
<         <translation>هشدار!‏ </translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="191"/>
<         <source>You have not write permission to database file, the import procedure can not proceed.
< DataBase Path: %2</source>
<         <translation>به پرونده پایگاه‌داده دسترسی نوشتنی ندارید، فرایند افزودن نَسک تازه نمی‌تواند ادامه پیدا کند.
< مسیر پایگاه‌داده: %2</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="205"/>
<         <source>There are some conflict with your installed database. If you continue, these poets will be removed!</source>
<         <translation>بخش‌هایی از نَسک تازه در پایگاه‌داده نصب شده موجودند. اگر ادامه دهید سخن‌سرایانی که این بخش‌ها را دربرمی‌گیرند از پایگاه‌داده فعلی حذف خواهند شد!</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="206"/>
<         <source>These poets are present in installed database:
< </source>
<         <translation>سخن‌سراهایی که در پایگاه‌داده فعلی موجودند:</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="240"/>
<         <source>There are some errors, the import procedure was not completed</source>
<         <translation>خطایی رخ داده است، فرایند افزودن نَسک تازه کامل نشد</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="426"/>
<         <source>Please select download location.</source>
<         <translation>لطفا مکان دریافت را انتخاب کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="437"/>
<         <source>Can not create download path.</source>
<         <translation>نمی‌تواند مسیر دریافت را بسازد.</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="486"/>
<         <source>Finished!</source>
<         <translation>تمام!</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="506"/>
<         <source>Download in progress! Are you sure to stop downloading?</source>
<         <translation>دریافت در جریان است! آیا از متوقف کردن دریافت اطمینان داری؟</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="727"/>
<         <source>Insert each address in a separate line!</source>
<         <translation>هر آدرس را در خط جداگانه‌ای وارد کنید!</translation>
<     </message>
<     <message>
<         <source>Download in progress! Are you sure to stop downloading?.</source>
<         <translation type="obsolete">دریافت در جریان است! آیا از متوقف کردن دریافت اطمینان داری؟</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="546"/>
<         <source>Installing...</source>
<         <translation>در حال نصب...</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="549"/>
<         <source>Installed.</source>
<         <translation>نصب شد.</translation>
<     </message>
<     <message>
<         <location filename="../src/databaseupdater.cpp" line="725"/>
<         <source>Add/Remove Repository Address</source>
<         <translation>حذف/اضافه آدرس مخزن</translation>
<     </message>
<     <message>
<         <source>Insert each address in its own line!</source>
<         <translation type="obsolete">هر آدرس را در خط خودش وارد کنید!</translation>
<     </message>
< </context>
< <context>
<     <name>DatabaseBrowser</name>
<     <message>
<         <location filename="../src/concurrenttasks.cpp" line="380"/>
<         <source>Search Result(s): %1</source>
<         <translation>یافته‌ها: %1</translation>
<     </message>
<     <message>
<         <location filename="../src/concurrenttasks.cpp" line="391"/>
<         <source>Last-Search Result(s): %1</source>
<         <translation>آخرین یافته‌ها: %1</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="99"/>
<         <source>Data Base Path:</source>
<         <translation>مسیر پایگاه‌داده:</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="100"/>
<         <source>Error:</source>
<         <translation>خطا:</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="100"/>
<         <source>No Error!</source>
<         <translation>بدون خطا!</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="109"/>
<         <source>Add Path For Data Base</source>
<         <translation>اضافه کردن مسیر برای پایگاه‌داده</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="123"/>
<         <location filename="../src/databasebrowser.cpp" line="137"/>
<         <source>Exit</source>
<         <translation>خروح</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="123"/>
<         <location filename="../src/databasebrowser.cpp" line="137"/>
<         <source>Saaghar could not find database file and will be closed.</source>
<         <translation>ساغر فایل پایگاه‌داده را پیدا نمی‌کند و بسته خواهد شد.</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="131"/>
<         <source>Select Save Location</source>
<         <translation>انتخاب مکان برای رونوشت</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="163"/>
<         <source>Cannot open Database File!</source>
<         <translation>پرونده پایگاه‌داده باز نمی‌شود!</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="163"/>
<         <source>Cannot open database file, please check if you have write permisson.
< Error: %1
< DataBase Path=%2</source>
<         <translation>پرونده پایگاه‌داده باز نمی‌شود، لطفا بررسی کنید که آیا دسترسی نوشتنی دارید.
< خطا: %1
< مسیر پایگاه‌داده: %2</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="550"/>
<         <location filename="../src/databasebrowser.cpp" line="570"/>
<         <source>All</source>
<         <translation>همه</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="1213"/>
<         <source>Search: </source>
<         <translation>جستجو:</translation>
<     </message>
<     <message>
<         <source>Titles</source>
<         <translation type="vanished">سرنویس‌ها</translation>
<     </message>
<     <message>
<         <source>Search in: </source>
<         <translation type="vanished">جستجو در:</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="1697"/>
<         <source>Select data sets to install</source>
<         <translation>انتخاب مجموعه‌داده برای نصب</translation>
<     </message>
< </context>
< <context>
<     <name>Dialog</name>
<     <message>
<         <location filename="../src/downloader/authenticationdialog.ui" line="13"/>
<         <source>Http authentication required</source>
<         <translation>تصدیق اعتبار HTTP لازم است</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/authenticationdialog.ui" line="19"/>
<         <source>You need to supply a Username and a Password to access this site</source>
<         <translation>شما باید یک نام کاربری و یک کلمه عبور برای دسترسی به این تارنما داشته باشید</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/authenticationdialog.ui" line="29"/>
<         <source>Username:</source>
<         <translation>نام کاربری:</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/authenticationdialog.ui" line="39"/>
<         <source>Password:</source>
<         <translation>کلمه عبور:</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/authenticationdialog.ui" line="59"/>
<         <source>Site:</source>
<         <translation>تارنما:</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/authenticationdialog.ui" line="72"/>
<         <source>%1 at %2</source>
<         <translation>%1 در %2</translation>
<     </message>
< </context>
< <context>
<     <name>Downloader</name>
<     <message>
<         <location filename="../src/downloader/downloader.cpp" line="91"/>
<         <source>Downloading...</source>
<         <translation>در حال دریافت...</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/downloader.cpp" line="94"/>
<         <source> is downloading...</source>
<         <translation>‫ در حال دریافت است...‬</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/downloader.cpp" line="118"/>
<         <location filename="../src/downloader/downloader.cpp" line="134"/>
<         <location filename="../src/downloader/downloader.cpp" line="198"/>
<         <location filename="../src/downloader/downloader.cpp" line="338"/>
<         <source>Downloader</source>
<         <translation>دریافت‌کننده</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/downloader.cpp" line="118"/>
<         <source>There already exists a file called %1 in %2. Overwrite?</source>
<         <translation>پرونده‌ای با نام %1 در %2 وجود دارد. رونویسی شود؟</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/downloader.cpp" line="135"/>
<         <source>Unable to save the file %1: %2.</source>
<         <translation>قادر به ذخیره‌سازی پرونده %1 نیست: %2.</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/downloader.cpp" line="153"/>
<         <source>Download canceled.</source>
<         <translation>دریافت باطل شد.</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/downloader.cpp" line="199"/>
<         <source>Download failed: %1.</source>
<         <translation>خطا در دریافت: %1.</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/downloader.cpp" line="212"/>
<         <source>Download Completed.</source>
<         <translation>دریافت کامل شد.</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/downloader.cpp" line="289"/>
<         <source>%1 at %2</source>
<         <translation>%1 در %2</translation>
<     </message>
<     <message>
<         <location filename="../src/downloader/downloader.cpp" line="339"/>
<         <source>One or more SSL errors has occurred: %1</source>
<         <translation>یک یا چند خطای SSL رخ داده است: %1</translation>
<     </message>
< </context>
< <context>
<     <name>FontColorSelector</name>
<     <message>
<         <location filename="../src/settings.cpp" line="502"/>
<         <source>Font Sample!</source>
<         <translation>نمونه قلم!</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.cpp" line="509"/>
<         <source>Set Font...</source>
<         <translation>انتخاب قلم...</translation>
<     </message>
< </context>
< <context>
<     <name>ImporterManager</name>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="118"/>
<         <source>The poems will import to the following category:</source>
<         <translation>چامه‌ها به این بخش افزوده خواهند شد:</translation>
<     </message>
<     <message>
<         <source>Select or Create a Poet or Book...</source>
<         <translation type="vanished">کتاب یا سخن‌سرایی را انتخاب کرده یا بسازید...</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="128"/>
<         <source>Import...</source>
<         <translation>افزودن...</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="129"/>
<         <source>Clear</source>
<         <translation>پاک کردن</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="186"/>
<         <location filename="../src/importer/importermanager.cpp" line="210"/>
<         <source>N/A</source>
<         <translation>در دسترس نیست</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="186"/>
<         <location filename="../src/importer/importermanager.cpp" line="210"/>
<         <source> &gt; </source>
<         <translation> » </translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="187"/>
<         <location filename="../src/importer/importermanager.cpp" line="208"/>
<         <location filename="../src/importer/importermanager.cpp" line="212"/>
<         <source>No poem title detected!</source>
<         <translation>سرنویس چامه تشخیص داده نشد!</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="372"/>
<         <source>Create a Category...</source>
<         <translation>ساختن بخش‌...</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="375"/>
<         <source>Select or Create a Category...</source>
<         <translation>انتخاب یا ساخت بخش‌...</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="454"/>
<         <source>Import</source>
<         <translation>درون‌ریزی</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="475"/>
<         <source>Ok</source>
<         <translation>قبول</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="450"/>
<         <location filename="../src/importer/importermanager.cpp" line="455"/>
<         <source>Data will import as subsections of the following category:
< %1</source>
<         <translation>داده‌ها به عنوان زیربخش‌های از این بخش افزوده خواهند شد:
< %1</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="126"/>
<         <source>Set Bio./Desc...</source>
<         <translation>اضافه کردن زندگی‌نامه/شرح...</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="127"/>
<         <location filename="../src/importer/importermanager.cpp" line="423"/>
<         <source>Select or Create a Poet/Book...</source>
<         <translation>انتخاب یا ایجاد سخن‌سرا/کتاب...</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="456"/>
<         <source> &gt; 
< 	</source>
<         <translation> » 
< 	</translation>
<     </message>
< </context>
< <context>
<     <name>ImporterOptionsDialog</name>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="14"/>
<         <source>Importer Options</source>
<         <translation>گزینه‌های درون‌ریزی</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="27"/>
<         <source>Content</source>
<         <translation>محتوا</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="58"/>
<         <source>Plain Text Preview</source>
<         <translation>پیش‌نمایش متنی</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="90"/>
<         <source>HTML Preview</source>
<         <translation>پیش‌نمایش HTML</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="122"/>
<         <source>Editable Text</source>
<         <translation>متن قابل ویرایش</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="157"/>
<         <source>Content Type:</source>
<         <translation>نوع محتوا:</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="164"/>
<         <source>File name:</source>
<         <translation>نام پرونده:</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="171"/>
<         <source>Normal Text</source>
<         <translation>نثر</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="178"/>
<         <source>Poems Title pattern:</source>
<         <translation>الگوی سرنویس چامه‌ها:</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="185"/>
<         <source>Classical Poem</source>
<         <translation>چامه</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="192"/>
<         <source>White Poem</source>
<         <translation>نیمایی/آزاد</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="215"/>
<         <source>Close</source>
<         <translation>بستن</translation>
<     </message>
<     <message>
<         <source>Cancel</source>
<         <translation type="vanished">رد</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="222"/>
<         <source>Import</source>
<         <translation>درون‌ریزی</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="229"/>
<         <source>Preview</source>
<         <translation>پیش‌نمایش</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.ui" line="249"/>
<         <source>Browse</source>
<         <translation>گزیدن</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importeroptionsdialog.cpp" line="171"/>
<         <source>Select File To Import...</source>
<         <translation>انتخاب پرونده جهت درون‌ریزی...</translation>
<     </message>
< </context>
< <context>
<     <name>NoDataBaseDialog</name>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="20"/>
<         <source>There is no data base!</source>
<         <translation>پایگاه‌داده موجود نیست!</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="52"/>
<         <source>Saaghar can not open the database file, Saaghar needs its database for working properly. Choose one of the following options.</source>
<         <translation>ساغر نمی‌تواند فایل پایگاه‌داده را باز کند، برای کارکرد درست ساغر به پایگاه‌داده‌اش نیاز دارد. یکی از گزینه‌های در دسترس را انتخاب کنید.</translation>
<     </message>
<     <message>
<         <source>Nothing to do, just exit!</source>
<         <translation type="obsolete">لازن تیست کاری انجام شود، خروج!</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="65"/>
<         <source>Exit!</source>
<         <translation>خروج!</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="81"/>
<         <source>&lt;p&gt;By selecting this option opens a dialog, and you should select a path containing &apos;ganjoor.s3db&apos; file. Then Saaghar starts by setting it as its default data base!&lt;/p&gt;</source>
<         <translation>&lt;p&gt;با انتخاب این گزینه پنجره محاوره‌ای باز می‌شود و شما باید مسیری را که شامل فایل «ganjoor.s3db» می‌باشد انتخاب کنید. آنگاه ساغر با انتخاب این پایگاه‌داده به عنوان پایگاه‌داده پیش‌فرضش آغاز به کار می‌کند!&lt;/p&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="84"/>
<         <source>By selecting this option opens a dialog, and you should select a path containing &apos;ganjoor.s3db&apos; file. Then Saaghar starts by setting it as its default data base!</source>
<         <translation>با انتخاب این گزینه پنجره محاوره‌ای باز می‌شود و شما باید مسیری را که شامل فایل «ganjoor.s3db» می‌باشد انتخاب کنید. آنگاه ساغر با انتخاب این پایگاه‌داده به عنوان پایگاه‌داده پیش‌فرضش آغاز به کار می‌کند!</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="87"/>
<         <source>Select new path for  data base</source>
<         <translation>مسیر تازه‌ای برای پایگاه‌داده انتخاب کنید</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="96"/>
<         <source>Select folder containing &apos;ganjoor.s3db&apos; file!</source>
<         <translation>پوشه‌ای که شامل «ganjoor.s3db» باشد را انتخاب کنید!</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="103"/>
<         <source>&lt;p&gt;Firstly a dialog appears for select a path for saving &apos;ganjoor.s3db&apos; file. It has not to contain &apos;ganjoor.s3db&apos;! And then a dialog appears that you should select the data sets you want to install.&lt;/p&gt;</source>
<         <translation>&lt;p&gt;در ابتدا پنجره محاوره‌ای برای انتخاب مکان رونوشت فایل «ganjoor.s3db» نمایش داده می‌شود. که این مکان نباید شامل «ganjoor.s3db» باشد و آنگاه مجموعه‌داده‌هایی را که می‌خواهید نصب کنید، انتخاب کنید.&lt;/p&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="106"/>
<         <source>Firstly a dialog appears for select a path for saving &apos;ganjoor.s3db&apos; file. It has not to contain &apos;ganjoor.s3db&apos;! And then a dialog appears that you should select the data sets you want to install.</source>
<         <translation>در ابتدا پنجره محاوره‌ای برای انتخاب مکان رونوشت فایل «ganjoor.s3db» نمایش داده می‌شود. که این مکان نباید شامل «ganjoor.s3db» باشد و آنگاه مجموعه‌داده‌هایی را که می‌خواهید نصب کنید، انتخاب کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="109"/>
<         <source>Create data base and install existing data sets to it.</source>
<         <translation>از مجموعه‌داده‌های موجود انتخاب و نصب کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="118"/>
<         <source>Select folder for saving &apos;ganjoor.s3db&apos; file! And then select the data sets you want to install.</source>
<         <translation>پوشه‌ای برای رونوشت فایل «ganjoor.s3db» انتخاب کنید و آنگاه مجموعه‌داده‌هایی که می‌خواهید نصب کنید، انتخاب کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="125"/>
<         <source>&lt;p&gt;Firstly a dialog appears for select a path for saving &apos;ganjoor.s3db&apos; file. It has not to contain &apos;ganjoor.s3db&apos;! And then a dialog appears that you should select the data sets you want to download and install.&lt;/p&gt;</source>
<         <translation>&lt;p&gt;در ابتدا پنجره محاوره‌ای برای انتخاب مکان رونوشت فایل «ganjoor.s3db» نمایش داده می‌شود. که این مکان نباید شامل «ganjoor.s3db» باشد و آنگاه مجموعه‌داده‌هایی را که می‌خواهید دریافت و نصب کنید، انتخاب کنید.&lt;/p&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="128"/>
<         <source>Firstly a dialog appears for select a path for saving &apos;ganjoor.s3db&apos; file. It has not to contain &apos;ganjoor.s3db&apos;! And then a dialog appears that you should select the data sets you want to download and install.</source>
<         <translation>در ابتدا پنجره محاوره‌ای برای انتخاب مکان رونوشت فایل «ganjoor.s3db» نمایش داده می‌شود و آنگاه در پنجره محاوره‌ای بعدی مجموعه‌داده‌ها را برای دریافت و نصب انتخاب می‌کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="131"/>
<         <source>Create data base then download and install data sets to it.</source>
<         <translation>مجموعه‌داده‌ها را از خادم راه دور دریافت و نصب کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="140"/>
<         <source>Select folder for saving &apos;ganjoor.s3db&apos; file! And then select the data sets you want to download and install.</source>
<         <translation>پوشه‌ای برای رونوشت فایل «ganjoor.s3db» انتخاب کنید و آنگاه مجموعه‌داده‌هایی که می‌خواهید دریافت و نصب کنید، انتخاب کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="168"/>
<         <source>Error:</source>
<         <translation>خطا:</translation>
<     </message>
<     <message>
<         <location filename="../src/nodatabasedialog.ui" line="184"/>
<         <source>Data Base Path:</source>
<         <translation>مسیر پایگاه‌داده:</translation>
<     </message>
< </context>
< <context>
<     <name>OutLineTree</name>
<     <message>
<         <source>Title</source>
<         <translation type="vanished">سرنویس</translation>
<     </message>
<     <message>
<         <source>Comments</source>
<         <translation type="vanished">توضیحات</translation>
<     </message>
<     <message>
<         <source>Filter:</source>
<         <translation type="vanished">پرویزن:</translation>
<     </message>
<     <message>
<         <source>Filter</source>
<         <translation type="vanished">پرویزن</translation>
<     </message>
<     <message>
<         <source>Open in New Tab</source>
<         <translation type="vanished">باز کردن در صفحه جدید</translation>
<     </message>
<     <message>
<         <source>Open</source>
<         <translation type="vanished">باز کردن</translation>
<     </message>
<     <message>
<         <source>Random in New Tab</source>
<         <translation type="vanished">بخت‌آورد در برگه تازه</translation>
<     </message>
<     <message>
<         <source>Random</source>
<         <translation type="vanished">بخت‌آورد</translation>
<     </message>
<     <message>
<         <source>Collapse</source>
<         <translation type="vanished">کوچک کردن</translation>
<     </message>
<     <message>
<         <source>Expand</source>
<         <translation type="vanished">گستردن</translation>
<     </message>
< </context>
< <context>
<     <name>OutlineTree</name>
<     <message>
<         <location filename="../src/outline.cpp" line="84"/>
<         <source>Title</source>
<         <translation>سرنویس</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="84"/>
<         <source>Comments</source>
<         <translation>توضیحات</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="93"/>
<         <source>Filter:</source>
<         <translation>پرویزن:</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="97"/>
<         <location filename="../src/outline.cpp" line="99"/>
<         <source>Filter</source>
<         <translation>پرویزن</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="216"/>
<         <location filename="../src/outline.cpp" line="245"/>
<         <source>Open in New Tab</source>
<         <translation>باز کردن در صفحه جدید</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="217"/>
<         <location filename="../src/outline.cpp" line="248"/>
<         <source>Open</source>
<         <translation>باز کردن</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="219"/>
<         <location filename="../src/outline.cpp" line="254"/>
<         <source>Random in New Tab</source>
<         <translation>بخت‌آورد در برگه تازه</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="220"/>
<         <location filename="../src/outline.cpp" line="257"/>
<         <source>Random</source>
<         <translation>بخت‌آورد</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="224"/>
<         <location filename="../src/outline.cpp" line="251"/>
<         <source>Collapse</source>
<         <translation>کوچک کردن</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="227"/>
<         <location filename="../src/outline.cpp" line="251"/>
<         <source>Expand</source>
<         <translation>گستردن</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="233"/>
<         <location filename="../src/outline.cpp" line="264"/>
<         <source>Create Empty Audio List</source>
<         <translation>ایجاد فهرست خوانش خالی</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="234"/>
<         <location filename="../src/outline.cpp" line="261"/>
<         <source>Create Audio List From File</source>
<         <translation>ایجاد فهرست خوانش از فایل</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="312"/>
<         <source>Select File Containing media links...</source>
<         <translation>انتخاب پرونده شامل لینک‌ها...</translation>
<     </message>
<     <message>
<         <location filename="../src/outline.cpp" line="312"/>
<         <source>Text File (*.txt);;All (*.*)</source>
<         <translation>پرونده متنی (*.txt);;همه (*.*)</translation>
<     </message>
< </context>
< <context>
<     <name>ProgressManagerPrivate</name>
<     <message>
<         <location filename="../src/progressmanager/progressmanager.cpp" line="820"/>
<         <source>All Tasks (%1):</source>
<         <translation>همه کارها (%1):</translation>
<     </message>
< </context>
< <context>
<     <name>ProgressView</name>
<     <message>
<         <location filename="../src/progressmanager/progressview.cpp" line="80"/>
<         <source>Processes</source>
<         <translation>فرایندها</translation>
<     </message>
< </context>
< <context>
<     <name>QGanjoorDbBrowser</name>
<     <message>
<         <source>Cannot open Database File</source>
<         <translation type="obsolete">توانایی بازکردن پرونده پایگاه‌داده نیست</translation>
<     </message>
<     <message>
<         <source>Cannot open database file...
< Error: %1
< DataBase Path=%2
< Saaghar needs its database for working properly, Saaghar is terminated for now.</source>
<         <translation type="obsolete">توانایی بازکردن پرونده پایگاه‌داده نیست...
< خطا: %1
< مسیر پایگاه‌داده: %2
< برای کارکرد درست ساغر به پایگاه‌داده‌اش نیاز دارد، ساغر همکنون بسته می‌شود.</translation>
<     </message>
<     <message>
<         <source>Cannot open Database File!</source>
<         <translation type="vanished">پرونده پایگاه‌داده باز نمی‌شود!</translation>
<     </message>
<     <message>
<         <source>Cannot open database file...
< Error: %1
< DataBase Path=%2
< Saaghar needs its database for working properly. Press &apos;OK&apos; if you want to terminate application or press &apos;Browse&apos; for select a new path for database.</source>
<         <translation type="obsolete">پرونده پایگاه‌داده باز نمی‌شود...
< خطا: %1
< مسیر پایگاه‌داده: %2
< برای کارکرد درست ساغر به پایگاه‌داده‌اش نیاز دارد. برای بستن نرم‌افزار دکمه «قبول» را بفشارید ویا برای انتخاب مسیری جدید برای پایگاه‌داده دکمه «گزیدن» را بفشارید.</translation>
<     </message>
<     <message>
<         <source>Cannot open database file...
< DataBase Path=%1
< Saaghar needs its database for working properly. Press &apos;OK&apos; if you want to terminate application or press &apos;Browse&apos; for select a new path for database.</source>
<         <translation type="obsolete">پرونده پایگاه‌داده باز نمی‌شود...
< مسیر پایگاه‌داده: %1
< برای کارکرد درست ساغر به پایگاه‌داده‌اش نیاز دارد. برای بستن نرم‌افزار دکمه «قبول» را بفشارید ویا برای انتخاب مسیری جدید برای پایگاه‌داده دکمه «گزیدن» را بفشارید.</translation>
<     </message>
<     <message>
<         <source>Browse...</source>
<         <translation type="obsolete">گزیدن...</translation>
<     </message>
<     <message>
<         <source>Cannot open database file...
< There is an error!
< Error: %1
< DataBase Path=%2</source>
<         <translation type="obsolete">توانایی بازکردن پرونده پایگاه‌داده نیست...
< خطایی رخ داده است!
< خطا: %1
< مسیر پایگاه‌داده: %2</translation>
<     </message>
<     <message>
<         <source>Data Base Path:</source>
<         <translation type="vanished">مسیر پایگاه‌داده:</translation>
<     </message>
<     <message>
<         <source>Error:</source>
<         <translation type="vanished">خطا:</translation>
<     </message>
<     <message>
<         <source>No Error!</source>
<         <translation type="vanished">بدون خطا!</translation>
<     </message>
<     <message>
<         <source>Add Path For Data Base</source>
<         <translation type="vanished">اضافه کردن مسیر برای پایگاه‌داده</translation>
<     </message>
<     <message>
<         <source>Select Save Location</source>
<         <translation type="vanished">انتخاب مکان برای رونوشت</translation>
<     </message>
<     <message>
<         <source>Cannot open database file, please check if you have write permisson.
< Error: %1
< DataBase Path=%2</source>
<         <translation type="vanished">فایل پایگاه‌داده باز نمی‌شود، لطفا بررسی کنید که آیا دسترسی نوشتنی دارید.
< خطا: %1
< مسیر پایگاه‌داده: %2</translation>
<     </message>
<     <message>
<         <source>Home</source>
<         <translation type="vanished">خانه</translation>
<     </message>
<     <message>
<         <source>All</source>
<         <translation type="vanished">همه</translation>
<     </message>
<     <message>
<         <source>Select data sets to install</source>
<         <translation type="vanished">انتخاب مجموعه‌داده برای نصب</translation>
<     </message>
<     <message>
<         <source>Searching Data Base...</source>
<         <translation type="obsolete">جستجوی پایگاه‌داده...</translation>
<     </message>
<     <message>
<         <source>Cancel</source>
<         <translation type="obsolete">رد</translation>
<     </message>
<     <message>
<         <source>Search Result(s): %1</source>
<         <translation type="vanished">یافته‌ها: %1</translation>
<     </message>
< </context>
< <context>
<     <name>QIrBreadCrumbComboBox</name>
<     <message>
<         <location filename="../src/QIrBreadCrumbBar/qirbreadcrumbbar.cpp" line="663"/>
<         <source>Location &apos;%1&apos; cannot be found. Check the spelling and try again.</source>
<         <translation>مسیر «%1» یافت نشد. مجددا بررسی کنید.</translation>
<     </message>
< </context>
< <context>
<     <name>QIrBreadCrumbIconWidget</name>
<     <message>
<         <location filename="../src/QIrBreadCrumbBar/qirbreadcrumbbar.cpp" line="529"/>
<         <source>Copy Address</source>
<         <translation>رو نگاشت آدرس</translation>
<     </message>
<     <message>
<         <location filename="../src/QIrBreadCrumbBar/qirbreadcrumbbar.cpp" line="531"/>
<         <source>Edit Address</source>
<         <translation>ویرایش آدرس</translation>
<     </message>
< </context>
< <context>
<     <name>QMessageBox</name>
<     <message>
<         <source>Show Details...</source>
<         <translation type="obsolete">aaaa</translation>
<     </message>
< </context>
< <context>
<     <name>QMultiSelectWidget</name>
<     <message>
<         <location filename="../src/pQjWidgets/QMultiSelectWidget/qmultiselectwidget.cpp" line="246"/>
<         <source>Selected Items: no item!</source>
<         <translation>گزینه‌های انتخاب شده: هیچ!</translation>
<     </message>
<     <message>
<         <location filename="../src/pQjWidgets/QMultiSelectWidget/qmultiselectwidget.cpp" line="249"/>
<         <source>Selected Items:&lt; /br&gt;</source>
<         <translation>گزینه‌های انتخاب شده: &lt; /br&gt;</translation>
<     </message>
< </context>
< <context>
<     <name>QMusicPlayer</name>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="294"/>
<         <source>Select Music Files</source>
<         <translation>انتخاب پرونده موسیقی</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="313"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="446"/>
<         <source>New Saaghar Album</source>
<         <translation>آلبوم تازه ساغر</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="321"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="418"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="452"/>
<         <source>Warning!</source>
<         <translation>هشدار!‏ </translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="321"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="452"/>
<         <source>The album already loaded.</source>
<         <translation>آلبوم قبلا بارگذاری شده است.</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="324"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="328"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="379"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="459"/>
<         <source>Name Of Album</source>
<         <translation>نام آلبوم</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="325"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="329"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="460"/>
<         <source>Enter name for this Album:</source>
<         <translation>نامی برای این آلبوم وارد کنید:</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="349"/>
<         <source>Select Saaghar Album</source>
<         <translation>انتخاب آلبوم ساغر</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="380"/>
<         <source>Enter new name for this Album:</source>
<         <translation>نام تازه‌ای برای این آلبوم وارد کنید:</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="419"/>
<         <source>Are you sure to remove &quot;%1&quot; from album list?</source>
<         <translation>آیا از حذف «%1» از فهرست آلبوم‌ها اطمینان دارید؟</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="461"/>
<         <source>_Copy</source>
<         <translation>-کپی</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="499"/>
<         <source>Finished</source>
<         <translation>پایان</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="824"/>
<         <source>Pause</source>
<         <translation>وقفه</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="832"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="844"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="860"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="873"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="956"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="974"/>
<         <source>Play</source>
<         <translation>نواختن</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="737"/>
<         <source>QMusicPlayer</source>
<         <translation>پخش‌کننده موسیقی</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="366"/>
<         <source>It is not an album file or can not read it!</source>
<         <translation>پرونده در قالب آلبوم نیست و یا قابل خواندن نیست!</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="480"/>
<         <source>Can&apos;t save album!</source>
<         <translation>آلبوم قابل رونوشتن نیست!</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="737"/>
<         <source>Can not write the lyric file %1:
< %2.</source>
<         <translation>فایل همگام‌سازی %1 قابل رونویسی نیست:
< %2.</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="780"/>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="988"/>
<         <source>&amp;Run text/audio syncer</source>
<         <translation>&amp;اجرای همگام‌ساز متن/صدا</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="789"/>
<         <source>&amp;Stop text/audio syncer</source>
<         <translation>&amp;توقف همگام‌ساز متن/صدا</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="975"/>
<         <source>Ctrl+P</source>
<         <translation>Ctrl+P</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="977"/>
<         <source>Stop</source>
<         <translation>توقف</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="978"/>
<         <source>Ctrl+S</source>
<         <translation></translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="980"/>
<         <source>Next</source>
<         <translation>پسین</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="981"/>
<         <source>Ctrl+N</source>
<         <translation></translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="982"/>
<         <source>Previous</source>
<         <translation>پیشین</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="983"/>
<         <source>Ctrl+R</source>
<         <translation></translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="984"/>
<         <source>&amp;Set Audio...</source>
<         <translation>&amp;انتخاب پرونده صوتی...</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="985"/>
<         <source>&amp;Remove Audio</source>
<         <translation>&amp;حذف پرونده صوتی</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="986"/>
<         <source>Remove Audio From All Album</source>
<         <translation>حذف پرونده صوتی از همه آلبوم‌ها</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="987"/>
<         <source>&amp;Load Album...</source>
<         <translation>&amp;بارگذاری آلبوم...</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="366"/>
<         <source>Read Error!</source>
<         <translation>خطا در خواندن!</translation>
<     </message>
<     <message>
<         <source>Can&apos;t load album!
< Error: %1</source>
<         <translation type="vanished">آلبوم قابل بارگذاری نیست! خطا: %1</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="480"/>
<         <source>Save Error!</source>
<         <translation>خطا در ذخیره کردن!</translation>
<     </message>
<     <message>
<         <source>Can&apos;t save album!
< Error: %1</source>
<         <translation type="vanished">آلبوم قابل رونوشت نیست! خطا: %1</translation>
<     </message>
<     <message>
<         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1512"/>
<         <source>Albums</source>
<         <translation>آلبوم‌ها</translation>
<     </message>
<     <message>
<         <source>Can&apos;t save playlist!
< Error: %1</source>
<         <translation type="obsolete">نمی‌تواند فهرست صداها را ذخیره کند!
< خطا: %1</translation>
<     </message>
<     <message>
<         <source>PlayList</source>
<         <translation type="obsolete">صداها</translation>
<     </message>
< </context>
< <context>
<     <name>QObject</name>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="136"/>
<         <source>&lt;i&gt;&lt;b&gt;Loading...&lt;/b&gt;&lt;/i&gt;</source>
<         <translation>&lt;i&gt;&lt;b&gt;بارگذاری...&lt;/b&gt;&lt;/i&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1677"/>
<         <source>&amp;Two Hemistich Line</source>
<         <translation>&amp;جفت لَت</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1683"/>
<         <source>&amp;One Hemistich Line</source>
<         <translation>&amp;یک لَت</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1689"/>
<         <source>&amp;Stepped Hemistich Line</source>
<         <translation>&amp;نردبانی</translation>
<     </message>
<     <message>
<         <source>&amp;Download From Repositories...</source>
<         <translation type="vanished">&amp;دریافت از مخزن‌ها...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1721"/>
<         <source>&amp;Dataset Repositories...</source>
<         <translation>&amp;مخزن مجموعه‌ها...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1723"/>
<         <source>&amp;Audio Repositories...</source>
<         <translation>&amp;مخزن خوانش‌ها...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1727"/>
<         <source>&amp;Registeration...</source>
<         <translation>&amp;ثبت‌نام...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2871"/>
<         <source>&amp;Large Icon</source>
<         <translation>نماد &amp;بزرگ</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2885"/>
<         <source>&amp;Medium Icon</source>
<         <translation>نماد &amp;متوسط</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2891"/>
<         <source>&amp;Small Icon</source>
<         <translation>نماد &amp;کوچک</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2899"/>
<         <source>Only &amp;Icon</source>
<         <translation>تنها &amp;نماد</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2909"/>
<         <source>Only &amp;Text</source>
<         <translation>تنها &amp;فرنام</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2915"/>
<         <source>&amp;Both Text &amp;&amp; Icon</source>
<         <translation>نماد &amp;و فرنام</translation>
<     </message>
<     <message>
<         <location filename="../src/bookmarks.cpp" line="185"/>
<         <location filename="../src/bookmarks.cpp" line="222"/>
<         <source>Folder</source>
<         <translation>پوشه</translation>
<     </message>
<     <message>
<         <source>From Ganjoor Desktop</source>
<         <translation type="obsolete">استخراج‌شده از گنجور رومیزی</translation>
<     </message>
<     <message>
<         <source>Home</source>
<         <translation type="vanished">خانه</translation>
<     </message>
<     <message>
<         <location filename="../src/commands.cpp" line="119"/>
<         <source>Navigate To %1</source>
<         <translation>رفتن به %1</translation>
<     </message>
<     <message>
<         <location filename="../src/databasebrowser.cpp" line="1445"/>
<         <source>From Desktop Ganjoor</source>
<         <translation>استخراج‌شده از گنجور رومیزی</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="170"/>
<         <source>&lt;EMPTY PREVIEW&gt;</source>
<         <translation>&lt;پیش‌نمایش خالی&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/importermanager.cpp" line="185"/>
<         <source>Top Level Categories: %1
< ---
< Poem Title: %2
< ----------------
< </source>
<         <translation>بخش‌های والد: %1
< ---
< سرنویس چامه: %2
< ----------------
< </translation>
<     </message>
<     <message>
<         <location filename="../src/importer/txtimporter.cpp" line="284"/>
<         <source>New Poem %1</source>
<         <translation>چامه تازه %1</translation>
<     </message>
< </context>
< <context>
<     <name>QSearchLineEdit</name>
<     <message>
<         <location filename="../src/pQjWidgets/QSearchLineEdit/qsearchlineedit.cpp" line="201"/>
<         <source>Please try with another phrase!</source>
<         <translation>لطفا عبارت دیگری را امتحان کنید!</translation>
<     </message>
< </context>
< <context>
<     <name>QTextBrowserDialog</name>
<     <message>
<         <location filename="../src/pQjWidgets/QTextBrowserDialog/qtextbrowserdialog.cpp" line="112"/>
<         <source>TextBrowser Dialog</source>
<         <translation>پنجره محاوره نمایش متن</translation>
<     </message>
<     <message>
<         <location filename="../src/pQjWidgets/QTextBrowserDialog/qtextbrowserdialog.cpp" line="113"/>
<         <source>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
< &lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
< p, li { white-space: pre-wrap; }
< &lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:8.25pt; font-weight:400; font-style:normal;&quot;&gt;
< &lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;&quot;&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</source>
<         <translation></translation>
<     </message>
< </context>
< <context>
<     <name>RegisterationForm</name>
<     <message>
<         <source>Error</source>
<         <translation type="obsolete">خطا</translation>
<     </message>
<     <message>
<         <source>Cancel</source>
<         <translation type="obsolete">رد</translation>
<     </message>
< </context>
< <context>
<     <name>SaagharApplication</name>
<     <message>
<         <location filename="../src/saagharapplication.cpp" line="317"/>
<         <source>LTR</source>
<         <translatorcomment>For right to left language translate it to RTL</translatorcomment>
<         <translation>RTL</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharapplication.cpp" line="448"/>
<         <location filename="../src/saagharapplication.cpp" line="536"/>
<         <source>Warning!</source>
<         <translation>هشدار!‏</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharapplication.cpp" line="449"/>
<         <source>Settings could not be loaded!
< File: %1
< Error: %2</source>
<         <translation>پرونده سامانش قابل بارگذاری نیست!
< پرونده: %1
< خطا: %2</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharapplication.cpp" line="537"/>
<         <source>Settings could not be saved!
< File: %1
< Error: %2</source>
<         <translation>پرونده سامانش قابل رونوشتن نیست!
< پرونده: %1
< خطا: %2</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharapplication.cpp" line="570"/>
<         <source>Customize this menu...</source>
<         <translation>شخصی‌سازی این منو...</translation>
<     </message>
< </context>
< <context>
<     <name>SaagharWidget</name>
<     <message>
<         <location filename="../src/saagharwidget.cpp" line="1600"/>
<         <source>Home</source>
<         <translation>خانه</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwidget.cpp" line="703"/>
<         <location filename="../src/saagharwidget.cpp" line="744"/>
<         <location filename="../src/saagharwidget.cpp" line="778"/>
<         <source>&lt;i&gt;&lt;b&gt;Loading the &quot;%1&quot;...&lt;/b&gt;&lt;/i&gt;</source>
<         <translation>&lt;i&gt;&lt;b&gt;بارگذاری «%1»...&lt;/b&gt;&lt;/i&gt;</translation>
<     </message>
< </context>
< <context>
<     <name>SaagharWindow</name>
<     <message>
<         <source>SaagharWindow</source>
<         <translation type="obsolete">پنجره اصلی</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.ui" line="14"/>
<         <source>Saaghar Window</source>
<         <translation>پنجره ساغر</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.ui" line="69"/>
<         <source>Menu Bar</source>
<         <translation>نوار منو</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.ui" line="117"/>
<         <source>Buttons</source>
<         <translation>نوار ابزار پیش‌کارها</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.ui" line="96"/>
<         <location filename="../src/saagharwindow.cpp" line="374"/>
<         <source>Search</source>
<         <translation>جستجو</translation>
<     </message>
<     <message>
<         <source>Search Phrase</source>
<         <translation type="obsolete">عبارت جستجو</translation>
<     </message>
<     <message>
<         <source>Search in</source>
<         <translation type="obsolete">جستجو در</translation>
<     </message>
<     <message>
<         <source>Max Result per Page</source>
<         <translation type="obsolete">حداکثر یافته‌ها در هر صفحه</translation>
<     </message>
<     <message>
<         <source>Close</source>
<         <translation type="obsolete">بستن</translation>
<     </message>
<     <message>
<         <source>Parent Categories</source>
<         <translation type="vanished">دسته‌های والد</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="327"/>
<         <location filename="../src/saagharwindow.cpp" line="736"/>
<         <location filename="../src/saagharwindow.cpp" line="1093"/>
<         <location filename="../src/saagharwindow.cpp" line="1452"/>
<         <location filename="../src/saagharwindow.cpp" line="2383"/>
<         <source>Error</source>
<         <translation>خطا</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="327"/>
<         <source>The search phrase can not be empty.</source>
<         <translation>عبارت جستجو نمی‌تواند خالی باشد.</translation>
<     </message>
<     <message>
<         <source>Current Tab</source>
<         <translation type="obsolete">برگه‌جاری</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="504"/>
<         <source>All Opened Tab</source>
<         <translation>همه برگه‌های باز</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="337"/>
<         <location filename="../src/saagharwindow.cpp" line="505"/>
<         <source>Titles</source>
<         <translation>سرنویس‌ها</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="342"/>
<         <location filename="../src/saagharwindow.cpp" line="487"/>
<         <source>All</source>
<         <translation>همه</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="400"/>
<         <source>Searching Data Base(subset= %1)...</source>
<         <translation>جستجوی پایگاه‌داده(بخش: %1)...</translation>
<     </message>
<     <message>
<         <source>Checking for updates... (server number=%1)</source>
<         <translation type="vanished">بررسی برای بروز رسانی‌ها... (خادم شماره=%1)</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="736"/>
<         <source>There is an error when checking for updates...
< Check your internet connection and try again.</source>
<         <translation>بروز خطا هنگام بررسی برای بروز رسانی‌ها...
< ارتباط اینترنت خود را بررسی کنید و دوباره سعی کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="740"/>
<         <source>Error when checking for update!</source>
<         <translation>خطا در بررسی بروزرسانی!</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1059"/>
<         <source>Export As</source>
<         <translation>رونوشت‌برداری در پیکر</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1093"/>
<         <source>The file could not be saved. Please check if you have write permission.</source>
<         <translation>پرونده نمی‌تواند ذخیره شود. لطفا اجازه دسترسی نوشتن را بررسی کنید.</translation>
<     </message>
<     <message>
<         <source>About Saaghar</source>
<         <translation type="vanished">درباره ساغر</translation>
<     </message>
<     <message>
<         <source>&lt;br /&gt;%1 is a persian poem viewer software, it uses &quot;ganjoor.net&quot; database, and some of its codes are ported to C++ and Qt from &quot;desktop ganjoor&quot; that is a C# .NET application written by %2.&lt;br /&gt;&lt;br /&gt;Logo Designer: %3&lt;br /&gt;&lt;br /&gt;Photos and Description Sources: ganjoor.net &amp; WiKiPedia&lt;br /&gt;&lt;br /&gt;Author: &lt;a href=&quot;http://www.pojh.co.cc/&quot;&gt;S. Razi Alavizadeh&lt;/a&gt;,&lt;br /&gt;Home Page: %4&lt;br /&gt;Mailing List: %5&lt;br /&gt;&lt;br /&gt;Version: %6&lt;br /&gt;Build Time: %7</source>
<         <translation type="obsolete">&lt;br /&gt;%1 نرم‌افزار شعر پارسی است و از پایگاه‌داده «گنجور» استفاده می‌کند، بخشی ازکدهای آن تبدیل شده کدهای «گنجور رومیزی» که به زبان C#‎ می‌باشد و توسط %2 نوشته است، به C++‎ و Qt می‌باشد.&lt;br /&gt;&lt;br /&gt;طراح لوگو: %3&lt;br /&gt;&lt;br /&gt;منبع عکس‌ها و توصیفات: ganjoor.net &amp; WiKiPedia&lt;br /&gt;&lt;br /&gt;برنامه‌نویس: &lt;a href=&quot;http://www.pojh.co.cc/&quot;&gt;سید رضی علوی‌زاده&lt;/a&gt;,&lt;br /&gt;صفحه خانگی: %4&lt;br /&gt;خبرنامه: %5&lt;br /&gt;&lt;br /&gt;نسخه: %6&lt;br /&gt;زمان ساخت: %7</translation>
<     </message>
<     <message>
<         <source>Help Contents</source>
<         <translation type="obsolete">راهنما</translation>
<     </message>
<     <message>
<         <source>&lt;br /&gt;Saaghar Version: %1&lt;br /&gt;&lt;br /&gt;Mouse Left Click: Opens in current Tab&lt;br /&gt;Mouse Right Click: Opens in new Tab&lt;br /&gt;&lt;br /&gt;Shortcuts:&lt;br /&gt;Saaghar uses your Operating System standard shortcuts.</source>
<         <translation type="obsolete">&lt;br /&gt;ساغر نسخه‌ی: %1&lt;br /&gt;&lt;br /&gt;کلیک چپ موشواره: بازکردن در برگه جاری&lt;br /&gt;کلیک راست موشواره: بازکردن در برگه‌‌ی جدید&lt;br /&gt;&lt;br /&gt;میان‌برها:&lt;br /&gt;ساغر از میان‌برهای استاندارد سیستم‌عامل استفاده می‌کند.</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="528"/>
<         <source>Please Notice!</source>
<         <translation>توجه!</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="700"/>
<         <source>Check for update...</source>
<         <translation>بررسی برای بروز رسانی...</translation>
<     </message>
<     <message>
<         <source>&lt;br /&gt;%1 is a persian poem viewer software, it uses &quot;ganjoor.net&quot; database, and some of its initial codes are ported to C++ and Qt from &quot;desktop ganjoor&quot; that is a C# .NET application written by %2.&lt;br /&gt;&lt;br /&gt;Logo Designer: %3&lt;br /&gt;&lt;br /&gt;Author: %4,&lt;br /&gt;&lt;br /&gt;Home Page (English): %5&lt;br /&gt;Home Page (Persian): %6&lt;br /&gt;Mailing List: %7&lt;br /&gt;Saaghar in FaceBook: %8&lt;br /&gt;&lt;br /&gt;Version: %9 - (git-rev: %10)&lt;br /&gt;Build Time: %11</source>
<         <translation type="vanished">&lt;br /&gt;%1 نرم‌افزار شعر پارسی است و از پایگاه‌داده «گنجور» استفاده می‌کند، بخشی ازکدهای اولیه آن تبدیل شده کدهای «گنجور رومیزی» که توسط %2 به زبان C#‎ نوشته شده است، به C++‎ و Qt می‌باشد.&lt;br /&gt;&lt;br /&gt;طراح لوگو: %3&lt;br /&gt;&lt;br /&gt;برنامه‌نویس: %4,&lt;br /&gt;&lt;br /&gt;صفحه خانگی (انگلیسی): %5&lt;br /&gt;صفحه خانگی (فارسی): %6&lt;br /&gt;خبرنامه: %7&lt;br /&gt;ساغر در فیس‌بوک: %8&lt;br /&gt;&lt;br /&gt;نسخه: %9 - (git-rev: %10)&lt;br /&gt;زمان ساخت: %11</translation>
<     </message>
<     <message>
<         <source>Saaghar</source>
<         <translation type="vanished">ساغر</translation>
<     </message>
<     <message>
<         <source>Hamid Reza Mohammadi</source>
<         <translation type="vanished">حمیدرضا محمدی</translation>
<     </message>
<     <message>
<         <source>S. Nasser Alavizadeh</source>
<         <translation type="vanished">سیدناصر علوی‌زاده</translation>
<     </message>
<     <message>
<         <source>S. Razi Alavizadeh</source>
<         <translation type="vanished">سیدرضی علوی‌زاده</translation>
<     </message>
<     <message>
<         <source>This feature is in beta state, before continue you should create a backup from your database.</source>
<         <translation type="obsolete">این ویژگی در حالت آزمایشی (بتا) قرار دارد، بهتر است که قبل از ادامه از پایگاه‌داده پشتیبان تهیه کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="531"/>
<         <source>Continue</source>
<         <translation>ادامه</translation>
<     </message>
<     <message>
<         <source>&lt;i&gt;&lt;b&gt;Loading settings...&lt;/b&gt;&lt;/i&gt;</source>
<         <translation type="obsolete">&lt;i&gt;&lt;b&gt;بارگذاری تنظیمات...&lt;/b&gt;&lt;/i&gt;</translation>
<     </message>
<     <message>
<         <source>&lt;i&gt;&lt;b&gt;Checking for update...&lt;/b&gt;&lt;/i&gt;</source>
<         <translation type="vanished">&lt;i&gt;&lt;b&gt;بررسی برای بروز رسانی‌ها...&lt;/b&gt;&lt;/i&gt;</translation>
<     </message>
<     <message>
<         <source>Main Menu</source>
<         <translation type="obsolete">منوی اصلی</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="276"/>
<         <location filename="../src/saagharwindow.cpp" line="1402"/>
<         <source>Exit &amp;Full Screen</source>
<         <translation>&amp;پنجره‌ای</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="229"/>
<         <location filename="../src/saagharwindow.cpp" line="291"/>
<         <source>&lt;i&gt;&lt;b&gt;Saaghar is starting...&lt;/b&gt;&lt;/i&gt;</source>
<         <translation>&lt;i&gt;&lt;b&gt;ساغر راه‌اندازی می‌شود...&lt;/b&gt;&lt;/i&gt;</translation>
<     </message>
<     <message>
<         <source>Searching Data Base...</source>
<         <translation type="obsolete">جستجوی پایگاه‌داده...</translation>
<     </message>
<     <message>
<         <source>Current Scope: %1
< No match found.</source>
<         <translation type="vanished">محدوده جاری: %1
< موردی پیدا نشد.</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="518"/>
<         <location filename="../src/saagharwindow.cpp" line="524"/>
<         <source>Select a name...</source>
<         <translation>یک نام انتخاب کنید...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="521"/>
<         <location filename="../src/saagharwindow.cpp" line="525"/>
<         <source>poet&apos;s code=</source>
<         <translation>کد نسک=</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="523"/>
<         <source>Remove Poet</source>
<         <translation>کنار نهادن نَسک</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="523"/>
<         <source>Select a poet name and click on &apos;OK&apos; button, for remove it from database.</source>
<         <translation>برای کنار نهادن نَسک نام نَسک/نویسنده را انتخاب کنید و روی دکمه «قبول» کلیک کنید.</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="530"/>
<         <source>Are you sure for removing &quot;%1&quot;, from database?</source>
<         <translation>آیا از حذف «%1» از پایگاه‌داده اطمینان داری؟</translation>
<     </message>
<     <message>
<         <source>Checking for updates...</source>
<         <translation type="obsolete">بررسی برای بروز رسانی‌ها...</translation>
<     </message>
<     <message>
<         <source>There is an error when checking for updates...
< Error: %1</source>
<         <translation type="obsolete">بروز خطا هنگام بررسی برای بروز رسانی‌ها...
< خطا: %1</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="772"/>
<         <source>New Saaghar Version Available</source>
<         <translation>نسخه جدید ساغر در دسترس است</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="781"/>
<         <source>The Version &lt;strong&gt;%1&lt;/strong&gt; of Saaghar is available for download.&lt;br /&gt;%2&lt;br /&gt;Do you want to browse download page?</source>
<         <translation>نسخه &lt;strong&gt;%1&lt;/strong&gt; ساغر برای دانلود در دسترس است.&lt;br /&gt;%2&lt;br /&gt;آیا می‌خواهید به صفحه دانلود بروید؟</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="807"/>
<         <location filename="../src/saagharwindow.cpp" line="810"/>
<         <source>Saaghar is up to date</source>
<         <translation>ساغر بروز است</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="807"/>
<         <source>There is no new version available. Please check for updates later!</source>
<         <translation>نسخه جدیدی در دسترس نیست. لطفا بعدا وجود بروز رسانی را بررسی کنید!</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="990"/>
<         <source>&lt;i&gt;&lt;b&gt;&quot;%1&quot; was loaded!&lt;/b&gt;&lt;/i&gt;</source>
<         <translation>&lt;i&gt;&lt;b&gt;«%1» بارگذاری شد!&lt;/b&gt;&lt;/i&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1003"/>
<         <source>Saaghar: </source>
<         <translation>ساغر: </translation>
<     </message>
<     <message>
<         <source>&lt;br /&gt;%1 is a persian poem viewer software, it uses &quot;ganjoor.net&quot; database, and some of its codes are ported to C++ and Qt from &quot;desktop ganjoor&quot; that is a C# .NET application written by %2.&lt;br /&gt;&lt;br /&gt;Logo Designer: %3&lt;br /&gt;&lt;br /&gt;Author: %4,&lt;br /&gt;&lt;br /&gt;Home Page: %5&lt;br /&gt;Mailing List: %6&lt;br /&gt;Saaghar in FaceBook:%7&lt;br /&gt;&lt;br /&gt;Version: %8&lt;br /&gt;Build Time: %9</source>
<         <oldsource>&lt;br /&gt;%1 is a persian poem viewer software, it uses &quot;ganjoor.net&quot; database, and some of its codes are ported to C++ and Qt from &quot;desktop ganjoor&quot; that is a C# .NET application written by %2.&lt;br /&gt;&lt;br /&gt;Logo Designer: %3&lt;br /&gt;&lt;br /&gt;Author: &lt;a href=&quot;http://www.pojh.co.cc/&quot;&gt;S. Razi Alavizadeh&lt;/a&gt;,&lt;br /&gt;&lt;br /&gt;Home Page: %4&lt;br /&gt;Mailing List: %5&lt;br /&gt;Saaghar in FaceBook:%6&lt;br /&gt;&lt;br /&gt;Version: %7&lt;br /&gt;Build Time: %8</oldsource>
<         <translation type="obsolete">&lt;br /&gt;%1 نرم‌افزار شعر پارسی است و از پایگاه‌داده «گنجور» استفاده می‌کند، بخشی ازکدهای آن تبدیل شده کدهای «گنجور رومیزی» که به زبان C#‎ می‌باشد و توسط %2 نوشته شده است، به C++‎ و Qt می‌باشد.&lt;br /&gt;&lt;br /&gt;طراح لوگو: %3&lt;br /&gt;&lt;br /&gt;برنامه‌نویس: %4,&lt;br /&gt;&lt;br /&gt;صفحه خانگی: %5&lt;br /&gt;خبرنامه: %6&lt;br /&gt;ساغر در فیس‌بوک: %7&lt;br /&gt;&lt;br /&gt;نسخه: %8&lt;br /&gt;زمان ساخت: %9</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1820"/>
<         <source>Panels</source>
<         <translation>پنل‌ها</translation>
<     </message>
<     <message>
<         <source>Search &amp;Options...</source>
<         <translation type="vanished">&amp;گزینه‌های جستجو...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3439"/>
<         <source>&amp;Bookmarks</source>
<         <translation>&amp;گنجواره</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3665"/>
<         <source>Registeration</source>
<         <translation>ثبت‌نام</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1647"/>
<         <source>&amp;OCR Verification</source>
<         <translation>&amp;بازبینی</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="173"/>
<         <source>Classic navigation bar</source>
<         <translation>نوار ناوبری ساده</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="190"/>
<         <source>Modern navigation bar</source>
<         <translation>نوار ناوبری مدرن</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="374"/>
<         <source>There are more than 200 opened search windows, please before start new searches, close some of them.</source>
<         <translation>بیش از ۲۰۰ پنجره جستجو باز است، لطفا قبل از شروع جستجوهای تازه چندتا از آن‌ها را ببندید.</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1650"/>
<         <location filename="../src/saagharwindow.cpp" line="1666"/>
<         <source>&amp;Redo</source>
<         <translation>&amp;چیدن</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1652"/>
<         <location filename="../src/saagharwindow.cpp" line="1667"/>
<         <source>&amp;Undo</source>
<         <translation>&amp;وا چیدن</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3443"/>
<         <source>&amp;Import Ganjoor&apos;s Bookmarks</source>
<         <translation>&amp;گرفتن نشان‌ها از گنجور</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1674"/>
<         <source>Poem View Styles</source>
<         <translation>سبک‌های نمایش چامه</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1696"/>
<         <source>Outline</source>
<         <translation>نَسک‌ها</translation>
<     </message>
<     <message>
<         <source>Interface Language Changed!</source>
<         <translation type="obsolete">زبان رابط کاربری تغییر کرده!</translation>
<     </message>
<     <message>
<         <source>The interface language changes after relunching application!</source>
<         <translation type="obsolete">زبان رابط کاربری در اجرای دوباره نرم‌افزار تغییر خواهد کرد!</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2402"/>
<         <location filename="../src/saagharwindow.cpp" line="3353"/>
<         <source>Bookmarks</source>
<         <translation>گنجواره</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2402"/>
<         <source>Can not write the bookmark file %1:
< %2.</source>
<         <translation>پرونده گنجواره نشان‌ها را نمی‌تواند بنویسد %1:
< %2.</translation>
<     </message>
<     <message>
<         <source>Results Per Page</source>
<         <translation type="obsolete">تعداد یافته‌ها بر صفحه</translation>
<     </message>
<     <message>
<         <source>Set max results per page:</source>
<         <translation type="obsolete">تعیین حداکثر یافته‌ها بر صفحه:</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2824"/>
<         <source>Customize Faal &amp;&amp; Random...</source>
<         <translation>شخصی‌سازی فال و بخت‌آورد...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2840"/>
<         <source>Current tab&apos;s subsections</source>
<         <translation>زیربخش‌های برگه جاری</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3035"/>
<         <location filename="../src/saagharwindow.cpp" line="3038"/>
<         <source>Enter Search Phrase</source>
<         <translation>عبارت جستجو</translation>
<     </message>
<     <message>
<         <source>Select Search Scope...</source>
<         <translation type="vanished">محدوده جستجو...</translation>
<     </message>
<     <message>
<         <source>Max Result per Page...</source>
<         <translation type="obsolete">حداکثر یافته‌ها در هر صفحه...</translation>
<     </message>
<     <message>
<         <source>&amp;Search Tips...</source>
<         <translation type="vanished">&amp;راه‌کارهای جستجو...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1981"/>
<         <source>&lt;b&gt;Tip1:&lt;/b&gt; Search operators and commands:%5&lt;TR&gt;&lt;TD%3 id=&quot;and-operator&quot;&gt;&lt;b&gt;%1+%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing both &lt;b&gt;%1&lt;/b&gt; and &lt;b&gt;%2&lt;/b&gt;, &lt;i&gt;at any order&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1**%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing both &lt;b&gt;%1&lt;/b&gt; and &lt;b&gt;%2&lt;/b&gt;, &lt;i&gt;at this order&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 %2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Same as &lt;b&gt;&lt;a href=&quot;#and-operator&quot;&gt;%1+%2&lt;/a&gt;&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 | %2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing &lt;b&gt;%1&lt;/b&gt; or &lt;b&gt;%2&lt;/b&gt;, or both.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 -%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing &lt;b&gt;%1&lt;/b&gt;, but not &lt;b&gt;%2&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;&quot;%1&quot;&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the whole word &lt;b&gt;%1&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;&quot;%1 %2&quot;&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the whole mixed word &lt;b&gt;%1 %2&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;Sp*ng&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing any phrase started with &lt;b&gt;Sp&lt;/b&gt; and ended with &lt;b&gt;ng&lt;/b&gt;; i.e: Mesras containing &lt;b&gt;Spring&lt;/b&gt; or &lt;b&gt;Spying&lt;/b&gt; or &lt;b&gt;Spoking&lt;/b&gt; or...&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;=%1&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the word &lt;b&gt;%1&lt;/b&gt; &lt;i&gt;as Rhyme&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;==%1&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the word &lt;b&gt;%1&lt;/b&gt; &lt;i&gt;as Radif&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip2:&lt;/b&gt; All search queries are case insensitive.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip3:&lt;/b&gt; User can use an operator more than once;&lt;br /&gt;i.e: &lt;b&gt;%1+%2+%6&lt;/b&gt;, &lt;b&gt;%1 -%6 -%7&lt;/b&gt;, &lt;b&gt;%1**%2**%7&lt;/b&gt; and &lt;b&gt;S*r*g&lt;/b&gt; are valid search terms.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip4:&lt;/b&gt; User can use operators mixed together;&lt;br /&gt;i.e: &lt;b&gt;&quot;%1&quot;+&quot;%2&quot;+%6&lt;/b&gt;, &lt;b&gt;%1+%2|%6 -%7&lt;/b&gt;, &lt;b&gt;&quot;%1&quot;**&quot;%2&quot;&lt;/b&gt;, &lt;b&gt;S*r*g -Spring&lt;/b&gt; and &lt;b&gt;&quot;Gr*en&quot;&lt;/b&gt; are valid search terms.&lt;br /&gt;&lt;br /&gt;</source>
<         <translation>&lt;b&gt;راه‌کار1:&lt;/b&gt; دستورات و عمل‌گرهای جستجوی:%5&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هردوی &lt;b&gt;%1&lt;/b&gt; و &lt;b&gt;%2&lt;/b&gt; را &lt;i&gt;با هر ترتیبی&lt;/i&gt; شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3 id=&quot;and-operator&quot;&gt;&lt;b&gt;%1+%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هردوی &lt;b&gt;%1&lt;/b&gt; و &lt;b&gt;%2&lt;/b&gt; را دقیقا &lt;i&gt;با همین ترتیب&lt;/i&gt; شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1**%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;مانند &lt;b&gt;&lt;a href=&quot;#and-operator&quot;&gt;%1+%2&lt;/a&gt;&lt;/b&gt;.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 %2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که &lt;b&gt;%1&lt;/b&gt; یا &lt;b&gt;%2&lt;/b&gt; و یا هردو را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 | %2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که شامل &lt;b&gt;%1&lt;/b&gt;می‌شوند اما  &lt;b&gt;%2&lt;/b&gt; را شامل نمی‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 -%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که عین کلمه &lt;b&gt;%1&lt;/b&gt; را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;&quot;%1&quot;&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که عین کلمه مرکب &lt;b&gt;%1 %2&lt;/b&gt; را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;&quot;%1 %2&quot;&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هر عبارتی که با &lt;b&gt;به&lt;/b&gt; شروع و با &lt;b&gt;ان&lt;/b&gt; تمام می‌شوند، شامل می‌شود؛ به‌عنوان مثال: لَت‌هایی که &lt;b&gt;بهاران&lt;/b&gt; یا &lt;b&gt;بهشتیان&lt;/b&gt; یا &lt;b&gt;برادران&lt;/b&gt; یا... را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;به*ان&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt; لَت‌های &lt;i&gt;هم‌قافیه&lt;/i&gt; با &lt;b&gt;%1&lt;/b&gt;.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;=%1&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt; لَت‌های &lt;i&gt;هم‌ردیف&lt;/i&gt; با &lt;b&gt;%1&lt;/b&gt;.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;==%1&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار2:&lt;/b&gt; همه جستارها بصورت غیرحساس به حروف بزرگ و کوچک به انجام می‌رسند.(تنها در انگلیسی)&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار3:&lt;/b&gt; کاربر می‌تواند یک عملگر را بیشتر از یک‌بار به کار ببرد؛&lt;br /&gt;به‌عنوان مثال: &lt;b&gt;%1+%2+%6&lt;/b&gt;، &lt;b&gt;%1 -%6 -%7&lt;/b&gt;، &lt;b&gt;%1**%2**%7&lt;/b&gt; و &lt;b&gt;ب*ا*ن&lt;/b&gt; عبارات جستجوی معتبری هستند.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار4:&lt;/b&gt; کاربر می‌تواند عملگرها را بصورت همراه با هم به‌کار ببرد؛&lt;br /&gt;به‌عنوان مثال: &lt;b&gt;&quot;%1&quot;+&quot;%2&quot;+%6&lt;/b&gt;، &lt;b&gt;%1+%2|%6 -%7&lt;/b&gt;، &lt;b&gt;&quot;%1&quot;**&quot;%2&quot;&lt;/b&gt;، &lt;b&gt;ب*ا*ن -بهاران&lt;/b&gt; و &lt;b&gt;&quot;س*ز&quot;&lt;/b&gt; عبارات جستجوی معتبری هستند.&lt;br /&gt;&lt;br /&gt;</translation>
<     </message>
<     <message>
<         <source>&lt;br /&gt;%1 is a persian poem viewer software, it uses &quot;ganjoor.net&quot; database, and some of its codes are ported to C++ and Qt from &quot;desktop ganjoor&quot; that is a C# .NET application written by %2.&lt;br /&gt;&lt;br /&gt;Logo Designer: %3&lt;br /&gt;&lt;br /&gt;Author: %4,&lt;br /&gt;&lt;br /&gt;Home Page: %5&lt;br /&gt;Mailing List: %6&lt;br /&gt;Saaghar in FaceBook:%7&lt;br /&gt;&lt;br /&gt;Version: %8 - (git-rev: %9)&lt;br /&gt;Build Time: %10</source>
<         <translation type="obsolete">&lt;br /&gt;%1 نرم‌افزار شعر پارسی است و از پایگاه‌داده «گنجور» استفاده می‌کند، بخشی ازکدهای آن تبدیل شده کدهای «گنجور رومیزی» که به زبان C#‎ می‌باشد و توسط %2 نوشته شده است، به C++‎ و Qt می‌باشد.&lt;br /&gt;&lt;br /&gt;طراح لوگو: %3&lt;br /&gt;&lt;br /&gt;برنامه‌نویس: %4,&lt;br /&gt;&lt;br /&gt;صفحه خانگی: %5&lt;br /&gt;خبرنامه: %6&lt;br /&gt;ساغر در فیس‌بوک: %7&lt;br /&gt;&lt;br /&gt;نسخه: %8 - (git-rev: %9)&lt;br /&gt;زمان ساخت: %10</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3575"/>
<         <location filename="../src/saagharwindow.cpp" line="3591"/>
<         <source>Copy Selected Text</source>
<         <translation>رو نگاشت از متن انتخابی</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3576"/>
<         <location filename="../src/saagharwindow.cpp" line="3594"/>
<         <source>Copy Cell&apos;s Text</source>
<         <translation>رو نگاشت از متن سلول</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3577"/>
<         <location filename="../src/saagharwindow.cpp" line="3599"/>
<         <source>Copy All</source>
<         <translation>رو نگاشت از همه</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3579"/>
<         <location filename="../src/saagharwindow.cpp" line="3603"/>
<         <source>New Tab</source>
<         <translation>برگ تازه</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3580"/>
<         <location filename="../src/saagharwindow.cpp" line="3606"/>
<         <source>Duplicate Tab</source>
<         <translation>ایجاد نسخه دوم از برگه</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3581"/>
<         <location filename="../src/saagharwindow.cpp" line="3609"/>
<         <source>Refresh</source>
<         <translation>تازه‌سازی</translation>
<     </message>
<     <message>
<         <source>&lt;b&gt;Tip1:&lt;/b&gt; Search operators and commands:%5&lt;TR&gt;&lt;TD%3 id=&quot;and-operator&quot;&gt;&lt;b&gt;%1+%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing both &lt;b&gt;%1&lt;/b&gt; and &lt;b&gt;%2&lt;/b&gt;, &lt;i&gt;at any order&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1**%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing both &lt;b&gt;%1&lt;/b&gt; and &lt;b&gt;%2&lt;/b&gt;, &lt;i&gt;at this order&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 %2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Same as &lt;b&gt;&lt;a href=&quot;#and-operator&quot;&gt;%1+%2&lt;/a&gt;&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 | %2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing &lt;b&gt;%1&lt;/b&gt; or &lt;b&gt;%2&lt;/b&gt;, or both.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 -%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing &lt;b&gt;%1&lt;/b&gt;, but not &lt;b&gt;%2&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;&quot;%1&quot;&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the whole word &lt;b&gt;%1&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;&quot;%1 %2&quot;&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the whole mixed word &lt;b&gt;%1 %2&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;Sp*ng&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing any phrase started with &lt;b&gt;Sp&lt;/b&gt; and ended with &lt;b&gt;ng&lt;/b&gt;; i.e: Mesras containing &lt;b&gt;Spring&lt;/b&gt; or &lt;b&gt;Spying&lt;/b&gt; or &lt;b&gt;Spoking&lt;/b&gt; or...&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip2:&lt;/b&gt; All search queries are case insensitive.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip3:&lt;/b&gt; User can use an operator more than once;&lt;br /&gt;i.e: &lt;b&gt;%1+%2+%6&lt;/b&gt;, &lt;b&gt;%1 -%6 -%7&lt;/b&gt;, &lt;b&gt;%1**%2**%7&lt;/b&gt; and &lt;b&gt;S*r*g&lt;/b&gt; are valid search terms.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip4:&lt;/b&gt; User can use operators mixed together;&lt;br /&gt;i.e: &lt;b&gt;&quot;%1&quot;+&quot;%2&quot;+%6&lt;/b&gt;, &lt;b&gt;%1+%2|%6 -%7&lt;/b&gt;, &lt;b&gt;&quot;%1&quot;**&quot;%2&quot;&lt;/b&gt;, &lt;b&gt;S*r*g -Spring&lt;/b&gt; and &lt;b&gt;&quot;Gr*en&quot;&lt;/b&gt; are valid search terms.&lt;br /&gt;&lt;br /&gt;</source>
<         <translation type="obsolete">&lt;b&gt;راه‌کار1:&lt;/b&gt; دستورات و عمل‌گرهای جستجوی:%5&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هردوی &lt;b&gt;%1&lt;/b&gt; و &lt;b&gt;%2&lt;/b&gt; را &lt;i&gt;با هر ترتیبی&lt;/i&gt; شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3 id=&quot;and-operator&quot;&gt;&lt;b&gt;%1+%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هردوی &lt;b&gt;%1&lt;/b&gt; و &lt;b&gt;%2&lt;/b&gt; را دقیقا &lt;i&gt;با همین ترتیب&lt;/i&gt; شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1**%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;مانند &lt;b&gt;&lt;a href=&quot;#and-operator&quot;&gt;%1+%2&lt;/a&gt;&lt;/b&gt;.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 %2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که &lt;b&gt;%1&lt;/b&gt; یا &lt;b&gt;%2&lt;/b&gt; و یا هردو را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 | %2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که شامل &lt;b&gt;%1&lt;/b&gt;می‌شوند اما  &lt;b&gt;%2&lt;/b&gt; را شامل نمی‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 -%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که عین کلمه &lt;b&gt;%1&lt;/b&gt; را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;&quot;%1&quot;&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که عین کلمه مرکب &lt;b&gt;%1 %2&lt;/b&gt; را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;&quot;%1 %2&quot;&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هر عبارتی که با &lt;b&gt;به&lt;/b&gt; شروع و با &lt;b&gt;ان&lt;/b&gt; تمام می‌شوند، شامل می‌شود؛ به‌عنوان مثال: لَت‌هایی که &lt;b&gt;بهاران&lt;/b&gt; یا &lt;b&gt;بهشتیان&lt;/b&gt; یا &lt;b&gt;برادران&lt;/b&gt; یا... را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;به*ان&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار2:&lt;/b&gt; همه جستارها بصورت غیرحساس به حروف بزرگ و کوچک به انجام می‌رسند.(فقط انگلیسی)&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار3:&lt;/b&gt; کاربر می‌تواند یک عملگر را بیشتر از یک‌بار به کار ببرد؛&lt;br /&gt;به‌عنوان مثال: &lt;b&gt;%1+%2+%6&lt;/b&gt;، &lt;b&gt;%1 -%6 -%7&lt;/b&gt;، &lt;b&gt;%1**%2**%7&lt;/b&gt; و &lt;b&gt;ب*ا*ن&lt;/b&gt; عبارات جستجوی معتبری هستند.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار4:&lt;/b&gt; کاربر می‌تواند عملگرها را بصورت همراه با هم به‌کار ببرد؛&lt;br /&gt;به‌عنوان مثال: &lt;b&gt;&quot;%1&quot;+&quot;%2&quot;+%6&lt;/b&gt;، &lt;b&gt;%1+%2|%6 -%7&lt;/b&gt;، &lt;b&gt;&quot;%1&quot;**&quot;%2&quot;&lt;/b&gt;، &lt;b&gt;ب*ا*ن -بهاران&lt;/b&gt; و &lt;b&gt;&quot;س*ز&quot;&lt;/b&gt; عبارات جستجوی معتبری هستند.&lt;br /&gt;&lt;br /&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2000"/>
<         <source>Spring</source>
<         <translation>بهار</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2000"/>
<         <source>Flower</source>
<         <translation>گل</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2000"/>
<         <source> ALIGN=CENTER</source>
<         <translation></translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2000"/>
<         <source> ALIGN=Left</source>
<         <translation> ALIGN=Right</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2001"/>
<         <source>Rain</source>
<         <translation>باران</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2001"/>
<         <source>Sunny</source>
<         <translation>آفتابی</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2001"/>
<         <source>&lt;TABLE DIR=LTR FRAME=VOID CELLSPACING=5 COLS=3 RULES=ROWS BORDER=0&gt;&lt;TBODY&gt;</source>
<         <translation>&lt;TABLE DIR=RTL FRAME=VOID CELLSPACING=5 COLS=3 RULES=ROWS BORDER=0&gt;&lt;TBODY&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2002"/>
<         <source>&lt;TD  ALIGN=Left&gt;:&lt;/TD&gt;</source>
<         <translation>&lt;TD  ALIGN=Right&gt;:&lt;/TD&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2003"/>
<         <source>Search Tips...</source>
<         <translation>راه‌کارهای جستجو...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2352"/>
<         <source>Some of changes are applied after relaunch!</source>
<         <translation>برخی از تغییرات بعد از باز آغاز اعمال خواهند شد!</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2383"/>
<         <source>File not found!</source>
<         <translation>پرونده یافت نشد!</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3258"/>
<         <source>Clean Up Database</source>
<         <translation>پاک‌سازی پایگاه‌داده</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3374"/>
<         <source>Filter:</source>
<         <translation>پرویزن:</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3378"/>
<         <location filename="../src/saagharwindow.cpp" line="3380"/>
<         <source>Filter</source>
<         <translation>پرویزن</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3464"/>
<         <source>Bookmarking system was disabled, something going wrong with writing or reading from bookmarks file:
< %1</source>
<         <translation>بخش نشان‌ها غیرفعال شد، اشکالی در خواندن یا نوشتن فایل نشان‌ها وجود دارد: %1</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3474"/>
<         <source>Verses</source>
<         <translation>چامه‌ها</translation>
<     </message>
<     <message>
<         <source>&lt;a href=&quot;http://pojh.iBlogger.org/saaghar&quot;&gt;Saaghar&lt;/a&gt;</source>
<         <oldsource>&lt;a href=&quot;http://www.pojh.co.cc/saaghar&quot;&gt;Saaghar&lt;/a&gt;</oldsource>
<         <translation type="obsolete">&lt;a href=&quot;http://pojh.iBlogger.org/saaghar&quot;&gt;ساغر&lt;/a&gt;</translation>
<     </message>
<     <message>
<         <source>&lt;a href=&quot;http://www.gozir.com/&quot;&gt;Hamid Reza Mohammadi&lt;/a&gt;</source>
<         <translation type="obsolete">&lt;a href=&quot;http://www.gozir.com/&quot;&gt;حمیدرضا محمدی&lt;/a&gt;</translation>
<     </message>
<     <message>
<         <source>&lt;a href=&quot;http://www.phototak.com/&quot;&gt;S. Nasser Alavizadeh&lt;/a&gt;</source>
<         <translation type="obsolete">&lt;a href=&quot;http://www.phototak.com/&quot;&gt;سیدناصر علوی‌زاده&lt;/a&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1452"/>
<         <source>Help file not found!</source>
<         <translation>پرونده راهنما یافت نمی‌شود!</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1468"/>
<         <source>Browse for a new set</source>
<         <translation>گزیدن نَسک تازه</translation>
<     </message>
<     <message>
<         <source>&amp;New Search Method</source>
<         <translation type="obsolete">شکل &amp;جدید جستجو</translation>
<     </message>
<     <message>
<         <source>&amp;Skip non-Alphabet</source>
<         <translation type="obsolete">نادیده گرفتن نویسه‌های &amp;غیر-الفبایی</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1540"/>
<         <source>&amp;File</source>
<         <translation>&amp;پرونده</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1544"/>
<         <source>&amp;Opened Tabs</source>
<         <translation>برگه‌های با&amp;زشده</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1546"/>
<         <source>&amp;Closed Tabs</source>
<         <translation>برگه‌های ب&amp;سته‌شده</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1549"/>
<         <source>&amp;Navigation</source>
<         <translation>&amp;ناوبری</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1551"/>
<         <source>&amp;View</source>
<         <translation>ن&amp;ما</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1554"/>
<         <source>&amp;Tools</source>
<         <translation>&amp;ابزارها</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1556"/>
<         <source>&amp;Help</source>
<         <translation>&amp;راهنما</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1565"/>
<         <source>&amp;Home</source>
<         <translation>&amp;خانه</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1568"/>
<         <location filename="../src/saagharwindow.cpp" line="1572"/>
<         <source>&amp;Previous</source>
<         <translation>&amp;پیشین</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1569"/>
<         <location filename="../src/saagharwindow.cpp" line="1573"/>
<         <source>&amp;Next</source>
<         <translation>&amp;پسین</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1576"/>
<         <source>&amp;Copy</source>
<         <translation>&amp;رو نگاشت</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1578"/>
<         <source>&amp;Find</source>
<         <translation>&amp;جستجو</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1627"/>
<         <source>Check for &amp;Updates</source>
<         <translation>بررسی برای &amp;بروز رسانی‌ها</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1630"/>
<         <source>&amp;Show Photo at Home</source>
<         <translation>&amp;نمایش نگاره‌ها در برگ نخست</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1633"/>
<         <source>&amp;Lock ToolBars</source>
<         <translation>&amp;ایستایی  نوار ابزارها</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1730"/>
<         <source>&amp;Show Preface...</source>
<         <translation>نمایش &amp;پیش‌گفتار...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1733"/>
<         <source>&amp;Dev. Clean up Database</source>
<         <translation>توسعه &amp;پاک‌سازی پایگاه‌داده</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1803"/>
<         <source>ToolBars</source>
<         <translation>نوار ابزارها</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2037"/>
<         <source>&lt;b&gt;All&lt;/b&gt;</source>
<         <translation>&lt;b&gt;همه&lt;/b&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2040"/>
<         <source>&lt;b&gt;All opened tabs (highlight)&lt;/b&gt;</source>
<         <translation>&lt;b&gt;برگه‌های باز (برجسته‌سازی)&lt;/b&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2048"/>
<         <source>&lt;b&gt;Titles&lt;/b&gt;</source>
<         <translation>&lt;b&gt;سرنویس‌ها&lt;/b&gt;</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2352"/>
<         <source>Need to Relaunch!</source>
<         <translation>باز آغازی نیاز است!</translation>
<     </message>
<     <message>
<         <source>You have not write permission to database file, the import procedure can not proceed.
< DataBase Path: %2</source>
<         <translation type="vanished">به پرونده پایگاه‌داده دسترسی نوشتنی ندارید، فرایند افزودن نَسک تازه نمی‌تواند ادامه پیدا کند.
< مسیر پایگاه‌داده: %2</translation>
<     </message>
<     <message>
<         <source>You have not write permission to database file, the import procedure can not proceed.</source>
<         <translation type="obsolete">به پرونده پایگاه‌داده دسترسی نوشتنی ندارید، فرایند افزودن نَسک تازه نمی‌تواند ادامه پیدا کند.</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="3464"/>
<         <source>Warning!</source>
<         <translation>هشدار!‏</translation>
<     </message>
<     <message>
<         <source>There are some conflict with your installed database.</source>
<         <translation type="obsolete">بخش‌هایی از نَسک تازه در پایگاه‌داده نصب شده موجودند.</translation>
<     </message>
<     <message>
<         <source>These poets are present in installed database:
< </source>
<         <translation type="vanished">سخن‌سراهایی که در پایگاه‌داده فعلی موجودند:</translation>
<     </message>
<     <message>
<         <source>There are some errors, the import procedure was not completed</source>
<         <translation type="vanished">خطایی رخ داده است، فرایند افزودن نَسک تازه کامل نشد</translation>
<     </message>
<     <message>
<         <source>&amp;Search</source>
<         <translation type="obsolete">&amp;جستجو</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1580"/>
<         <source>S&amp;ettings</source>
<         <translation>&amp;سامانِش</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1582"/>
<         <source>View in &quot;&amp;ganjoor.net&quot;</source>
<         <translation>بررسی در تارنمای &amp;گنجور</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1584"/>
<         <source>E&amp;xit</source>
<         <translation>&amp;خروج</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1587"/>
<         <source>New &amp;Tab</source>
<         <translation>&amp;برگ تازه</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1589"/>
<         <source>&amp;New Window</source>
<         <translation>&amp;پنجره جدید</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1591"/>
<         <source>&amp;About</source>
<         <translation>&amp;درباره</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1593"/>
<         <source>About &amp;Qt</source>
<         <translation>درباره &amp;کیوت</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1595"/>
<         <source>&amp;Faal</source>
<         <translation>&amp;فال</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1597"/>
<         <source>&amp;Print...</source>
<         <translation>&amp;چاپ...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1599"/>
<         <source>Print Pre&amp;view...</source>
<         <translation>پیش‌&amp;نمایش چاپ...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1602"/>
<         <source>&amp;Import...</source>
<         <translation>&amp;درون‌ریزی...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1605"/>
<         <source>&amp;Export As...</source>
<         <translation>&amp;رونوشت‌برداری در پیکر...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1607"/>
<         <source>Exp&amp;ort As PDF...</source>
<         <translation>رونوشت‌برداری در پیکر پی‌دی‌ا&amp;ف ...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1609"/>
<         <source>&amp;Help Contents...</source>
<         <translation>&amp;راهنما...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1611"/>
<         <source>&amp;Close Tab</source>
<         <translation>بستن برگ&amp;ه</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1613"/>
<         <source>&amp;Random</source>
<         <translation>&amp;بخت‌آورد</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1616"/>
<         <source>Insert New &amp;Set...</source>
<         <translation>افزودن &amp;نَسک تازه...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="1618"/>
<         <source>&amp;Remove Poet...</source>
<         <translation>&amp;کنار نهادن نَسک...</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="281"/>
<         <location filename="../src/saagharwindow.cpp" line="1410"/>
<         <location filename="../src/saagharwindow.cpp" line="1620"/>
<         <source>&amp;Full Screen</source>
<         <translation>&amp;سراسر نما</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="101"/>
<         <source>Audio Player</source>
<         <translation>پخش کننده صدا</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2592"/>
<         <source>Error!</source>
<         <translation>خطا!</translation>
<     </message>
<     <message>
<         <location filename="../src/saagharwindow.cpp" line="2592"/>
<         <source>There is no equivalent page there at ganjoor website.</source>
<         <translation>صفحه متناظر در تارنمای گنجور وحود ندارد.</translation>
<     </message>
<     <message>
<         <source>Initializing Results Table...</source>
<         <translation type="obsolete">آماده‌سازی جدول یافته‌ها...</translation>
<     </message>
<     <message>
<         <source>Cancel</source>
<         <translation type="vanished">رد</translation>
<     </message>
<     <message>
<         <source>No match found.</source>
<         <translation type="obsolete">موردی یافت نشد.</translation>
<     </message>
<     <message>
<         <source>There are some conflict with your installed database. If you continue, these poets will be removed!</source>
<         <translation type="vanished">بخش‌هایی از نَسک تازه در پایگاه‌داده نصب شده موجودند. اگر ادامه دهید سخن‌سرایانی که این بخش‌ها را دربرمی‌گیرند از پایگاه‌داده فعلی حذف خواهند شد!</translation>
<     </message>
< </context>
< <context>
<     <name>SearchOptionsDialog</name>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="20"/>
<         <source>Advanced Search Options</source>
<         <translation>گزینه‌های پیشرفته جستجو</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="26"/>
<         <source>Search range</source>
<         <translation>دامنه جستجو</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="55"/>
<         <source>All poets/books</source>
<         <translation>همه سخن‌سراها/کتاب‌ها</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="62"/>
<         <source>All opened tabs (highlight)</source>
<         <translation>برگه‌های باز (برجسته‌سازی)</translation>
<     </message>
<     <message>
<         <source>Custome range</source>
<         <translation type="obsolete"> </translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="115"/>
<         <source>Clear</source>
<         <translation>پاک کردن</translation>
<     </message>
<     <message>
<         <source>Titles: include search results within titles of poems.</source>
<         <translation type="vanished">سرنویس‌ها: جستجو در میان سرنویس‌ها.</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="95"/>
<         <source>Custome search range</source>
<         <translation>سفارشی‌سازی دامنه جستجو</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="127"/>
<         <source>Titles: search within titles</source>
<         <translation>سرنویس‌ها: جستجو در میان سرنویس‌ها</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="141"/>
<         <source>Results per page:</source>
<         <translation>تعداد یافته‌ها بر صفحه:</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="163"/>
<         <source>Non-paged search results</source>
<         <translation>همه یافته‌ها در یک صفحه</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="170"/>
<         <source>Skip vowel letters (slow)</source>
<         <translation>نادیده گرفتن آوای نویسه‌ها (کند)</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="177"/>
<         <source>Skip vowel signs</source>
<         <translation>نادیده گرفتن حرکت‌های نویسه‌ها</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="188"/>
<         <source>Search Tips...</source>
<         <translation>راه‌کارهای جستجو...</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="211"/>
<         <source>Close</source>
<         <translation>بستن</translation>
<     </message>
<     <message>
<         <location filename="../src/searchoptionsdialog.ui" line="218"/>
<         <source>OK</source>
<         <translation>قبول</translation>
<     </message>
< </context>
< <context>
<     <name>SearchResultWidget</name>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="59"/>
<         <location filename="../src/searchresultwidget.cpp" line="315"/>
<         <source>Radifs that contain: </source>
<         <translation>ردیف شامل: </translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="60"/>
<         <location filename="../src/searchresultwidget.cpp" line="316"/>
<         <source>Rhymed by: </source>
<         <translation>هم‌قافیه با: </translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="131"/>
<         <source>Filter:</source>
<         <translation>پرویزن:</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="141"/>
<         <source>Filter</source>
<         <translation>پرویزن</translation>
<     </message>
<     <message>
<         <source>page %1 of %2 page(s)</source>
<         <translation type="obsolete">صفحه %1 از %2 صفحه(ها)</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="313"/>
<         <source>All: %1 - Filered: %2</source>
<         <translation>کل: %1 - فیلتر شده: %2</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="317"/>
<         <source>p: %1 of %2</source>
<         <translation>ص: %1 از %2</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="89"/>
<         <source>#</source>
<         <translation></translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="89"/>
<         <source>Title</source>
<         <translation>سرنویس</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="89"/>
<         <source>Verse</source>
<         <translation>چامه</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="332"/>
<         <source>Initializing Results Table...</source>
<         <translation>آماده‌سازی جدول یافته‌ها...</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="332"/>
<         <source>Cancel</source>
<         <translation>رد</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="409"/>
<         <source>All</source>
<         <translation>همه</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="409"/>
<         <source>Titles</source>
<         <translation>سرنویس‌ها</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="556"/>
<         <source>Nothing found!</source>
<         <translation>چیزی یافت نشد!</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="623"/>
<         <location filename="../src/searchresultwidget.cpp" line="634"/>
<         <source>Close</source>
<         <translation>بستن</translation>
<     </message>
<     <message>
<         <location filename="../src/searchresultwidget.cpp" line="624"/>
<         <location filename="../src/searchresultwidget.cpp" line="639"/>
<         <source>Close All</source>
<         <translation>بستن همه</translation>
<     </message>
< </context>
< <context>
<     <name>SelectCreateDialog</name>
<     <message>
<         <location filename="../src/importer/selectcreatedialog.ui" line="14"/>
<         <source>Select/Create Categories</source>
<         <translation>انتخاب/ساختن بخش‌</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/selectcreatedialog.ui" line="20"/>
<         <source>Create with the following title:</source>
<         <translation>ساخت تازه با سرنویس:</translation>
<     </message>
<     <message>
<         <location filename="../src/importer/selectcreatedialog.ui" line="30"/>
<         <source>Select from current datasets:</source>
<         <translation>انتخاب از مجموعه‌داده‌های موجود:</translation>
<     </message>
< </context>
< <context>
<     <name>SelectionManager</name>
<     <message>
<         <location filename="../src/selectionmanager.ui" line="46"/>
<         <source>Current selection:</source>
<         <translation>انتخاب فعلی:</translation>
<     </message>
<     <message>
<         <location filename="../src/selectionmanager.ui" line="53"/>
<         <source>Select some items:</source>
<         <translation>موردهای مورد نظرتان را انتخاب کنید:</translation>
<     </message>
<     <message>
<         <location filename="../src/selectionmanager.ui" line="14"/>
<         <location filename="../src/selectionmanager.cpp" line="37"/>
<         <source>Selection Manager</source>
<         <translation>مدیر انتخاب</translation>
<     </message>
< </context>
< <context>
<     <name>Settings</name>
<     <message>
<         <location filename="../src/settings.ui" line="14"/>
<         <source>Settings</source>
<         <translation>سامانِش</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="62"/>
<         <source>General</source>
<         <translation>عمومی</translation>
<     </message>
<     <message>
<         <source>Font</source>
<         <translation type="obsolete">قلم</translation>
<     </message>
<     <message>
<         <source>Font Family</source>
<         <translation type="obsolete">خانواده قلم</translation>
<     </message>
<     <message>
<         <source>Font Size</source>
<         <translation type="obsolete">انداره قلم</translation>
<     </message>
<     <message>
<         <source>Colors</source>
<         <translation type="obsolete">رنگ‌ها</translation>
<     </message>
<     <message>
<         <source>&quot;Text&quot; color</source>
<         <translation type="obsolete">رنگ «متن»‏</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="441"/>
<         <source>&quot;Background&quot; color</source>
<         <translation>رنگ «پشت‌زمینه»‏</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="452"/>
<         <source>&quot;Matched Text&quot; color</source>
<         <translation>رنگ «متن یافت‌شده»‏</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="70"/>
<         <source>Appearance</source>
<         <translation>نما</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="86"/>
<         <location filename="../src/settings.ui" line="99"/>
<         <location filename="../src/settings.ui" line="395"/>
<         <source>Browse</source>
<         <translation>گزیدن</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="109"/>
<         <source>Background</source>
<         <translation>پشت‌زمینه</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="116"/>
<         <source>Icon Theme</source>
<         <translation>مجموعه نماد</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="152"/>
<         <source>Show Beyt Numbers</source>
<         <translation>نمایش شماره بیت‌ها</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="135"/>
<         <source>Custom Background</source>
<         <translation>شخصی‌سازی پشت‌زمینه</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="35"/>
<         <source>Apply</source>
<         <translation>اعمال کردن</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="145"/>
<         <source>Custom Icon Theme</source>
<         <translation>شخصی‌سازی مجموعه نماد</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="184"/>
<         <source>Poets Per Group:</source>
<         <translation>سخن‌سرایان بر گروه:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="162"/>
<         <source>Use transparent background</source>
<         <translation>استفاده از پشت‌زمینه نیمه‌شفاف</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="210"/>
<         <source>Application Startup</source>
<         <translation>آغاز به کار نرم‌افزار</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="218"/>
<         <source>Automatically Check for Updates</source>
<         <translation>بررسی خودکار برای بروز رسانی‌ها</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="228"/>
<         <source>Display Splash Screen</source>
<         <translation>نمایش Splash Screen</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="246"/>
<         <source>Task Manager</source>
<         <translation>مدیر کارها</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="264"/>
<         <source>Mode:</source>
<         <translation>حالت:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="281"/>
<         <location filename="../src/settings.cpp" line="201"/>
<         <source>Slow</source>
<         <translation>کند</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="286"/>
<         <location filename="../src/settings.cpp" line="202"/>
<         <source>Normal (Recommended)</source>
<         <translation>عادی (توصیه شده)</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="291"/>
<         <location filename="../src/settings.cpp" line="203"/>
<         <source>Fast</source>
<         <translation>سریع</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="303"/>
<         <location filename="../src/settings.cpp" line="206"/>
<         <source>Disabled</source>
<         <translation>غیرفعال</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="308"/>
<         <location filename="../src/settings.cpp" line="207"/>
<         <source>Saaghar Bottom Right</source>
<         <translation>پایین سمت راست پنجره ساغر</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="313"/>
<         <location filename="../src/settings.cpp" line="208"/>
<         <source>Saaghar Bottom Left</source>
<         <translation>پایین سمت چپ پنجره ساغر</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="318"/>
<         <location filename="../src/settings.cpp" line="209"/>
<         <source>Desktop Bottom Right</source>
<         <translation>پایین سمت راست میزکار</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="323"/>
<         <location filename="../src/settings.cpp" line="210"/>
<         <source>Desktop Top Right</source>
<         <translation>بالا سمت راست میزکار</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="331"/>
<         <source>Notification:</source>
<         <translation>اعلان:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="351"/>
<         <source>Interface Language:</source>
<         <translation>زبان رابط کاربری:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="374"/>
<         <source>Customize Faal &amp;&amp; Random...</source>
<         <translation>شخصی‌سازی فال و بخت‌آورد...</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="385"/>
<         <source>Data Base Path</source>
<         <translation>مسیر پایگاه‌داده</translation>
<     </message>
<     <message>
<         <source>Font &amp;&amp; Color</source>
<         <translation type="obsolete">قلم و رنگ</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="423"/>
<         <source>Fonts &amp;&amp; Colors</source>
<         <translation>قلم‌ها و رنگ‌ها</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="465"/>
<         <source>Outline:</source>
<         <translation>فهرست نَسک‌ها:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="479"/>
<         <source>Simple</source>
<         <translation>ساده</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="493"/>
<         <source>Global:</source>
<         <translation>سراسری:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="508"/>
<         <source>Advanced</source>
<         <translation>پیشرفته</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="522"/>
<         <source>Poem Text:</source>
<         <translation>متن چامه:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="529"/>
<         <source>Prose Text:</source>
<         <translation>متن نثر:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="536"/>
<         <source>Section Name:</source>
<         <translation>نام بخش:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="543"/>
<         <source>Title:</source>
<         <translation>سرنویس:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="550"/>
<         <source>Number:</source>
<         <translation>اعداد:</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="563"/>
<         <source>ToolBar</source>
<         <translation>نوار ابزار</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="569"/>
<         <source>All Actions</source>
<         <translation>همه پیش‌کارها</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="579"/>
<         <source>ToolBar Actions</source>
<         <translation>پیش‌کارهای نوارابزار</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="42"/>
<         <source>OK</source>
<         <translation>قبول</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.ui" line="49"/>
<         <source>Cancel</source>
<         <translation>رد</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.cpp" line="222"/>
<         <location filename="../src/settings.cpp" line="254"/>
<         <source>Separator</source>
<         <translation>جداساز</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.cpp" line="316"/>
<         <source>Add Path For Data Base</source>
<         <translation>اضافه کردن مسیر برای پایگاه‌داده</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.cpp" line="345"/>
<         <source>Browse Background Image</source>
<         <translation>گزیدن تصویر پشت‌زمینه</translation>
<     </message>
<     <message>
<         <location filename="../src/settings.cpp" line="354"/>
<         <source>Browse Theme Directory</source>
<         <translation>گزیدن پوشه مجموعه نماد</translation>
<     </message>
< </context>
< <context>
<     <name>UnZip</name>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1251"/>
<         <source>ZIP operation completed successfully.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1254"/>
<         <source>Failed to initialize or load zlib library.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1257"/>
<         <source>zlib library error.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1260"/>
<         <source>Unable to create or open file.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1263"/>
<         <source>Partially corrupted archive. Some files might be extracted.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1266"/>
<         <source>Corrupted archive.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1269"/>
<         <source>Wrong password.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1272"/>
<         <source>No archive has been created yet.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1275"/>
<         <source>File or directory does not exist.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1278"/>
<         <source>File read error.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1281"/>
<         <source>File write error.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1284"/>
<         <source>File seek error.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1287"/>
<         <source>Unable to create a directory.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1290"/>
<         <source>Invalid device.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1293"/>
<         <source>Invalid or incompatible zip archive.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1296"/>
<         <source>Inconsistent headers. Archive might be corrupted.</source>
<         <translation type="unfinished"></translation>
<     </message>
<     <message>
<         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1302"/>
<         <source>Unknown error.</source>
<         <translation type="unfinished"></translation>
<     </message>
< </context>
< </TS>
---
> <?xml version="1.0" encoding="utf-8"?>
> <!DOCTYPE TS>
> <TS version="2.1" language="fa_IR">
> <context>
>     <name>AboutDialog</name>
>     <message>
>         <location filename="../src/aboutdialog.ui" line="20"/>
>         <location filename="../src/aboutdialog.cpp" line="33"/>
>         <source>About Saaghar</source>
>         <translation>درباره ساغر</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.ui" line="58"/>
>         <source>Close</source>
>         <translation>بستن</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="89"/>
>         <source>Revision: %1&lt;br /&gt;</source>
>         <translation>ویرایش: %1 &lt;br /&gt;</translation>
>     </message>
>     <message>
>         <source>Telegram Channel (Persian): </source>
>         <translation type="vanished">کانال تلگرام:</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="94"/>
>         <source>Telegram Channel: </source>
>         <translation>کانال تلگرام: ‎</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="95"/>
>         <source>Telegram Bot: </source>
>         <translation>ربات تلگرام: ‎</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="97"/>
>         <source>Site (English): </source>
>         <translation>تارنما (انگلیسی):  </translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="98"/>
>         <source>Site (Persian): </source>
>         <translation>تارنما (پارسی):  </translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="99"/>
>         <source>Mailing List: </source>
>         <translation>خبرنامه ایمیلی:  </translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="99"/>
>         <source>Saaghar Google Group</source>
>         <translation>گروه گوگلی ساغر</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="100"/>
>         <source>Facebook Page: </source>
>         <translation>صفحه فیسبوک:  </translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="103"/>
>         <source>Nasser Alavizadeh</source>
>         <translation>ناصر علوی‌زاده</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="103"/>
>         <source>(Logo Idea/Design)</source>
>         <translation>(ایده/طراحی نماد)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="104"/>
>         <source>Hamid Reza Mohammadi</source>
>         <translation>حمیدرضا محمدی</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="104"/>
>         <source>(Ganjoor Founder)</source>
>         <translation>(پدیدآورنده گنجور)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="106"/>
>         <source>Hedayat Vatankhah</source>
>         <translation>هدایت وطن‌خواه</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="106"/>
>         <source>(Fedora/MeeGo Package)</source>
>         <translation>(بسته فدورا/میگو)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="107"/>
>         <source>Forud A</source>
>         <translation>فرود</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="107"/>
>         <source>(Arch Package)</source>
>         <translation>(بسته آرچ)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="108"/>
>         <source>Javad Kouhi</source>
>         <translation>جواد کوهی</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="108"/>
>         <source>(BSD Port)</source>
>         <translation>(پورت BSD)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="109"/>
>         <source>Novid</source>
>         <translation>نوید</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="109"/>
>         <location filename="../src/aboutdialog.cpp" line="110"/>
>         <source>(Ubuntu Package)</source>
>         <translation>(بسته اوبونتو)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="110"/>
>         <source>Danial Behzadi</source>
>         <translation>دانیال بهزادی</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="112"/>
>         <source>Siyvash Kiani</source>
>         <translation>سیاوش کیانی</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="112"/>
>         <source>(Expert Assistance in Literature)</source>
>         <translation>(همکاری در تخصص ادبیات)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="113"/>
>         <source>Sahand Soltandoost</source>
>         <translation>سهند سلطان‌دوست</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="113"/>
>         <source>(Light-Gray Iconset)</source>
>         <translation>(مجموعه نماد Light-Gray)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="114"/>
>         <source>Open Iconic Project</source>
>         <translation>پروژه Open Iconic</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="114"/>
>         <source>(Iconic-Cyan Iconset, &lt;i&gt;modified version&lt;/i&gt;)</source>
>         <translation>(مجموعه نماد Iconic-Cyan, &lt;i&gt;نسخه ویرایش‌شده&lt;/i&gt;)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="115"/>
>         <source>Qt Creator Team</source>
>         <translation>تیم Qt Creator</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="115"/>
>         <source>(Code of Tasks Notification)</source>
>         <translation>(کد اعلان وظیفه‌ها)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="116"/>
>         <source>QIron Developer</source>
>         <translation>توسعه‌دهنده QIron</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="116"/>
>         <source>(Code of BreadCrumbBar)</source>
>         <translation>(کد BreadCrumbBar)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="117"/>
>         <source>All Ganjoor Project Contributors</source>
>         <translation>تمامی همکاری‌کننده‌ها در پروژه گنجور</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="117"/>
>         <source>(Persian-Datasets/Audio)</source>
>         <translation>(پایگاه‌داده پارسی-خوانش‌ها)</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="120"/>
>         <source>&lt;br /&gt;&lt;br /&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</source>
>         <translation>&lt;br /&gt;&lt;p dir=&quot;rtl&quot;&gt;ساغر برنامه‌ای رایگان و آزاد است و با امید به اینکه مفید و قابل استفاده باشد، منتشر شده است، اما بدون هیچ ضمانتی؛ حتی بدون ضمانت تجاری یا سازگاری برای هدف خاصی.&lt;/p&gt;&lt;p dir=&quot;ltr&quot;&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&lt;/p&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="124"/>
>         <source>&lt;h3&gt;Saaghar %1&lt;/h3&gt;%2Build Time: %3&lt;br /&gt;&lt;br /&gt;%4 is a Persian poem viewer software written using Qt (C++). It uses %5 database for Persian poems.&lt;br /&gt;&lt;br /&gt;%6&lt;h4&gt;Related Pages:&lt;/h4&gt;%7&lt;h4&gt;Special Thanks to:&lt;/h4&gt;%8%9</source>
>         <translation>&lt;h3&gt;ساغر %1&lt;/h3&gt;%2تاریخ ساخت: %3&lt;br /&gt;&lt;br /&gt;%4 نرم‌افزار نمایش شعر پارسی است که با استفاده از Qt (C++)‎ نوشته شده است. برای متن‌ها و شعرهای پارسی از پایگاه‌داده %5 استفاده می‌کند.&lt;br /&gt;&lt;br /&gt;%6&lt;h4&gt;صفحه‌های مرتبط:&lt;/h4&gt;%7&lt;h4&gt;تشکر ویژه از:&lt;/h4&gt;%8%9</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="131"/>
>         <source>Saaghar</source>
>         <translation>ساغر</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="132"/>
>         <source>Ganjoor</source>
>         <translation>گنجور</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="133"/>
>         <source>Copyright 2010-2016 %1. All right reserved.</source>
>         <translation>حق مولف ۲۰۱۰-۲۰۱۶ (۱۳۸۹-۱۳۹۵) %1. تمام حقوق محفوظ است.</translation>
>     </message>
>     <message>
>         <location filename="../src/aboutdialog.cpp" line="133"/>
>         <source>Razi Alavizadeh</source>
>         <translation>رضی علوی‌زاده</translation>
>     </message>
> </context>
> <context>
>     <name>AlbumManager</name>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1598"/>
>         <source>Save this album</source>
>         <translation>رونوشت آلبوم</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1599"/>
>         <source>Load Album...</source>
>         <translation>بارگذاری آلبوم...</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1600"/>
>         <source>New Album...</source>
>         <translation>آلبوم تازه...</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1602"/>
>         <source>Rename this album...</source>
>         <translation>تغییر نام آلبوم...</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1603"/>
>         <source>Remove this album...</source>
>         <translation>حذف آلبوم...</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1604"/>
>         <source>Save as this album...</source>
>         <translation>رونوشت‌برداری از آلبوم...</translation>
>     </message>
> </context>
> <context>
>     <name>AudioRepoDownloader</name>
>     <message>
>         <source>Data Base Updater</source>
>         <translation type="vanished">بروز رسان پایگاه‌داده</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="17"/>
>         <source>Get New Audios</source>
>         <translation>دریافت خوانش‌های تازه</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="27"/>
>         <source>Download to Album:</source>
>         <translation>دریافت به آلبوم:</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="37"/>
>         <source>You have to set album location...</source>
>         <translation>باید پرونده آلبوم را انتخاب کنید...</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="44"/>
>         <source>Browse</source>
>         <translation>گزیدن</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="55"/>
>         <source>Select and click &apos;Download &amp; Add to Album&apos; button.</source>
>         <translation>انتخاب کرده و بر روی دکمه «دریافت و اضافه کردن به آلبوم» کلیک کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="112"/>
>         <source>Title</source>
>         <translation>سرنویس</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="117"/>
>         <source>Size</source>
>         <translation>اندازه</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="129"/>
>         <source>Group By:</source>
>         <translation>گروه‌بندی برحسب:</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="136"/>
>         <source>Poet</source>
>         <translation>سخن‌سرا</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="143"/>
>         <source>Voice</source>
>         <translation>صدا</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="154"/>
>         <source>Collapse All</source>
>         <translation>جمع کردن</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="161"/>
>         <source>Expand All</source>
>         <translation>گستردن</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="185"/>
>         <source>Keep Downloaded Files</source>
>         <translation>بایگانی پرونده‌های دریافت شده</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="208"/>
>         <source>Download Progress:</source>
>         <translation>پیشرفت دریافت:</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="241"/>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="756"/>
>         <source>Download &amp;&amp; Add to Album</source>
>         <translation>دریافت و اضافه کردن به آلبوم</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.ui" line="248"/>
>         <source>Close</source>
>         <translation>بستن</translation>
>     </message>
>     <message>
>         <source>Cancel</source>
>         <translation type="vanished">رد</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="203"/>
>         <source>KB</source>
>         <translation>کیلو بایت</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="220"/>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="564"/>
>         <source>Not Available</source>
>         <translation>نامشخص</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="225"/>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="569"/>
>         <source>%1 (voice: %2)</source>
>         <translation>%1 (صدا: %2)</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="226"/>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="570"/>
>         <source>%1 (poet: %2)</source>
>         <translation>%1 (سخن‌سرا: %2)</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="279"/>
>         <source>Select From Repositories List...</source>
>         <translation>از بین فهرست مخزن‌ها انتخاب کنید...</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="281"/>
>         <source>Click To Add/Remove...</source>
>         <translation>برای حذف/اضافه کلیک کنید...</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="468"/>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="661"/>
>         <source>Error!</source>
>         <translation>خطا!</translation>
>     </message>
>     <message>
>         <source>You have not write permission to database file, the import procedure can not proceed.
> DataBase Path: %2</source>
>         <translation type="vanished">به پرونده پایگاه‌داده دسترسی نوشتنی ندارید، فرایند افزودن نَسک تازه نمی‌تواند ادامه پیدا کند.
> مسیر پایگاه‌داده: %2</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="696"/>
>         <source>Warning!</source>
>         <translation>هشدار!‏ </translation>
>     </message>
>     <message>
>         <source>There are some conflict with your installed database. If you continue, these poets will be removed!</source>
>         <translation type="vanished">بخش‌هایی از نَسک تازه در پایگاه‌داده نصب شده موجودند. اگر ادامه دهید سخن‌سرایانی که این بخش‌ها را دربرمی‌گیرند از پایگاه‌داده فعلی حذف خواهند شد!</translation>
>     </message>
>     <message>
>         <source>These poets are present in installed database:
> </source>
>         <translation type="vanished">سخن‌سراهایی که در پایگاه‌داده فعلی موجودند:</translation>
>     </message>
>     <message>
>         <source>There are some errors, the import procedure was not completed</source>
>         <translation type="vanished">خطایی رخ داده است، فرایند افزودن نَسک تازه کامل نشد</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="368"/>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="370"/>
>         <source>Please select download location...</source>
>         <translation>لطفا مکان دریافت را انتخاب کنید...</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="391"/>
>         <source>Present in Album</source>
>         <translation>موجود در آلبوم</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="399"/>
>         <source>Not in Album</source>
>         <translation>ناموجود در آلبوم</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="468"/>
>         <source>Can not create temp path.</source>
>         <translation>نمی‌تواند مسیر موقت را بسازد.</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="597"/>
>         <source>Select Album to Download Audios</source>
>         <translation>برای دریافت خوانش‌ها آلبومی را انتخاب کنید</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="652"/>
>         <source>Stop</source>
>         <translation>توقف</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="661"/>
>         <source>Can not create download path.</source>
>         <translation>نمی‌تواند مسیر دریافت را بسازد.</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="677"/>
>         <source>Finished!</source>
>         <translation>تمام!</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="697"/>
>         <source>Download in progress! Are you sure to stop downloading?</source>
>         <translation>فرایند دریافت در جریان است! آیا از متوقف کردن دریافت اطمینان داری؟</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="731"/>
>         <source>MP3 file</source>
>         <translation>پرونده MP3</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="732"/>
>         <source>sync. file</source>
>         <translation>پرونده همگام‌سازی</translation>
>     </message>
>     <message>
>         <source>Download &amp;&amp; Install</source>
>         <translation type="vanished">دریافت و نصب</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="794"/>
>         <source>Add/Remove Repository Address</source>
>         <translation>حذف/اضافه آدرس مخزن</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="796"/>
>         <source>Insert each address in a separate line!</source>
>         <translation>هر آدرس را در خط جداگانه‌ای وارد کنید!</translation>
>     </message>
> </context>
> <context>
>     <name>Bookmarks</name>
>     <message>
>         <location filename="../src/bookmarks.cpp" line="64"/>
>         <source>Title</source>
>         <translation>سرنویس</translation>
>     </message>
>     <message>
>         <location filename="../src/bookmarks.cpp" line="64"/>
>         <source>Comments</source>
>         <translation>توضیحات</translation>
>     </message>
>     <message>
>         <location filename="../src/bookmarks.cpp" line="179"/>
>         <location filename="../src/bookmarks.cpp" line="209"/>
>         <location filename="../src/bookmarks.cpp" line="294"/>
>         <location filename="../src/bookmarks.cpp" line="315"/>
>         <location filename="../src/bookmarks.cpp" line="320"/>
>         <source>Verses</source>
>         <translation>چامه‌ها</translation>
>     </message>
>     <message>
>         <location filename="../src/bookmarks.cpp" line="467"/>
>         <source>Bookmark</source>
>         <translation>نشان</translation>
>     </message>
>     <message>
>         <location filename="../src/bookmarks.cpp" line="468"/>
>         <source>This bookmark has comment if you remove it, the comment will be deleted, too.
> This operation can not be undoed!
> Bookmark&apos;s&apos; Title:
> %1
> 
> Bookmark&apos;s Comment:
> %2</source>
>         <translation>این نشان دارای توضیحات است، اگر آن را بردارید توضیحات مربوط به آن نیز پاک خواهد شد.
> این عمل پاک کردن برگشت‌ناپذیر است!
> سرنویس:
> %1
> 
> توضیحات:
> %2</translation>
>     </message>
> </context>
> <context>
>     <name>ConcurrentTask</name>
>     <message>
>         <location filename="../src/concurrenttasks.cpp" line="438"/>
>         <source>Update: %1</source>
>         <translation>بروزرسانی: %1</translation>
>     </message>
>     <message>
>         <location filename="../src/concurrenttasks.cpp" line="438"/>
>         <source>Canceled by user</source>
>         <translation>توسط کاربر باطل شد</translation>
>     </message>
>     <message>
>         <location filename="../src/concurrenttasks.cpp" line="438"/>
>         <source>Error ocurred</source>
>         <translation>خطا رخ داد</translation>
>     </message>
> </context>
> <context>
>     <name>CustomizeRandomDialog</name>
>     <message>
>         <location filename="../src/settings.cpp" line="480"/>
>         <source>Customize Faal &amp; Random</source>
>         <translation>شخصی‌سازی فال و بخت‌آورد</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.cpp" line="481"/>
>         <source>Open in new Tab</source>
>         <translation>در صفحه جدید بازکن</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.cpp" line="482"/>
>         <source>Select Random Range:</source>
>         <translation>انتخاب محدوده بخت‌آورد:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.cpp" line="483"/>
>         <source>Ok</source>
>         <translation>قبول</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.cpp" line="484"/>
>         <source>Cancel</source>
>         <translation>رد</translation>
>     </message>
> </context>
> <context>
>     <name>DataBaseUpdater</name>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="17"/>
>         <source>Data Base Updater</source>
>         <translation>بروز رسان پایگاه‌داده</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="179"/>
>         <source>Select From Repositories List...</source>
>         <translation>از بین فهرست مخزن‌ها انتخاب کنید...</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="60"/>
>         <source>Select and click &apos;Download &amp; Install&apos; button.</source>
>         <translation>انتخاب کنید و بر روی دکمه «دریافت و نصب» کلیک کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="71"/>
>         <source>Title</source>
>         <translation>سرنویس</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="76"/>
>         <source>Size</source>
>         <translation>اندازه</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="81"/>
>         <source>Release Date</source>
>         <translation>تاریخ انتشار</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="86"/>
>         <source>Information</source>
>         <translation>اطلاعات</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="94"/>
>         <source>Keep Downloaded Files</source>
>         <translation>بایگانی پرونده‌های دریافت شده</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="109"/>
>         <source>Download Location:</source>
>         <translation>مکان دریافت:</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="262"/>
>         <location filename="../src/databaseupdater.cpp" line="264"/>
>         <source>Please select download location...</source>
>         <translation>لطفا مکان دریافت را انتخاب کنید...</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="119"/>
>         <source>Browse</source>
>         <translation>گزیدن</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="131"/>
>         <source>Download Progress:</source>
>         <translation>پیشرفت دریافت:</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="164"/>
>         <location filename="../src/databaseupdater.cpp" line="564"/>
>         <source>Download &amp;&amp; Install</source>
>         <translation>دریافت و نصب</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.ui" line="171"/>
>         <source>Cancel</source>
>         <translation>رد</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="129"/>
>         <source>KB</source>
>         <translation>کیلو بایت</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="168"/>
>         <source>Go to Release Information</source>
>         <translation>رفتن به اطلاعات انتشار</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="181"/>
>         <source>Click To Add/Remove...</source>
>         <translation>برای حذف/اضافه کلیک کنید...</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="287"/>
>         <source>Installed</source>
>         <translation>نصب شده</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="295"/>
>         <source>Ready To Install</source>
>         <translation>آماده برای نصب</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="191"/>
>         <location filename="../src/databaseupdater.cpp" line="240"/>
>         <location filename="../src/databaseupdater.cpp" line="359"/>
>         <location filename="../src/databaseupdater.cpp" line="437"/>
>         <source>Error!</source>
>         <translation>خطا!</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="359"/>
>         <source>Can not create temp path.</source>
>         <translation>نمی‌تواند مسیر موقت را بسازد.</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="410"/>
>         <source>Select Download Location</source>
>         <translation>انتخاب مکان دریافت</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="417"/>
>         <source>Stop</source>
>         <translation>توقف</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="203"/>
>         <location filename="../src/databaseupdater.cpp" line="426"/>
>         <location filename="../src/databaseupdater.cpp" line="505"/>
>         <source>Warning!</source>
>         <translation>هشدار!‏ </translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="191"/>
>         <source>You have not write permission to database file, the import procedure can not proceed.
> DataBase Path: %2</source>
>         <translation>به پرونده پایگاه‌داده دسترسی نوشتنی ندارید، فرایند افزودن نَسک تازه نمی‌تواند ادامه پیدا کند.
> مسیر پایگاه‌داده: %2</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="205"/>
>         <source>There are some conflict with your installed database. If you continue, these poets will be removed!</source>
>         <translation>بخش‌هایی از نَسک تازه در پایگاه‌داده نصب شده موجودند. اگر ادامه دهید سخن‌سرایانی که این بخش‌ها را دربرمی‌گیرند از پایگاه‌داده فعلی حذف خواهند شد!</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="206"/>
>         <source>These poets are present in installed database:
> </source>
>         <translation>سخن‌سراهایی که در پایگاه‌داده فعلی موجودند:</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="240"/>
>         <source>There are some errors, the import procedure was not completed</source>
>         <translation>خطایی رخ داده است، فرایند افزودن نَسک تازه کامل نشد</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="426"/>
>         <source>Please select download location.</source>
>         <translation>لطفا مکان دریافت را انتخاب کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="437"/>
>         <source>Can not create download path.</source>
>         <translation>نمی‌تواند مسیر دریافت را بسازد.</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="486"/>
>         <source>Finished!</source>
>         <translation>تمام!</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="506"/>
>         <source>Download in progress! Are you sure to stop downloading?</source>
>         <translation>دریافت در جریان است! آیا از متوقف کردن دریافت اطمینان داری؟</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="727"/>
>         <source>Insert each address in a separate line!</source>
>         <translation>هر آدرس را در خط جداگانه‌ای وارد کنید!</translation>
>     </message>
>     <message>
>         <source>Download in progress! Are you sure to stop downloading?.</source>
>         <translation type="obsolete">دریافت در جریان است! آیا از متوقف کردن دریافت اطمینان داری؟</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="546"/>
>         <source>Installing...</source>
>         <translation>در حال نصب...</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="549"/>
>         <source>Installed.</source>
>         <translation>نصب شد.</translation>
>     </message>
>     <message>
>         <location filename="../src/databaseupdater.cpp" line="725"/>
>         <source>Add/Remove Repository Address</source>
>         <translation>حذف/اضافه آدرس مخزن</translation>
>     </message>
>     <message>
>         <source>Insert each address in its own line!</source>
>         <translation type="obsolete">هر آدرس را در خط خودش وارد کنید!</translation>
>     </message>
> </context>
> <context>
>     <name>DatabaseBrowser</name>
>     <message>
>         <location filename="../src/concurrenttasks.cpp" line="380"/>
>         <source>Search Result(s): %1</source>
>         <translation>یافته‌ها: %1</translation>
>     </message>
>     <message>
>         <location filename="../src/concurrenttasks.cpp" line="391"/>
>         <source>Last-Search Result(s): %1</source>
>         <translation>آخرین یافته‌ها: %1</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="99"/>
>         <source>Data Base Path:</source>
>         <translation>مسیر پایگاه‌داده:</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="100"/>
>         <source>Error:</source>
>         <translation>خطا:</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="100"/>
>         <source>No Error!</source>
>         <translation>بدون خطا!</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="109"/>
>         <source>Add Path For Data Base</source>
>         <translation>اضافه کردن مسیر برای پایگاه‌داده</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="123"/>
>         <location filename="../src/databasebrowser.cpp" line="137"/>
>         <source>Exit</source>
>         <translation>خروح</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="123"/>
>         <location filename="../src/databasebrowser.cpp" line="137"/>
>         <source>Saaghar could not find database file and will be closed.</source>
>         <translation>ساغر فایل پایگاه‌داده را پیدا نمی‌کند و بسته خواهد شد.</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="131"/>
>         <source>Select Save Location</source>
>         <translation>انتخاب مکان برای رونوشت</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="163"/>
>         <source>Cannot open Database File!</source>
>         <translation>پرونده پایگاه‌داده باز نمی‌شود!</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="163"/>
>         <source>Cannot open database file, please check if you have write permisson.
> Error: %1
> DataBase Path=%2</source>
>         <translation>پرونده پایگاه‌داده باز نمی‌شود، لطفا بررسی کنید که آیا دسترسی نوشتنی دارید.
> خطا: %1
> مسیر پایگاه‌داده: %2</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="550"/>
>         <location filename="../src/databasebrowser.cpp" line="570"/>
>         <source>All</source>
>         <translation>همه</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="1213"/>
>         <source>Search: </source>
>         <translation>جستجو:</translation>
>     </message>
>     <message>
>         <source>Titles</source>
>         <translation type="vanished">سرنویس‌ها</translation>
>     </message>
>     <message>
>         <source>Search in: </source>
>         <translation type="vanished">جستجو در:</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="1697"/>
>         <source>Select data sets to install</source>
>         <translation>انتخاب مجموعه‌داده برای نصب</translation>
>     </message>
> </context>
> <context>
>     <name>Dialog</name>
>     <message>
>         <location filename="../src/downloader/authenticationdialog.ui" line="13"/>
>         <source>Http authentication required</source>
>         <translation>تصدیق اعتبار HTTP لازم است</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/authenticationdialog.ui" line="19"/>
>         <source>You need to supply a Username and a Password to access this site</source>
>         <translation>شما باید یک نام کاربری و یک کلمه عبور برای دسترسی به این تارنما داشته باشید</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/authenticationdialog.ui" line="29"/>
>         <source>Username:</source>
>         <translation>نام کاربری:</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/authenticationdialog.ui" line="39"/>
>         <source>Password:</source>
>         <translation>کلمه عبور:</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/authenticationdialog.ui" line="59"/>
>         <source>Site:</source>
>         <translation>تارنما:</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/authenticationdialog.ui" line="72"/>
>         <source>%1 at %2</source>
>         <translation>%1 در %2</translation>
>     </message>
> </context>
> <context>
>     <name>Downloader</name>
>     <message>
>         <location filename="../src/downloader/downloader.cpp" line="91"/>
>         <source>Downloading...</source>
>         <translation>در حال دریافت...</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/downloader.cpp" line="94"/>
>         <source> is downloading...</source>
>         <translation>‫ در حال دریافت است...‬</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/downloader.cpp" line="118"/>
>         <location filename="../src/downloader/downloader.cpp" line="134"/>
>         <location filename="../src/downloader/downloader.cpp" line="198"/>
>         <location filename="../src/downloader/downloader.cpp" line="338"/>
>         <source>Downloader</source>
>         <translation>دریافت‌کننده</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/downloader.cpp" line="118"/>
>         <source>There already exists a file called %1 in %2. Overwrite?</source>
>         <translation>پرونده‌ای با نام %1 در %2 وجود دارد. رونویسی شود؟</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/downloader.cpp" line="135"/>
>         <source>Unable to save the file %1: %2.</source>
>         <translation>قادر به ذخیره‌سازی پرونده %1 نیست: %2.</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/downloader.cpp" line="153"/>
>         <source>Download canceled.</source>
>         <translation>دریافت باطل شد.</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/downloader.cpp" line="199"/>
>         <source>Download failed: %1.</source>
>         <translation>خطا در دریافت: %1.</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/downloader.cpp" line="212"/>
>         <source>Download Completed.</source>
>         <translation>دریافت کامل شد.</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/downloader.cpp" line="289"/>
>         <source>%1 at %2</source>
>         <translation>%1 در %2</translation>
>     </message>
>     <message>
>         <location filename="../src/downloader/downloader.cpp" line="339"/>
>         <source>One or more SSL errors has occurred: %1</source>
>         <translation>یک یا چند خطای SSL رخ داده است: %1</translation>
>     </message>
> </context>
> <context>
>     <name>FontColorSelector</name>
>     <message>
>         <location filename="../src/settings.cpp" line="502"/>
>         <source>Font Sample!</source>
>         <translation>نمونه قلم!</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.cpp" line="509"/>
>         <source>Set Font...</source>
>         <translation>انتخاب قلم...</translation>
>     </message>
> </context>
> <context>
>     <name>ImporterManager</name>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="118"/>
>         <source>The poems will import to the following category:</source>
>         <translation>چامه‌ها به این بخش افزوده خواهند شد:</translation>
>     </message>
>     <message>
>         <source>Select or Create a Poet or Book...</source>
>         <translation type="vanished">کتاب یا سخن‌سرایی را انتخاب کرده یا بسازید...</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="128"/>
>         <source>Import...</source>
>         <translation>افزودن...</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="129"/>
>         <source>Clear</source>
>         <translation>پاک کردن</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="186"/>
>         <location filename="../src/importer/importermanager.cpp" line="210"/>
>         <source>N/A</source>
>         <translation>در دسترس نیست</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="186"/>
>         <location filename="../src/importer/importermanager.cpp" line="210"/>
>         <source> &gt; </source>
>         <translation> » </translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="187"/>
>         <location filename="../src/importer/importermanager.cpp" line="208"/>
>         <location filename="../src/importer/importermanager.cpp" line="212"/>
>         <source>No poem title detected!</source>
>         <translation>سرنویس چامه تشخیص داده نشد!</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="372"/>
>         <source>Create a Category...</source>
>         <translation>ساختن بخش‌...</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="375"/>
>         <source>Select or Create a Category...</source>
>         <translation>انتخاب یا ساخت بخش‌...</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="454"/>
>         <source>Import</source>
>         <translation>درون‌ریزی</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="475"/>
>         <source>Ok</source>
>         <translation>قبول</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="450"/>
>         <location filename="../src/importer/importermanager.cpp" line="455"/>
>         <source>Data will import as subsections of the following category:
> %1</source>
>         <translation>داده‌ها به عنوان زیربخش‌های از این بخش افزوده خواهند شد:
> %1</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="126"/>
>         <source>Set Bio./Desc...</source>
>         <translation>اضافه کردن زندگی‌نامه/شرح...</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="127"/>
>         <location filename="../src/importer/importermanager.cpp" line="423"/>
>         <source>Select or Create a Poet/Book...</source>
>         <translation>انتخاب یا ایجاد سخن‌سرا/کتاب...</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="456"/>
>         <source> &gt; 
> 	</source>
>         <translation> » 
> 	</translation>
>     </message>
> </context>
> <context>
>     <name>ImporterOptionsDialog</name>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="14"/>
>         <source>Importer Options</source>
>         <translation>گزینه‌های درون‌ریزی</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="27"/>
>         <source>Content</source>
>         <translation>محتوا</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="58"/>
>         <source>Plain Text Preview</source>
>         <translation>پیش‌نمایش متنی</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="90"/>
>         <source>HTML Preview</source>
>         <translation>پیش‌نمایش HTML</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="122"/>
>         <source>Editable Text</source>
>         <translation>متن قابل ویرایش</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="157"/>
>         <source>Content Type:</source>
>         <translation>نوع محتوا:</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="164"/>
>         <source>File name:</source>
>         <translation>نام پرونده:</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="171"/>
>         <source>Normal Text</source>
>         <translation>نثر</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="178"/>
>         <source>Poems Title pattern:</source>
>         <translation>الگوی سرنویس چامه‌ها:</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="185"/>
>         <source>Classical Poem</source>
>         <translation>چامه</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="192"/>
>         <source>White Poem</source>
>         <translation>نیمایی/آزاد</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="215"/>
>         <source>Close</source>
>         <translation>بستن</translation>
>     </message>
>     <message>
>         <source>Cancel</source>
>         <translation type="vanished">رد</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="222"/>
>         <source>Import</source>
>         <translation>درون‌ریزی</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="229"/>
>         <source>Preview</source>
>         <translation>پیش‌نمایش</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.ui" line="249"/>
>         <source>Browse</source>
>         <translation>گزیدن</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importeroptionsdialog.cpp" line="171"/>
>         <source>Select File To Import...</source>
>         <translation>انتخاب پرونده جهت درون‌ریزی...</translation>
>     </message>
> </context>
> <context>
>     <name>NoDataBaseDialog</name>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="20"/>
>         <source>There is no data base!</source>
>         <translation>پایگاه‌داده موجود نیست!</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="52"/>
>         <source>Saaghar can not open the database file, Saaghar needs its database for working properly. Choose one of the following options.</source>
>         <translation>ساغر نمی‌تواند فایل پایگاه‌داده را باز کند، برای کارکرد درست ساغر به پایگاه‌داده‌اش نیاز دارد. یکی از گزینه‌های در دسترس را انتخاب کنید.</translation>
>     </message>
>     <message>
>         <source>Nothing to do, just exit!</source>
>         <translation type="obsolete">لازن تیست کاری انجام شود، خروج!</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="65"/>
>         <source>Exit!</source>
>         <translation>خروج!</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="81"/>
>         <source>&lt;p&gt;By selecting this option opens a dialog, and you should select a path containing &apos;ganjoor.s3db&apos; file. Then Saaghar starts by setting it as its default data base!&lt;/p&gt;</source>
>         <translation>&lt;p&gt;با انتخاب این گزینه پنجره محاوره‌ای باز می‌شود و شما باید مسیری را که شامل فایل «ganjoor.s3db» می‌باشد انتخاب کنید. آنگاه ساغر با انتخاب این پایگاه‌داده به عنوان پایگاه‌داده پیش‌فرضش آغاز به کار می‌کند!&lt;/p&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="84"/>
>         <source>By selecting this option opens a dialog, and you should select a path containing &apos;ganjoor.s3db&apos; file. Then Saaghar starts by setting it as its default data base!</source>
>         <translation>با انتخاب این گزینه پنجره محاوره‌ای باز می‌شود و شما باید مسیری را که شامل فایل «ganjoor.s3db» می‌باشد انتخاب کنید. آنگاه ساغر با انتخاب این پایگاه‌داده به عنوان پایگاه‌داده پیش‌فرضش آغاز به کار می‌کند!</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="87"/>
>         <source>Select new path for  data base</source>
>         <translation>مسیر تازه‌ای برای پایگاه‌داده انتخاب کنید</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="96"/>
>         <source>Select folder containing &apos;ganjoor.s3db&apos; file!</source>
>         <translation>پوشه‌ای که شامل «ganjoor.s3db» باشد را انتخاب کنید!</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="103"/>
>         <source>&lt;p&gt;Firstly a dialog appears for select a path for saving &apos;ganjoor.s3db&apos; file. It has not to contain &apos;ganjoor.s3db&apos;! And then a dialog appears that you should select the data sets you want to install.&lt;/p&gt;</source>
>         <translation>&lt;p&gt;در ابتدا پنجره محاوره‌ای برای انتخاب مکان رونوشت فایل «ganjoor.s3db» نمایش داده می‌شود. که این مکان نباید شامل «ganjoor.s3db» باشد و آنگاه مجموعه‌داده‌هایی را که می‌خواهید نصب کنید، انتخاب کنید.&lt;/p&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="106"/>
>         <source>Firstly a dialog appears for select a path for saving &apos;ganjoor.s3db&apos; file. It has not to contain &apos;ganjoor.s3db&apos;! And then a dialog appears that you should select the data sets you want to install.</source>
>         <translation>در ابتدا پنجره محاوره‌ای برای انتخاب مکان رونوشت فایل «ganjoor.s3db» نمایش داده می‌شود. که این مکان نباید شامل «ganjoor.s3db» باشد و آنگاه مجموعه‌داده‌هایی را که می‌خواهید نصب کنید، انتخاب کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="109"/>
>         <source>Create data base and install existing data sets to it.</source>
>         <translation>از مجموعه‌داده‌های موجود انتخاب و نصب کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="118"/>
>         <source>Select folder for saving &apos;ganjoor.s3db&apos; file! And then select the data sets you want to install.</source>
>         <translation>پوشه‌ای برای رونوشت فایل «ganjoor.s3db» انتخاب کنید و آنگاه مجموعه‌داده‌هایی که می‌خواهید نصب کنید، انتخاب کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="125"/>
>         <source>&lt;p&gt;Firstly a dialog appears for select a path for saving &apos;ganjoor.s3db&apos; file. It has not to contain &apos;ganjoor.s3db&apos;! And then a dialog appears that you should select the data sets you want to download and install.&lt;/p&gt;</source>
>         <translation>&lt;p&gt;در ابتدا پنجره محاوره‌ای برای انتخاب مکان رونوشت فایل «ganjoor.s3db» نمایش داده می‌شود. که این مکان نباید شامل «ganjoor.s3db» باشد و آنگاه مجموعه‌داده‌هایی را که می‌خواهید دریافت و نصب کنید، انتخاب کنید.&lt;/p&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="128"/>
>         <source>Firstly a dialog appears for select a path for saving &apos;ganjoor.s3db&apos; file. It has not to contain &apos;ganjoor.s3db&apos;! And then a dialog appears that you should select the data sets you want to download and install.</source>
>         <translation>در ابتدا پنجره محاوره‌ای برای انتخاب مکان رونوشت فایل «ganjoor.s3db» نمایش داده می‌شود و آنگاه در پنجره محاوره‌ای بعدی مجموعه‌داده‌ها را برای دریافت و نصب انتخاب می‌کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="131"/>
>         <source>Create data base then download and install data sets to it.</source>
>         <translation>مجموعه‌داده‌ها را از خادم راه دور دریافت و نصب کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="140"/>
>         <source>Select folder for saving &apos;ganjoor.s3db&apos; file! And then select the data sets you want to download and install.</source>
>         <translation>پوشه‌ای برای رونوشت فایل «ganjoor.s3db» انتخاب کنید و آنگاه مجموعه‌داده‌هایی که می‌خواهید دریافت و نصب کنید، انتخاب کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="168"/>
>         <source>Error:</source>
>         <translation>خطا:</translation>
>     </message>
>     <message>
>         <location filename="../src/nodatabasedialog.ui" line="184"/>
>         <source>Data Base Path:</source>
>         <translation>مسیر پایگاه‌داده:</translation>
>     </message>
> </context>
> <context>
>     <name>OutLineTree</name>
>     <message>
>         <source>Title</source>
>         <translation type="vanished">سرنویس</translation>
>     </message>
>     <message>
>         <source>Comments</source>
>         <translation type="vanished">توضیحات</translation>
>     </message>
>     <message>
>         <source>Filter:</source>
>         <translation type="vanished">پرویزن:</translation>
>     </message>
>     <message>
>         <source>Filter</source>
>         <translation type="vanished">پرویزن</translation>
>     </message>
>     <message>
>         <source>Open in New Tab</source>
>         <translation type="vanished">باز کردن در صفحه جدید</translation>
>     </message>
>     <message>
>         <source>Open</source>
>         <translation type="vanished">باز کردن</translation>
>     </message>
>     <message>
>         <source>Random in New Tab</source>
>         <translation type="vanished">بخت‌آورد در برگه تازه</translation>
>     </message>
>     <message>
>         <source>Random</source>
>         <translation type="vanished">بخت‌آورد</translation>
>     </message>
>     <message>
>         <source>Collapse</source>
>         <translation type="vanished">کوچک کردن</translation>
>     </message>
>     <message>
>         <source>Expand</source>
>         <translation type="vanished">گستردن</translation>
>     </message>
> </context>
> <context>
>     <name>OutlineTree</name>
>     <message>
>         <location filename="../src/outline.cpp" line="84"/>
>         <source>Title</source>
>         <translation>سرنویس</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="84"/>
>         <source>Comments</source>
>         <translation>توضیحات</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="93"/>
>         <source>Filter:</source>
>         <translation>پرویزن:</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="97"/>
>         <location filename="../src/outline.cpp" line="99"/>
>         <source>Filter</source>
>         <translation>پرویزن</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="216"/>
>         <location filename="../src/outline.cpp" line="245"/>
>         <source>Open in New Tab</source>
>         <translation>باز کردن در صفحه جدید</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="217"/>
>         <location filename="../src/outline.cpp" line="248"/>
>         <source>Open</source>
>         <translation>باز کردن</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="219"/>
>         <location filename="../src/outline.cpp" line="254"/>
>         <source>Random in New Tab</source>
>         <translation>بخت‌آورد در برگه تازه</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="220"/>
>         <location filename="../src/outline.cpp" line="257"/>
>         <source>Random</source>
>         <translation>بخت‌آورد</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="224"/>
>         <location filename="../src/outline.cpp" line="251"/>
>         <source>Collapse</source>
>         <translation>کوچک کردن</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="227"/>
>         <location filename="../src/outline.cpp" line="251"/>
>         <source>Expand</source>
>         <translation>گستردن</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="233"/>
>         <location filename="../src/outline.cpp" line="264"/>
>         <source>Create Empty Audio List</source>
>         <translation>ایجاد فهرست خوانش خالی</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="234"/>
>         <location filename="../src/outline.cpp" line="261"/>
>         <source>Create Audio List From File</source>
>         <translation>ایجاد فهرست خوانش از فایل</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="312"/>
>         <source>Select File Containing media links...</source>
>         <translation>انتخاب پرونده شامل لینک‌ها...</translation>
>     </message>
>     <message>
>         <location filename="../src/outline.cpp" line="312"/>
>         <source>Text File (*.txt);;All (*.*)</source>
>         <translation>پرونده متنی (*.txt);;همه (*.*)</translation>
>     </message>
> </context>
> <context>
>     <name>ProgressManagerPrivate</name>
>     <message>
>         <location filename="../src/progressmanager/progressmanager.cpp" line="820"/>
>         <source>All Tasks (%1):</source>
>         <translation>همه کارها (%1):</translation>
>     </message>
> </context>
> <context>
>     <name>ProgressView</name>
>     <message>
>         <location filename="../src/progressmanager/progressview.cpp" line="80"/>
>         <source>Processes</source>
>         <translation>فرایندها</translation>
>     </message>
> </context>
> <context>
>     <name>QGanjoorDbBrowser</name>
>     <message>
>         <source>Cannot open Database File</source>
>         <translation type="obsolete">توانایی بازکردن پرونده پایگاه‌داده نیست</translation>
>     </message>
>     <message>
>         <source>Cannot open database file...
> Error: %1
> DataBase Path=%2
> Saaghar needs its database for working properly, Saaghar is terminated for now.</source>
>         <translation type="obsolete">توانایی بازکردن پرونده پایگاه‌داده نیست...
> خطا: %1
> مسیر پایگاه‌داده: %2
> برای کارکرد درست ساغر به پایگاه‌داده‌اش نیاز دارد، ساغر همکنون بسته می‌شود.</translation>
>     </message>
>     <message>
>         <source>Cannot open Database File!</source>
>         <translation type="vanished">پرونده پایگاه‌داده باز نمی‌شود!</translation>
>     </message>
>     <message>
>         <source>Cannot open database file...
> Error: %1
> DataBase Path=%2
> Saaghar needs its database for working properly. Press &apos;OK&apos; if you want to terminate application or press &apos;Browse&apos; for select a new path for database.</source>
>         <translation type="obsolete">پرونده پایگاه‌داده باز نمی‌شود...
> خطا: %1
> مسیر پایگاه‌داده: %2
> برای کارکرد درست ساغر به پایگاه‌داده‌اش نیاز دارد. برای بستن نرم‌افزار دکمه «قبول» را بفشارید ویا برای انتخاب مسیری جدید برای پایگاه‌داده دکمه «گزیدن» را بفشارید.</translation>
>     </message>
>     <message>
>         <source>Cannot open database file...
> DataBase Path=%1
> Saaghar needs its database for working properly. Press &apos;OK&apos; if you want to terminate application or press &apos;Browse&apos; for select a new path for database.</source>
>         <translation type="obsolete">پرونده پایگاه‌داده باز نمی‌شود...
> مسیر پایگاه‌داده: %1
> برای کارکرد درست ساغر به پایگاه‌داده‌اش نیاز دارد. برای بستن نرم‌افزار دکمه «قبول» را بفشارید ویا برای انتخاب مسیری جدید برای پایگاه‌داده دکمه «گزیدن» را بفشارید.</translation>
>     </message>
>     <message>
>         <source>Browse...</source>
>         <translation type="obsolete">گزیدن...</translation>
>     </message>
>     <message>
>         <source>Cannot open database file...
> There is an error!
> Error: %1
> DataBase Path=%2</source>
>         <translation type="obsolete">توانایی بازکردن پرونده پایگاه‌داده نیست...
> خطایی رخ داده است!
> خطا: %1
> مسیر پایگاه‌داده: %2</translation>
>     </message>
>     <message>
>         <source>Data Base Path:</source>
>         <translation type="vanished">مسیر پایگاه‌داده:</translation>
>     </message>
>     <message>
>         <source>Error:</source>
>         <translation type="vanished">خطا:</translation>
>     </message>
>     <message>
>         <source>No Error!</source>
>         <translation type="vanished">بدون خطا!</translation>
>     </message>
>     <message>
>         <source>Add Path For Data Base</source>
>         <translation type="vanished">اضافه کردن مسیر برای پایگاه‌داده</translation>
>     </message>
>     <message>
>         <source>Select Save Location</source>
>         <translation type="vanished">انتخاب مکان برای رونوشت</translation>
>     </message>
>     <message>
>         <source>Cannot open database file, please check if you have write permisson.
> Error: %1
> DataBase Path=%2</source>
>         <translation type="vanished">فایل پایگاه‌داده باز نمی‌شود، لطفا بررسی کنید که آیا دسترسی نوشتنی دارید.
> خطا: %1
> مسیر پایگاه‌داده: %2</translation>
>     </message>
>     <message>
>         <source>Home</source>
>         <translation type="vanished">خانه</translation>
>     </message>
>     <message>
>         <source>All</source>
>         <translation type="vanished">همه</translation>
>     </message>
>     <message>
>         <source>Select data sets to install</source>
>         <translation type="vanished">انتخاب مجموعه‌داده برای نصب</translation>
>     </message>
>     <message>
>         <source>Searching Data Base...</source>
>         <translation type="obsolete">جستجوی پایگاه‌داده...</translation>
>     </message>
>     <message>
>         <source>Cancel</source>
>         <translation type="obsolete">رد</translation>
>     </message>
>     <message>
>         <source>Search Result(s): %1</source>
>         <translation type="vanished">یافته‌ها: %1</translation>
>     </message>
> </context>
> <context>
>     <name>QIrBreadCrumbComboBox</name>
>     <message>
>         <location filename="../src/QIrBreadCrumbBar/qirbreadcrumbbar.cpp" line="663"/>
>         <source>Location &apos;%1&apos; cannot be found. Check the spelling and try again.</source>
>         <translation>مسیر «%1» یافت نشد. مجددا بررسی کنید.</translation>
>     </message>
> </context>
> <context>
>     <name>QIrBreadCrumbIconWidget</name>
>     <message>
>         <location filename="../src/QIrBreadCrumbBar/qirbreadcrumbbar.cpp" line="529"/>
>         <source>Copy Address</source>
>         <translation>رو نگاشت آدرس</translation>
>     </message>
>     <message>
>         <location filename="../src/QIrBreadCrumbBar/qirbreadcrumbbar.cpp" line="531"/>
>         <source>Edit Address</source>
>         <translation>ویرایش آدرس</translation>
>     </message>
> </context>
> <context>
>     <name>QMessageBox</name>
>     <message>
>         <source>Show Details...</source>
>         <translation type="obsolete">aaaa</translation>
>     </message>
> </context>
> <context>
>     <name>QMultiSelectWidget</name>
>     <message>
>         <location filename="../src/pQjWidgets/QMultiSelectWidget/qmultiselectwidget.cpp" line="246"/>
>         <source>Selected Items: no item!</source>
>         <translation>گزینه‌های انتخاب شده: هیچ!</translation>
>     </message>
>     <message>
>         <location filename="../src/pQjWidgets/QMultiSelectWidget/qmultiselectwidget.cpp" line="249"/>
>         <source>Selected Items:&lt; /br&gt;</source>
>         <translation>گزینه‌های انتخاب شده: &lt; /br&gt;</translation>
>     </message>
> </context>
> <context>
>     <name>QMusicPlayer</name>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="294"/>
>         <source>Select Music Files</source>
>         <translation>انتخاب پرونده موسیقی</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="313"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="446"/>
>         <source>New Saaghar Album</source>
>         <translation>آلبوم تازه ساغر</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="321"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="418"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="452"/>
>         <source>Warning!</source>
>         <translation>هشدار!‏ </translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="321"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="452"/>
>         <source>The album already loaded.</source>
>         <translation>آلبوم قبلا بارگذاری شده است.</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="324"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="328"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="379"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="459"/>
>         <source>Name Of Album</source>
>         <translation>نام آلبوم</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/audiorepodownloader.cpp" line="325"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="329"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="460"/>
>         <source>Enter name for this Album:</source>
>         <translation>نامی برای این آلبوم وارد کنید:</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="349"/>
>         <source>Select Saaghar Album</source>
>         <translation>انتخاب آلبوم ساغر</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="380"/>
>         <source>Enter new name for this Album:</source>
>         <translation>نام تازه‌ای برای این آلبوم وارد کنید:</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="419"/>
>         <source>Are you sure to remove &quot;%1&quot; from album list?</source>
>         <translation>آیا از حذف «%1» از فهرست آلبوم‌ها اطمینان دارید؟</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="461"/>
>         <source>_Copy</source>
>         <translation>-کپی</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="499"/>
>         <source>Finished</source>
>         <translation>پایان</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="824"/>
>         <source>Pause</source>
>         <translation>وقفه</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="832"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="844"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="860"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="873"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="956"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="974"/>
>         <source>Play</source>
>         <translation>نواختن</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="737"/>
>         <source>QMusicPlayer</source>
>         <translation>پخش‌کننده موسیقی</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="366"/>
>         <source>It is not an album file or can not read it!</source>
>         <translation>پرونده در قالب آلبوم نیست و یا قابل خواندن نیست!</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="480"/>
>         <source>Can&apos;t save album!</source>
>         <translation>آلبوم قابل رونوشتن نیست!</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="737"/>
>         <source>Can not write the lyric file %1:
> %2.</source>
>         <translation>فایل همگام‌سازی %1 قابل رونویسی نیست:
> %2.</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="780"/>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="988"/>
>         <source>&amp;Run text/audio syncer</source>
>         <translation>&amp;اجرای همگام‌ساز متن/صدا</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="789"/>
>         <source>&amp;Stop text/audio syncer</source>
>         <translation>&amp;توقف همگام‌ساز متن/صدا</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="975"/>
>         <source>Ctrl+P</source>
>         <translation>Ctrl+P</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="977"/>
>         <source>Stop</source>
>         <translation>توقف</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="978"/>
>         <source>Ctrl+S</source>
>         <translation></translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="980"/>
>         <source>Next</source>
>         <translation>پسین</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="981"/>
>         <source>Ctrl+N</source>
>         <translation></translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="982"/>
>         <source>Previous</source>
>         <translation>پیشین</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="983"/>
>         <source>Ctrl+R</source>
>         <translation></translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="984"/>
>         <source>&amp;Set Audio...</source>
>         <translation>&amp;انتخاب پرونده صوتی...</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="985"/>
>         <source>&amp;Remove Audio</source>
>         <translation>&amp;حذف پرونده صوتی</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="986"/>
>         <source>Remove Audio From All Album</source>
>         <translation>حذف پرونده صوتی از همه آلبوم‌ها</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="987"/>
>         <source>&amp;Load Album...</source>
>         <translation>&amp;بارگذاری آلبوم...</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="366"/>
>         <source>Read Error!</source>
>         <translation>خطا در خواندن!</translation>
>     </message>
>     <message>
>         <source>Can&apos;t load album!
> Error: %1</source>
>         <translation type="vanished">آلبوم قابل بارگذاری نیست! خطا: %1</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="480"/>
>         <source>Save Error!</source>
>         <translation>خطا در ذخیره کردن!</translation>
>     </message>
>     <message>
>         <source>Can&apos;t save album!
> Error: %1</source>
>         <translation type="vanished">آلبوم قابل رونوشت نیست! خطا: %1</translation>
>     </message>
>     <message>
>         <location filename="../src/qmusicplayer/qmusicplayer.cpp" line="1512"/>
>         <source>Albums</source>
>         <translation>آلبوم‌ها</translation>
>     </message>
>     <message>
>         <source>Can&apos;t save playlist!
> Error: %1</source>
>         <translation type="obsolete">نمی‌تواند فهرست صداها را ذخیره کند!
> خطا: %1</translation>
>     </message>
>     <message>
>         <source>PlayList</source>
>         <translation type="obsolete">صداها</translation>
>     </message>
> </context>
> <context>
>     <name>QObject</name>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="136"/>
>         <source>&lt;i&gt;&lt;b&gt;Loading...&lt;/b&gt;&lt;/i&gt;</source>
>         <translation>&lt;i&gt;&lt;b&gt;بارگذاری...&lt;/b&gt;&lt;/i&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1677"/>
>         <source>&amp;Two Hemistich Line</source>
>         <translation>&amp;جفت لَت</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1683"/>
>         <source>&amp;One Hemistich Line</source>
>         <translation>&amp;یک لَت</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1689"/>
>         <source>&amp;Stepped Hemistich Line</source>
>         <translation>&amp;نردبانی</translation>
>     </message>
>     <message>
>         <source>&amp;Download From Repositories...</source>
>         <translation type="vanished">&amp;دریافت از مخزن‌ها...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1721"/>
>         <source>&amp;Dataset Repositories...</source>
>         <translation>&amp;مخزن مجموعه‌ها...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1723"/>
>         <source>&amp;Audio Repositories...</source>
>         <translation>&amp;مخزن خوانش‌ها...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1727"/>
>         <source>&amp;Registeration...</source>
>         <translation>&amp;ثبت‌نام...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2871"/>
>         <source>&amp;Large Icon</source>
>         <translation>نماد &amp;بزرگ</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2885"/>
>         <source>&amp;Medium Icon</source>
>         <translation>نماد &amp;متوسط</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2891"/>
>         <source>&amp;Small Icon</source>
>         <translation>نماد &amp;کوچک</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2899"/>
>         <source>Only &amp;Icon</source>
>         <translation>تنها &amp;نماد</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2909"/>
>         <source>Only &amp;Text</source>
>         <translation>تنها &amp;فرنام</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2915"/>
>         <source>&amp;Both Text &amp;&amp; Icon</source>
>         <translation>نماد &amp;و فرنام</translation>
>     </message>
>     <message>
>         <location filename="../src/bookmarks.cpp" line="185"/>
>         <location filename="../src/bookmarks.cpp" line="222"/>
>         <source>Folder</source>
>         <translation>پوشه</translation>
>     </message>
>     <message>
>         <source>From Ganjoor Desktop</source>
>         <translation type="obsolete">استخراج‌شده از گنجور رومیزی</translation>
>     </message>
>     <message>
>         <source>Home</source>
>         <translation type="vanished">خانه</translation>
>     </message>
>     <message>
>         <location filename="../src/commands.cpp" line="119"/>
>         <source>Navigate To %1</source>
>         <translation>رفتن به %1</translation>
>     </message>
>     <message>
>         <location filename="../src/databasebrowser.cpp" line="1445"/>
>         <source>From Desktop Ganjoor</source>
>         <translation>استخراج‌شده از گنجور رومیزی</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="170"/>
>         <source>&lt;EMPTY PREVIEW&gt;</source>
>         <translation>&lt;پیش‌نمایش خالی&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/importermanager.cpp" line="185"/>
>         <source>Top Level Categories: %1
> ---
> Poem Title: %2
> ----------------
> </source>
>         <translation>بخش‌های والد: %1
> ---
> سرنویس چامه: %2
> ----------------
> </translation>
>     </message>
>     <message>
>         <location filename="../src/importer/txtimporter.cpp" line="284"/>
>         <source>New Poem %1</source>
>         <translation>چامه تازه %1</translation>
>     </message>
> </context>
> <context>
>     <name>QSearchLineEdit</name>
>     <message>
>         <location filename="../src/pQjWidgets/QSearchLineEdit/qsearchlineedit.cpp" line="201"/>
>         <source>Please try with another phrase!</source>
>         <translation>لطفا عبارت دیگری را امتحان کنید!</translation>
>     </message>
> </context>
> <context>
>     <name>QTextBrowserDialog</name>
>     <message>
>         <location filename="../src/pQjWidgets/QTextBrowserDialog/qtextbrowserdialog.cpp" line="112"/>
>         <source>TextBrowser Dialog</source>
>         <translation>پنجره محاوره نمایش متن</translation>
>     </message>
>     <message>
>         <location filename="../src/pQjWidgets/QTextBrowserDialog/qtextbrowserdialog.cpp" line="113"/>
>         <source>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
> &lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
> p, li { white-space: pre-wrap; }
> &lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;MS Shell Dlg 2&apos;; font-size:8.25pt; font-weight:400; font-style:normal;&quot;&gt;
> &lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:8pt;&quot;&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</source>
>         <translation></translation>
>     </message>
> </context>
> <context>
>     <name>RegisterationForm</name>
>     <message>
>         <source>Error</source>
>         <translation type="obsolete">خطا</translation>
>     </message>
>     <message>
>         <source>Cancel</source>
>         <translation type="obsolete">رد</translation>
>     </message>
> </context>
> <context>
>     <name>SaagharApplication</name>
>     <message>
>         <location filename="../src/saagharapplication.cpp" line="317"/>
>         <source>LTR</source>
>         <translatorcomment>For right to left language translate it to RTL</translatorcomment>
>         <translation>RTL</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharapplication.cpp" line="448"/>
>         <location filename="../src/saagharapplication.cpp" line="536"/>
>         <source>Warning!</source>
>         <translation>هشدار!‏</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharapplication.cpp" line="449"/>
>         <source>Settings could not be loaded!
> File: %1
> Error: %2</source>
>         <translation>پرونده سامانش قابل بارگذاری نیست!
> پرونده: %1
> خطا: %2</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharapplication.cpp" line="537"/>
>         <source>Settings could not be saved!
> File: %1
> Error: %2</source>
>         <translation>پرونده سامانش قابل رونوشتن نیست!
> پرونده: %1
> خطا: %2</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharapplication.cpp" line="570"/>
>         <source>Customize this menu...</source>
>         <translation>شخصی‌سازی این منو...</translation>
>     </message>
> </context>
> <context>
>     <name>SaagharWidget</name>
>     <message>
>         <location filename="../src/saagharwidget.cpp" line="1600"/>
>         <source>Home</source>
>         <translation>خانه</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwidget.cpp" line="703"/>
>         <location filename="../src/saagharwidget.cpp" line="744"/>
>         <location filename="../src/saagharwidget.cpp" line="778"/>
>         <source>&lt;i&gt;&lt;b&gt;Loading the &quot;%1&quot;...&lt;/b&gt;&lt;/i&gt;</source>
>         <translation>&lt;i&gt;&lt;b&gt;بارگذاری «%1»...&lt;/b&gt;&lt;/i&gt;</translation>
>     </message>
> </context>
> <context>
>     <name>SaagharWindow</name>
>     <message>
>         <source>SaagharWindow</source>
>         <translation type="obsolete">پنجره اصلی</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.ui" line="14"/>
>         <source>Saaghar Window</source>
>         <translation>پنجره ساغر</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.ui" line="69"/>
>         <source>Menu Bar</source>
>         <translation>نوار منو</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.ui" line="117"/>
>         <source>Buttons</source>
>         <translation>نوار ابزار پیش‌کارها</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.ui" line="96"/>
>         <location filename="../src/saagharwindow.cpp" line="374"/>
>         <source>Search</source>
>         <translation>جستجو</translation>
>     </message>
>     <message>
>         <source>Search Phrase</source>
>         <translation type="obsolete">عبارت جستجو</translation>
>     </message>
>     <message>
>         <source>Search in</source>
>         <translation type="obsolete">جستجو در</translation>
>     </message>
>     <message>
>         <source>Max Result per Page</source>
>         <translation type="obsolete">حداکثر یافته‌ها در هر صفحه</translation>
>     </message>
>     <message>
>         <source>Close</source>
>         <translation type="obsolete">بستن</translation>
>     </message>
>     <message>
>         <source>Parent Categories</source>
>         <translation type="vanished">دسته‌های والد</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="327"/>
>         <location filename="../src/saagharwindow.cpp" line="736"/>
>         <location filename="../src/saagharwindow.cpp" line="1093"/>
>         <location filename="../src/saagharwindow.cpp" line="1452"/>
>         <location filename="../src/saagharwindow.cpp" line="2383"/>
>         <source>Error</source>
>         <translation>خطا</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="327"/>
>         <source>The search phrase can not be empty.</source>
>         <translation>عبارت جستجو نمی‌تواند خالی باشد.</translation>
>     </message>
>     <message>
>         <source>Current Tab</source>
>         <translation type="obsolete">برگه‌جاری</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="504"/>
>         <source>All Opened Tab</source>
>         <translation>همه برگه‌های باز</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="337"/>
>         <location filename="../src/saagharwindow.cpp" line="505"/>
>         <source>Titles</source>
>         <translation>سرنویس‌ها</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="342"/>
>         <location filename="../src/saagharwindow.cpp" line="487"/>
>         <source>All</source>
>         <translation>همه</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="400"/>
>         <source>Searching Data Base(subset= %1)...</source>
>         <translation>جستجوی پایگاه‌داده(بخش: %1)...</translation>
>     </message>
>     <message>
>         <source>Checking for updates... (server number=%1)</source>
>         <translation type="vanished">بررسی برای بروز رسانی‌ها... (خادم شماره=%1)</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="736"/>
>         <source>There is an error when checking for updates...
> Check your internet connection and try again.</source>
>         <translation>بروز خطا هنگام بررسی برای بروز رسانی‌ها...
> ارتباط اینترنت خود را بررسی کنید و دوباره سعی کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="740"/>
>         <source>Error when checking for update!</source>
>         <translation>خطا در بررسی بروزرسانی!</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1059"/>
>         <source>Export As</source>
>         <translation>رونوشت‌برداری در پیکر</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1093"/>
>         <source>The file could not be saved. Please check if you have write permission.</source>
>         <translation>پرونده نمی‌تواند ذخیره شود. لطفا اجازه دسترسی نوشتن را بررسی کنید.</translation>
>     </message>
>     <message>
>         <source>About Saaghar</source>
>         <translation type="vanished">درباره ساغر</translation>
>     </message>
>     <message>
>         <source>&lt;br /&gt;%1 is a persian poem viewer software, it uses &quot;ganjoor.net&quot; database, and some of its codes are ported to C++ and Qt from &quot;desktop ganjoor&quot; that is a C# .NET application written by %2.&lt;br /&gt;&lt;br /&gt;Logo Designer: %3&lt;br /&gt;&lt;br /&gt;Photos and Description Sources: ganjoor.net &amp; WiKiPedia&lt;br /&gt;&lt;br /&gt;Author: &lt;a href=&quot;http://www.pojh.co.cc/&quot;&gt;S. Razi Alavizadeh&lt;/a&gt;,&lt;br /&gt;Home Page: %4&lt;br /&gt;Mailing List: %5&lt;br /&gt;&lt;br /&gt;Version: %6&lt;br /&gt;Build Time: %7</source>
>         <translation type="obsolete">&lt;br /&gt;%1 نرم‌افزار شعر پارسی است و از پایگاه‌داده «گنجور» استفاده می‌کند، بخشی ازکدهای آن تبدیل شده کدهای «گنجور رومیزی» که به زبان C#‎ می‌باشد و توسط %2 نوشته است، به C++‎ و Qt می‌باشد.&lt;br /&gt;&lt;br /&gt;طراح لوگو: %3&lt;br /&gt;&lt;br /&gt;منبع عکس‌ها و توصیفات: ganjoor.net &amp; WiKiPedia&lt;br /&gt;&lt;br /&gt;برنامه‌نویس: &lt;a href=&quot;http://www.pojh.co.cc/&quot;&gt;سید رضی علوی‌زاده&lt;/a&gt;,&lt;br /&gt;صفحه خانگی: %4&lt;br /&gt;خبرنامه: %5&lt;br /&gt;&lt;br /&gt;نسخه: %6&lt;br /&gt;زمان ساخت: %7</translation>
>     </message>
>     <message>
>         <source>Help Contents</source>
>         <translation type="obsolete">راهنما</translation>
>     </message>
>     <message>
>         <source>&lt;br /&gt;Saaghar Version: %1&lt;br /&gt;&lt;br /&gt;Mouse Left Click: Opens in current Tab&lt;br /&gt;Mouse Right Click: Opens in new Tab&lt;br /&gt;&lt;br /&gt;Shortcuts:&lt;br /&gt;Saaghar uses your Operating System standard shortcuts.</source>
>         <translation type="obsolete">&lt;br /&gt;ساغر نسخه‌ی: %1&lt;br /&gt;&lt;br /&gt;کلیک چپ موشواره: بازکردن در برگه جاری&lt;br /&gt;کلیک راست موشواره: بازکردن در برگه‌‌ی جدید&lt;br /&gt;&lt;br /&gt;میان‌برها:&lt;br /&gt;ساغر از میان‌برهای استاندارد سیستم‌عامل استفاده می‌کند.</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="528"/>
>         <source>Please Notice!</source>
>         <translation>توجه!</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="700"/>
>         <source>Check for update...</source>
>         <translation>بررسی برای بروز رسانی...</translation>
>     </message>
>     <message>
>         <source>&lt;br /&gt;%1 is a persian poem viewer software, it uses &quot;ganjoor.net&quot; database, and some of its initial codes are ported to C++ and Qt from &quot;desktop ganjoor&quot; that is a C# .NET application written by %2.&lt;br /&gt;&lt;br /&gt;Logo Designer: %3&lt;br /&gt;&lt;br /&gt;Author: %4,&lt;br /&gt;&lt;br /&gt;Home Page (English): %5&lt;br /&gt;Home Page (Persian): %6&lt;br /&gt;Mailing List: %7&lt;br /&gt;Saaghar in FaceBook: %8&lt;br /&gt;&lt;br /&gt;Version: %9 - (git-rev: %10)&lt;br /&gt;Build Time: %11</source>
>         <translation type="vanished">&lt;br /&gt;%1 نرم‌افزار شعر پارسی است و از پایگاه‌داده «گنجور» استفاده می‌کند، بخشی ازکدهای اولیه آن تبدیل شده کدهای «گنجور رومیزی» که توسط %2 به زبان C#‎ نوشته شده است، به C++‎ و Qt می‌باشد.&lt;br /&gt;&lt;br /&gt;طراح لوگو: %3&lt;br /&gt;&lt;br /&gt;برنامه‌نویس: %4,&lt;br /&gt;&lt;br /&gt;صفحه خانگی (انگلیسی): %5&lt;br /&gt;صفحه خانگی (فارسی): %6&lt;br /&gt;خبرنامه: %7&lt;br /&gt;ساغر در فیس‌بوک: %8&lt;br /&gt;&lt;br /&gt;نسخه: %9 - (git-rev: %10)&lt;br /&gt;زمان ساخت: %11</translation>
>     </message>
>     <message>
>         <source>Saaghar</source>
>         <translation type="vanished">ساغر</translation>
>     </message>
>     <message>
>         <source>Hamid Reza Mohammadi</source>
>         <translation type="vanished">حمیدرضا محمدی</translation>
>     </message>
>     <message>
>         <source>S. Nasser Alavizadeh</source>
>         <translation type="vanished">سیدناصر علوی‌زاده</translation>
>     </message>
>     <message>
>         <source>S. Razi Alavizadeh</source>
>         <translation type="vanished">سیدرضی علوی‌زاده</translation>
>     </message>
>     <message>
>         <source>This feature is in beta state, before continue you should create a backup from your database.</source>
>         <translation type="obsolete">این ویژگی در حالت آزمایشی (بتا) قرار دارد، بهتر است که قبل از ادامه از پایگاه‌داده پشتیبان تهیه کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="531"/>
>         <source>Continue</source>
>         <translation>ادامه</translation>
>     </message>
>     <message>
>         <source>&lt;i&gt;&lt;b&gt;Loading settings...&lt;/b&gt;&lt;/i&gt;</source>
>         <translation type="obsolete">&lt;i&gt;&lt;b&gt;بارگذاری تنظیمات...&lt;/b&gt;&lt;/i&gt;</translation>
>     </message>
>     <message>
>         <source>&lt;i&gt;&lt;b&gt;Checking for update...&lt;/b&gt;&lt;/i&gt;</source>
>         <translation type="vanished">&lt;i&gt;&lt;b&gt;بررسی برای بروز رسانی‌ها...&lt;/b&gt;&lt;/i&gt;</translation>
>     </message>
>     <message>
>         <source>Main Menu</source>
>         <translation type="obsolete">منوی اصلی</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="276"/>
>         <location filename="../src/saagharwindow.cpp" line="1402"/>
>         <source>Exit &amp;Full Screen</source>
>         <translation>&amp;پنجره‌ای</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="229"/>
>         <location filename="../src/saagharwindow.cpp" line="291"/>
>         <source>&lt;i&gt;&lt;b&gt;Saaghar is starting...&lt;/b&gt;&lt;/i&gt;</source>
>         <translation>&lt;i&gt;&lt;b&gt;ساغر راه‌اندازی می‌شود...&lt;/b&gt;&lt;/i&gt;</translation>
>     </message>
>     <message>
>         <source>Searching Data Base...</source>
>         <translation type="obsolete">جستجوی پایگاه‌داده...</translation>
>     </message>
>     <message>
>         <source>Current Scope: %1
> No match found.</source>
>         <translation type="vanished">محدوده جاری: %1
> موردی پیدا نشد.</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="518"/>
>         <location filename="../src/saagharwindow.cpp" line="524"/>
>         <source>Select a name...</source>
>         <translation>یک نام انتخاب کنید...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="521"/>
>         <location filename="../src/saagharwindow.cpp" line="525"/>
>         <source>poet&apos;s code=</source>
>         <translation>کد نسک=</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="523"/>
>         <source>Remove Poet</source>
>         <translation>کنار نهادن نَسک</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="523"/>
>         <source>Select a poet name and click on &apos;OK&apos; button, for remove it from database.</source>
>         <translation>برای کنار نهادن نَسک نام نَسک/نویسنده را انتخاب کنید و روی دکمه «قبول» کلیک کنید.</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="530"/>
>         <source>Are you sure for removing &quot;%1&quot;, from database?</source>
>         <translation>آیا از حذف «%1» از پایگاه‌داده اطمینان داری؟</translation>
>     </message>
>     <message>
>         <source>Checking for updates...</source>
>         <translation type="obsolete">بررسی برای بروز رسانی‌ها...</translation>
>     </message>
>     <message>
>         <source>There is an error when checking for updates...
> Error: %1</source>
>         <translation type="obsolete">بروز خطا هنگام بررسی برای بروز رسانی‌ها...
> خطا: %1</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="772"/>
>         <source>New Saaghar Version Available</source>
>         <translation>نسخه جدید ساغر در دسترس است</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="781"/>
>         <source>The Version &lt;strong&gt;%1&lt;/strong&gt; of Saaghar is available for download.&lt;br /&gt;%2&lt;br /&gt;Do you want to browse download page?</source>
>         <translation>نسخه &lt;strong&gt;%1&lt;/strong&gt; ساغر برای دانلود در دسترس است.&lt;br /&gt;%2&lt;br /&gt;آیا می‌خواهید به صفحه دانلود بروید؟</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="807"/>
>         <location filename="../src/saagharwindow.cpp" line="810"/>
>         <source>Saaghar is up to date</source>
>         <translation>ساغر بروز است</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="807"/>
>         <source>There is no new version available. Please check for updates later!</source>
>         <translation>نسخه جدیدی در دسترس نیست. لطفا بعدا وجود بروز رسانی را بررسی کنید!</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="990"/>
>         <source>&lt;i&gt;&lt;b&gt;&quot;%1&quot; was loaded!&lt;/b&gt;&lt;/i&gt;</source>
>         <translation>&lt;i&gt;&lt;b&gt;«%1» بارگذاری شد!&lt;/b&gt;&lt;/i&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1003"/>
>         <source>Saaghar: </source>
>         <translation>ساغر: </translation>
>     </message>
>     <message>
>         <source>&lt;br /&gt;%1 is a persian poem viewer software, it uses &quot;ganjoor.net&quot; database, and some of its codes are ported to C++ and Qt from &quot;desktop ganjoor&quot; that is a C# .NET application written by %2.&lt;br /&gt;&lt;br /&gt;Logo Designer: %3&lt;br /&gt;&lt;br /&gt;Author: %4,&lt;br /&gt;&lt;br /&gt;Home Page: %5&lt;br /&gt;Mailing List: %6&lt;br /&gt;Saaghar in FaceBook:%7&lt;br /&gt;&lt;br /&gt;Version: %8&lt;br /&gt;Build Time: %9</source>
>         <oldsource>&lt;br /&gt;%1 is a persian poem viewer software, it uses &quot;ganjoor.net&quot; database, and some of its codes are ported to C++ and Qt from &quot;desktop ganjoor&quot; that is a C# .NET application written by %2.&lt;br /&gt;&lt;br /&gt;Logo Designer: %3&lt;br /&gt;&lt;br /&gt;Author: &lt;a href=&quot;http://www.pojh.co.cc/&quot;&gt;S. Razi Alavizadeh&lt;/a&gt;,&lt;br /&gt;&lt;br /&gt;Home Page: %4&lt;br /&gt;Mailing List: %5&lt;br /&gt;Saaghar in FaceBook:%6&lt;br /&gt;&lt;br /&gt;Version: %7&lt;br /&gt;Build Time: %8</oldsource>
>         <translation type="obsolete">&lt;br /&gt;%1 نرم‌افزار شعر پارسی است و از پایگاه‌داده «گنجور» استفاده می‌کند، بخشی ازکدهای آن تبدیل شده کدهای «گنجور رومیزی» که به زبان C#‎ می‌باشد و توسط %2 نوشته شده است، به C++‎ و Qt می‌باشد.&lt;br /&gt;&lt;br /&gt;طراح لوگو: %3&lt;br /&gt;&lt;br /&gt;برنامه‌نویس: %4,&lt;br /&gt;&lt;br /&gt;صفحه خانگی: %5&lt;br /&gt;خبرنامه: %6&lt;br /&gt;ساغر در فیس‌بوک: %7&lt;br /&gt;&lt;br /&gt;نسخه: %8&lt;br /&gt;زمان ساخت: %9</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1820"/>
>         <source>Panels</source>
>         <translation>پنل‌ها</translation>
>     </message>
>     <message>
>         <source>Search &amp;Options...</source>
>         <translation type="vanished">&amp;گزینه‌های جستجو...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3439"/>
>         <source>&amp;Bookmarks</source>
>         <translation>&amp;گنجواره</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3665"/>
>         <source>Registeration</source>
>         <translation>ثبت‌نام</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1647"/>
>         <source>&amp;OCR Verification</source>
>         <translation>&amp;بازبینی</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="173"/>
>         <source>Classic navigation bar</source>
>         <translation>نوار ناوبری ساده</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="190"/>
>         <source>Modern navigation bar</source>
>         <translation>نوار ناوبری مدرن</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="374"/>
>         <source>There are more than 200 opened search windows, please before start new searches, close some of them.</source>
>         <translation>بیش از ۲۰۰ پنجره جستجو باز است، لطفا قبل از شروع جستجوهای تازه چندتا از آن‌ها را ببندید.</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1650"/>
>         <location filename="../src/saagharwindow.cpp" line="1666"/>
>         <source>&amp;Redo</source>
>         <translation>&amp;چیدن</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1652"/>
>         <location filename="../src/saagharwindow.cpp" line="1667"/>
>         <source>&amp;Undo</source>
>         <translation>&amp;وا چیدن</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3443"/>
>         <source>&amp;Import Ganjoor&apos;s Bookmarks</source>
>         <translation>&amp;گرفتن نشان‌ها از گنجور</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1674"/>
>         <source>Poem View Styles</source>
>         <translation>سبک‌های نمایش چامه</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1696"/>
>         <source>Outline</source>
>         <translation>نَسک‌ها</translation>
>     </message>
>     <message>
>         <source>Interface Language Changed!</source>
>         <translation type="obsolete">زبان رابط کاربری تغییر کرده!</translation>
>     </message>
>     <message>
>         <source>The interface language changes after relunching application!</source>
>         <translation type="obsolete">زبان رابط کاربری در اجرای دوباره نرم‌افزار تغییر خواهد کرد!</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2402"/>
>         <location filename="../src/saagharwindow.cpp" line="3353"/>
>         <source>Bookmarks</source>
>         <translation>گنجواره</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2402"/>
>         <source>Can not write the bookmark file %1:
> %2.</source>
>         <translation>پرونده گنجواره نشان‌ها را نمی‌تواند بنویسد %1:
> %2.</translation>
>     </message>
>     <message>
>         <source>Results Per Page</source>
>         <translation type="obsolete">تعداد یافته‌ها بر صفحه</translation>
>     </message>
>     <message>
>         <source>Set max results per page:</source>
>         <translation type="obsolete">تعیین حداکثر یافته‌ها بر صفحه:</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2824"/>
>         <source>Customize Faal &amp;&amp; Random...</source>
>         <translation>شخصی‌سازی فال و بخت‌آورد...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2840"/>
>         <source>Current tab&apos;s subsections</source>
>         <translation>زیربخش‌های برگه جاری</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3035"/>
>         <location filename="../src/saagharwindow.cpp" line="3038"/>
>         <source>Enter Search Phrase</source>
>         <translation>عبارت جستجو</translation>
>     </message>
>     <message>
>         <source>Select Search Scope...</source>
>         <translation type="vanished">محدوده جستجو...</translation>
>     </message>
>     <message>
>         <source>Max Result per Page...</source>
>         <translation type="obsolete">حداکثر یافته‌ها در هر صفحه...</translation>
>     </message>
>     <message>
>         <source>&amp;Search Tips...</source>
>         <translation type="vanished">&amp;راه‌کارهای جستجو...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1981"/>
>         <source>&lt;b&gt;Tip1:&lt;/b&gt; Search operators and commands:%5&lt;TR&gt;&lt;TD%3 id=&quot;and-operator&quot;&gt;&lt;b&gt;%1+%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing both &lt;b&gt;%1&lt;/b&gt; and &lt;b&gt;%2&lt;/b&gt;, &lt;i&gt;at any order&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1**%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing both &lt;b&gt;%1&lt;/b&gt; and &lt;b&gt;%2&lt;/b&gt;, &lt;i&gt;at this order&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 %2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Same as &lt;b&gt;&lt;a href=&quot;#and-operator&quot;&gt;%1+%2&lt;/a&gt;&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 | %2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing &lt;b&gt;%1&lt;/b&gt; or &lt;b&gt;%2&lt;/b&gt;, or both.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 -%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing &lt;b&gt;%1&lt;/b&gt;, but not &lt;b&gt;%2&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;&quot;%1&quot;&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the whole word &lt;b&gt;%1&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;&quot;%1 %2&quot;&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the whole mixed word &lt;b&gt;%1 %2&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;Sp*ng&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing any phrase started with &lt;b&gt;Sp&lt;/b&gt; and ended with &lt;b&gt;ng&lt;/b&gt;; i.e: Mesras containing &lt;b&gt;Spring&lt;/b&gt; or &lt;b&gt;Spying&lt;/b&gt; or &lt;b&gt;Spoking&lt;/b&gt; or...&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;=%1&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the word &lt;b&gt;%1&lt;/b&gt; &lt;i&gt;as Rhyme&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;==%1&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the word &lt;b&gt;%1&lt;/b&gt; &lt;i&gt;as Radif&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip2:&lt;/b&gt; All search queries are case insensitive.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip3:&lt;/b&gt; User can use an operator more than once;&lt;br /&gt;i.e: &lt;b&gt;%1+%2+%6&lt;/b&gt;, &lt;b&gt;%1 -%6 -%7&lt;/b&gt;, &lt;b&gt;%1**%2**%7&lt;/b&gt; and &lt;b&gt;S*r*g&lt;/b&gt; are valid search terms.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip4:&lt;/b&gt; User can use operators mixed together;&lt;br /&gt;i.e: &lt;b&gt;&quot;%1&quot;+&quot;%2&quot;+%6&lt;/b&gt;, &lt;b&gt;%1+%2|%6 -%7&lt;/b&gt;, &lt;b&gt;&quot;%1&quot;**&quot;%2&quot;&lt;/b&gt;, &lt;b&gt;S*r*g -Spring&lt;/b&gt; and &lt;b&gt;&quot;Gr*en&quot;&lt;/b&gt; are valid search terms.&lt;br /&gt;&lt;br /&gt;</source>
>         <translation>&lt;b&gt;راه‌کار1:&lt;/b&gt; دستورات و عمل‌گرهای جستجوی:%5&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هردوی &lt;b&gt;%1&lt;/b&gt; و &lt;b&gt;%2&lt;/b&gt; را &lt;i&gt;با هر ترتیبی&lt;/i&gt; شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3 id=&quot;and-operator&quot;&gt;&lt;b&gt;%1+%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هردوی &lt;b&gt;%1&lt;/b&gt; و &lt;b&gt;%2&lt;/b&gt; را دقیقا &lt;i&gt;با همین ترتیب&lt;/i&gt; شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1**%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;مانند &lt;b&gt;&lt;a href=&quot;#and-operator&quot;&gt;%1+%2&lt;/a&gt;&lt;/b&gt;.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 %2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که &lt;b&gt;%1&lt;/b&gt; یا &lt;b&gt;%2&lt;/b&gt; و یا هردو را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 | %2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که شامل &lt;b&gt;%1&lt;/b&gt;می‌شوند اما  &lt;b&gt;%2&lt;/b&gt; را شامل نمی‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 -%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که عین کلمه &lt;b&gt;%1&lt;/b&gt; را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;&quot;%1&quot;&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که عین کلمه مرکب &lt;b&gt;%1 %2&lt;/b&gt; را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;&quot;%1 %2&quot;&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هر عبارتی که با &lt;b&gt;به&lt;/b&gt; شروع و با &lt;b&gt;ان&lt;/b&gt; تمام می‌شوند، شامل می‌شود؛ به‌عنوان مثال: لَت‌هایی که &lt;b&gt;بهاران&lt;/b&gt; یا &lt;b&gt;بهشتیان&lt;/b&gt; یا &lt;b&gt;برادران&lt;/b&gt; یا... را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;به*ان&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt; لَت‌های &lt;i&gt;هم‌قافیه&lt;/i&gt; با &lt;b&gt;%1&lt;/b&gt;.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;=%1&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt; لَت‌های &lt;i&gt;هم‌ردیف&lt;/i&gt; با &lt;b&gt;%1&lt;/b&gt;.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;==%1&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار2:&lt;/b&gt; همه جستارها بصورت غیرحساس به حروف بزرگ و کوچک به انجام می‌رسند.(تنها در انگلیسی)&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار3:&lt;/b&gt; کاربر می‌تواند یک عملگر را بیشتر از یک‌بار به کار ببرد؛&lt;br /&gt;به‌عنوان مثال: &lt;b&gt;%1+%2+%6&lt;/b&gt;، &lt;b&gt;%1 -%6 -%7&lt;/b&gt;، &lt;b&gt;%1**%2**%7&lt;/b&gt; و &lt;b&gt;ب*ا*ن&lt;/b&gt; عبارات جستجوی معتبری هستند.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار4:&lt;/b&gt; کاربر می‌تواند عملگرها را بصورت همراه با هم به‌کار ببرد؛&lt;br /&gt;به‌عنوان مثال: &lt;b&gt;&quot;%1&quot;+&quot;%2&quot;+%6&lt;/b&gt;، &lt;b&gt;%1+%2|%6 -%7&lt;/b&gt;، &lt;b&gt;&quot;%1&quot;**&quot;%2&quot;&lt;/b&gt;، &lt;b&gt;ب*ا*ن -بهاران&lt;/b&gt; و &lt;b&gt;&quot;س*ز&quot;&lt;/b&gt; عبارات جستجوی معتبری هستند.&lt;br /&gt;&lt;br /&gt;</translation>
>     </message>
>     <message>
>         <source>&lt;br /&gt;%1 is a persian poem viewer software, it uses &quot;ganjoor.net&quot; database, and some of its codes are ported to C++ and Qt from &quot;desktop ganjoor&quot; that is a C# .NET application written by %2.&lt;br /&gt;&lt;br /&gt;Logo Designer: %3&lt;br /&gt;&lt;br /&gt;Author: %4,&lt;br /&gt;&lt;br /&gt;Home Page: %5&lt;br /&gt;Mailing List: %6&lt;br /&gt;Saaghar in FaceBook:%7&lt;br /&gt;&lt;br /&gt;Version: %8 - (git-rev: %9)&lt;br /&gt;Build Time: %10</source>
>         <translation type="obsolete">&lt;br /&gt;%1 نرم‌افزار شعر پارسی است و از پایگاه‌داده «گنجور» استفاده می‌کند، بخشی ازکدهای آن تبدیل شده کدهای «گنجور رومیزی» که به زبان C#‎ می‌باشد و توسط %2 نوشته شده است، به C++‎ و Qt می‌باشد.&lt;br /&gt;&lt;br /&gt;طراح لوگو: %3&lt;br /&gt;&lt;br /&gt;برنامه‌نویس: %4,&lt;br /&gt;&lt;br /&gt;صفحه خانگی: %5&lt;br /&gt;خبرنامه: %6&lt;br /&gt;ساغر در فیس‌بوک: %7&lt;br /&gt;&lt;br /&gt;نسخه: %8 - (git-rev: %9)&lt;br /&gt;زمان ساخت: %10</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3575"/>
>         <location filename="../src/saagharwindow.cpp" line="3591"/>
>         <source>Copy Selected Text</source>
>         <translation>رو نگاشت از متن انتخابی</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3576"/>
>         <location filename="../src/saagharwindow.cpp" line="3594"/>
>         <source>Copy Cell&apos;s Text</source>
>         <translation>رو نگاشت از متن سلول</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3577"/>
>         <location filename="../src/saagharwindow.cpp" line="3599"/>
>         <source>Copy All</source>
>         <translation>رو نگاشت از همه</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3579"/>
>         <location filename="../src/saagharwindow.cpp" line="3603"/>
>         <source>New Tab</source>
>         <translation>برگ تازه</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3580"/>
>         <location filename="../src/saagharwindow.cpp" line="3606"/>
>         <source>Duplicate Tab</source>
>         <translation>ایجاد نسخه دوم از برگه</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3581"/>
>         <location filename="../src/saagharwindow.cpp" line="3609"/>
>         <source>Refresh</source>
>         <translation>تازه‌سازی</translation>
>     </message>
>     <message>
>         <source>&lt;b&gt;Tip1:&lt;/b&gt; Search operators and commands:%5&lt;TR&gt;&lt;TD%3 id=&quot;and-operator&quot;&gt;&lt;b&gt;%1+%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing both &lt;b&gt;%1&lt;/b&gt; and &lt;b&gt;%2&lt;/b&gt;, &lt;i&gt;at any order&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1**%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing both &lt;b&gt;%1&lt;/b&gt; and &lt;b&gt;%2&lt;/b&gt;, &lt;i&gt;at this order&lt;/i&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 %2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Same as &lt;b&gt;&lt;a href=&quot;#and-operator&quot;&gt;%1+%2&lt;/a&gt;&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 | %2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing &lt;b&gt;%1&lt;/b&gt; or &lt;b&gt;%2&lt;/b&gt;, or both.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;%1 -%2&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing &lt;b&gt;%1&lt;/b&gt;, but not &lt;b&gt;%2&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;&quot;%1&quot;&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the whole word &lt;b&gt;%1&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;&quot;%1 %2&quot;&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing the whole mixed word &lt;b&gt;%1 %2&lt;/b&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%3&gt;&lt;b&gt;Sp*ng&lt;/b&gt;&lt;/TD&gt;%8&lt;TD%4&gt;Mesras containing any phrase started with &lt;b&gt;Sp&lt;/b&gt; and ended with &lt;b&gt;ng&lt;/b&gt;; i.e: Mesras containing &lt;b&gt;Spring&lt;/b&gt; or &lt;b&gt;Spying&lt;/b&gt; or &lt;b&gt;Spoking&lt;/b&gt; or...&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip2:&lt;/b&gt; All search queries are case insensitive.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip3:&lt;/b&gt; User can use an operator more than once;&lt;br /&gt;i.e: &lt;b&gt;%1+%2+%6&lt;/b&gt;, &lt;b&gt;%1 -%6 -%7&lt;/b&gt;, &lt;b&gt;%1**%2**%7&lt;/b&gt; and &lt;b&gt;S*r*g&lt;/b&gt; are valid search terms.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Tip4:&lt;/b&gt; User can use operators mixed together;&lt;br /&gt;i.e: &lt;b&gt;&quot;%1&quot;+&quot;%2&quot;+%6&lt;/b&gt;, &lt;b&gt;%1+%2|%6 -%7&lt;/b&gt;, &lt;b&gt;&quot;%1&quot;**&quot;%2&quot;&lt;/b&gt;, &lt;b&gt;S*r*g -Spring&lt;/b&gt; and &lt;b&gt;&quot;Gr*en&quot;&lt;/b&gt; are valid search terms.&lt;br /&gt;&lt;br /&gt;</source>
>         <translation type="obsolete">&lt;b&gt;راه‌کار1:&lt;/b&gt; دستورات و عمل‌گرهای جستجوی:%5&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هردوی &lt;b&gt;%1&lt;/b&gt; و &lt;b&gt;%2&lt;/b&gt; را &lt;i&gt;با هر ترتیبی&lt;/i&gt; شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3 id=&quot;and-operator&quot;&gt;&lt;b&gt;%1+%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هردوی &lt;b&gt;%1&lt;/b&gt; و &lt;b&gt;%2&lt;/b&gt; را دقیقا &lt;i&gt;با همین ترتیب&lt;/i&gt; شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1**%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;مانند &lt;b&gt;&lt;a href=&quot;#and-operator&quot;&gt;%1+%2&lt;/a&gt;&lt;/b&gt;.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 %2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که &lt;b&gt;%1&lt;/b&gt; یا &lt;b&gt;%2&lt;/b&gt; و یا هردو را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 | %2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که شامل &lt;b&gt;%1&lt;/b&gt;می‌شوند اما  &lt;b&gt;%2&lt;/b&gt; را شامل نمی‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;%1 -%2&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که عین کلمه &lt;b&gt;%1&lt;/b&gt; را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;&quot;%1&quot;&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که عین کلمه مرکب &lt;b&gt;%1 %2&lt;/b&gt; را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;&quot;%1 %2&quot;&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD%4&gt;لَت‌هایی که هر عبارتی که با &lt;b&gt;به&lt;/b&gt; شروع و با &lt;b&gt;ان&lt;/b&gt; تمام می‌شوند، شامل می‌شود؛ به‌عنوان مثال: لَت‌هایی که &lt;b&gt;بهاران&lt;/b&gt; یا &lt;b&gt;بهشتیان&lt;/b&gt; یا &lt;b&gt;برادران&lt;/b&gt; یا... را شامل می‌شوند.&lt;/TD&gt;%8&lt;TD%3&gt;&lt;b&gt;به*ان&lt;/b&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار2:&lt;/b&gt; همه جستارها بصورت غیرحساس به حروف بزرگ و کوچک به انجام می‌رسند.(فقط انگلیسی)&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار3:&lt;/b&gt; کاربر می‌تواند یک عملگر را بیشتر از یک‌بار به کار ببرد؛&lt;br /&gt;به‌عنوان مثال: &lt;b&gt;%1+%2+%6&lt;/b&gt;، &lt;b&gt;%1 -%6 -%7&lt;/b&gt;، &lt;b&gt;%1**%2**%7&lt;/b&gt; و &lt;b&gt;ب*ا*ن&lt;/b&gt; عبارات جستجوی معتبری هستند.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;راه‌کار4:&lt;/b&gt; کاربر می‌تواند عملگرها را بصورت همراه با هم به‌کار ببرد؛&lt;br /&gt;به‌عنوان مثال: &lt;b&gt;&quot;%1&quot;+&quot;%2&quot;+%6&lt;/b&gt;، &lt;b&gt;%1+%2|%6 -%7&lt;/b&gt;، &lt;b&gt;&quot;%1&quot;**&quot;%2&quot;&lt;/b&gt;، &lt;b&gt;ب*ا*ن -بهاران&lt;/b&gt; و &lt;b&gt;&quot;س*ز&quot;&lt;/b&gt; عبارات جستجوی معتبری هستند.&lt;br /&gt;&lt;br /&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2000"/>
>         <source>Spring</source>
>         <translation>بهار</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2000"/>
>         <source>Flower</source>
>         <translation>گل</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2000"/>
>         <source> ALIGN=CENTER</source>
>         <translation></translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2000"/>
>         <source> ALIGN=Left</source>
>         <translation> ALIGN=Right</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2001"/>
>         <source>Rain</source>
>         <translation>باران</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2001"/>
>         <source>Sunny</source>
>         <translation>آفتابی</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2001"/>
>         <source>&lt;TABLE DIR=LTR FRAME=VOID CELLSPACING=5 COLS=3 RULES=ROWS BORDER=0&gt;&lt;TBODY&gt;</source>
>         <translation>&lt;TABLE DIR=RTL FRAME=VOID CELLSPACING=5 COLS=3 RULES=ROWS BORDER=0&gt;&lt;TBODY&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2002"/>
>         <source>&lt;TD  ALIGN=Left&gt;:&lt;/TD&gt;</source>
>         <translation>&lt;TD  ALIGN=Right&gt;:&lt;/TD&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2003"/>
>         <source>Search Tips...</source>
>         <translation>راه‌کارهای جستجو...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2352"/>
>         <source>Some of changes are applied after relaunch!</source>
>         <translation>برخی از تغییرات بعد از باز آغاز اعمال خواهند شد!</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2383"/>
>         <source>File not found!</source>
>         <translation>پرونده یافت نشد!</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3258"/>
>         <source>Clean Up Database</source>
>         <translation>پاک‌سازی پایگاه‌داده</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3374"/>
>         <source>Filter:</source>
>         <translation>پرویزن:</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3378"/>
>         <location filename="../src/saagharwindow.cpp" line="3380"/>
>         <source>Filter</source>
>         <translation>پرویزن</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3464"/>
>         <source>Bookmarking system was disabled, something going wrong with writing or reading from bookmarks file:
> %1</source>
>         <translation>بخش نشان‌ها غیرفعال شد، اشکالی در خواندن یا نوشتن فایل نشان‌ها وجود دارد: %1</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3474"/>
>         <source>Verses</source>
>         <translation>چامه‌ها</translation>
>     </message>
>     <message>
>         <source>&lt;a href=&quot;http://pojh.iBlogger.org/saaghar&quot;&gt;Saaghar&lt;/a&gt;</source>
>         <oldsource>&lt;a href=&quot;http://www.pojh.co.cc/saaghar&quot;&gt;Saaghar&lt;/a&gt;</oldsource>
>         <translation type="obsolete">&lt;a href=&quot;http://pojh.iBlogger.org/saaghar&quot;&gt;ساغر&lt;/a&gt;</translation>
>     </message>
>     <message>
>         <source>&lt;a href=&quot;http://www.gozir.com/&quot;&gt;Hamid Reza Mohammadi&lt;/a&gt;</source>
>         <translation type="obsolete">&lt;a href=&quot;http://www.gozir.com/&quot;&gt;حمیدرضا محمدی&lt;/a&gt;</translation>
>     </message>
>     <message>
>         <source>&lt;a href=&quot;http://www.phototak.com/&quot;&gt;S. Nasser Alavizadeh&lt;/a&gt;</source>
>         <translation type="obsolete">&lt;a href=&quot;http://www.phototak.com/&quot;&gt;سیدناصر علوی‌زاده&lt;/a&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1452"/>
>         <source>Help file not found!</source>
>         <translation>پرونده راهنما یافت نمی‌شود!</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1468"/>
>         <source>Browse for a new set</source>
>         <translation>گزیدن نَسک تازه</translation>
>     </message>
>     <message>
>         <source>&amp;New Search Method</source>
>         <translation type="obsolete">شکل &amp;جدید جستجو</translation>
>     </message>
>     <message>
>         <source>&amp;Skip non-Alphabet</source>
>         <translation type="obsolete">نادیده گرفتن نویسه‌های &amp;غیر-الفبایی</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1540"/>
>         <source>&amp;File</source>
>         <translation>&amp;پرونده</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1544"/>
>         <source>&amp;Opened Tabs</source>
>         <translation>برگه‌های با&amp;زشده</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1546"/>
>         <source>&amp;Closed Tabs</source>
>         <translation>برگه‌های ب&amp;سته‌شده</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1549"/>
>         <source>&amp;Navigation</source>
>         <translation>&amp;ناوبری</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1551"/>
>         <source>&amp;View</source>
>         <translation>ن&amp;ما</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1554"/>
>         <source>&amp;Tools</source>
>         <translation>&amp;ابزارها</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1556"/>
>         <source>&amp;Help</source>
>         <translation>&amp;راهنما</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1565"/>
>         <source>&amp;Home</source>
>         <translation>&amp;خانه</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1568"/>
>         <location filename="../src/saagharwindow.cpp" line="1572"/>
>         <source>&amp;Previous</source>
>         <translation>&amp;پیشین</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1569"/>
>         <location filename="../src/saagharwindow.cpp" line="1573"/>
>         <source>&amp;Next</source>
>         <translation>&amp;پسین</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1576"/>
>         <source>&amp;Copy</source>
>         <translation>&amp;رو نگاشت</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1578"/>
>         <source>&amp;Find</source>
>         <translation>&amp;جستجو</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1627"/>
>         <source>Check for &amp;Updates</source>
>         <translation>بررسی برای &amp;بروز رسانی‌ها</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1630"/>
>         <source>&amp;Show Photo at Home</source>
>         <translation>&amp;نمایش نگاره‌ها در برگ نخست</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1633"/>
>         <source>&amp;Lock ToolBars</source>
>         <translation>&amp;ایستایی  نوار ابزارها</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1730"/>
>         <source>&amp;Show Preface...</source>
>         <translation>نمایش &amp;پیش‌گفتار...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1733"/>
>         <source>&amp;Dev. Clean up Database</source>
>         <translation>توسعه &amp;پاک‌سازی پایگاه‌داده</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1803"/>
>         <source>ToolBars</source>
>         <translation>نوار ابزارها</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2037"/>
>         <source>&lt;b&gt;All&lt;/b&gt;</source>
>         <translation>&lt;b&gt;همه&lt;/b&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2040"/>
>         <source>&lt;b&gt;All opened tabs (highlight)&lt;/b&gt;</source>
>         <translation>&lt;b&gt;برگه‌های باز (برجسته‌سازی)&lt;/b&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2048"/>
>         <source>&lt;b&gt;Titles&lt;/b&gt;</source>
>         <translation>&lt;b&gt;سرنویس‌ها&lt;/b&gt;</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2352"/>
>         <source>Need to Relaunch!</source>
>         <translation>باز آغازی نیاز است!</translation>
>     </message>
>     <message>
>         <source>You have not write permission to database file, the import procedure can not proceed.
> DataBase Path: %2</source>
>         <translation type="vanished">به پرونده پایگاه‌داده دسترسی نوشتنی ندارید، فرایند افزودن نَسک تازه نمی‌تواند ادامه پیدا کند.
> مسیر پایگاه‌داده: %2</translation>
>     </message>
>     <message>
>         <source>You have not write permission to database file, the import procedure can not proceed.</source>
>         <translation type="obsolete">به پرونده پایگاه‌داده دسترسی نوشتنی ندارید، فرایند افزودن نَسک تازه نمی‌تواند ادامه پیدا کند.</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="3464"/>
>         <source>Warning!</source>
>         <translation>هشدار!‏</translation>
>     </message>
>     <message>
>         <source>There are some conflict with your installed database.</source>
>         <translation type="obsolete">بخش‌هایی از نَسک تازه در پایگاه‌داده نصب شده موجودند.</translation>
>     </message>
>     <message>
>         <source>These poets are present in installed database:
> </source>
>         <translation type="vanished">سخن‌سراهایی که در پایگاه‌داده فعلی موجودند:</translation>
>     </message>
>     <message>
>         <source>There are some errors, the import procedure was not completed</source>
>         <translation type="vanished">خطایی رخ داده است، فرایند افزودن نَسک تازه کامل نشد</translation>
>     </message>
>     <message>
>         <source>&amp;Search</source>
>         <translation type="obsolete">&amp;جستجو</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1580"/>
>         <source>S&amp;ettings</source>
>         <translation>&amp;سامانِش</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1582"/>
>         <source>View in &quot;&amp;ganjoor.net&quot;</source>
>         <translation>بررسی در تارنمای &amp;گنجور</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1584"/>
>         <source>E&amp;xit</source>
>         <translation>&amp;خروج</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1587"/>
>         <source>New &amp;Tab</source>
>         <translation>&amp;برگ تازه</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1589"/>
>         <source>&amp;New Window</source>
>         <translation>&amp;پنجره جدید</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1591"/>
>         <source>&amp;About</source>
>         <translation>&amp;درباره</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1593"/>
>         <source>About &amp;Qt</source>
>         <translation>درباره &amp;کیوت</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1595"/>
>         <source>&amp;Faal</source>
>         <translation>&amp;فال</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1597"/>
>         <source>&amp;Print...</source>
>         <translation>&amp;چاپ...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1599"/>
>         <source>Print Pre&amp;view...</source>
>         <translation>پیش‌&amp;نمایش چاپ...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1602"/>
>         <source>&amp;Import...</source>
>         <translation>&amp;درون‌ریزی...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1605"/>
>         <source>&amp;Export As...</source>
>         <translation>&amp;رونوشت‌برداری در پیکر...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1607"/>
>         <source>Exp&amp;ort As PDF...</source>
>         <translation>رونوشت‌برداری در پیکر پی‌دی‌ا&amp;ف ...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1609"/>
>         <source>&amp;Help Contents...</source>
>         <translation>&amp;راهنما...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1611"/>
>         <source>&amp;Close Tab</source>
>         <translation>بستن برگ&amp;ه</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1613"/>
>         <source>&amp;Random</source>
>         <translation>&amp;بخت‌آورد</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1616"/>
>         <source>Insert New &amp;Set...</source>
>         <translation>افزودن &amp;نَسک تازه...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="1618"/>
>         <source>&amp;Remove Poet...</source>
>         <translation>&amp;کنار نهادن نَسک...</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="281"/>
>         <location filename="../src/saagharwindow.cpp" line="1410"/>
>         <location filename="../src/saagharwindow.cpp" line="1620"/>
>         <source>&amp;Full Screen</source>
>         <translation>&amp;سراسر نما</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="101"/>
>         <source>Audio Player</source>
>         <translation>پخش کننده صدا</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2592"/>
>         <source>Error!</source>
>         <translation>خطا!</translation>
>     </message>
>     <message>
>         <location filename="../src/saagharwindow.cpp" line="2592"/>
>         <source>There is no equivalent page there at ganjoor website.</source>
>         <translation>صفحه متناظر در تارنمای گنجور وحود ندارد.</translation>
>     </message>
>     <message>
>         <source>Initializing Results Table...</source>
>         <translation type="obsolete">آماده‌سازی جدول یافته‌ها...</translation>
>     </message>
>     <message>
>         <source>Cancel</source>
>         <translation type="vanished">رد</translation>
>     </message>
>     <message>
>         <source>No match found.</source>
>         <translation type="obsolete">موردی یافت نشد.</translation>
>     </message>
>     <message>
>         <source>There are some conflict with your installed database. If you continue, these poets will be removed!</source>
>         <translation type="vanished">بخش‌هایی از نَسک تازه در پایگاه‌داده نصب شده موجودند. اگر ادامه دهید سخن‌سرایانی که این بخش‌ها را دربرمی‌گیرند از پایگاه‌داده فعلی حذف خواهند شد!</translation>
>     </message>
> </context>
> <context>
>     <name>SearchOptionsDialog</name>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="20"/>
>         <source>Advanced Search Options</source>
>         <translation>گزینه‌های پیشرفته جستجو</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="26"/>
>         <source>Search range</source>
>         <translation>دامنه جستجو</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="55"/>
>         <source>All poets/books</source>
>         <translation>همه سخن‌سراها/کتاب‌ها</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="62"/>
>         <source>All opened tabs (highlight)</source>
>         <translation>برگه‌های باز (برجسته‌سازی)</translation>
>     </message>
>     <message>
>         <source>Custome range</source>
>         <translation type="obsolete"> </translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="115"/>
>         <source>Clear</source>
>         <translation>پاک کردن</translation>
>     </message>
>     <message>
>         <source>Titles: include search results within titles of poems.</source>
>         <translation type="vanished">سرنویس‌ها: جستجو در میان سرنویس‌ها.</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="95"/>
>         <source>Custome search range</source>
>         <translation>سفارشی‌سازی دامنه جستجو</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="127"/>
>         <source>Titles: search within titles</source>
>         <translation>سرنویس‌ها: جستجو در میان سرنویس‌ها</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="141"/>
>         <source>Results per page:</source>
>         <translation>تعداد یافته‌ها بر صفحه:</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="163"/>
>         <source>Non-paged search results</source>
>         <translation>همه یافته‌ها در یک صفحه</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="170"/>
>         <source>Skip vowel letters (slow)</source>
>         <translation>نادیده گرفتن آوای نویسه‌ها (کند)</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="177"/>
>         <source>Skip vowel signs</source>
>         <translation>نادیده گرفتن حرکت‌های نویسه‌ها</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="188"/>
>         <source>Search Tips...</source>
>         <translation>راه‌کارهای جستجو...</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="211"/>
>         <source>Close</source>
>         <translation>بستن</translation>
>     </message>
>     <message>
>         <location filename="../src/searchoptionsdialog.ui" line="218"/>
>         <source>OK</source>
>         <translation>قبول</translation>
>     </message>
> </context>
> <context>
>     <name>SearchResultWidget</name>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="59"/>
>         <location filename="../src/searchresultwidget.cpp" line="315"/>
>         <source>Radifs that contain: </source>
>         <translation>ردیف شامل: </translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="60"/>
>         <location filename="../src/searchresultwidget.cpp" line="316"/>
>         <source>Rhymed by: </source>
>         <translation>هم‌قافیه با: </translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="131"/>
>         <source>Filter:</source>
>         <translation>پرویزن:</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="141"/>
>         <source>Filter</source>
>         <translation>پرویزن</translation>
>     </message>
>     <message>
>         <source>page %1 of %2 page(s)</source>
>         <translation type="obsolete">صفحه %1 از %2 صفحه(ها)</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="313"/>
>         <source>All: %1 - Filered: %2</source>
>         <translation>کل: %1 - فیلتر شده: %2</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="317"/>
>         <source>p: %1 of %2</source>
>         <translation>ص: %1 از %2</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="89"/>
>         <source>#</source>
>         <translation></translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="89"/>
>         <source>Title</source>
>         <translation>سرنویس</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="89"/>
>         <source>Verse</source>
>         <translation>چامه</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="332"/>
>         <source>Initializing Results Table...</source>
>         <translation>آماده‌سازی جدول یافته‌ها...</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="332"/>
>         <source>Cancel</source>
>         <translation>رد</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="409"/>
>         <source>All</source>
>         <translation>همه</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="409"/>
>         <source>Titles</source>
>         <translation>سرنویس‌ها</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="556"/>
>         <source>Nothing found!</source>
>         <translation>چیزی یافت نشد!</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="623"/>
>         <location filename="../src/searchresultwidget.cpp" line="634"/>
>         <source>Close</source>
>         <translation>بستن</translation>
>     </message>
>     <message>
>         <location filename="../src/searchresultwidget.cpp" line="624"/>
>         <location filename="../src/searchresultwidget.cpp" line="639"/>
>         <source>Close All</source>
>         <translation>بستن همه</translation>
>     </message>
> </context>
> <context>
>     <name>SelectCreateDialog</name>
>     <message>
>         <location filename="../src/importer/selectcreatedialog.ui" line="14"/>
>         <source>Select/Create Categories</source>
>         <translation>انتخاب/ساختن بخش‌</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/selectcreatedialog.ui" line="20"/>
>         <source>Create with the following title:</source>
>         <translation>ساخت تازه با سرنویس:</translation>
>     </message>
>     <message>
>         <location filename="../src/importer/selectcreatedialog.ui" line="30"/>
>         <source>Select from current datasets:</source>
>         <translation>انتخاب از مجموعه‌داده‌های موجود:</translation>
>     </message>
> </context>
> <context>
>     <name>SelectionManager</name>
>     <message>
>         <location filename="../src/selectionmanager.ui" line="46"/>
>         <source>Current selection:</source>
>         <translation>انتخاب فعلی:</translation>
>     </message>
>     <message>
>         <location filename="../src/selectionmanager.ui" line="53"/>
>         <source>Select some items:</source>
>         <translation>موردهای مورد نظرتان را انتخاب کنید:</translation>
>     </message>
>     <message>
>         <location filename="../src/selectionmanager.ui" line="14"/>
>         <location filename="../src/selectionmanager.cpp" line="37"/>
>         <source>Selection Manager</source>
>         <translation>مدیر انتخاب</translation>
>     </message>
> </context>
> <context>
>     <name>Settings</name>
>     <message>
>         <location filename="../src/settings.ui" line="14"/>
>         <source>Settings</source>
>         <translation>سامانِش</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="62"/>
>         <source>General</source>
>         <translation>عمومی</translation>
>     </message>
>     <message>
>         <source>Font</source>
>         <translation type="obsolete">قلم</translation>
>     </message>
>     <message>
>         <source>Font Family</source>
>         <translation type="obsolete">خانواده قلم</translation>
>     </message>
>     <message>
>         <source>Font Size</source>
>         <translation type="obsolete">انداره قلم</translation>
>     </message>
>     <message>
>         <source>Colors</source>
>         <translation type="obsolete">رنگ‌ها</translation>
>     </message>
>     <message>
>         <source>&quot;Text&quot; color</source>
>         <translation type="obsolete">رنگ «متن»‏</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="441"/>
>         <source>&quot;Background&quot; color</source>
>         <translation>رنگ «پشت‌زمینه»‏</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="452"/>
>         <source>&quot;Matched Text&quot; color</source>
>         <translation>رنگ «متن یافت‌شده»‏</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="70"/>
>         <source>Appearance</source>
>         <translation>نما</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="86"/>
>         <location filename="../src/settings.ui" line="99"/>
>         <location filename="../src/settings.ui" line="395"/>
>         <source>Browse</source>
>         <translation>گزیدن</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="109"/>
>         <source>Background</source>
>         <translation>پشت‌زمینه</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="116"/>
>         <source>Icon Theme</source>
>         <translation>مجموعه نماد</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="152"/>
>         <source>Show Beyt Numbers</source>
>         <translation>نمایش شماره بیت‌ها</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="135"/>
>         <source>Custom Background</source>
>         <translation>شخصی‌سازی پشت‌زمینه</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="35"/>
>         <source>Apply</source>
>         <translation>اعمال کردن</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="145"/>
>         <source>Custom Icon Theme</source>
>         <translation>شخصی‌سازی مجموعه نماد</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="184"/>
>         <source>Poets Per Group:</source>
>         <translation>سخن‌سرایان بر گروه:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="162"/>
>         <source>Use transparent background</source>
>         <translation>استفاده از پشت‌زمینه نیمه‌شفاف</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="210"/>
>         <source>Application Startup</source>
>         <translation>آغاز به کار نرم‌افزار</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="218"/>
>         <source>Automatically Check for Updates</source>
>         <translation>بررسی خودکار برای بروز رسانی‌ها</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="228"/>
>         <source>Display Splash Screen</source>
>         <translation>نمایش Splash Screen</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="246"/>
>         <source>Task Manager</source>
>         <translation>مدیر کارها</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="264"/>
>         <source>Mode:</source>
>         <translation>حالت:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="281"/>
>         <location filename="../src/settings.cpp" line="201"/>
>         <source>Slow</source>
>         <translation>کند</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="286"/>
>         <location filename="../src/settings.cpp" line="202"/>
>         <source>Normal (Recommended)</source>
>         <translation>عادی (توصیه شده)</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="291"/>
>         <location filename="../src/settings.cpp" line="203"/>
>         <source>Fast</source>
>         <translation>سریع</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="303"/>
>         <location filename="../src/settings.cpp" line="206"/>
>         <source>Disabled</source>
>         <translation>غیرفعال</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="308"/>
>         <location filename="../src/settings.cpp" line="207"/>
>         <source>Saaghar Bottom Right</source>
>         <translation>پایین سمت راست پنجره ساغر</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="313"/>
>         <location filename="../src/settings.cpp" line="208"/>
>         <source>Saaghar Bottom Left</source>
>         <translation>پایین سمت چپ پنجره ساغر</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="318"/>
>         <location filename="../src/settings.cpp" line="209"/>
>         <source>Desktop Bottom Right</source>
>         <translation>پایین سمت راست میزکار</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="323"/>
>         <location filename="../src/settings.cpp" line="210"/>
>         <source>Desktop Top Right</source>
>         <translation>بالا سمت راست میزکار</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="331"/>
>         <source>Notification:</source>
>         <translation>اعلان:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="351"/>
>         <source>Interface Language:</source>
>         <translation>زبان رابط کاربری:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="374"/>
>         <source>Customize Faal &amp;&amp; Random...</source>
>         <translation>شخصی‌سازی فال و بخت‌آورد...</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="385"/>
>         <source>Data Base Path</source>
>         <translation>مسیر پایگاه‌داده</translation>
>     </message>
>     <message>
>         <source>Font &amp;&amp; Color</source>
>         <translation type="obsolete">قلم و رنگ</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="423"/>
>         <source>Fonts &amp;&amp; Colors</source>
>         <translation>قلم‌ها و رنگ‌ها</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="465"/>
>         <source>Outline:</source>
>         <translation>فهرست نَسک‌ها:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="479"/>
>         <source>Simple</source>
>         <translation>ساده</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="493"/>
>         <source>Global:</source>
>         <translation>سراسری:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="508"/>
>         <source>Advanced</source>
>         <translation>پیشرفته</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="522"/>
>         <source>Poem Text:</source>
>         <translation>متن چامه:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="529"/>
>         <source>Prose Text:</source>
>         <translation>متن نثر:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="536"/>
>         <source>Section Name:</source>
>         <translation>نام بخش:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="543"/>
>         <source>Title:</source>
>         <translation>سرنویس:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="550"/>
>         <source>Number:</source>
>         <translation>اعداد:</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="563"/>
>         <source>ToolBar</source>
>         <translation>نوار ابزار</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="569"/>
>         <source>All Actions</source>
>         <translation>همه پیش‌کارها</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="579"/>
>         <source>ToolBar Actions</source>
>         <translation>پیش‌کارهای نوارابزار</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="42"/>
>         <source>OK</source>
>         <translation>قبول</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.ui" line="49"/>
>         <source>Cancel</source>
>         <translation>رد</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.cpp" line="222"/>
>         <location filename="../src/settings.cpp" line="254"/>
>         <source>Separator</source>
>         <translation>جداساز</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.cpp" line="316"/>
>         <source>Add Path For Data Base</source>
>         <translation>اضافه کردن مسیر برای پایگاه‌داده</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.cpp" line="345"/>
>         <source>Browse Background Image</source>
>         <translation>گزیدن تصویر پشت‌زمینه</translation>
>     </message>
>     <message>
>         <location filename="../src/settings.cpp" line="354"/>
>         <source>Browse Theme Directory</source>
>         <translation>گزیدن پوشه مجموعه نماد</translation>
>     </message>
> </context>
> <context>
>     <name>UnZip</name>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1251"/>
>         <source>ZIP operation completed successfully.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1254"/>
>         <source>Failed to initialize or load zlib library.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1257"/>
>         <source>zlib library error.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1260"/>
>         <source>Unable to create or open file.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1263"/>
>         <source>Partially corrupted archive. Some files might be extracted.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1266"/>
>         <source>Corrupted archive.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1269"/>
>         <source>Wrong password.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1272"/>
>         <source>No archive has been created yet.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1275"/>
>         <source>File or directory does not exist.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1278"/>
>         <source>File read error.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1281"/>
>         <source>File write error.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1284"/>
>         <source>File seek error.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1287"/>
>         <source>Unable to create a directory.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1290"/>
>         <source>Invalid device.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1293"/>
>         <source>Invalid or incompatible zip archive.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1296"/>
>         <source>Inconsistent headers. Archive might be corrupted.</source>
>         <translation type="unfinished"></translation>
>     </message>
>     <message>
>         <location filename="../src/OSDaB-Zip/unzip.cpp" line="1302"/>
>         <source>Unknown error.</source>
>         <translation type="unfinished"></translation>
>     </message>
> </context>
> </TS>
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/README.md lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/README.md
1,73c1,73
< Saaghar, a Persian poetry software
< ----------------------------------------------------------------------------------------
< **Copyright (C) 2010-2016, Razi Alavizadeh**
< 
< Homepage (in English): [http://en.saaghar.pozh.org](http://en.saaghar.pozh.org)
< 
< Homepage (in Persian): [http://saaghar.pozh.org](http://saaghar.pozh.org)
< 
< My Blog (in Persian): [http://pozh.org](http://pozh.org)
< 
< Sourceforge: [http://sourceforge.net/projects/saaghar](http://sourceforge.net/projects/saaghar)
< 
< Facebook Page: [https://www.facebook.com/saaghar.p](https://www.facebook.com/saaghar.p)
< 
< About Saaghar
< ----------------------------------------------------------------------------------------
< Saaghar is an opensource Persian poetry software, it's based on Qt C++ and it's cross-platform, and available for majaor desktop's operating systems. it  uses "ganjoor.net" database as its database.
< 
< **Some of its features:**
< * Outline Panel
< * Tabbed UI
< * Tabbed and dockable search widgets
< * Advanced Search
< * Search for Rhymes
< * Print and Print Preview
< * Export, It supports exporting to "PDF", "HTML", "TeX", "CSV" and "TXT"
<   * CSV: indeed is a "Tab Separated Value" version
<   * TeX: uses XePersian and bidipoem
<   * TXT: is a text document with UTF-8 encoding.
< * Copy and Multi-selection
< * Icons Theme
< * Customisable interface
< * Portable Mode
< * Different View Styles for Poems.
< * Audio Player with Album Manager
< * Audio/Text Syncer
< 
< Requirments
< ----------------------------------------------------------------------------------------
< **Windows:**
< * To compile and install Saaghar on your system, you have to install the Qt Windows SDK from [http://qt-project.org](http://qt-project.org).
< 
< **Linux:**
< * To compile and install Saaghar on your system, Be sure you have installed the Qt4 development packages. (maybe qt4-devel, libqt4-dev or similar.)
< 
< **Mac OS X:**
< * To compile and install Saaghar on your system, you have to install the Qt Mac SDK from [http://qt-project.org](http://qt-project.org) and Mac SDK from
< [http://developer.apple.com](http://developer.apple.com)
< 
< --------------------------------------
< * Saaghar uses qt sqlite plugins.
< 
< Compiling
< ----------------------------------------------------------------------------------------
<     $ cd saaghar
<     $ qmake -config release
<     $ make
<     # make install
< 
< Current version
< ----------------------------------------------------------------------------------------
< The current version of Saaghar is **3.0.0**. You can download precompiled packages
< and the sources from: [Saaghar's download page](http://pozh.org/saaghar/download).
< 
< Development Version
< ----------------------------------------------------------------------------------------
< You can always use the lastest development snapshot of Saaghar from the GIT repository.
< 
< **Clone:**
< 
<     $ git clone https://github.com/srazi/Saaghar.git
< 
< **Download as archive:** [ZIP Archive, Master Branch](https://github.com/srazi/Saaghar/archive/master.zip)
---
> Saaghar, a Persian poetry software
> ----------------------------------------------------------------------------------------
> **Copyright (C) 2010-2016, Razi Alavizadeh**
> 
> Homepage (in English): [http://en.saaghar.pozh.org](http://en.saaghar.pozh.org)
> 
> Homepage (in Persian): [http://saaghar.pozh.org](http://saaghar.pozh.org)
> 
> My Blog (in Persian): [http://pozh.org](http://pozh.org)
> 
> Sourceforge: [http://sourceforge.net/projects/saaghar](http://sourceforge.net/projects/saaghar)
> 
> Facebook Page: [https://www.facebook.com/saaghar.p](https://www.facebook.com/saaghar.p)
> 
> About Saaghar
> ----------------------------------------------------------------------------------------
> Saaghar is an opensource Persian poetry software, it's based on Qt C++ and it's cross-platform, and available for majaor desktop's operating systems. it  uses "ganjoor.net" database as its database.
> 
> **Some of its features:**
> * Outline Panel
> * Tabbed UI
> * Tabbed and dockable search widgets
> * Advanced Search
> * Search for Rhymes
> * Print and Print Preview
> * Export, It supports exporting to "PDF", "HTML", "TeX", "CSV" and "TXT"
>   * CSV: indeed is a "Tab Separated Value" version
>   * TeX: uses XePersian and bidipoem
>   * TXT: is a text document with UTF-8 encoding.
> * Copy and Multi-selection
> * Icons Theme
> * Customisable interface
> * Portable Mode
> * Different View Styles for Poems.
> * Audio Player with Album Manager
> * Audio/Text Syncer
> 
> Requirments
> ----------------------------------------------------------------------------------------
> **Windows:**
> * To compile and install Saaghar on your system, you have to install the Qt Windows SDK from [http://qt-project.org](http://qt-project.org).
> 
> **Linux:**
> * To compile and install Saaghar on your system, Be sure you have installed the Qt4 development packages. (maybe qt4-devel, libqt4-dev or similar.)
> 
> **Mac OS X:**
> * To compile and install Saaghar on your system, you have to install the Qt Mac SDK from [http://qt-project.org](http://qt-project.org) and Mac SDK from
> [http://developer.apple.com](http://developer.apple.com)
> 
> --------------------------------------
> * Saaghar uses qt sqlite plugins.
> 
> Compiling
> ----------------------------------------------------------------------------------------
>     $ cd saaghar
>     $ qmake -config release
>     $ make
>     # make install
> 
> Current version
> ----------------------------------------------------------------------------------------
> The current version of Saaghar is **3.0.0**. You can download precompiled packages
> and the sources from: [Saaghar's download page](http://pozh.org/saaghar/download).
> 
> Development Version
> ----------------------------------------------------------------------------------------
> You can always use the lastest development snapshot of Saaghar from the GIT repository.
> 
> **Clone:**
> 
>     $ git clone https://github.com/srazi/Saaghar.git
> 
> **Download as archive:** [ZIP Archive, Master Branch](https://github.com/srazi/Saaghar/archive/master.zip)
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/Saaghar.pro lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/Saaghar.pro
1,216c1,216
< TEMPLATE = app
< TARGET = Saaghar
< 
< CONFIG += qt
< 
< 
< CONFIG(debug, debug|release) {
<     !build_pass:message("DEBUG BUILD")
<     DEFINES += SAAGHAR_DEBUG
< } else {
<     !build_pass:message("RELEASE BUILD")
< ##un-comment the following two lines for skipping all warning and debug messages.
< #    DEFINES += QT_NO_WARNING_OUTPUT
< #    DEFINES += QT_NO_DEBUG_OUTPUT
< }
< 
< ##un-comment for static build
< #CONFIG += static
< 
< ##un-comment for support phonon on Qt5, it needs phonon4qt5
< #CONFIG += USE_PHONON4_QT5
< 
< CONFIG(static) {
<     !build_pass:message("STATIC BUILD")
<     DEFINES += STATIC
< }
< 
< isEqual(QT_MAJOR_VERSION, 5) {
<     QT += network widgets printsupport sql xml concurrent
< 
<     DEFINES += MEDIA_PLAYER
< 
< } else {
<     DEFINES += MEDIA_PLAYER
< 
<     QT += sql network xml
< }
< 
< # Git revision
< rev = $$system(sh $$PWD/scripts/getrevision.sh)
< 
< isEmpty(rev) {
<     rev = ""
< }
< 
< !build_pass:message("Git revision: " $$rev)
< 
< DEFINES += GIT_REVISION=\\\"""$$rev"\\\""
< 
< win32 {
<     target.path = Saaghar-Win
<     RESOURCES_PATH = Saaghar-Win
< 
< !static {
<     ##shared libs
<     depFiles.path = Saaghar-Win
<     depFiles.files = $$[QT_INSTALL_BINS]/zlib1.dll \
<         $$[QT_INSTALL_BINS]/libssl32.dll \
<         $$[QT_INSTALL_BINS]/ssleay32.dll
< 
<     phononBackend.path = Saaghar-Win/phonon_backend
<     phononBackend.files = $$[QT_INSTALL_PLUGINS]/phonon_backend/phonon_ds94.dll
< 
<     sqlPlugins.path = Saaghar-Win/sqldrivers
<     imagePlugins.path = Saaghar-Win/imageformats
< 
< isEqual(QT_MAJOR_VERSION, 5) {
<     sqlPlugins.files = $$[QT_INSTALL_PLUGINS]/sqldrivers/qsqlite.dll
< 
<     imagePlugins.files = $$[QT_INSTALL_PLUGINS]/imageformats/qgif.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qico.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qjpeg.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qsvg.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qtiff.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qdds.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qicns.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qtga.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qwbmp.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qwebp.dll \
< 
<     depFiles.files += $$[QT_INSTALL_BINS]/Qt5Core.dll \
<         $$[QT_INSTALL_BINS]/Qt5Gui.dll \
<         $$[QT_INSTALL_BINS]/Qt5Sql.dll \
<         $$[QT_INSTALL_BINS]/Qt5Network.dll \
<         $$[QT_INSTALL_BINS]/Qt5Xml.dll \
<         $$[QT_INSTALL_BINS]/Qt5Widgets.dll \
<         $$[QT_INSTALL_BINS]/Qt5PrintSupport.dll \
<         $$[QT_INSTALL_BINS]/Qt5Multimedia.dll \
<         $$[QT_INSTALL_BINS]/Qt5Svg.dll
< 
<     platformPlugins.path = Saaghar-Win/platforms
<     platformPlugins.files = $$[QT_INSTALL_PLUGINS]/platforms/qwindows.dll
< 
<     mediaservicePlugins.path = Saaghar-Win/mediaservice
<     mediaservicePlugins.files = $$[QT_INSTALL_PLUGINS]/mediaservice/dsengine.dll
< 
<     bearerPlugins.path = Saaghar-Win/bearer
<     bearerPlugins.files = $$[QT_INSTALL_PLUGINS]/bearer/qgenericbearer.dll \
<         $$[QT_INSTALL_PLUGINS]/bearer/qnativewifibearer.dll
< 
<     INSTALLS += platformPlugins \
<         mediaservicePlugins \
<         bearerPlugins
< } else {
<     sqlPlugins.files = $$[QT_INSTALL_PLUGINS]/sqldrivers/qsqlite4.dll
< 
<     imagePlugins.files = $$[QT_INSTALL_PLUGINS]/imageformats/qgif4.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qico4.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qjpeg4.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qmng4.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qsvg4.dll \
<         $$[QT_INSTALL_PLUGINS]/imageformats/qtiff4.dll
< 
<     depFiles.files += $$[QT_INSTALL_BINS]/QtCore4.dll \
<         $$[QT_INSTALL_BINS]/QtGui4.dll \
<         $$[QT_INSTALL_BINS]/QtSql4.dll \
<         $$[QT_INSTALL_BINS]/QtNetwork4.dll \
<         $$[QT_INSTALL_BINS]/QtXml4.dll \
<         $$[QT_INSTALL_BINS]/phonon4.dll
< }
< 
< win32-msvc*{
<     DEFINES += D_MSVC_CC
<     #QTPLUGIN += qsqlite
< 
<     depFiles.files += $$[QT_INSTALL_BINS]/msvcp100.dll \
<         $$[QT_INSTALL_BINS]/msvcr100.dll
< }
< 
< win32-g++{
<     DEFINES += D_MINGW_CC
< 
<     depFiles.files += \
<         # $$[QT_INSTALL_BINS]/mingwm10.dll \
<         $$[QT_INSTALL_BINS]/libgcc_s_dw2-1.dll \
<         $$[QT_INSTALL_BINS]/libstdc++-6.dll \
<         $$[QT_INSTALL_BINS]/libwinpthread-1.dll
< }
< 
<     INSTALLS += depFiles \
<         sqlPlugins \
<         imagePlugins \
<         phononBackend
< } # end !static
< 
<     LIBS += -lzdll
< }
< else {
<     LIBS += -L/usr/lib -lz
< }
< 
< mac {
< ## Should be removed?
< #    CONFIG += link_prl x86
< #    QMAKE_MAC_SDK=/Developer/SDKs/MacOSX10.5.sdk
< #    QMAKE_MACOSX_DEPLOYMENT_TARGET = 10.5
< 
<     target.path = /Applications
<     RESOURCES_PATH = Contents/Resources
< }
< 
< 
< 
< unix:!macx {
<     TARGET = saaghar
< 
< isEmpty( PREFIX ) {
<     PREFIX = /usr
< }
< 
< DEFINES += PREFIX=\\\"$${PREFIX}\\\"
< 
<     DESKTOPDIR = $${PREFIX}/share/applications
<     ICONDIR = $${PREFIX}/share/pixmaps
< 
<     target.path = $${PREFIX}/bin
<     RESOURCES_PATH = $${PREFIX}/share/saaghar
<     desktop.path = $${DESKTOPDIR}
<     icon.path = $${ICONDIR}
< 
<     INSTALLS += desktop icon
< }
< 
< utilities.path = $${RESOURCES_PATH}
< utilities.files += \
<     $$PWD/AUTHORS \
<     $$PWD/CHANGELOG \
<     $$PWD/GPLv3 \
<     $$PWD/GPLv2Fa \
<     $$PWD/README.md \
<     $$PWD/TODO \
<     $$PWD/LICENSE
< 
< include($$PWD/src/src.pri)
< include($$PWD/locale/locale.pri)
< include($$PWD/data/data.pri)
< include($$PWD/doc/doc.pri)
< 
< INSTALLS += target
< 
< mac {
<     QMAKE_BUNDLE_DATA += utilities \
<         backgrounds \
<         classicIcons \
<         lightGrayIcons \
<         iconicCyanIcons
< }
< else {
<     INSTALLS += utilities \
<         backgrounds \
<         classicIcons \
<         lightGrayIcons \
<         iconicCyanIcons
< }
< 
< !build_pass:message("'make install' doesn't overwrite existing 'database file', do that manually!")
---
> TEMPLATE = app
> TARGET = Saaghar
> 
> CONFIG += qt
> 
> 
> CONFIG(debug, debug|release) {
>     !build_pass:message("DEBUG BUILD")
>     DEFINES += SAAGHAR_DEBUG
> } else {
>     !build_pass:message("RELEASE BUILD")
> ##un-comment the following two lines for skipping all warning and debug messages.
> #    DEFINES += QT_NO_WARNING_OUTPUT
> #    DEFINES += QT_NO_DEBUG_OUTPUT
> }
> 
> ##un-comment for static build
> #CONFIG += static
> 
> ##un-comment for support phonon on Qt5, it needs phonon4qt5
> #CONFIG += USE_PHONON4_QT5
> 
> CONFIG(static) {
>     !build_pass:message("STATIC BUILD")
>     DEFINES += STATIC
> }
> 
> isEqual(QT_MAJOR_VERSION, 5) {
>     QT += network widgets printsupport sql xml concurrent
> 
>     DEFINES += MEDIA_PLAYER
> 
> } else {
>     DEFINES += MEDIA_PLAYER
> 
>     QT += sql network xml
> }
> 
> # Git revision
> rev = $$system(sh $$PWD/scripts/getrevision.sh)
> 
> isEmpty(rev) {
>     rev = ""
> }
> 
> !build_pass:message("Git revision: " $$rev)
> 
> DEFINES += GIT_REVISION=\\\"""$$rev"\\\""
> 
> win32 {
>     target.path = Saaghar-Win
>     RESOURCES_PATH = Saaghar-Win
> 
> !static {
>     ##shared libs
>     depFiles.path = Saaghar-Win
>     depFiles.files = $$[QT_INSTALL_BINS]/zlib1.dll \
>         $$[QT_INSTALL_BINS]/libssl32.dll \
>         $$[QT_INSTALL_BINS]/ssleay32.dll
> 
>     phononBackend.path = Saaghar-Win/phonon_backend
>     phononBackend.files = $$[QT_INSTALL_PLUGINS]/phonon_backend/phonon_ds94.dll
> 
>     sqlPlugins.path = Saaghar-Win/sqldrivers
>     imagePlugins.path = Saaghar-Win/imageformats
> 
> isEqual(QT_MAJOR_VERSION, 5) {
>     sqlPlugins.files = $$[QT_INSTALL_PLUGINS]/sqldrivers/qsqlite.dll
> 
>     imagePlugins.files = $$[QT_INSTALL_PLUGINS]/imageformats/qgif.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qico.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qjpeg.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qsvg.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qtiff.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qdds.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qicns.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qtga.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qwbmp.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qwebp.dll \
> 
>     depFiles.files += $$[QT_INSTALL_BINS]/Qt5Core.dll \
>         $$[QT_INSTALL_BINS]/Qt5Gui.dll \
>         $$[QT_INSTALL_BINS]/Qt5Sql.dll \
>         $$[QT_INSTALL_BINS]/Qt5Network.dll \
>         $$[QT_INSTALL_BINS]/Qt5Xml.dll \
>         $$[QT_INSTALL_BINS]/Qt5Widgets.dll \
>         $$[QT_INSTALL_BINS]/Qt5PrintSupport.dll \
>         $$[QT_INSTALL_BINS]/Qt5Multimedia.dll \
>         $$[QT_INSTALL_BINS]/Qt5Svg.dll
> 
>     platformPlugins.path = Saaghar-Win/platforms
>     platformPlugins.files = $$[QT_INSTALL_PLUGINS]/platforms/qwindows.dll
> 
>     mediaservicePlugins.path = Saaghar-Win/mediaservice
>     mediaservicePlugins.files = $$[QT_INSTALL_PLUGINS]/mediaservice/dsengine.dll
> 
>     bearerPlugins.path = Saaghar-Win/bearer
>     bearerPlugins.files = $$[QT_INSTALL_PLUGINS]/bearer/qgenericbearer.dll \
>         $$[QT_INSTALL_PLUGINS]/bearer/qnativewifibearer.dll
> 
>     INSTALLS += platformPlugins \
>         mediaservicePlugins \
>         bearerPlugins
> } else {
>     sqlPlugins.files = $$[QT_INSTALL_PLUGINS]/sqldrivers/qsqlite4.dll
> 
>     imagePlugins.files = $$[QT_INSTALL_PLUGINS]/imageformats/qgif4.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qico4.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qjpeg4.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qmng4.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qsvg4.dll \
>         $$[QT_INSTALL_PLUGINS]/imageformats/qtiff4.dll
> 
>     depFiles.files += $$[QT_INSTALL_BINS]/QtCore4.dll \
>         $$[QT_INSTALL_BINS]/QtGui4.dll \
>         $$[QT_INSTALL_BINS]/QtSql4.dll \
>         $$[QT_INSTALL_BINS]/QtNetwork4.dll \
>         $$[QT_INSTALL_BINS]/QtXml4.dll \
>         $$[QT_INSTALL_BINS]/phonon4.dll
> }
> 
> win32-msvc*{
>     DEFINES += D_MSVC_CC
>     #QTPLUGIN += qsqlite
> 
>     depFiles.files += $$[QT_INSTALL_BINS]/msvcp100.dll \
>         $$[QT_INSTALL_BINS]/msvcr100.dll
> }
> 
> win32-g++{
>     DEFINES += D_MINGW_CC
> 
>     depFiles.files += \
>         # $$[QT_INSTALL_BINS]/mingwm10.dll \
>         $$[QT_INSTALL_BINS]/libgcc_s_dw2-1.dll \
>         $$[QT_INSTALL_BINS]/libstdc++-6.dll \
>         $$[QT_INSTALL_BINS]/libwinpthread-1.dll
> }
> 
>     INSTALLS += depFiles \
>         sqlPlugins \
>         imagePlugins \
>         phononBackend
> } # end !static
> 
>     LIBS += -lzdll
> }
> else {
>     LIBS += -L/usr/lib -lz
> }
> 
> mac {
> ## Should be removed?
> #    CONFIG += link_prl x86
> #    QMAKE_MAC_SDK=/Developer/SDKs/MacOSX10.5.sdk
> #    QMAKE_MACOSX_DEPLOYMENT_TARGET = 10.5
> 
>     target.path = /Applications
>     RESOURCES_PATH = Contents/Resources
> }
> 
> 
> 
> unix:!macx {
>     TARGET = saaghar
> 
> isEmpty( PREFIX ) {
>     PREFIX = /usr
> }
> 
> DEFINES += PREFIX=\\\"$${PREFIX}\\\"
> 
>     DESKTOPDIR = $${PREFIX}/share/applications
>     ICONDIR = $${PREFIX}/share/pixmaps
> 
>     target.path = $${PREFIX}/bin
>     RESOURCES_PATH = $${PREFIX}/share/saaghar
>     desktop.path = $${DESKTOPDIR}
>     icon.path = $${ICONDIR}
> 
>     INSTALLS += desktop icon
> }
> 
> utilities.path = $${RESOURCES_PATH}
> utilities.files += \
>     $$PWD/AUTHORS \
>     $$PWD/CHANGELOG \
>     $$PWD/GPLv3 \
>     $$PWD/GPLv2Fa \
>     $$PWD/README.md \
>     $$PWD/TODO \
>     $$PWD/LICENSE
> 
> include($$PWD/src/src.pri)
> include($$PWD/locale/locale.pri)
> include($$PWD/data/data.pri)
> include($$PWD/doc/doc.pri)
> 
> INSTALLS += target
> 
> mac {
>     QMAKE_BUNDLE_DATA += utilities \
>         backgrounds \
>         classicIcons \
>         lightGrayIcons \
>         iconicCyanIcons
> }
> else {
>     INSTALLS += utilities \
>         backgrounds \
>         classicIcons \
>         lightGrayIcons \
>         iconicCyanIcons
> }
> 
> !build_pass:message("'make install' doesn't overwrite existing 'database file', do that manually!")
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/scripts/apply_pngcrush.bat lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/scripts/apply_pngcrush.bat
1,25c1,25
< @echo off
< 
< set SAAGHAR_SRC=".."
< set PNG_CRUSH="pngcrush.exe"
< 
< pushd %SAAGHAR_SRC%
< for /r %%x in (*.png) do call :convert %%x %%~nx
< 
< GOTO :finish
< 
< :convert
< set inFile="%~1"
< set inFileName="%~2.png"
< set tempFile="%~1.2"
< echo ~~~~~~~~~~~~~~~~~~~~
< echo %inFile%
< echo %tempFile%
< echo ~~~~~~~~~~~~~~~~~~~~
< 
< %PNG_CRUSH% %inFile% %tempFile%
< del %inFile%
< rename %tempFile% %inFileName%
< 
< :finish
< 
---
> @echo off
> 
> set SAAGHAR_SRC=".."
> set PNG_CRUSH="pngcrush.exe"
> 
> pushd %SAAGHAR_SRC%
> for /r %%x in (*.png) do call :convert %%x %%~nx
> 
> GOTO :finish
> 
> :convert
> set inFile="%~1"
> set inFileName="%~2.png"
> set tempFile="%~1.2"
> echo ~~~~~~~~~~~~~~~~~~~~
> echo %inFile%
> echo %tempFile%
> echo ~~~~~~~~~~~~~~~~~~~~
> 
> %PNG_CRUSH% %inFile% %tempFile%
> del %inFile%
> rename %tempFile% %inFileName%
> 
> :finish
> 
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/scripts/getrevision.sh lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/scripts/getrevision.sh
1,22c1,22
< #!/bin/bash
< ## copied from QupZilla project
< 
< REV=""
< 
< if [ -e "/usr/bin/git" ] && ([ -e ".git" ] || [ -e "../.git" ]); then
<     REV=`git show-ref refs/heads/master | cut -d " " -f 1`
< elif [ -e "git_revision" ]; then
<     REV=`cat git_revision`
< fi
< 
< case $1 in
<     long)
<         echo $REV
<         ;;
< 
<     short|*)
<         echo $REV | cut -c 1-10
<         ;;
< esac
< 
< exit 0
---
> #!/bin/bash
> ## copied from QupZilla project
> 
> REV=""
> 
> if [ -e "/usr/bin/git" ] && ([ -e ".git" ] || [ -e "../.git" ]); then
>     REV=`git show-ref refs/heads/master | cut -d " " -f 1`
> elif [ -e "git_revision" ]; then
>     REV=`cat git_revision`
> fi
> 
> case $1 in
>     long)
>         echo $REV
>         ;;
> 
>     short|*)
>         echo $REV | cut -c 1-10
>         ;;
> esac
> 
> exit 0
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/aboutdialog.cpp lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/aboutdialog.cpp
1,149c1,149
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2016 by S. Razi Alavizadeh                               *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< 
< #include "aboutdialog.h"
< #include "ui_aboutdialog.h"
< #include "version.h"
< 
< #include <QBitmap>
< #include <QDebug>
< 
< AboutDialog::AboutDialog(QWidget* parent)
<     : QDialog(parent, Qt::Window | Qt::FramelessWindowHint)
<     , ui(new Ui::AboutDialog)
< {
<     setWindowTitle(tr("About Saaghar"));
< 
<     ui->setupUi(this);
< 
<     QPixmap pixmap(":/resources/images/saaghar-about.png");
<     pixmap = pixmap.scaled(550, 550, Qt::IgnoreAspectRatio, Qt::SmoothTransformation);
<     setFixedSize(pixmap.size());
< 
<     QPalette p(palette());
<     p.setBrush(QPalette::Window, QBrush(pixmap));
< 
<     setPalette(p);
<     setMask(pixmap.mask());
< 
<     QFont fnt(ui->textBrowser->font());
<     fnt.setPixelSize(qMax(18, fnt.pixelSize()));
<     ui->textBrowser->setFont(fnt);
<     ui->textBrowser->setStyleSheet("\
<                                  QTextEdit{text-decoration: none; border: transparent;\
<                                            background-image:url(\":/resources/images/semi-white.png\");\
<                                  }\
<                                  QScrollBar:vertical {\
<                                      border: none;\
<                                      background: transparent;\
<                                      width: 13px;\
<                                  }\
<                                  QScrollBar::handle:vertical {\
<                                      border: none;\
<                                      background: #bebebe;\
<                                      min-height: 20px;\
<                                  }\
<                                  QScrollBar::add-line:vertical {\
<                                      height: 0px;\
<                                  }\
<                                  \
<                                  QScrollBar::sub-line:vertical {\
<                                      height: 0px;\
<                                  }\
<                                  \
<                                  QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\
<                                      background: none;\
<                                  }\
<                                  \
<                                  QScrollBar:vertical:hover {\
<                                      background: transparent;\
<                                  }\
<                                  QScrollBar::handle:vertical:hover {\
<                                      background: #aaa;\
<                                  }\
<                                  ");
< 
<     ui->closeLabel->setStyleSheet("QWidget {padding-top: 7px; border: transparent; background-image:url(\":/resources/images/semi-white.png\");}");
<     ui->closeLabel->setText("<a style=\"color: #07F; text-decoration:none;\" href=#CLOSE>CLOSE</a>");
< 
<     QString gitRevision = GIT_REVISION;
<     if (!gitRevision.isEmpty()) {
<         gitRevision = tr("Revision: %1<br />").arg(gitRevision);
<     }
< 
<     const QString listItem = QString("<li>%1</li>");
<     QString relatedPages;
<     relatedPages += listItem.arg(tr("Telegram Channel: ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"https://telegram.me/Saaghar\">@Saaghar</a>");
<     relatedPages += listItem.arg(tr("Telegram Bot: ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"https://telegram.me/SaagharBot\">@SaagharBot</a>");
< 
<     relatedPages += listItem.arg(tr("Site (English): ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"http://en.saaghar.pozh.org/\">en.saaghar.pozh.org</a>");
<     relatedPages += listItem.arg(tr("Site (Persian): ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"http://saaghar.pozh.org/\">saaghar.pozh.org</a>");
<     relatedPages += listItem.arg(tr("Mailing List: ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"http://groups.google.com/group/saaghar/\">" + tr("Saaghar Google Group") + "</a>");
<     relatedPages += listItem.arg(tr("Facebook Page: ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"http://www.facebook.com/saaghar.p/\">" + "saaghar.p" + "</a>");
< 
<     QString speceialThanks;
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://www.phototak.com/\">" + tr("Nasser Alavizadeh") + "</a> " + tr("(Logo Idea/Design)"));
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://www.gozir.com/\">" + tr("Hamid Reza Mohammadi") + "</a> " + tr("(Ganjoor Founder)"));
< 
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://hedayatvk.blogspot.com/\">" + tr("Hedayat Vatankhah") + "</a> " + tr("(Fedora/MeeGo Package)"));
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://fzero.rubi.gd/\">" + tr("Forud A") + "</a> " + tr("(Arch Package)"));
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" >" + tr("Javad Kouhi") + "</a> " + tr("(BSD Port)"));
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://www.novid.ir/\">" + tr("Novid") + "</a> " + tr("(Ubuntu Package)"));
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"https://wiki.ubuntu.ir/danialbehzadi\">" + tr("Danial Behzadi") + "</a> " + tr("(Ubuntu Package)"));
< 
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" >" + tr("Siyvash Kiani") + "</a> " + tr("(Expert Assistance in Literature)"));
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://homayounshajarian.blogfa.com/\">" + tr("Sahand Soltandoost") + "</a> " + tr("(Light-Gray Iconset)"));
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://www.useiconic.com/open/\">" + tr("Open Iconic Project") + "</a> " + tr("(Iconic-Cyan Iconset, <i>modified version</i>)"));
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"https://www.qt.io/ide/\">" + tr("Qt Creator Team") + "</a> " + tr("(Code of Tasks Notification)"));
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"https://sourceforge.net/projects/qiron/files/\">" + tr("QIron Developer") + "</a> " + tr("(Code of BreadCrumbBar)"));
<     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"https://ganjoor.net/\">" + tr("All Ganjoor Project Contributors") + "</a> " + tr("(Persian-Datasets/Audio)"));
< 
< 
<     const QString noWarranty = tr("<br /><br />This program is distributed in the hope that it will be useful,"
<                                   " but WITHOUT ANY WARRANTY; without even the implied warranty of"
<                                   " MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.");
< 
<     setText(tr("<h3>Saaghar %1</h3>%2Build Time: %3<br /><br />"
<                "%4 is a Persian poem viewer software written using Qt (C++)."
<                " It uses %5 database for Persian poems."
<                "<br /><br />%6"
<                "<h4>Related Pages:</h4>%7"
<                "<h4>Special Thanks to:</h4>%8%9")
<             .arg(SAAGHAR_VERSION).arg(gitRevision).arg(BUILD_TIME)
<             .arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://saaghar.pozh.org\">" + tr("Saaghar") + "</a>")
<             .arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://ganjoor.net/\">" + tr("Ganjoor") + "</a>")
<             .arg(tr("Copyright 2010-2016 %1. All right reserved.").arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://pozh.org/\">" + tr("Razi Alavizadeh") + "</a>"))
<             .arg(QString("<ul>%1</ul>").arg(relatedPages))
<             .arg(QString("<ul>%1</ul>").arg(speceialThanks))
<             .arg(noWarranty));
< 
<     connect(ui->closeLabel, SIGNAL(linkActivated(QString)), this, SLOT(accept()));
< }
< 
< AboutDialog::~AboutDialog()
< {
<     delete ui;
< }
< 
< void AboutDialog::setText(const QString &text)
< {
<     ui->textBrowser->setText(text);
< }
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2016 by S. Razi Alavizadeh                               *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> 
> #include "aboutdialog.h"
> #include "ui_aboutdialog.h"
> #include "version.h"
> 
> #include <QBitmap>
> #include <QDebug>
> 
> AboutDialog::AboutDialog(QWidget* parent)
>     : QDialog(parent, Qt::Window | Qt::FramelessWindowHint)
>     , ui(new Ui::AboutDialog)
> {
>     setWindowTitle(tr("About Saaghar"));
> 
>     ui->setupUi(this);
> 
>     QPixmap pixmap(":/resources/images/saaghar-about.png");
>     pixmap = pixmap.scaled(550, 550, Qt::IgnoreAspectRatio, Qt::SmoothTransformation);
>     setFixedSize(pixmap.size());
> 
>     QPalette p(palette());
>     p.setBrush(QPalette::Window, QBrush(pixmap));
> 
>     setPalette(p);
>     setMask(pixmap.mask());
> 
>     QFont fnt(ui->textBrowser->font());
>     fnt.setPixelSize(qMax(18, fnt.pixelSize()));
>     ui->textBrowser->setFont(fnt);
>     ui->textBrowser->setStyleSheet("\
>                                  QTextEdit{text-decoration: none; border: transparent;\
>                                            background-image:url(\":/resources/images/semi-white.png\");\
>                                  }\
>                                  QScrollBar:vertical {\
>                                      border: none;\
>                                      background: transparent;\
>                                      width: 13px;\
>                                  }\
>                                  QScrollBar::handle:vertical {\
>                                      border: none;\
>                                      background: #bebebe;\
>                                      min-height: 20px;\
>                                  }\
>                                  QScrollBar::add-line:vertical {\
>                                      height: 0px;\
>                                  }\
>                                  \
>                                  QScrollBar::sub-line:vertical {\
>                                      height: 0px;\
>                                  }\
>                                  \
>                                  QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\
>                                      background: none;\
>                                  }\
>                                  \
>                                  QScrollBar:vertical:hover {\
>                                      background: transparent;\
>                                  }\
>                                  QScrollBar::handle:vertical:hover {\
>                                      background: #aaa;\
>                                  }\
>                                  ");
> 
>     ui->closeLabel->setStyleSheet("QWidget {padding-top: 7px; border: transparent; background-image:url(\":/resources/images/semi-white.png\");}");
>     ui->closeLabel->setText("<a style=\"color: #07F; text-decoration:none;\" href=#CLOSE>CLOSE</a>");
> 
>     QString gitRevision = GIT_REVISION;
>     if (!gitRevision.isEmpty()) {
>         gitRevision = tr("Revision: %1<br />").arg(gitRevision);
>     }
> 
>     const QString listItem = QString("<li>%1</li>");
>     QString relatedPages;
>     relatedPages += listItem.arg(tr("Telegram Channel: ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"https://telegram.me/Saaghar\">@Saaghar</a>");
>     relatedPages += listItem.arg(tr("Telegram Bot: ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"https://telegram.me/SaagharBot\">@SaagharBot</a>");
> 
>     relatedPages += listItem.arg(tr("Site (English): ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"http://en.saaghar.pozh.org/\">en.saaghar.pozh.org</a>");
>     relatedPages += listItem.arg(tr("Site (Persian): ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"http://saaghar.pozh.org/\">saaghar.pozh.org</a>");
>     relatedPages += listItem.arg(tr("Mailing List: ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"http://groups.google.com/group/saaghar/\">" + tr("Saaghar Google Group") + "</a>");
>     relatedPages += listItem.arg(tr("Facebook Page: ") + "<a style=\"color: #07F; text-decoration:none;\" href=\"http://www.facebook.com/saaghar.p/\">" + "saaghar.p" + "</a>");
> 
>     QString speceialThanks;
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://www.phototak.com/\">" + tr("Nasser Alavizadeh") + "</a> " + tr("(Logo Idea/Design)"));
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://www.gozir.com/\">" + tr("Hamid Reza Mohammadi") + "</a> " + tr("(Ganjoor Founder)"));
> 
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://hedayatvk.blogspot.com/\">" + tr("Hedayat Vatankhah") + "</a> " + tr("(Fedora/MeeGo Package)"));
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://fzero.rubi.gd/\">" + tr("Forud A") + "</a> " + tr("(Arch Package)"));
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" >" + tr("Javad Kouhi") + "</a> " + tr("(BSD Port)"));
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://www.novid.ir/\">" + tr("Novid") + "</a> " + tr("(Ubuntu Package)"));
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"https://wiki.ubuntu.ir/danialbehzadi\">" + tr("Danial Behzadi") + "</a> " + tr("(Ubuntu Package)"));
> 
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" >" + tr("Siyvash Kiani") + "</a> " + tr("(Expert Assistance in Literature)"));
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://homayounshajarian.blogfa.com/\">" + tr("Sahand Soltandoost") + "</a> " + tr("(Light-Gray Iconset)"));
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://www.useiconic.com/open/\">" + tr("Open Iconic Project") + "</a> " + tr("(Iconic-Cyan Iconset, <i>modified version</i>)"));
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"https://www.qt.io/ide/\">" + tr("Qt Creator Team") + "</a> " + tr("(Code of Tasks Notification)"));
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"https://sourceforge.net/projects/qiron/files/\">" + tr("QIron Developer") + "</a> " + tr("(Code of BreadCrumbBar)"));
>     speceialThanks += listItem.arg("<a style=\"color: #07F; text-decoration:none;\" href=\"https://ganjoor.net/\">" + tr("All Ganjoor Project Contributors") + "</a> " + tr("(Persian-Datasets/Audio)"));
> 
> 
>     const QString noWarranty = tr("<br /><br />This program is distributed in the hope that it will be useful,"
>                                   " but WITHOUT ANY WARRANTY; without even the implied warranty of"
>                                   " MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.");
> 
>     setText(tr("<h3>Saaghar %1</h3>%2Build Time: %3<br /><br />"
>                "%4 is a Persian poem viewer software written using Qt (C++)."
>                " It uses %5 database for Persian poems."
>                "<br /><br />%6"
>                "<h4>Related Pages:</h4>%7"
>                "<h4>Special Thanks to:</h4>%8%9")
>             .arg(SAAGHAR_VERSION).arg(gitRevision).arg(BUILD_TIME)
>             .arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://saaghar.pozh.org\">" + tr("Saaghar") + "</a>")
>             .arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://ganjoor.net/\">" + tr("Ganjoor") + "</a>")
>             .arg(tr("Copyright 2010-2016 %1. All right reserved.").arg("<a style=\"color: #07F; text-decoration:none;\" href=\"http://pozh.org/\">" + tr("Razi Alavizadeh") + "</a>"))
>             .arg(QString("<ul>%1</ul>").arg(relatedPages))
>             .arg(QString("<ul>%1</ul>").arg(speceialThanks))
>             .arg(noWarranty));
> 
>     connect(ui->closeLabel, SIGNAL(linkActivated(QString)), this, SLOT(accept()));
> }
> 
> AboutDialog::~AboutDialog()
> {
>     delete ui;
> }
> 
> void AboutDialog::setText(const QString &text)
> {
>     ui->textBrowser->setText(text);
> }
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/aboutdialog.h lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/aboutdialog.h
1,46c1,46
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2016 by S. Razi Alavizadeh                               *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< 
< #ifndef ABOUTDIALOG_H
< #define ABOUTDIALOG_H
< 
< #include <QDialog>
< 
< namespace Ui
< {
< class AboutDialog;
< }
< 
< class AboutDialog : public QDialog
< {
<     Q_OBJECT
< 
< public:
<     explicit AboutDialog(QWidget* parent = 0);
<     ~AboutDialog();
< 
<     void setText(const QString &text);
< 
< private:
<     Ui::AboutDialog* ui;
< };
< 
< #endif // ABOUTDIALOG_H
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2016 by S. Razi Alavizadeh                               *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> 
> #ifndef ABOUTDIALOG_H
> #define ABOUTDIALOG_H
> 
> #include <QDialog>
> 
> namespace Ui
> {
> class AboutDialog;
> }
> 
> class AboutDialog : public QDialog
> {
>     Q_OBJECT
> 
> public:
>     explicit AboutDialog(QWidget* parent = 0);
>     ~AboutDialog();
> 
>     void setText(const QString &text);
> 
> private:
>     Ui::AboutDialog* ui;
> };
> 
> #endif // ABOUTDIALOG_H
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/aboutdialog.ui lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/aboutdialog.ui
1,69c1,69
< <?xml version="1.0" encoding="UTF-8"?>
< <ui version="4.0">
<  <class>AboutDialog</class>
<  <widget class="QDialog" name="AboutDialog">
<   <property name="geometry">
<    <rect>
<     <x>0</x>
<     <y>0</y>
<     <width>512</width>
<     <height>512</height>
<    </rect>
<   </property>
<   <property name="sizePolicy">
<    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
<     <horstretch>0</horstretch>
<     <verstretch>0</verstretch>
<    </sizepolicy>
<   </property>
<   <property name="windowTitle">
<    <string>About Saaghar</string>
<   </property>
<   <layout class="QGridLayout" name="gridLayout">
<    <property name="leftMargin">
<     <number>40</number>
<    </property>
<    <property name="topMargin">
<     <number>40</number>
<    </property>
<    <property name="rightMargin">
<     <number>40</number>
<    </property>
<    <property name="bottomMargin">
<     <number>33</number>
<    </property>
<    <property name="spacing">
<     <number>0</number>
<    </property>
<    <item row="0" column="0">
<     <widget class="QTextBrowser" name="textBrowser">
<      <property name="textInteractionFlags">
<       <set>Qt::LinksAccessibleByKeyboard|Qt::LinksAccessibleByMouse</set>
<      </property>
<      <property name="openExternalLinks">
<       <bool>true</bool>
<      </property>
<     </widget>
<    </item>
<    <item row="1" column="0">
<     <widget class="QLabel" name="closeLabel">
<      <property name="font">
<       <font>
<        <pointsize>14</pointsize>
<        <weight>75</weight>
<        <bold>true</bold>
<       </font>
<      </property>
<      <property name="text">
<       <string>Close</string>
<      </property>
<      <property name="alignment">
<       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
<      </property>
<     </widget>
<    </item>
<   </layout>
<  </widget>
<  <resources/>
<  <connections/>
< </ui>
---
> <?xml version="1.0" encoding="UTF-8"?>
> <ui version="4.0">
>  <class>AboutDialog</class>
>  <widget class="QDialog" name="AboutDialog">
>   <property name="geometry">
>    <rect>
>     <x>0</x>
>     <y>0</y>
>     <width>512</width>
>     <height>512</height>
>    </rect>
>   </property>
>   <property name="sizePolicy">
>    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
>     <horstretch>0</horstretch>
>     <verstretch>0</verstretch>
>    </sizepolicy>
>   </property>
>   <property name="windowTitle">
>    <string>About Saaghar</string>
>   </property>
>   <layout class="QGridLayout" name="gridLayout">
>    <property name="leftMargin">
>     <number>40</number>
>    </property>
>    <property name="topMargin">
>     <number>40</number>
>    </property>
>    <property name="rightMargin">
>     <number>40</number>
>    </property>
>    <property name="bottomMargin">
>     <number>33</number>
>    </property>
>    <property name="spacing">
>     <number>0</number>
>    </property>
>    <item row="0" column="0">
>     <widget class="QTextBrowser" name="textBrowser">
>      <property name="textInteractionFlags">
>       <set>Qt::LinksAccessibleByKeyboard|Qt::LinksAccessibleByMouse</set>
>      </property>
>      <property name="openExternalLinks">
>       <bool>true</bool>
>      </property>
>     </widget>
>    </item>
>    <item row="1" column="0">
>     <widget class="QLabel" name="closeLabel">
>      <property name="font">
>       <font>
>        <pointsize>14</pointsize>
>        <weight>75</weight>
>        <bold>true</bold>
>       </font>
>      </property>
>      <property name="text">
>       <string>Close</string>
>      </property>
>      <property name="alignment">
>       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
>      </property>
>     </widget>
>    </item>
>   </layout>
>  </widget>
>  <resources/>
>  <connections/>
> </ui>
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/bookmarks.cpp lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/bookmarks.cpp
1,520c1,520
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  * Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).       *
<  * All rights reserved.                                                    *
<  * Contact: Nokia Corporation (qt-info@nokia.com)                          *
<  *                                                                         *
<  * This file is part of the examples of the Qt Toolkit.                    *
<  *                                                                         *
<  * $QT_BEGIN_LICENSE:BSD$                                                  *
<  * You may use this file under the terms of the BSD license as follows:    *
<  *                                                                         *
<  * "Redistribution and use in source and binary forms, with or without     *
<  * modification, are permitted provided that the following conditions are  *
<  * met:                                                                    *
<  *   * Redistributions of source code must retain the above copyright      *
<  *     notice, this list of conditions and the following disclaimer.       *
<  *   * Redistributions in binary form must reproduce the above copyright   *
<  *     notice, this list of conditions and the following disclaimer in     *
<  *     the documentation and/or other materials provided with the          *
<  *     distribution.                                                       *
<  *   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor  *
<  *     the names of its contributors may be used to endorse or promote     *
<  *     products derived from this software without specific prior written  *
<  *     permission.                                                         *
<  *                                                                         *
<  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS     *
<  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT       *
<  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR   *
<  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT    *
<  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   *
<  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        *
<  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   *
<  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   *
<  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     *
<  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   *
<  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."   *
<  * $QT_END_LICENSE$                                                        *
<  *                                                                         *
<  ***************************************************************************/
< 
< #include <QMessageBox>
< #include <QHeaderView>
< #include <QDebug>
< 
< #include "bookmarks.h"
< #include "settings.h"
< #include "tools.h"
< 
< const int ID_DATA = Qt::UserRole + 1;
< 
< Bookmarks::Bookmarks(QWidget* parent)
<     : QTreeWidget(parent)
< {
<     setLayoutDirection(Qt::RightToLeft);
<     setTextElideMode(Qt::ElideMiddle);
< #ifdef Q_OS_WIN
<     setIndentation(10);
< #endif
<     QStringList labels;
<     labels << tr("Title") << tr("Comments");
< #if QT_VERSION < 0x050000
<     header()->setResizeMode(QHeaderView::Interactive);
< #else
<     header()->setSectionResizeMode(QHeaderView::Interactive);
< #endif
<     setHeaderLabels(labels);
< 
<     m_folderIcon.addPixmap(style()->standardPixmap(QStyle::SP_DirClosedIcon),
<                            QIcon::Normal, QIcon::Off);
<     m_folderIcon.addPixmap(style()->standardPixmap(QStyle::SP_DirOpenIcon),
<                            QIcon::Normal, QIcon::On);
< 
<     m_bookmarkIcon.addPixmap(QPixmap(ICON_FILE("bookmark-on")));
< 
<     setAlternatingRowColors(true);
< 
<     connect(this, SIGNAL(itemDoubleClicked(QTreeWidgetItem*,int)), this, SLOT(doubleClicked(QTreeWidgetItem*,int)));
< }
< 
< bool Bookmarks::read(QIODevice* device)
< {
<     QString errorStr;
<     int errorLine;
<     int errorColumn;
< 
<     if (!m_domDocument.setContent(device, true, &errorStr, &errorLine, &errorColumn)) {
<         qDebug() << QString("Parse error at line %1, column %2:\n%3").arg(errorLine).arg(errorColumn).arg(errorStr);
<         return false;
<     }
< 
<     QDomElement root = m_domDocument.documentElement();
<     if (root.tagName() != "xbel") {
<         qDebug() << "The file is not an XBEL file.";
<         return false;
<     }
<     else if (root.hasAttribute("version") && root.attribute("version") != "1.0") {
<         qDebug() << "The file is not an XBEL version 1.0 file.";
<         return false;
<     }
< 
<     clear();
< 
<     disconnect(this, SIGNAL(itemChanged(QTreeWidgetItem*,int)),
<                this, SLOT(updateDomElement(QTreeWidgetItem*,int)));
< 
<     QDomElement child = root.firstChildElement("folder");
<     while (!child.isNull()) {
<         parseFolderElement(child);
<         child = child.nextSiblingElement("folder");
<     }
< 
<     resizeColumnToContents(0);
<     resizeColumnToContents(1);
< 
<     connect(this, SIGNAL(itemChanged(QTreeWidgetItem*,int)),
<             this, SLOT(updateDomElement(QTreeWidgetItem*,int)));
< 
<     return true;
< }
< 
< bool Bookmarks::write(QIODevice* device)
< {
<     const int IndentSize = 4;
< 
<     QTextStream out(device);
<     out.setCodec("utf-8");
<     QString domString = m_domDocument.toString(IndentSize);
<     domString = domString.replace("&#xd;", "");
<     out << domString;
<     return true;
< }
< 
< void Bookmarks::updateDomElement(QTreeWidgetItem* item, int column)
< {
<     QDomElement element = m_domElementForItem.value(item);
<     if (!element.isNull()) {
<         if (column == 0) {
<             QDomElement oldTitleElement = element.firstChildElement("title");
<             QDomElement newTitleElement = m_domDocument.createElement("title");
< 
<             QDomText newTitleText = m_domDocument.createTextNode(item->text(0));
<             newTitleElement.appendChild(newTitleText);
< 
<             element.replaceChild(newTitleElement, oldTitleElement);
<         }
<         else {
<             if (element.tagName() == "bookmark") {
<                 QDomElement oldDescElement = element.firstChildElement("desc");
<                 QDomElement newDescElement = m_domDocument.createElement("desc");
<                 QDomText newDesc = m_domDocument.createTextNode(item->text(1));//setAttribute("href", item->text(1));
<                 newDescElement.appendChild(newDesc);
<                 element.replaceChild(newDescElement, oldDescElement);
<                 element.setAttribute("href", item->data(1, Qt::UserRole).toString());
<             }
<         }
<     }
< }
< 
< void Bookmarks::parseFolderElement(const QDomElement &element,
<                                    QTreeWidgetItem* parentItem, const QString &/*elementID*/)
< {
<     QDomElement parentElement(element);
<     QString id = "";
<     if (parentElement.tagName() == "folder") {
<         //old files that their 'folder' tag don't use 'id' attribute
<         // just contain 'folder' tag of type 'Verses'!
<         id = parentElement.attribute("id", "Verses");
<         parentElement.setAttribute("id", id);
<     }
< 
<     QTreeWidgetItem* item = createItem(parentElement, parentItem, id);
< 
<     QString title;
<     if (id == "Verses") {
<         title = tr("Verses");
<     }
<     else {
<         title = element.firstChildElement("title").text();
<     }
<     if (title.isEmpty()) {
<         title = QObject::tr("Folder");
<     }
< 
<     item->setIcon(0, m_folderIcon);
<     item->setText(0, title);
<     item->setToolTip(0, title);
< 
<     bool folded = (parentElement.attribute("folded") != "no");
<     setItemExpanded(item, !folded);
< 
<     QDomElement child = parentElement.firstChildElement();
<     while (!child.isNull()) {
<         if (child.tagName() == "folder") {
< //TODO: we can save labguage within a 'metadata' tag of this 'folder'
< //          //update node title by new loaded translation
<             QString id = child.attribute("id");
<             QString title = child.firstChildElement("title").text();
< 
<             if (id.isEmpty()) {
<                 //old files that their 'folder' tags don't use 'id' attribute just contain 'folder' tags of type 'Verses'!
<                 id = "Verses";
<                 title = tr(title.toLocal8Bit().data());
<                 QDomElement oldTitleElement = child.firstChildElement("title");
<                 QDomElement newTitleElement = m_domDocument.createElement("title");
<                 QDomText newTitleText = m_domDocument.createTextNode(tr("Verses"));
<                 newTitleElement.appendChild(newTitleText);
< 
<                 child.replaceChild(newTitleElement, oldTitleElement);
<                 child.setAttribute("id", "Verses");
<             }
<             parseFolderElement(child, item, id);
<         }
<         else if (child.tagName() == "bookmark") {
<             QTreeWidgetItem* childItem = createItem(child, item);
< 
<             QString title = child.firstChildElement("title").text();
<             if (title.isEmpty()) {
<                 title = QObject::tr("Folder");
<             }
< 
<             QDomElement infoChild = child.firstChildElement("info");
<             QDomElement metaData = infoChild.firstChildElement("metadata");
<             while (!metaData.isNull()) {
<                 QString owner = metaData.attribute("owner");
<                 if (owner == "http://saaghar.pozh.org") {
<                     break;
<                 }
<                 metaData = metaData.nextSiblingElement("metadata");
<             }
<             if (!metaData.isNull() && metaData.attribute("owner") == "http://saaghar.pozh.org") {
<                 childItem->setData(0, Qt::UserRole, metaData.text());
<             }
<             else {
<                 qDebug() << "This DOM-NODE SHOULD deleted--->" << title;
<             }
<             //href data URL data
<             childItem->setData(1, Qt::UserRole, child.attribute("href", "http://saaghar.pozh.org"));
<             childItem->setIcon(0, m_bookmarkIcon);
<             childItem->setText(0, title);
<             childItem->setToolTip(0, title);
<             childItem->setText(1, child.firstChildElement("desc").text());
<             childItem->setToolTip(1, child.firstChildElement("desc").text());
<         }
<         else if (child.tagName() == "separator") {
<             QTreeWidgetItem* childItem = createItem(child, item);
<             childItem->setFlags(item->flags() & ~(Qt::ItemIsSelectable | Qt::ItemIsEditable));
<             childItem->setText(0, QString(30, 0xB7));
<         }
<         child = child.nextSiblingElement();
<     }
< }
< 
< QTreeWidgetItem* Bookmarks::createItem(const QDomElement &element,
<                                        QTreeWidgetItem* parentItem, const QString &elementID)
< {
<     QTreeWidgetItem* item;
<     if (parentItem) {
<         item = new QTreeWidgetItem(parentItem);
<     }
<     else {
<         item = new QTreeWidgetItem(this);
<     }
< 
<     if (!elementID.isEmpty()) {
<         item->setData(0, ID_DATA, elementID);
<     }
<     m_domElementForItem.insert(item, element);
<     return item;
< }
< 
< QDomElement Bookmarks::findChildNode(const QString &tagName, const QString &type)
< {
<     QDomElement n = m_domDocument.documentElement().firstChildElement(tagName);
<     while (!n.isNull()) {
<         //old files that their 'folder' tags don't use 'id' attribute just contain 'folder' tags of type 'Verses'!
<         QString id = n.attribute("id", "Verses");
<         if (id == type) {
<             break;
<         }
< 
<         QDomElement e = n.toElement();
<         n = n.nextSiblingElement(tagName);
<     }
<     return n;
< }
< 
< QStringList Bookmarks::bookmarkList(const QString &type)
< {
<     QStringList bookmarkedItemList;
<     if (type == "Verses" || type == tr("Verses")) {
<         QDomElement verseNode = findChildNode("folder", "Verses");
<         if (!verseNode.isNull()) {
<             QTreeWidgetItem* versesParentItem = m_domElementForItem.key(verseNode);
<             if (versesParentItem) {
<                 int countOfChildren = versesParentItem->childCount();
<                 for (int i = 0; i < countOfChildren; ++i) {
<                     QTreeWidgetItem* child = versesParentItem->child(i);
<                     if (child) {
<                         bookmarkedItemList << versesParentItem->child(i)->data(0, Qt::UserRole).toString();
<                     }
<                 }
<             }
<         }
<     }
< 
<     return bookmarkedItemList;
< }
< 
< bool Bookmarks::updateBookmarkState(const QString &type, const QVariant &data, bool state)
< {
<     if (type == "Verses" || type == tr("Verses")) {
<         QDomElement verseNode = findChildNode("folder", "Verses");
<         if (verseNode.isNull()) {
<             QDomElement root = m_domDocument.createElement("folder");
<             QDomElement child = m_domDocument.createElement("title");
<             QDomText newTitleText = m_domDocument.createTextNode(tr("Verses"));
<             root.setAttribute("folded", "no");
<             child.appendChild(newTitleText);
<             root.appendChild(child);
<             m_domDocument.documentElement().appendChild(root);
<             verseNode = root;
<             parseFolderElement(root);
<         }
< 
<         QTreeWidgetItem* parentItem = m_domElementForItem.key(verseNode);
<         //REMOVE OPERATION
<         if (!state) {
<             int countOfChildren = parentItem->childCount();
<             int numOfDel = 0;
<             bool allMatchedRemoved = true;
<             for (int i = 0; i < countOfChildren; ++i) {
<                 QTreeWidgetItem* childItem = parentItem->child(i);
<                 if (!childItem) {
<                     continue;
<                 }
< 
<                 if (childItem->data(0, Qt::UserRole).toString() == data.toStringList().at(0) + "|" + data.toStringList().at(1)) {
<                     ++numOfDel;
< 
<                     if (unBookmarkItem(childItem)) {
<                         --i; //because one of children was deleted
<                         --countOfChildren;
<                     }
<                     else {
<                         allMatchedRemoved = false;
<                     }
<                 }
<             }
< 
<             //allMatchedRemoved is false when at least one of
<             // matched items are not deleted!!
<             return allMatchedRemoved;
<         }
< 
<         QDomElement bookmark = m_domDocument.createElement("bookmark");
<         QDomElement bookmarkTitle = m_domDocument.createElement("title");
<         QDomElement bookmarkDescription = m_domDocument.createElement("desc");
<         QDomElement bookmarkInfo = m_domDocument.createElement("info");
<         QDomElement infoMetaData = m_domDocument.createElement("metadata");
< 
<         infoMetaData.setAttribute("owner", "http://saaghar.pozh.org");
<         QDomText bookmarkSaagharMetadata = m_domDocument.createTextNode(data.toStringList().at(0) + "|" + data.toStringList().at(1));
<         infoMetaData.appendChild(bookmarkSaagharMetadata);
<         bookmarkInfo.appendChild(infoMetaData);
<         bookmark.appendChild(bookmarkTitle);
<         bookmark.appendChild(bookmarkDescription);
<         bookmark.appendChild(bookmarkInfo);
<         verseNode.appendChild(bookmark);
< 
<         qDebug() << data << state;
<         QDomElement firstChild = m_domDocument.documentElement().firstChildElement("folder");
<         firstChild.text();
<         QTreeWidgetItem* item = createItem(bookmark, parentItem);
<         item->setIcon(0, m_bookmarkIcon);
< 
<         QString title = data.toStringList().at(2);
<         item->setText(0, title);
<         item->setToolTip(0, title);
<         item->setData(0, Qt::UserRole, data.toStringList().at(0) + "|" + data.toStringList().at(1));
<         item->setData(1, Qt::UserRole, data.toStringList().at(3));
<         if (data.toStringList().size() == 5) {
<             item->setText(1, data.toStringList().at(4));
<             item->setToolTip(1, data.toStringList().at(4));
<         }
< 
<         if (parentItem->childCount() == 1) {
<             resizeColumnToContents(0);
<             resizeColumnToContents(1);
<         }
< 
<         return true;
<     }
< 
<     //an unknown type!!
<     return false;
< }
< 
< void Bookmarks::doubleClicked(QTreeWidgetItem* item, int column)
< {
<     //setFlag() emits itemChanged() SIGNAL!
<     disconnect(this, SIGNAL(itemChanged(QTreeWidgetItem*,int)),
<                this, SLOT(updateDomElement(QTreeWidgetItem*,int)));
<     //a tricky hack for enabling one column editing!!
<     if (column == 0) {
<         item->setFlags(item->flags() & ~Qt::ItemIsEditable);
<     }
<     else if (column == 1 && item->parent()) {
<         item->setFlags(item->flags() | Qt::ItemIsEditable);
<     }
<     connect(this, SIGNAL(itemChanged(QTreeWidgetItem*,int)), this, SLOT(updateDomElement(QTreeWidgetItem*,int)));
<     if (item->parent()) {
<         if (column == 0) {
<             QString text = item->text(0);
<             int newLineIndex = text.indexOf("\n") + 1;
<             int secondNewLineIndex = text.indexOf("\n", newLineIndex);
<             int length = secondNewLineIndex > 0 ? secondNewLineIndex - newLineIndex : text.size() - newLineIndex;
<             text = text.mid(newLineIndex, length);
< 
<             QString type = item->data(0, ID_DATA).toString();
<             if (type.isEmpty()) {
<                 //old files that their 'folder' tags don't use 'id' attribute
<                 // just contain 'folder' tags of type 'Verses'!
<                 type = "Verses";
<             }
<             emit showBookmarkedItem(type, text, item->data(0, Qt::UserRole).toString(), true, true);
<         }
<     }
< }
< 
< void Bookmarks::filterItems(const QString &str)
< {
<     for (int i = 0; i < topLevelItemCount(); ++i) {
<         QTreeWidgetItem* ithRootChild = topLevelItem(i);
<         int childCount = ithRootChild->childCount();
<         for (int j = 0; j < childCount; ++j) {
<             QTreeWidgetItem* child = ithRootChild->child(j);
<             QString text = child->text(0) + child->text(1);
<             text = Tools::cleanString(text);
<             QString cleanedStr = Tools::cleanString(str);
<             if (!cleanedStr.isEmpty() && !text.contains(cleanedStr)) {
<                 child->setHidden(true);
<             }
<             else {
<                 child->setHidden(false);
<             }
<         }
<     }
< }
< 
< bool Bookmarks::unBookmarkItem(QTreeWidgetItem* item)
< {
<     if (!item) {
<         item = currentItem();
<     }
<     if (!item || !item->parent()) {
<         return false;
<     }
< 
<     QDomElement elementForRemoving = m_domElementForItem.value(item);
<     bool deleteItem = true;
<     QString itemComment = elementForRemoving.firstChildElement("desc").text();
<     if (!itemComment.isEmpty()) {
<         QMessageBox bookmarkCommentWarning(QMessageBox::Warning, tr("Bookmark"),
<                                            tr("This bookmark has comment if you remove it, the comment will be deleted, too."
<                                               "\nThis operation can not be undoed!"
<                                               "\nBookmark's' Title:\n%1\n\nBookmark's Comment:\n%2")
<                                            .arg(item->text(0)).arg(itemComment),
<                                            QMessageBox::Ok | QMessageBox::Cancel, parentWidget());
< 
<         if (bookmarkCommentWarning.exec() == QMessageBox::Cancel) {
<             deleteItem = false;
<         }
<     }
<     if (deleteItem) {
<         if (!elementForRemoving.isNull()) {
<             elementForRemoving.parentNode().removeChild(elementForRemoving);
<         }
< 
<         QString text = item->text(0);
< 
<         int newLineIndex = text.indexOf("\n") + 1;
<         int secondNewLineIndex = text.indexOf("\n", newLineIndex);
<         int length = secondNewLineIndex > 0 ? secondNewLineIndex - newLineIndex : text.size() - newLineIndex;
<         text = text.mid(newLineIndex, length);
< 
<         QString type = item->data(0, ID_DATA).toString();
<         if (type.isEmpty()) {
<             //old files that their 'folder' tags don't use 'id' attribute
<             // just contain 'folder' tags of type 'Verses'!
<             type = "Verses";
<         }
<         emit showBookmarkedItem(type, text, item->data(0, Qt::UserRole).toString(), false, true);
<         delete item;
<         item = 0;
<     }
<     return deleteItem;
< }
< 
< void Bookmarks::insertBookmarkList(const QVariantList &list)
< {
<     QStringList bookmarkedData = bookmarkList("Verses");
<     for (int i = 0; i < list.size(); ++i) {
<         QStringList data = list.at(i).toStringList();
< 
<         if (!bookmarkedData.contains(data.at(0) + "|" + data.at(1))) {
<             updateBookmarkState("Verses", list.at(i), true);
<         }
< 
<         QString text = data.at(2);
<         int newLineIndex = text.indexOf("\n") + 1;
<         int secondNewLineIndex = text.indexOf("\n", newLineIndex);
<         int length = secondNewLineIndex > 0 ? secondNewLineIndex - newLineIndex : text.size() - newLineIndex;
<         text = text.mid(newLineIndex, length);
<         emit showBookmarkedItem("Verses", text, data.at(0) + "|" + data.at(1), false, false);
<     }
< }
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  * Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).       *
>  * All rights reserved.                                                    *
>  * Contact: Nokia Corporation (qt-info@nokia.com)                          *
>  *                                                                         *
>  * This file is part of the examples of the Qt Toolkit.                    *
>  *                                                                         *
>  * $QT_BEGIN_LICENSE:BSD$                                                  *
>  * You may use this file under the terms of the BSD license as follows:    *
>  *                                                                         *
>  * "Redistribution and use in source and binary forms, with or without     *
>  * modification, are permitted provided that the following conditions are  *
>  * met:                                                                    *
>  *   * Redistributions of source code must retain the above copyright      *
>  *     notice, this list of conditions and the following disclaimer.       *
>  *   * Redistributions in binary form must reproduce the above copyright   *
>  *     notice, this list of conditions and the following disclaimer in     *
>  *     the documentation and/or other materials provided with the          *
>  *     distribution.                                                       *
>  *   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor  *
>  *     the names of its contributors may be used to endorse or promote     *
>  *     products derived from this software without specific prior written  *
>  *     permission.                                                         *
>  *                                                                         *
>  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS     *
>  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT       *
>  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR   *
>  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT    *
>  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   *
>  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        *
>  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   *
>  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   *
>  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     *
>  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   *
>  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."   *
>  * $QT_END_LICENSE$                                                        *
>  *                                                                         *
>  ***************************************************************************/
> 
> #include <QMessageBox>
> #include <QHeaderView>
> #include <QDebug>
> 
> #include "bookmarks.h"
> #include "settings.h"
> #include "tools.h"
> 
> const int ID_DATA = Qt::UserRole + 1;
> 
> Bookmarks::Bookmarks(QWidget* parent)
>     : QTreeWidget(parent)
> {
>     setLayoutDirection(Qt::RightToLeft);
>     setTextElideMode(Qt::ElideMiddle);
> #ifdef Q_OS_WIN
>     setIndentation(10);
> #endif
>     QStringList labels;
>     labels << tr("Title") << tr("Comments");
> #if QT_VERSION < 0x050000
>     header()->setResizeMode(QHeaderView::Interactive);
> #else
>     header()->setSectionResizeMode(QHeaderView::Interactive);
> #endif
>     setHeaderLabels(labels);
> 
>     m_folderIcon.addPixmap(style()->standardPixmap(QStyle::SP_DirClosedIcon),
>                            QIcon::Normal, QIcon::Off);
>     m_folderIcon.addPixmap(style()->standardPixmap(QStyle::SP_DirOpenIcon),
>                            QIcon::Normal, QIcon::On);
> 
>     m_bookmarkIcon.addPixmap(QPixmap(ICON_FILE("bookmark-on")));
> 
>     setAlternatingRowColors(true);
> 
>     connect(this, SIGNAL(itemDoubleClicked(QTreeWidgetItem*,int)), this, SLOT(doubleClicked(QTreeWidgetItem*,int)));
> }
> 
> bool Bookmarks::read(QIODevice* device)
> {
>     QString errorStr;
>     int errorLine;
>     int errorColumn;
> 
>     if (!m_domDocument.setContent(device, true, &errorStr, &errorLine, &errorColumn)) {
>         qDebug() << QString("Parse error at line %1, column %2:\n%3").arg(errorLine).arg(errorColumn).arg(errorStr);
>         return false;
>     }
> 
>     QDomElement root = m_domDocument.documentElement();
>     if (root.tagName() != "xbel") {
>         qDebug() << "The file is not an XBEL file.";
>         return false;
>     }
>     else if (root.hasAttribute("version") && root.attribute("version") != "1.0") {
>         qDebug() << "The file is not an XBEL version 1.0 file.";
>         return false;
>     }
> 
>     clear();
> 
>     disconnect(this, SIGNAL(itemChanged(QTreeWidgetItem*,int)),
>                this, SLOT(updateDomElement(QTreeWidgetItem*,int)));
> 
>     QDomElement child = root.firstChildElement("folder");
>     while (!child.isNull()) {
>         parseFolderElement(child);
>         child = child.nextSiblingElement("folder");
>     }
> 
>     resizeColumnToContents(0);
>     resizeColumnToContents(1);
> 
>     connect(this, SIGNAL(itemChanged(QTreeWidgetItem*,int)),
>             this, SLOT(updateDomElement(QTreeWidgetItem*,int)));
> 
>     return true;
> }
> 
> bool Bookmarks::write(QIODevice* device)
> {
>     const int IndentSize = 4;
> 
>     QTextStream out(device);
>     out.setCodec("utf-8");
>     QString domString = m_domDocument.toString(IndentSize);
>     domString = domString.replace("&#xd;", "");
>     out << domString;
>     return true;
> }
> 
> void Bookmarks::updateDomElement(QTreeWidgetItem* item, int column)
> {
>     QDomElement element = m_domElementForItem.value(item);
>     if (!element.isNull()) {
>         if (column == 0) {
>             QDomElement oldTitleElement = element.firstChildElement("title");
>             QDomElement newTitleElement = m_domDocument.createElement("title");
> 
>             QDomText newTitleText = m_domDocument.createTextNode(item->text(0));
>             newTitleElement.appendChild(newTitleText);
> 
>             element.replaceChild(newTitleElement, oldTitleElement);
>         }
>         else {
>             if (element.tagName() == "bookmark") {
>                 QDomElement oldDescElement = element.firstChildElement("desc");
>                 QDomElement newDescElement = m_domDocument.createElement("desc");
>                 QDomText newDesc = m_domDocument.createTextNode(item->text(1));//setAttribute("href", item->text(1));
>                 newDescElement.appendChild(newDesc);
>                 element.replaceChild(newDescElement, oldDescElement);
>                 element.setAttribute("href", item->data(1, Qt::UserRole).toString());
>             }
>         }
>     }
> }
> 
> void Bookmarks::parseFolderElement(const QDomElement &element,
>                                    QTreeWidgetItem* parentItem, const QString &/*elementID*/)
> {
>     QDomElement parentElement(element);
>     QString id = "";
>     if (parentElement.tagName() == "folder") {
>         //old files that their 'folder' tag don't use 'id' attribute
>         // just contain 'folder' tag of type 'Verses'!
>         id = parentElement.attribute("id", "Verses");
>         parentElement.setAttribute("id", id);
>     }
> 
>     QTreeWidgetItem* item = createItem(parentElement, parentItem, id);
> 
>     QString title;
>     if (id == "Verses") {
>         title = tr("Verses");
>     }
>     else {
>         title = element.firstChildElement("title").text();
>     }
>     if (title.isEmpty()) {
>         title = QObject::tr("Folder");
>     }
> 
>     item->setIcon(0, m_folderIcon);
>     item->setText(0, title);
>     item->setToolTip(0, title);
> 
>     bool folded = (parentElement.attribute("folded") != "no");
>     setItemExpanded(item, !folded);
> 
>     QDomElement child = parentElement.firstChildElement();
>     while (!child.isNull()) {
>         if (child.tagName() == "folder") {
> //TODO: we can save labguage within a 'metadata' tag of this 'folder'
> //          //update node title by new loaded translation
>             QString id = child.attribute("id");
>             QString title = child.firstChildElement("title").text();
> 
>             if (id.isEmpty()) {
>                 //old files that their 'folder' tags don't use 'id' attribute just contain 'folder' tags of type 'Verses'!
>                 id = "Verses";
>                 title = tr(title.toLocal8Bit().data());
>                 QDomElement oldTitleElement = child.firstChildElement("title");
>                 QDomElement newTitleElement = m_domDocument.createElement("title");
>                 QDomText newTitleText = m_domDocument.createTextNode(tr("Verses"));
>                 newTitleElement.appendChild(newTitleText);
> 
>                 child.replaceChild(newTitleElement, oldTitleElement);
>                 child.setAttribute("id", "Verses");
>             }
>             parseFolderElement(child, item, id);
>         }
>         else if (child.tagName() == "bookmark") {
>             QTreeWidgetItem* childItem = createItem(child, item);
> 
>             QString title = child.firstChildElement("title").text();
>             if (title.isEmpty()) {
>                 title = QObject::tr("Folder");
>             }
> 
>             QDomElement infoChild = child.firstChildElement("info");
>             QDomElement metaData = infoChild.firstChildElement("metadata");
>             while (!metaData.isNull()) {
>                 QString owner = metaData.attribute("owner");
>                 if (owner == "http://saaghar.pozh.org") {
>                     break;
>                 }
>                 metaData = metaData.nextSiblingElement("metadata");
>             }
>             if (!metaData.isNull() && metaData.attribute("owner") == "http://saaghar.pozh.org") {
>                 childItem->setData(0, Qt::UserRole, metaData.text());
>             }
>             else {
>                 qDebug() << "This DOM-NODE SHOULD deleted--->" << title;
>             }
>             //href data URL data
>             childItem->setData(1, Qt::UserRole, child.attribute("href", "http://saaghar.pozh.org"));
>             childItem->setIcon(0, m_bookmarkIcon);
>             childItem->setText(0, title);
>             childItem->setToolTip(0, title);
>             childItem->setText(1, child.firstChildElement("desc").text());
>             childItem->setToolTip(1, child.firstChildElement("desc").text());
>         }
>         else if (child.tagName() == "separator") {
>             QTreeWidgetItem* childItem = createItem(child, item);
>             childItem->setFlags(item->flags() & ~(Qt::ItemIsSelectable | Qt::ItemIsEditable));
>             childItem->setText(0, QString(30, 0xB7));
>         }
>         child = child.nextSiblingElement();
>     }
> }
> 
> QTreeWidgetItem* Bookmarks::createItem(const QDomElement &element,
>                                        QTreeWidgetItem* parentItem, const QString &elementID)
> {
>     QTreeWidgetItem* item;
>     if (parentItem) {
>         item = new QTreeWidgetItem(parentItem);
>     }
>     else {
>         item = new QTreeWidgetItem(this);
>     }
> 
>     if (!elementID.isEmpty()) {
>         item->setData(0, ID_DATA, elementID);
>     }
>     m_domElementForItem.insert(item, element);
>     return item;
> }
> 
> QDomElement Bookmarks::findChildNode(const QString &tagName, const QString &type)
> {
>     QDomElement n = m_domDocument.documentElement().firstChildElement(tagName);
>     while (!n.isNull()) {
>         //old files that their 'folder' tags don't use 'id' attribute just contain 'folder' tags of type 'Verses'!
>         QString id = n.attribute("id", "Verses");
>         if (id == type) {
>             break;
>         }
> 
>         QDomElement e = n.toElement();
>         n = n.nextSiblingElement(tagName);
>     }
>     return n;
> }
> 
> QStringList Bookmarks::bookmarkList(const QString &type)
> {
>     QStringList bookmarkedItemList;
>     if (type == "Verses" || type == tr("Verses")) {
>         QDomElement verseNode = findChildNode("folder", "Verses");
>         if (!verseNode.isNull()) {
>             QTreeWidgetItem* versesParentItem = m_domElementForItem.key(verseNode);
>             if (versesParentItem) {
>                 int countOfChildren = versesParentItem->childCount();
>                 for (int i = 0; i < countOfChildren; ++i) {
>                     QTreeWidgetItem* child = versesParentItem->child(i);
>                     if (child) {
>                         bookmarkedItemList << versesParentItem->child(i)->data(0, Qt::UserRole).toString();
>                     }
>                 }
>             }
>         }
>     }
> 
>     return bookmarkedItemList;
> }
> 
> bool Bookmarks::updateBookmarkState(const QString &type, const QVariant &data, bool state)
> {
>     if (type == "Verses" || type == tr("Verses")) {
>         QDomElement verseNode = findChildNode("folder", "Verses");
>         if (verseNode.isNull()) {
>             QDomElement root = m_domDocument.createElement("folder");
>             QDomElement child = m_domDocument.createElement("title");
>             QDomText newTitleText = m_domDocument.createTextNode(tr("Verses"));
>             root.setAttribute("folded", "no");
>             child.appendChild(newTitleText);
>             root.appendChild(child);
>             m_domDocument.documentElement().appendChild(root);
>             verseNode = root;
>             parseFolderElement(root);
>         }
> 
>         QTreeWidgetItem* parentItem = m_domElementForItem.key(verseNode);
>         //REMOVE OPERATION
>         if (!state) {
>             int countOfChildren = parentItem->childCount();
>             int numOfDel = 0;
>             bool allMatchedRemoved = true;
>             for (int i = 0; i < countOfChildren; ++i) {
>                 QTreeWidgetItem* childItem = parentItem->child(i);
>                 if (!childItem) {
>                     continue;
>                 }
> 
>                 if (childItem->data(0, Qt::UserRole).toString() == data.toStringList().at(0) + "|" + data.toStringList().at(1)) {
>                     ++numOfDel;
> 
>                     if (unBookmarkItem(childItem)) {
>                         --i; //because one of children was deleted
>                         --countOfChildren;
>                     }
>                     else {
>                         allMatchedRemoved = false;
>                     }
>                 }
>             }
> 
>             //allMatchedRemoved is false when at least one of
>             // matched items are not deleted!!
>             return allMatchedRemoved;
>         }
> 
>         QDomElement bookmark = m_domDocument.createElement("bookmark");
>         QDomElement bookmarkTitle = m_domDocument.createElement("title");
>         QDomElement bookmarkDescription = m_domDocument.createElement("desc");
>         QDomElement bookmarkInfo = m_domDocument.createElement("info");
>         QDomElement infoMetaData = m_domDocument.createElement("metadata");
> 
>         infoMetaData.setAttribute("owner", "http://saaghar.pozh.org");
>         QDomText bookmarkSaagharMetadata = m_domDocument.createTextNode(data.toStringList().at(0) + "|" + data.toStringList().at(1));
>         infoMetaData.appendChild(bookmarkSaagharMetadata);
>         bookmarkInfo.appendChild(infoMetaData);
>         bookmark.appendChild(bookmarkTitle);
>         bookmark.appendChild(bookmarkDescription);
>         bookmark.appendChild(bookmarkInfo);
>         verseNode.appendChild(bookmark);
> 
>         qDebug() << data << state;
>         QDomElement firstChild = m_domDocument.documentElement().firstChildElement("folder");
>         firstChild.text();
>         QTreeWidgetItem* item = createItem(bookmark, parentItem);
>         item->setIcon(0, m_bookmarkIcon);
> 
>         QString title = data.toStringList().at(2);
>         item->setText(0, title);
>         item->setToolTip(0, title);
>         item->setData(0, Qt::UserRole, data.toStringList().at(0) + "|" + data.toStringList().at(1));
>         item->setData(1, Qt::UserRole, data.toStringList().at(3));
>         if (data.toStringList().size() == 5) {
>             item->setText(1, data.toStringList().at(4));
>             item->setToolTip(1, data.toStringList().at(4));
>         }
> 
>         if (parentItem->childCount() == 1) {
>             resizeColumnToContents(0);
>             resizeColumnToContents(1);
>         }
> 
>         return true;
>     }
> 
>     //an unknown type!!
>     return false;
> }
> 
> void Bookmarks::doubleClicked(QTreeWidgetItem* item, int column)
> {
>     //setFlag() emits itemChanged() SIGNAL!
>     disconnect(this, SIGNAL(itemChanged(QTreeWidgetItem*,int)),
>                this, SLOT(updateDomElement(QTreeWidgetItem*,int)));
>     //a tricky hack for enabling one column editing!!
>     if (column == 0) {
>         item->setFlags(item->flags() & ~Qt::ItemIsEditable);
>     }
>     else if (column == 1 && item->parent()) {
>         item->setFlags(item->flags() | Qt::ItemIsEditable);
>     }
>     connect(this, SIGNAL(itemChanged(QTreeWidgetItem*,int)), this, SLOT(updateDomElement(QTreeWidgetItem*,int)));
>     if (item->parent()) {
>         if (column == 0) {
>             QString text = item->text(0);
>             int newLineIndex = text.indexOf("\n") + 1;
>             int secondNewLineIndex = text.indexOf("\n", newLineIndex);
>             int length = secondNewLineIndex > 0 ? secondNewLineIndex - newLineIndex : text.size() - newLineIndex;
>             text = text.mid(newLineIndex, length);
> 
>             QString type = item->data(0, ID_DATA).toString();
>             if (type.isEmpty()) {
>                 //old files that their 'folder' tags don't use 'id' attribute
>                 // just contain 'folder' tags of type 'Verses'!
>                 type = "Verses";
>             }
>             emit showBookmarkedItem(type, text, item->data(0, Qt::UserRole).toString(), true, true);
>         }
>     }
> }
> 
> void Bookmarks::filterItems(const QString &str)
> {
>     for (int i = 0; i < topLevelItemCount(); ++i) {
>         QTreeWidgetItem* ithRootChild = topLevelItem(i);
>         int childCount = ithRootChild->childCount();
>         for (int j = 0; j < childCount; ++j) {
>             QTreeWidgetItem* child = ithRootChild->child(j);
>             QString text = child->text(0) + child->text(1);
>             text = Tools::cleanString(text);
>             QString cleanedStr = Tools::cleanString(str);
>             if (!cleanedStr.isEmpty() && !text.contains(cleanedStr)) {
>                 child->setHidden(true);
>             }
>             else {
>                 child->setHidden(false);
>             }
>         }
>     }
> }
> 
> bool Bookmarks::unBookmarkItem(QTreeWidgetItem* item)
> {
>     if (!item) {
>         item = currentItem();
>     }
>     if (!item || !item->parent()) {
>         return false;
>     }
> 
>     QDomElement elementForRemoving = m_domElementForItem.value(item);
>     bool deleteItem = true;
>     QString itemComment = elementForRemoving.firstChildElement("desc").text();
>     if (!itemComment.isEmpty()) {
>         QMessageBox bookmarkCommentWarning(QMessageBox::Warning, tr("Bookmark"),
>                                            tr("This bookmark has comment if you remove it, the comment will be deleted, too."
>                                               "\nThis operation can not be undoed!"
>                                               "\nBookmark's' Title:\n%1\n\nBookmark's Comment:\n%2")
>                                            .arg(item->text(0)).arg(itemComment),
>                                            QMessageBox::Ok | QMessageBox::Cancel, parentWidget());
> 
>         if (bookmarkCommentWarning.exec() == QMessageBox::Cancel) {
>             deleteItem = false;
>         }
>     }
>     if (deleteItem) {
>         if (!elementForRemoving.isNull()) {
>             elementForRemoving.parentNode().removeChild(elementForRemoving);
>         }
> 
>         QString text = item->text(0);
> 
>         int newLineIndex = text.indexOf("\n") + 1;
>         int secondNewLineIndex = text.indexOf("\n", newLineIndex);
>         int length = secondNewLineIndex > 0 ? secondNewLineIndex - newLineIndex : text.size() - newLineIndex;
>         text = text.mid(newLineIndex, length);
> 
>         QString type = item->data(0, ID_DATA).toString();
>         if (type.isEmpty()) {
>             //old files that their 'folder' tags don't use 'id' attribute
>             // just contain 'folder' tags of type 'Verses'!
>             type = "Verses";
>         }
>         emit showBookmarkedItem(type, text, item->data(0, Qt::UserRole).toString(), false, true);
>         delete item;
>         item = 0;
>     }
>     return deleteItem;
> }
> 
> void Bookmarks::insertBookmarkList(const QVariantList &list)
> {
>     QStringList bookmarkedData = bookmarkList("Verses");
>     for (int i = 0; i < list.size(); ++i) {
>         QStringList data = list.at(i).toStringList();
> 
>         if (!bookmarkedData.contains(data.at(0) + "|" + data.at(1))) {
>             updateBookmarkState("Verses", list.at(i), true);
>         }
> 
>         QString text = data.at(2);
>         int newLineIndex = text.indexOf("\n") + 1;
>         int secondNewLineIndex = text.indexOf("\n", newLineIndex);
>         int length = secondNewLineIndex > 0 ? secondNewLineIndex - newLineIndex : text.size() - newLineIndex;
>         text = text.mid(newLineIndex, length);
>         emit showBookmarkedItem("Verses", text, data.at(0) + "|" + data.at(1), false, false);
>     }
> }
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/bookmarks.h lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/bookmarks.h
1,88c1,88
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  * Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).       *
<  * All rights reserved.                                                    *
<  * Contact: Nokia Corporation (qt-info@nokia.com)                          *
<  *                                                                         *
<  * This file is part of the examples of the Qt Toolkit.                    *
<  *                                                                         *
<  * $QT_BEGIN_LICENSE:BSD$                                                  *
<  * You may use this file under the terms of the BSD license as follows:    *
<  *                                                                         *
<  * "Redistribution and use in source and binary forms, with or without     *
<  * modification, are permitted provided that the following conditions are  *
<  * met:                                                                    *
<  *   * Redistributions of source code must retain the above copyright      *
<  *     notice, this list of conditions and the following disclaimer.       *
<  *   * Redistributions in binary form must reproduce the above copyright   *
<  *     notice, this list of conditions and the following disclaimer in     *
<  *     the documentation and/or other materials provided with the          *
<  *     distribution.                                                       *
<  *   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor  *
<  *     the names of its contributors may be used to endorse or promote     *
<  *     products derived from this software without specific prior written  *
<  *     permission.                                                         *
<  *                                                                         *
<  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS     *
<  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT       *
<  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR   *
<  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT    *
<  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   *
<  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        *
<  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   *
<  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   *
<  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     *
<  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   *
<  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."   *
<  * $QT_END_LICENSE$                                                        *
<  *                                                                         *
<  ***************************************************************************/
< 
< #ifndef BOOKMARKS_H
< #define BOOKMARKS_H
< 
< #include <QDomDocument>
< #include <QHash>
< #include <QIcon>
< #include <QTreeWidget>
< 
< class Bookmarks : public QTreeWidget
< {
<     Q_OBJECT
< 
< public:
<     Bookmarks(QWidget* parent = 0);
< 
<     bool read(QIODevice* device);
<     bool write(QIODevice* device);
<     bool updateBookmarkState(const QString &type, const QVariant &data, bool state);
<     QStringList bookmarkList(const QString &type);
<     void insertBookmarkList(const QVariantList &list);
< 
< private slots:
<     bool unBookmarkItem(QTreeWidgetItem* item = 0);
<     void doubleClicked(QTreeWidgetItem* item, int column);
<     void updateDomElement(QTreeWidgetItem* item, int column);
<     void filterItems(const QString &str);
< 
< private:
<     QDomElement findChildNode(const QString &tagName, const QString &type);
<     void parseFolderElement(const QDomElement &element,
<                             QTreeWidgetItem* parentItem = 0, const QString &elementID = QString());
<     QTreeWidgetItem* createItem(const QDomElement &element,
<                                 QTreeWidgetItem* parentItem = 0, const QString &elementID = QString());
< 
<     QDomDocument m_domDocument;
<     QHash<QTreeWidgetItem*, QDomElement> m_domElementForItem;
<     QIcon m_folderIcon;
<     QIcon m_bookmarkIcon;
< 
< signals:
<     void showBookmarkedItem(const QString &, const QString &, const QString &, bool, bool);
< };
< 
< #endif
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  * Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).       *
>  * All rights reserved.                                                    *
>  * Contact: Nokia Corporation (qt-info@nokia.com)                          *
>  *                                                                         *
>  * This file is part of the examples of the Qt Toolkit.                    *
>  *                                                                         *
>  * $QT_BEGIN_LICENSE:BSD$                                                  *
>  * You may use this file under the terms of the BSD license as follows:    *
>  *                                                                         *
>  * "Redistribution and use in source and binary forms, with or without     *
>  * modification, are permitted provided that the following conditions are  *
>  * met:                                                                    *
>  *   * Redistributions of source code must retain the above copyright      *
>  *     notice, this list of conditions and the following disclaimer.       *
>  *   * Redistributions in binary form must reproduce the above copyright   *
>  *     notice, this list of conditions and the following disclaimer in     *
>  *     the documentation and/or other materials provided with the          *
>  *     distribution.                                                       *
>  *   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor  *
>  *     the names of its contributors may be used to endorse or promote     *
>  *     products derived from this software without specific prior written  *
>  *     permission.                                                         *
>  *                                                                         *
>  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS     *
>  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT       *
>  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR   *
>  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT    *
>  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   *
>  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        *
>  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   *
>  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   *
>  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     *
>  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   *
>  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."   *
>  * $QT_END_LICENSE$                                                        *
>  *                                                                         *
>  ***************************************************************************/
> 
> #ifndef BOOKMARKS_H
> #define BOOKMARKS_H
> 
> #include <QDomDocument>
> #include <QHash>
> #include <QIcon>
> #include <QTreeWidget>
> 
> class Bookmarks : public QTreeWidget
> {
>     Q_OBJECT
> 
> public:
>     Bookmarks(QWidget* parent = 0);
> 
>     bool read(QIODevice* device);
>     bool write(QIODevice* device);
>     bool updateBookmarkState(const QString &type, const QVariant &data, bool state);
>     QStringList bookmarkList(const QString &type);
>     void insertBookmarkList(const QVariantList &list);
> 
> private slots:
>     bool unBookmarkItem(QTreeWidgetItem* item = 0);
>     void doubleClicked(QTreeWidgetItem* item, int column);
>     void updateDomElement(QTreeWidgetItem* item, int column);
>     void filterItems(const QString &str);
> 
> private:
>     QDomElement findChildNode(const QString &tagName, const QString &type);
>     void parseFolderElement(const QDomElement &element,
>                             QTreeWidgetItem* parentItem = 0, const QString &elementID = QString());
>     QTreeWidgetItem* createItem(const QDomElement &element,
>                                 QTreeWidgetItem* parentItem = 0, const QString &elementID = QString());
> 
>     QDomDocument m_domDocument;
>     QHash<QTreeWidgetItem*, QDomElement> m_domElementForItem;
>     QIcon m_folderIcon;
>     QIcon m_bookmarkIcon;
> 
> signals:
>     void showBookmarkedItem(const QString &, const QString &, const QString &, bool, bool);
> };
> 
> #endif
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/commands.cpp lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/commands.cpp
1,120c1,120
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< 
< #include "commands.h"
< #include "saagharwidget.h"
< #include "tools.h"
< 
< #include <QTimer>
< 
< NavigateToPage::NavigateToPage(SaagharWidget* saagharWidget, const QString &type, int pageId, QUndoCommand* parent)
<     : QUndoCommand(parent)
<     , m_saagharWidget(saagharWidget)
< {
<     if (m_saagharWidget) {
<         m_previousType = m_saagharWidget->identifier().at(0);
<         m_previousId = m_saagharWidget->identifier().at(1).toInt();
< 
<         m_previousText = m_saagharWidget->currentLocationList.join("-");
<         if (!m_saagharWidget->currentPoemTitle.isEmpty()) {
<             m_previousText += "-" + Tools::snippedText(m_saagharWidget->currentPoemTitle, QString(), 0, 10, true, Qt::ElideMiddle);
<         }
<         if (m_previousText.isEmpty()) {
<             m_previousText = SaagharWidget::rootTitle();
<         }
< 
<         m_previousRow = m_saagharWidget->currentVerticalPosition();
<         m_newRow = 0;
< 
<         m_newType = type;
<         m_newId = pageId;
<     }
<     else {
<         m_previousType = "CatID";
<         m_previousId = 0;
<         m_newType = "CatID";
<         m_newId = 0;
<         m_previousRow = 0;
<         m_newRow = 0;
<     }
< }
< 
< void NavigateToPage::undo()
< {
<     if (!m_saagharWidget) {
<         return;
<     }
< 
<     m_newRow = m_saagharWidget->currentVerticalPosition();
< 
<     if ((m_previousType != "PoemID" && m_previousType != "CatID") || m_previousId < 0) {
<         m_saagharWidget->navigateToPage(m_previousType, m_previousId, false);
<         m_saagharWidget->setMVPosition(m_previousRow);
<         QTimer::singleShot(0, m_saagharWidget, SLOT(setFromMVPosition()));
<     }
<     else {
<         m_saagharWidget->navigateToPage(m_previousType, m_previousId, true);
<         m_saagharWidget->setMVPosition(m_previousRow);
<         QTimer::singleShot(0, m_saagharWidget, SLOT(setFromMVPosition()));
<     }
< 
<     QString text = "";
<     if (m_saagharWidget->undoStack->index() > 1) {
<         const NavigateToPage* tmp = static_cast<const NavigateToPage*>(m_saagharWidget->undoStack->command(m_saagharWidget->undoStack->index() - 1));
< 
<         if (tmp) {
<             text = tmp->m_previousText;
<         }
<     }
< }
< 
< void NavigateToPage::redo()
< {
<     if (!m_saagharWidget) {
<         return;
<     }
< 
<     m_previousRow = m_saagharWidget->currentVerticalPosition();
< 
<     if ((m_newType != "PoemID" && m_newType != "CatID") || m_newId < 0) {
<         m_saagharWidget->navigateToPage(m_newType, m_newId, false);
<         m_saagharWidget->setMVPosition(m_newRow);
<         QTimer::singleShot(0, m_saagharWidget, SLOT(setFromMVPosition()));
<     }
<     else {
<         m_saagharWidget->navigateToPage(m_newType, m_newId, true);
<         m_saagharWidget->setMVPosition(m_newRow);
<         QTimer::singleShot(0, m_saagharWidget, SLOT(setFromMVPosition()));
<     }
< 
<     m_newText = "";
<     if (!m_saagharWidget->currentLocationList.isEmpty()) {
<         m_newText = m_saagharWidget->currentLocationList.at(m_saagharWidget->currentLocationList.size() - 1);    //join("-");
<     }
<     if (!m_saagharWidget->currentPoemTitle.isEmpty()) {
<         m_newText = Tools::snippedText(m_saagharWidget->currentPoemTitle, QString(), 0, 10, true, Qt::ElideMiddle);
<     }
< 
<     if (m_newText.isEmpty()) {
<         m_newText = SaagharWidget::rootTitle();
<     }
<     setText(QObject::tr("Navigate To %1").arg(m_newText));
< }
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> 
> #include "commands.h"
> #include "saagharwidget.h"
> #include "tools.h"
> 
> #include <QTimer>
> 
> NavigateToPage::NavigateToPage(SaagharWidget* saagharWidget, const QString &type, int pageId, QUndoCommand* parent)
>     : QUndoCommand(parent)
>     , m_saagharWidget(saagharWidget)
> {
>     if (m_saagharWidget) {
>         m_previousType = m_saagharWidget->identifier().at(0);
>         m_previousId = m_saagharWidget->identifier().at(1).toInt();
> 
>         m_previousText = m_saagharWidget->currentLocationList.join("-");
>         if (!m_saagharWidget->currentPoemTitle.isEmpty()) {
>             m_previousText += "-" + Tools::snippedText(m_saagharWidget->currentPoemTitle, QString(), 0, 10, true, Qt::ElideMiddle);
>         }
>         if (m_previousText.isEmpty()) {
>             m_previousText = SaagharWidget::rootTitle();
>         }
> 
>         m_previousRow = m_saagharWidget->currentVerticalPosition();
>         m_newRow = 0;
> 
>         m_newType = type;
>         m_newId = pageId;
>     }
>     else {
>         m_previousType = "CatID";
>         m_previousId = 0;
>         m_newType = "CatID";
>         m_newId = 0;
>         m_previousRow = 0;
>         m_newRow = 0;
>     }
> }
> 
> void NavigateToPage::undo()
> {
>     if (!m_saagharWidget) {
>         return;
>     }
> 
>     m_newRow = m_saagharWidget->currentVerticalPosition();
> 
>     if ((m_previousType != "PoemID" && m_previousType != "CatID") || m_previousId < 0) {
>         m_saagharWidget->navigateToPage(m_previousType, m_previousId, false);
>         m_saagharWidget->setMVPosition(m_previousRow);
>         QTimer::singleShot(0, m_saagharWidget, SLOT(setFromMVPosition()));
>     }
>     else {
>         m_saagharWidget->navigateToPage(m_previousType, m_previousId, true);
>         m_saagharWidget->setMVPosition(m_previousRow);
>         QTimer::singleShot(0, m_saagharWidget, SLOT(setFromMVPosition()));
>     }
> 
>     QString text = "";
>     if (m_saagharWidget->undoStack->index() > 1) {
>         const NavigateToPage* tmp = static_cast<const NavigateToPage*>(m_saagharWidget->undoStack->command(m_saagharWidget->undoStack->index() - 1));
> 
>         if (tmp) {
>             text = tmp->m_previousText;
>         }
>     }
> }
> 
> void NavigateToPage::redo()
> {
>     if (!m_saagharWidget) {
>         return;
>     }
> 
>     m_previousRow = m_saagharWidget->currentVerticalPosition();
> 
>     if ((m_newType != "PoemID" && m_newType != "CatID") || m_newId < 0) {
>         m_saagharWidget->navigateToPage(m_newType, m_newId, false);
>         m_saagharWidget->setMVPosition(m_newRow);
>         QTimer::singleShot(0, m_saagharWidget, SLOT(setFromMVPosition()));
>     }
>     else {
>         m_saagharWidget->navigateToPage(m_newType, m_newId, true);
>         m_saagharWidget->setMVPosition(m_newRow);
>         QTimer::singleShot(0, m_saagharWidget, SLOT(setFromMVPosition()));
>     }
> 
>     m_newText = "";
>     if (!m_saagharWidget->currentLocationList.isEmpty()) {
>         m_newText = m_saagharWidget->currentLocationList.at(m_saagharWidget->currentLocationList.size() - 1);    //join("-");
>     }
>     if (!m_saagharWidget->currentPoemTitle.isEmpty()) {
>         m_newText = Tools::snippedText(m_saagharWidget->currentPoemTitle, QString(), 0, 10, true, Qt::ElideMiddle);
>     }
> 
>     if (m_newText.isEmpty()) {
>         m_newText = SaagharWidget::rootTitle();
>     }
>     setText(QObject::tr("Navigate To %1").arg(m_newText));
> }
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/commands.h lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/commands.h
1,44c1,44
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< 
< #ifndef COMMANDS_H
< #define COMMANDS_H
< 
< #include <QUndoCommand>
< 
< class SaagharWidget;
< 
< class NavigateToPage : public QUndoCommand
< {
< public:
<     NavigateToPage(SaagharWidget* saagharWidget, const QString &type, int pageId, QUndoCommand* parent = 0);
< 
<     void undo();
<     void redo();
< 
< private:
<     QString m_previousText, m_newText;
<     QString m_previousType, m_newType;
<     int m_previousId, m_newId;
<     int m_previousRow, m_newRow;
<     SaagharWidget* m_saagharWidget;
< };
< #endif
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> 
> #ifndef COMMANDS_H
> #define COMMANDS_H
> 
> #include <QUndoCommand>
> 
> class SaagharWidget;
> 
> class NavigateToPage : public QUndoCommand
> {
> public:
>     NavigateToPage(SaagharWidget* saagharWidget, const QString &type, int pageId, QUndoCommand* parent = 0);
> 
>     void undo();
>     void redo();
> 
> private:
>     QString m_previousText, m_newText;
>     QString m_previousType, m_newType;
>     int m_previousId, m_newId;
>     int m_previousRow, m_newRow;
>     SaagharWidget* m_saagharWidget;
> };
> #endif
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/concurrenttasks.cpp lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/concurrenttasks.cpp
1,597c1,597
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< 
< #include "concurrenttasks.h"
< #include "databasebrowser.h"
< #include "tools.h"
< #include "progressmanager.h"
< #include "saagharapplication.h"
< #include "futureprogress.h"
< 
< #include <QMetaType>
< #include <QNetworkReply>
< #include <QThread>
< #include <QThreadPool>
< #include <QDateTime>
< 
< #define TASK_CANCELED if (isCanceled()) return QVariant();
< 
< 
< #ifdef Q_OS_WIN
< #include "qt_windows.h"
< 
< static void msleep(unsigned long msecs)
< {
<     ::Sleep(msecs);
< }
< #else
< #include <sys/time.h>
< 
< static void thread_sleep(struct timespec* ti)
< {
<     pthread_mutex_t mtx;
<     pthread_cond_t cnd;
< 
<     pthread_mutex_init(&mtx, 0);
<     pthread_cond_init(&cnd, 0);
< 
<     pthread_mutex_lock(&mtx);
<     (void) pthread_cond_timedwait(&cnd, &mtx, ti);
<     pthread_mutex_unlock(&mtx);
< 
<     pthread_cond_destroy(&cnd);
<     pthread_mutex_destroy(&mtx);
< }
< 
< static void msleep(unsigned long msecs)
< {
<     struct timeval tv;
<     gettimeofday(&tv, 0);
<     struct timespec ti;
< 
<     ti.tv_nsec = (tv.tv_usec + (msecs % 1000) * 1000) * 1000;
<     ti.tv_sec = tv.tv_sec + (msecs / 1000) + (ti.tv_nsec / 1000000000);
<     ti.tv_nsec %= 1000000000;
<     thread_sleep(&ti);
< }
< #endif
< 
< ConcurrentTask::ConcurrentTask(QObject* parent)
<     : QObject(parent),
<       QRunnable(),
<       m_cancel(false),
<       m_displayFullNotification(sApp->displayFullNotification() && sApp->notificationPosition() != ProgressManager::Disabled),
<       m_progressObject(0),
<       m_futureProgress(0),
<       m_isQueued(false),
<       m_searchUiObject(parent)
< {
<     // deleted by parent/child system of Qt
<     setAutoDelete(false);
<     qRegisterMetaType< SearchResults >("SearchResults");
< }
< 
< ConcurrentTask::~ConcurrentTask()
< {
< }
< 
< void ConcurrentTask::start(const QString &type, const QVariantHash &argumants, bool queued)
< {
<     if (type != "SEARCH" && type != "UPDATE" && type != "DB_CLEANUP") {
<         return;
<     }
< 
<     if (ConcurrentTaskManager::instance()->isAllTaskCanceled()) {
<         return;
<     }
< 
<     m_type = type;
<     m_options = argumants;
<     m_isQueued = queued;
< 
<     m_shouldPrependTask = type == "UPDATE" && VAR_GET(m_options, checkByUser).toBool();
< 
<     if (sApp->notificationPosition() != ProgressManager::Disabled) {
<         m_progressObject = new QFutureInterface<void>;
< 
<         ProgressManager::ProgressFlags progressFlags = m_shouldPrependTask
<                 ? (ProgressManager::ShowInApplicationIcon | ProgressManager::PrependInsteadAppend)
<                 : ProgressManager::ShowInApplicationIcon;
< 
<         m_futureProgress = sApp->progressManager()->addTimedTask(*m_progressObject,
<                            VAR_GET(m_options, taskTitle).toString(),
<                            m_type, 5,
<                            progressFlags);
< 
<         connect(m_futureProgress, SIGNAL(canceled()), this, SLOT(setCanceled()));
<         connect(m_searchUiObject, SIGNAL(cancelProgress()), m_futureProgress, SLOT(cancel()));
<     }
< 
<     ConcurrentTaskManager::instance()->addConcurrentTask(this);
< 
<     if (!m_isQueued) {
<         sApp->tasksThreadPool()->start(this, (m_shouldPrependTask ? 1 : 0));
<     }
< }
< 
< #ifdef SAAGHAR_DEBUG
< void ConcurrentTask::directStart(const QString &type, const QVariantHash &argumants)
< {
<     m_type = type;
<     m_options = argumants;
<     qint64 start = QDateTime::currentMSecsSinceEpoch();
< 
<     QVariant result = startSearch(m_options);
< 
<     qint64 end = QDateTime::currentMSecsSinceEpoch();
<     qDebug() << __LINE__ << __FUNCTION__ << (end - start) << "NON THREADED" ;
< 
<     emit concurrentResultReady(m_type, result);
< }
< #endif
< 
< void ConcurrentTask::run()
< {
<     const qint64 start = QDateTime::currentMSecsSinceEpoch();
< 
<     QThread::Priority prio = QThread::currentThread()->priority();
<     prio = prio == QThread::InheritPriority ? QThread::NormalPriority : prio;
<     sApp->setPriority(QThread::currentThread());
< 
<     if (m_progressObject) {
<         m_progressObject->reportStarted();
<     }
< 
<     QVariant result;
< 
<     if (m_type == "SEARCH") {
<         result = startSearch(m_options);
<     }
<     else if (m_type == "UPDATE") {
<         result = checkForUpdates();
<     }
<     else if (m_type == "DB_CLEANUP") {
<         result = cleanUpDatabase();
<     }
< 
<     if (m_progressObject) {
<         m_progressObject->reportFinished();
<         delete m_progressObject;
<         m_progressObject = 0;
<     }
< 
<     QThread::currentThread()->setPriority(prio);
< 
<     const int duration = QDateTime::currentMSecsSinceEpoch() - start;
< #ifdef SAAGHAR_DEBUG
<     qDebug() << __LINE__ << __FUNCTION__ << duration;
< #endif
< 
<     emit concurrentResultReady(m_type, result);
< 
< 
<     if (duration < 20) {
<         ::msleep(20 - duration);
<     }
<     else if (duration < 50) {
<         ::msleep(20);
<     }
<     else if (duration < 100) {
<         ::msleep(10);
<     }
< }
< 
< void ConcurrentTask::startQueued()
< {
<     if (m_isQueued) {
<         m_isQueued = false;
<         sApp->tasksThreadPool()->start(this, (m_shouldPrependTask ? 1 : 0));
<         sApp->processEvents();
<     }
< }
< 
< QVariant ConcurrentTask::startSearch(const QVariantHash &options)
< {
<     TASK_CANCELED;
< 
<     const QString &theConnectionID = VAR_GET(options, connectionID).toString();
<     const QString &connectionID = sApp->databaseBrowser()->getIdForDataBase(sApp->databaseBrowser()->databaseFileFromID(theConnectionID), QThread::currentThread());
<     const QString &strQuery = VAR_GET(options, strQuery).toString();
<     const QString &currentSelectionPath = VAR_GET(options, currentSelectionPath).toString();
<     const QStringList &phraseList = VAR_GET(options, phraseList).toStringList();
<     const QStringList &excludedList = VAR_GET(options, excludedList).toStringList();
<     const QStringList &excludeWhenCleaning = VAR_GET(options, excludeWhenCleaning).toStringList();
< 
<     SearchResults searchResults;
< 
<     QSqlDatabase threadDatabase = sApp->databaseBrowser()->database(connectionID);
<     if (!threadDatabase.isOpen()) {
<         qDebug() << QString("ConcurrentTask::startSearch: A database for thread %1 could not be opened!").arg(QString::number((quintptr)QThread::currentThread()));
<         return QVariant();
<     }
< 
<     int andedPhraseCount = phraseList.size();
<     int excludedCount = excludedList.size();
<     int numOfFounded = 0;
< 
<     TASK_CANCELED;
< 
<     QSqlQuery q(threadDatabase);
< 
< #ifdef SAAGHAR_DEBUG
<     int start = QDateTime::currentDateTime().toTime_t() * 1000 + QDateTime::currentDateTime().time().msec();
< #endif
< 
<     q.exec(strQuery);
< 
< #ifdef SAAGHAR_DEBUG
<     int end = QDateTime::currentDateTime().toTime_t() * 1000 + QDateTime::currentDateTime().time().msec();
<     int miliSec = end - start;
<     qDebug() << "duration=" << miliSec;
< #endif
< 
<     int numOfNearResult = 0;
<     int nextStep = 0;
<     const int updateLenght = 217;
< 
<     int lastPoemID = -1;
<     QList<GanjoorVerse*> verses;
< 
<     TASK_CANCELED
< 
<     while (q.next()) {
<         TASK_CANCELED
< 
<         ++numOfNearResult;
< 
<         QSqlRecord qrec = q.record();
<         int poemID = qrec.value(0).toInt();
< 
< //          if (idList.contains(poemID))
< //              continue;//we need just first result
< 
<         QString verseText = qrec.value(1).toString();
< 
<         // assume title's order is zero!
<         int verseOrder = (currentSelectionPath == "ALL_TITLES" ? 0 : qrec.value(2).toInt());
< 
<         QString foundVerse = Tools::cleanStringFast(verseText, excludeWhenCleaning);
< 
<         // for whole word option when word is in the start or end of verse
<         foundVerse = " " + foundVerse + " ";
< 
<         //excluded list
<         bool excludeCurrentVerse = false;
<         for (int t = 0; t < excludedCount; ++t) {
<             if (foundVerse.contains(excludedList.at(t))) {
<                 excludeCurrentVerse = true;
<                 break;
<             }
<         }
< 
<         if (!excludeCurrentVerse) {
<             for (int t = 0; t < andedPhraseCount; ++t) {
<                 QString tphrase = phraseList.at(t);
<                 if (tphrase.contains("==")) {
<                     tphrase.remove("==");
<                     if (lastPoemID != poemID/* && findRhyme*/) {
<                         lastPoemID = poemID;
<                         int versesSize = verses.size();
<                         for (int j = 0; j < versesSize; ++j) {
<                             delete verses[j];
<                             verses[j] = 0;
<                         }
< 
<                         TASK_CANCELED;
< 
<                         verses = sApp->databaseBrowser()->getVerses(poemID, connectionID);
<                     }
< 
<                     TASK_CANCELED;
< 
<                     excludeCurrentVerse = !sApp->databaseBrowser()->isRadif(verses, tphrase, verseOrder);
<                     break;
<                 }
<                 if (tphrase.contains("=")) {
<                     tphrase.remove("=");
<                     if (lastPoemID != poemID/* && findRhyme*/) {
<                         lastPoemID = poemID;
<                         int versesSize = verses.size();
<                         for (int j = 0; j < versesSize; ++j) {
<                             delete verses[j];
<                             verses[j] = 0;
<                         }
< 
<                         TASK_CANCELED;
< 
<                         verses = sApp->databaseBrowser()->getVerses(poemID, connectionID);
<                     }
< 
<                     TASK_CANCELED;
< 
<                     excludeCurrentVerse = !sApp->databaseBrowser()->isRhyme(verses, tphrase, verseOrder);
<                     break;
<                 }
<                 if (!tphrase.contains("%")) {
<                     //QChar(71,6): Simple He
<                     //QChar(204,6): Persian Ye
<                     QString YeAsKasre = QString(QChar(71, 6)) + " ";
<                     if (tphrase.contains(YeAsKasre)) {
<                         tphrase.replace(YeAsKasre, QString(QChar(71, 6)) + "\\s*" + QString(QChar(204, 6)) +
<                                         "{0,2}\\s+");
< 
<                         QRegExp anySearch(".*" + tphrase + ".*", Qt::CaseInsensitive);
< 
<                         if (!anySearch.exactMatch(foundVerse)) {
<                             excludeCurrentVerse = true;
<                             break;
<                         }
<                     }
<                     else {
<                         if (!foundVerse.contains(tphrase))
<                             //the verse doesn't contain an ANDed phrase
<                             //maybe for ++ and +++ this should be removed
<                         {
<                             excludeCurrentVerse = true;
<                             break;
<                         }
<                     }
<                 }
<                 else {
<                     tphrase = tphrase.replace("%%", ".*");
<                     tphrase = tphrase.replace("%", "\\S*");
<                     QRegExp anySearch(".*" + tphrase + ".*", Qt::CaseInsensitive);
<                     if (!anySearch.exactMatch(foundVerse)) {
<                         excludeCurrentVerse = true;
<                         break;
<                     }
<                 }
<             }
<         }
< 
<         if (excludeCurrentVerse) {
<             continue;
<         }
< 
<         TASK_CANCELED;
< 
<         ++numOfFounded;
< 
<         if (m_displayFullNotification && numOfFounded > nextStep) {
<             nextStep += updateLenght;
<             emit searchStatusChanged(DatabaseBrowser::tr("Search Result(s): %1").arg(numOfFounded));
<         }
< 
<         GanjoorPoem gPoem = sApp->databaseBrowser()->getPoem(poemID, connectionID);
< 
<         // TODO: Add connectionID to item
<         searchResults.insertMulti(poemID, "verseText=" + verseText + "|poemTitle=" + gPoem._Title + "|poetName=" + sApp->databaseBrowser()->getPoetForCat(gPoem._CatID, connectionID)._Name);
<     }
< 
<     //for the last result
<     if (m_displayFullNotification) {
<         emit searchStatusChanged(DatabaseBrowser::tr("Last-Search Result(s): %1").arg(numOfFounded));
<     }
< 
<     qDeleteAll(verses);
< 
<     TASK_CANCELED;
< 
<     return QVariant::fromValue(searchResults);
< }
< 
< QVariant ConcurrentTask::checkForUpdates()
< {
<     const QString checkByUser = VAR_GET(m_options, checkByUser).toBool()
<                                 ? QLatin1String("CHECK_BY_USER=TRUE") : QLatin1String("CHECK_BY_USER=FALSE");
< 
<     QEventLoop loop;
< 
<     QStringList updateInfoServers;
<     updateInfoServers << "http://srazi.github.io/Saaghar/saaghar.version"
<                       << "http://saaghar.sourceforge.net/saaghar.version"
<                       << "http://en.saaghar.pozh.org/saaghar.version";
< 
<     QNetworkReply* reply;
<     bool error = true;
< 
<     for (int i = 0; i < updateInfoServers.size(); ++i) {
<         QNetworkRequest requestVersionInfo(QUrl(updateInfoServers.at(i)));
<         QNetworkAccessManager* netManager = new QNetworkAccessManager();
<         reply = netManager->get(requestVersionInfo);
< 
<         connect(this, SIGNAL(canceled()), &loop, SLOT(quit()));
<         connect(reply, SIGNAL(finished()), &loop, SLOT(quit()));
<         loop.exec();
< 
<         if (isCanceled()) {
<             loop.quit();
<             break;
<         }
< 
<         if (!reply->error()) {
<             error = false;
<             break;
<         }
<     }
< 
<     if (error || isCanceled()) {
<         if (m_futureProgress) {
<             m_futureProgress->setTitle(tr("Update: %1").arg(isCanceled() ? tr("Canceled by user") : tr("Error ocurred")));
<             m_futureProgress->future().cancel();
<         }
< 
<         return QStringList() << QLatin1String("ERROR=TRUE") << checkByUser << QLatin1String("DATA=");
<     }
< 
<     return QStringList() << QLatin1String("ERROR=FALSE")
<            << checkByUser
<            << QString("DATA=%1").arg(QString::fromUtf8(reply->readAll()));
< }
< 
< QVariant ConcurrentTask::cleanUpDatabase()
< {
<     TASK_CANCELED;
< 
<     static const QRegExp startSpaceRegExp("^ +");
<     const QString &theConnectionID = VAR_GET(m_options, connectionID).toString();
<     const QString &connectionID = sApp->databaseBrowser()->getIdForDataBase(sApp->databaseBrowser()->databaseFileFromID(theConnectionID), QThread::currentThread());
< 
<     QSqlDatabase threadDatabase = sApp->databaseBrowser()->database(connectionID);
<     if (!threadDatabase.isOpen() || !threadDatabase.transaction()) {
<         qDebug() << QString("ConcurrentTask::cleanUpDatabase: A database for thread %1 could not be opened or transaction can not be began!").arg(QString::number((quintptr)QThread::currentThread()));
<         return QVariant();
<     }
< 
<     QSqlQuery q(threadDatabase);
<     QSqlQuery vq(threadDatabase);
< 
<     const QString TATWEEL = "ـ";
<     QString strQuery = QString("UPDATE verse SET text=REPLACE(text, \'%1\', \'\') WHERE text LIKE \'%%1%\' AND LENGTH(REPLACE(REPLACE(text, \'%1\', \'\'), \' \', \'\')) > 1").arg(TATWEEL);
<     q.exec(strQuery);
<     strQuery = QString("UPDATE poem SET title=REPLACE(title, \'%1\', \'\') WHERE title LIKE \'%%1%\' AND LENGTH(REPLACE(REPLACE(title, \'%1\', \'\'), \' \', \'\')) > 1").arg(TATWEEL);
<     q.exec(strQuery);
<     strQuery = QString("UPDATE cat SET text=REPLACE(text, \'%1\', \'\') WHERE text LIKE \'%%1%\' AND LENGTH(REPLACE(REPLACE(text, \'%1\', \'\'), \' \', \'\')) > 1").arg(TATWEEL);
<     q.exec(strQuery);
<     strQuery = QString("UPDATE poet SET name=REPLACE(name, \'%1\', \'\') WHERE name LIKE \'%%1%\' AND LENGTH(REPLACE(REPLACE(name, \'%1\', \'\'), \' \', \'\')) > 1").arg(TATWEEL);
<     q.exec(strQuery);
< 
<     q.exec("SELECT id FROM poem");
<     QSqlRecord qrec;
<     QSqlRecord vqrec;
<     while (q.next()) {
<         qrec = q.record();
<         int poemID = qrec.value(0).toInt();
<         strQuery = QString("SELECT text FROM verse WHERE poem_id=%1").arg(poemID);
< 
<         vq.exec(strQuery);
<         int minStartingSpace = -1;
<         while (vq.next()) {
<             vqrec = vq.record();
<             QString verse = vqrec.value(0).toString();
<             if (startSpaceRegExp.indexIn(verse) >= 0) {
<                 const QString cap1 = startSpaceRegExp.cap(0);
<                 int capSize = cap1.size();
<                 if (capSize < minStartingSpace || minStartingSpace == -1) {
<                     minStartingSpace = capSize;
<                 }
< 
<                 if (minStartingSpace == 0) {
<                     break;
<                 }
<             }
<             else {
<                 minStartingSpace = 0;
<                 break;
<             }
<         }
< 
<         if (minStartingSpace > 0) {
<            strQuery = QString("UPDATE verse SET text=SUBSTR(text, %1) WHERE poem_id=%2").arg(minStartingSpace + 1).arg(poemID);
<            vq.exec(strQuery);
<         }
<     }
< 
<     if (isCanceled() || !threadDatabase.commit()) {
<         threadDatabase.rollback();
<     }
< 
<     return QVariant();
< }
< 
< bool ConcurrentTask::isCanceled()
< {
<     return m_cancel;
< }
< 
< void ConcurrentTask::setCanceled()
< {
<     m_mutex.lock();
<     m_cancel = true;
<     m_mutex.unlock();
< 
<     emit canceled();
< }
< 
< 
< ConcurrentTaskManager* ConcurrentTaskManager::s_instance = 0;
< 
< ConcurrentTaskManager* ConcurrentTaskManager::instance()
< {
<     if (!s_instance) {
<         s_instance = new ConcurrentTaskManager(sApp);
<     }
< 
<     return s_instance;
< }
< 
< ConcurrentTaskManager::~ConcurrentTaskManager()
< {
< }
< 
< void ConcurrentTaskManager::startQueuedTasks()
< {
<     foreach (const TaskPointer &wp, m_tasks) {
<         if (wp && wp.data()) {
<             wp.data()->startQueued();
<         }
<     }
< }
< 
< void ConcurrentTaskManager::addConcurrentTask(ConcurrentTask* task)
< {
<     if (m_cancel) {
<         return;
<     }
< 
<     m_tasks.append(TaskPointer(task));
< }
< 
< void ConcurrentTaskManager::finish()
< {
<     m_cancel = true;
< 
<     foreach (const TaskPointer &wp, m_tasks) {
<         if (wp && wp.data()) {
<             wp.data()->setCanceled();
<         }
<     }
< 
<     sApp->tasksThreadPool()->waitForDone();
< }
< 
< bool ConcurrentTaskManager::isAllTaskCanceled()
< {
<     return m_cancel;
< }
< 
< void ConcurrentTaskManager::switchToStartState()
< {
<     m_cancel = false;
< }
< 
< ConcurrentTaskManager::ConcurrentTaskManager(QObject* parent)
<     : QObject(parent),
<       m_tasks(),
<       m_cancel(false)
< {
<     connect(sApp->progressManager(), SIGNAL(allTasksCanceled()), this, SLOT(finish()));
< }
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> 
> #include "concurrenttasks.h"
> #include "databasebrowser.h"
> #include "tools.h"
> #include "progressmanager.h"
> #include "saagharapplication.h"
> #include "futureprogress.h"
> 
> #include <QMetaType>
> #include <QNetworkReply>
> #include <QThread>
> #include <QThreadPool>
> #include <QDateTime>
> 
> #define TASK_CANCELED if (isCanceled()) return QVariant();
> 
> 
> #ifdef Q_OS_WIN
> #include "qt_windows.h"
> 
> static void msleep(unsigned long msecs)
> {
>     ::Sleep(msecs);
> }
> #else
> #include <sys/time.h>
> 
> static void thread_sleep(struct timespec* ti)
> {
>     pthread_mutex_t mtx;
>     pthread_cond_t cnd;
> 
>     pthread_mutex_init(&mtx, 0);
>     pthread_cond_init(&cnd, 0);
> 
>     pthread_mutex_lock(&mtx);
>     (void) pthread_cond_timedwait(&cnd, &mtx, ti);
>     pthread_mutex_unlock(&mtx);
> 
>     pthread_cond_destroy(&cnd);
>     pthread_mutex_destroy(&mtx);
> }
> 
> static void msleep(unsigned long msecs)
> {
>     struct timeval tv;
>     gettimeofday(&tv, 0);
>     struct timespec ti;
> 
>     ti.tv_nsec = (tv.tv_usec + (msecs % 1000) * 1000) * 1000;
>     ti.tv_sec = tv.tv_sec + (msecs / 1000) + (ti.tv_nsec / 1000000000);
>     ti.tv_nsec %= 1000000000;
>     thread_sleep(&ti);
> }
> #endif
> 
> ConcurrentTask::ConcurrentTask(QObject* parent)
>     : QObject(parent),
>       QRunnable(),
>       m_cancel(false),
>       m_displayFullNotification(sApp->displayFullNotification() && sApp->notificationPosition() != ProgressManager::Disabled),
>       m_progressObject(0),
>       m_futureProgress(0),
>       m_isQueued(false),
>       m_searchUiObject(parent)
> {
>     // deleted by parent/child system of Qt
>     setAutoDelete(false);
>     qRegisterMetaType< SearchResults >("SearchResults");
> }
> 
> ConcurrentTask::~ConcurrentTask()
> {
> }
> 
> void ConcurrentTask::start(const QString &type, const QVariantHash &argumants, bool queued)
> {
>     if (type != "SEARCH" && type != "UPDATE" && type != "DB_CLEANUP") {
>         return;
>     }
> 
>     if (ConcurrentTaskManager::instance()->isAllTaskCanceled()) {
>         return;
>     }
> 
>     m_type = type;
>     m_options = argumants;
>     m_isQueued = queued;
> 
>     m_shouldPrependTask = type == "UPDATE" && VAR_GET(m_options, checkByUser).toBool();
> 
>     if (sApp->notificationPosition() != ProgressManager::Disabled) {
>         m_progressObject = new QFutureInterface<void>;
> 
>         ProgressManager::ProgressFlags progressFlags = m_shouldPrependTask
>                 ? (ProgressManager::ShowInApplicationIcon | ProgressManager::PrependInsteadAppend)
>                 : ProgressManager::ShowInApplicationIcon;
> 
>         m_futureProgress = sApp->progressManager()->addTimedTask(*m_progressObject,
>                            VAR_GET(m_options, taskTitle).toString(),
>                            m_type, 5,
>                            progressFlags);
> 
>         connect(m_futureProgress, SIGNAL(canceled()), this, SLOT(setCanceled()));
>         connect(m_searchUiObject, SIGNAL(cancelProgress()), m_futureProgress, SLOT(cancel()));
>     }
> 
>     ConcurrentTaskManager::instance()->addConcurrentTask(this);
> 
>     if (!m_isQueued) {
>         sApp->tasksThreadPool()->start(this, (m_shouldPrependTask ? 1 : 0));
>     }
> }
> 
> #ifdef SAAGHAR_DEBUG
> void ConcurrentTask::directStart(const QString &type, const QVariantHash &argumants)
> {
>     m_type = type;
>     m_options = argumants;
>     qint64 start = QDateTime::currentMSecsSinceEpoch();
> 
>     QVariant result = startSearch(m_options);
> 
>     qint64 end = QDateTime::currentMSecsSinceEpoch();
>     qDebug() << __LINE__ << __FUNCTION__ << (end - start) << "NON THREADED" ;
> 
>     emit concurrentResultReady(m_type, result);
> }
> #endif
> 
> void ConcurrentTask::run()
> {
>     const qint64 start = QDateTime::currentMSecsSinceEpoch();
> 
>     QThread::Priority prio = QThread::currentThread()->priority();
>     prio = prio == QThread::InheritPriority ? QThread::NormalPriority : prio;
>     sApp->setPriority(QThread::currentThread());
> 
>     if (m_progressObject) {
>         m_progressObject->reportStarted();
>     }
> 
>     QVariant result;
> 
>     if (m_type == "SEARCH") {
>         result = startSearch(m_options);
>     }
>     else if (m_type == "UPDATE") {
>         result = checkForUpdates();
>     }
>     else if (m_type == "DB_CLEANUP") {
>         result = cleanUpDatabase();
>     }
> 
>     if (m_progressObject) {
>         m_progressObject->reportFinished();
>         delete m_progressObject;
>         m_progressObject = 0;
>     }
> 
>     QThread::currentThread()->setPriority(prio);
> 
>     const int duration = QDateTime::currentMSecsSinceEpoch() - start;
> #ifdef SAAGHAR_DEBUG
>     qDebug() << __LINE__ << __FUNCTION__ << duration;
> #endif
> 
>     emit concurrentResultReady(m_type, result);
> 
> 
>     if (duration < 20) {
>         ::msleep(20 - duration);
>     }
>     else if (duration < 50) {
>         ::msleep(20);
>     }
>     else if (duration < 100) {
>         ::msleep(10);
>     }
> }
> 
> void ConcurrentTask::startQueued()
> {
>     if (m_isQueued) {
>         m_isQueued = false;
>         sApp->tasksThreadPool()->start(this, (m_shouldPrependTask ? 1 : 0));
>         sApp->processEvents();
>     }
> }
> 
> QVariant ConcurrentTask::startSearch(const QVariantHash &options)
> {
>     TASK_CANCELED;
> 
>     const QString &theConnectionID = VAR_GET(options, connectionID).toString();
>     const QString &connectionID = sApp->databaseBrowser()->getIdForDataBase(sApp->databaseBrowser()->databaseFileFromID(theConnectionID), QThread::currentThread());
>     const QString &strQuery = VAR_GET(options, strQuery).toString();
>     const QString &currentSelectionPath = VAR_GET(options, currentSelectionPath).toString();
>     const QStringList &phraseList = VAR_GET(options, phraseList).toStringList();
>     const QStringList &excludedList = VAR_GET(options, excludedList).toStringList();
>     const QStringList &excludeWhenCleaning = VAR_GET(options, excludeWhenCleaning).toStringList();
> 
>     SearchResults searchResults;
> 
>     QSqlDatabase threadDatabase = sApp->databaseBrowser()->database(connectionID);
>     if (!threadDatabase.isOpen()) {
>         qDebug() << QString("ConcurrentTask::startSearch: A database for thread %1 could not be opened!").arg(QString::number((quintptr)QThread::currentThread()));
>         return QVariant();
>     }
> 
>     int andedPhraseCount = phraseList.size();
>     int excludedCount = excludedList.size();
>     int numOfFounded = 0;
> 
>     TASK_CANCELED;
> 
>     QSqlQuery q(threadDatabase);
> 
> #ifdef SAAGHAR_DEBUG
>     int start = QDateTime::currentDateTime().toTime_t() * 1000 + QDateTime::currentDateTime().time().msec();
> #endif
> 
>     q.exec(strQuery);
> 
> #ifdef SAAGHAR_DEBUG
>     int end = QDateTime::currentDateTime().toTime_t() * 1000 + QDateTime::currentDateTime().time().msec();
>     int miliSec = end - start;
>     qDebug() << "duration=" << miliSec;
> #endif
> 
>     int numOfNearResult = 0;
>     int nextStep = 0;
>     const int updateLenght = 217;
> 
>     int lastPoemID = -1;
>     QList<GanjoorVerse*> verses;
> 
>     TASK_CANCELED
> 
>     while (q.next()) {
>         TASK_CANCELED
> 
>         ++numOfNearResult;
> 
>         QSqlRecord qrec = q.record();
>         int poemID = qrec.value(0).toInt();
> 
> //          if (idList.contains(poemID))
> //              continue;//we need just first result
> 
>         QString verseText = qrec.value(1).toString();
> 
>         // assume title's order is zero!
>         int verseOrder = (currentSelectionPath == "ALL_TITLES" ? 0 : qrec.value(2).toInt());
> 
>         QString foundVerse = Tools::cleanStringFast(verseText, excludeWhenCleaning);
> 
>         // for whole word option when word is in the start or end of verse
>         foundVerse = " " + foundVerse + " ";
> 
>         //excluded list
>         bool excludeCurrentVerse = false;
>         for (int t = 0; t < excludedCount; ++t) {
>             if (foundVerse.contains(excludedList.at(t))) {
>                 excludeCurrentVerse = true;
>                 break;
>             }
>         }
> 
>         if (!excludeCurrentVerse) {
>             for (int t = 0; t < andedPhraseCount; ++t) {
>                 QString tphrase = phraseList.at(t);
>                 if (tphrase.contains("==")) {
>                     tphrase.remove("==");
>                     if (lastPoemID != poemID/* && findRhyme*/) {
>                         lastPoemID = poemID;
>                         int versesSize = verses.size();
>                         for (int j = 0; j < versesSize; ++j) {
>                             delete verses[j];
>                             verses[j] = 0;
>                         }
> 
>                         TASK_CANCELED;
> 
>                         verses = sApp->databaseBrowser()->getVerses(poemID, connectionID);
>                     }
> 
>                     TASK_CANCELED;
> 
>                     excludeCurrentVerse = !sApp->databaseBrowser()->isRadif(verses, tphrase, verseOrder);
>                     break;
>                 }
>                 if (tphrase.contains("=")) {
>                     tphrase.remove("=");
>                     if (lastPoemID != poemID/* && findRhyme*/) {
>                         lastPoemID = poemID;
>                         int versesSize = verses.size();
>                         for (int j = 0; j < versesSize; ++j) {
>                             delete verses[j];
>                             verses[j] = 0;
>                         }
> 
>                         TASK_CANCELED;
> 
>                         verses = sApp->databaseBrowser()->getVerses(poemID, connectionID);
>                     }
> 
>                     TASK_CANCELED;
> 
>                     excludeCurrentVerse = !sApp->databaseBrowser()->isRhyme(verses, tphrase, verseOrder);
>                     break;
>                 }
>                 if (!tphrase.contains("%")) {
>                     //QChar(71,6): Simple He
>                     //QChar(204,6): Persian Ye
>                     QString YeAsKasre = QString(QChar(71, 6)) + " ";
>                     if (tphrase.contains(YeAsKasre)) {
>                         tphrase.replace(YeAsKasre, QString(QChar(71, 6)) + "\\s*" + QString(QChar(204, 6)) +
>                                         "{0,2}\\s+");
> 
>                         QRegExp anySearch(".*" + tphrase + ".*", Qt::CaseInsensitive);
> 
>                         if (!anySearch.exactMatch(foundVerse)) {
>                             excludeCurrentVerse = true;
>                             break;
>                         }
>                     }
>                     else {
>                         if (!foundVerse.contains(tphrase))
>                             //the verse doesn't contain an ANDed phrase
>                             //maybe for ++ and +++ this should be removed
>                         {
>                             excludeCurrentVerse = true;
>                             break;
>                         }
>                     }
>                 }
>                 else {
>                     tphrase = tphrase.replace("%%", ".*");
>                     tphrase = tphrase.replace("%", "\\S*");
>                     QRegExp anySearch(".*" + tphrase + ".*", Qt::CaseInsensitive);
>                     if (!anySearch.exactMatch(foundVerse)) {
>                         excludeCurrentVerse = true;
>                         break;
>                     }
>                 }
>             }
>         }
> 
>         if (excludeCurrentVerse) {
>             continue;
>         }
> 
>         TASK_CANCELED;
> 
>         ++numOfFounded;
> 
>         if (m_displayFullNotification && numOfFounded > nextStep) {
>             nextStep += updateLenght;
>             emit searchStatusChanged(DatabaseBrowser::tr("Search Result(s): %1").arg(numOfFounded));
>         }
> 
>         GanjoorPoem gPoem = sApp->databaseBrowser()->getPoem(poemID, connectionID);
> 
>         // TODO: Add connectionID to item
>         searchResults.insertMulti(poemID, "verseText=" + verseText + "|poemTitle=" + gPoem._Title + "|poetName=" + sApp->databaseBrowser()->getPoetForCat(gPoem._CatID, connectionID)._Name);
>     }
> 
>     //for the last result
>     if (m_displayFullNotification) {
>         emit searchStatusChanged(DatabaseBrowser::tr("Last-Search Result(s): %1").arg(numOfFounded));
>     }
> 
>     qDeleteAll(verses);
> 
>     TASK_CANCELED;
> 
>     return QVariant::fromValue(searchResults);
> }
> 
> QVariant ConcurrentTask::checkForUpdates()
> {
>     const QString checkByUser = VAR_GET(m_options, checkByUser).toBool()
>                                 ? QLatin1String("CHECK_BY_USER=TRUE") : QLatin1String("CHECK_BY_USER=FALSE");
> 
>     QEventLoop loop;
> 
>     QStringList updateInfoServers;
>     updateInfoServers << "http://srazi.github.io/Saaghar/saaghar.version"
>                       << "http://saaghar.sourceforge.net/saaghar.version"
>                       << "http://en.saaghar.pozh.org/saaghar.version";
> 
>     QNetworkReply* reply;
>     bool error = true;
> 
>     for (int i = 0; i < updateInfoServers.size(); ++i) {
>         QNetworkRequest requestVersionInfo(QUrl(updateInfoServers.at(i)));
>         QNetworkAccessManager* netManager = new QNetworkAccessManager();
>         reply = netManager->get(requestVersionInfo);
> 
>         connect(this, SIGNAL(canceled()), &loop, SLOT(quit()));
>         connect(reply, SIGNAL(finished()), &loop, SLOT(quit()));
>         loop.exec();
> 
>         if (isCanceled()) {
>             loop.quit();
>             break;
>         }
> 
>         if (!reply->error()) {
>             error = false;
>             break;
>         }
>     }
> 
>     if (error || isCanceled()) {
>         if (m_futureProgress) {
>             m_futureProgress->setTitle(tr("Update: %1").arg(isCanceled() ? tr("Canceled by user") : tr("Error ocurred")));
>             m_futureProgress->future().cancel();
>         }
> 
>         return QStringList() << QLatin1String("ERROR=TRUE") << checkByUser << QLatin1String("DATA=");
>     }
> 
>     return QStringList() << QLatin1String("ERROR=FALSE")
>            << checkByUser
>            << QString("DATA=%1").arg(QString::fromUtf8(reply->readAll()));
> }
> 
> QVariant ConcurrentTask::cleanUpDatabase()
> {
>     TASK_CANCELED;
> 
>     static const QRegExp startSpaceRegExp("^ +");
>     const QString &theConnectionID = VAR_GET(m_options, connectionID).toString();
>     const QString &connectionID = sApp->databaseBrowser()->getIdForDataBase(sApp->databaseBrowser()->databaseFileFromID(theConnectionID), QThread::currentThread());
> 
>     QSqlDatabase threadDatabase = sApp->databaseBrowser()->database(connectionID);
>     if (!threadDatabase.isOpen() || !threadDatabase.transaction()) {
>         qDebug() << QString("ConcurrentTask::cleanUpDatabase: A database for thread %1 could not be opened or transaction can not be began!").arg(QString::number((quintptr)QThread::currentThread()));
>         return QVariant();
>     }
> 
>     QSqlQuery q(threadDatabase);
>     QSqlQuery vq(threadDatabase);
> 
>     const QString TATWEEL = "ـ";
>     QString strQuery = QString("UPDATE verse SET text=REPLACE(text, \'%1\', \'\') WHERE text LIKE \'%%1%\' AND LENGTH(REPLACE(REPLACE(text, \'%1\', \'\'), \' \', \'\')) > 1").arg(TATWEEL);
>     q.exec(strQuery);
>     strQuery = QString("UPDATE poem SET title=REPLACE(title, \'%1\', \'\') WHERE title LIKE \'%%1%\' AND LENGTH(REPLACE(REPLACE(title, \'%1\', \'\'), \' \', \'\')) > 1").arg(TATWEEL);
>     q.exec(strQuery);
>     strQuery = QString("UPDATE cat SET text=REPLACE(text, \'%1\', \'\') WHERE text LIKE \'%%1%\' AND LENGTH(REPLACE(REPLACE(text, \'%1\', \'\'), \' \', \'\')) > 1").arg(TATWEEL);
>     q.exec(strQuery);
>     strQuery = QString("UPDATE poet SET name=REPLACE(name, \'%1\', \'\') WHERE name LIKE \'%%1%\' AND LENGTH(REPLACE(REPLACE(name, \'%1\', \'\'), \' \', \'\')) > 1").arg(TATWEEL);
>     q.exec(strQuery);
> 
>     q.exec("SELECT id FROM poem");
>     QSqlRecord qrec;
>     QSqlRecord vqrec;
>     while (q.next()) {
>         qrec = q.record();
>         int poemID = qrec.value(0).toInt();
>         strQuery = QString("SELECT text FROM verse WHERE poem_id=%1").arg(poemID);
> 
>         vq.exec(strQuery);
>         int minStartingSpace = -1;
>         while (vq.next()) {
>             vqrec = vq.record();
>             QString verse = vqrec.value(0).toString();
>             if (startSpaceRegExp.indexIn(verse) >= 0) {
>                 const QString cap1 = startSpaceRegExp.cap(0);
>                 int capSize = cap1.size();
>                 if (capSize < minStartingSpace || minStartingSpace == -1) {
>                     minStartingSpace = capSize;
>                 }
> 
>                 if (minStartingSpace == 0) {
>                     break;
>                 }
>             }
>             else {
>                 minStartingSpace = 0;
>                 break;
>             }
>         }
> 
>         if (minStartingSpace > 0) {
>            strQuery = QString("UPDATE verse SET text=SUBSTR(text, %1) WHERE poem_id=%2").arg(minStartingSpace + 1).arg(poemID);
>            vq.exec(strQuery);
>         }
>     }
> 
>     if (isCanceled() || !threadDatabase.commit()) {
>         threadDatabase.rollback();
>     }
> 
>     return QVariant();
> }
> 
> bool ConcurrentTask::isCanceled()
> {
>     return m_cancel;
> }
> 
> void ConcurrentTask::setCanceled()
> {
>     m_mutex.lock();
>     m_cancel = true;
>     m_mutex.unlock();
> 
>     emit canceled();
> }
> 
> 
> ConcurrentTaskManager* ConcurrentTaskManager::s_instance = 0;
> 
> ConcurrentTaskManager* ConcurrentTaskManager::instance()
> {
>     if (!s_instance) {
>         s_instance = new ConcurrentTaskManager(sApp);
>     }
> 
>     return s_instance;
> }
> 
> ConcurrentTaskManager::~ConcurrentTaskManager()
> {
> }
> 
> void ConcurrentTaskManager::startQueuedTasks()
> {
>     foreach (const TaskPointer &wp, m_tasks) {
>         if (wp && wp.data()) {
>             wp.data()->startQueued();
>         }
>     }
> }
> 
> void ConcurrentTaskManager::addConcurrentTask(ConcurrentTask* task)
> {
>     if (m_cancel) {
>         return;
>     }
> 
>     m_tasks.append(TaskPointer(task));
> }
> 
> void ConcurrentTaskManager::finish()
> {
>     m_cancel = true;
> 
>     foreach (const TaskPointer &wp, m_tasks) {
>         if (wp && wp.data()) {
>             wp.data()->setCanceled();
>         }
>     }
> 
>     sApp->tasksThreadPool()->waitForDone();
> }
> 
> bool ConcurrentTaskManager::isAllTaskCanceled()
> {
>     return m_cancel;
> }
> 
> void ConcurrentTaskManager::switchToStartState()
> {
>     m_cancel = false;
> }
> 
> ConcurrentTaskManager::ConcurrentTaskManager(QObject* parent)
>     : QObject(parent),
>       m_tasks(),
>       m_cancel(false)
> {
>     connect(sApp->progressManager(), SIGNAL(allTasksCanceled()), this, SLOT(finish()));
> }
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/concurrenttasks.h lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/concurrenttasks.h
1,118c1,118
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< 
< #ifndef CONCURRENTTASKS_H
< #define CONCURRENTTASKS_H
< 
< #include <QMutex>
< #include <QRunnable>
< #include <QtConcurrentRun>
< #include <QVariant>
< 
< #if QT_VERSION < 0x050000
< #include <QWeakPointer>
< #else
< #include <QPointer>
< #endif
< 
< class FutureProgress;
< 
< class ConcurrentTask : public QObject, QRunnable
< {
<     Q_OBJECT
< 
< public:
<     explicit ConcurrentTask(QObject* parent = 0);
<     ~ConcurrentTask();
< 
<     void start(const QString &type, const QVariantHash &argumants = QVariantHash(), bool queued = false);
< 
< #ifdef SAAGHAR_DEBUG
<     void directStart(const QString &type, const QVariantHash &argumants = QVariantHash());
< #endif
< 
<     void run();
< 
<     void startQueued();
< 
< public slots:
<     void setCanceled();
< 
< private:
<     bool isCanceled();
<     QVariant startSearch(const QVariantHash &options);
<     QVariant checkForUpdates();
<     QVariant cleanUpDatabase();
< 
<     QMutex m_mutex;
<     QString m_type;
<     QVariantHash m_options;
<     bool m_cancel;
< 
<     bool m_displayFullNotification;
< 
<     QFutureInterface<void>* m_progressObject;
<     FutureProgress* m_futureProgress;
< 
<     bool m_isQueued;
<     bool m_shouldPrependTask;
< 
<     QObject* m_searchUiObject;
< 
< signals:
<     void concurrentResultReady(const QString &type, const QVariant &results);
<     void searchStatusChanged(const QString &);
<     void canceled();
< };
< 
< class ConcurrentTaskManager : public QObject
< {
<     Q_OBJECT
< 
< public:
<     static ConcurrentTaskManager* instance();
<     ~ConcurrentTaskManager();
< 
<     void startQueuedTasks();
<     void addConcurrentTask(ConcurrentTask* task);
< 
<     bool isAllTaskCanceled();
<     void switchToStartState();
< 
< public slots:
<     void finish();
< 
< private:
<     Q_DISABLE_COPY(ConcurrentTaskManager)
<     ConcurrentTaskManager(QObject* parent = 0);
<     static ConcurrentTaskManager* s_instance;
< 
< #if QT_VERSION < 0x050000
<     typedef QWeakPointer<ConcurrentTask> TaskPointer;
< #else
<     typedef QPointer<ConcurrentTask> TaskPointer;
< #endif
< 
<     QList<TaskPointer> m_tasks;
<     bool m_cancel;
< };
< 
< #endif // CONCURRENTTASKS_H
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> 
> #ifndef CONCURRENTTASKS_H
> #define CONCURRENTTASKS_H
> 
> #include <QMutex>
> #include <QRunnable>
> #include <QtConcurrentRun>
> #include <QVariant>
> 
> #if QT_VERSION < 0x050000
> #include <QWeakPointer>
> #else
> #include <QPointer>
> #endif
> 
> class FutureProgress;
> 
> class ConcurrentTask : public QObject, QRunnable
> {
>     Q_OBJECT
> 
> public:
>     explicit ConcurrentTask(QObject* parent = 0);
>     ~ConcurrentTask();
> 
>     void start(const QString &type, const QVariantHash &argumants = QVariantHash(), bool queued = false);
> 
> #ifdef SAAGHAR_DEBUG
>     void directStart(const QString &type, const QVariantHash &argumants = QVariantHash());
> #endif
> 
>     void run();
> 
>     void startQueued();
> 
> public slots:
>     void setCanceled();
> 
> private:
>     bool isCanceled();
>     QVariant startSearch(const QVariantHash &options);
>     QVariant checkForUpdates();
>     QVariant cleanUpDatabase();
> 
>     QMutex m_mutex;
>     QString m_type;
>     QVariantHash m_options;
>     bool m_cancel;
> 
>     bool m_displayFullNotification;
> 
>     QFutureInterface<void>* m_progressObject;
>     FutureProgress* m_futureProgress;
> 
>     bool m_isQueued;
>     bool m_shouldPrependTask;
> 
>     QObject* m_searchUiObject;
> 
> signals:
>     void concurrentResultReady(const QString &type, const QVariant &results);
>     void searchStatusChanged(const QString &);
>     void canceled();
> };
> 
> class ConcurrentTaskManager : public QObject
> {
>     Q_OBJECT
> 
> public:
>     static ConcurrentTaskManager* instance();
>     ~ConcurrentTaskManager();
> 
>     void startQueuedTasks();
>     void addConcurrentTask(ConcurrentTask* task);
> 
>     bool isAllTaskCanceled();
>     void switchToStartState();
> 
> public slots:
>     void finish();
> 
> private:
>     Q_DISABLE_COPY(ConcurrentTaskManager)
>     ConcurrentTaskManager(QObject* parent = 0);
>     static ConcurrentTaskManager* s_instance;
> 
> #if QT_VERSION < 0x050000
>     typedef QWeakPointer<ConcurrentTask> TaskPointer;
> #else
>     typedef QPointer<ConcurrentTask> TaskPointer;
> #endif
> 
>     QList<TaskPointer> m_tasks;
>     bool m_cancel;
> };
> 
> #endif // CONCURRENTTASKS_H
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databasebrowser.cpp lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databasebrowser.cpp
1,1909c1,1909
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< 
< #include "databasebrowser.h"
< #include "nodatabasedialog.h"
< #include "searchresultwidget.h"
< #include "tools.h"
< #include "concurrenttasks.h"
< #include "saagharapplication.h"
< #include "settingsmanager.h"
< #include "saagharwidget.h"
< 
< #include <QApplication>
< #include <QMessageBox>
< #include <QSqlQuery>
< #include <QFileInfo>
< #include <QFileDialog>
< #include <QTime>
< #include <QPushButton>
< #include <QTimer>
< #include <QTreeWidgetItem>
< #include <QThread>
< 
< DatabaseBrowser* DatabaseBrowser::s_instance = 0;
< QMultiHash<QThread*, QString> DatabaseBrowser::s_threadConnections;
< 
< DataBaseUpdater* DatabaseBrowser::dbUpdater = 0;
< QString DatabaseBrowser::s_defaultConnectionId;
< QString DatabaseBrowser::s_defaultDatabaseFileName;
< bool DatabaseBrowser::s_isDefaultDatabaseSet = false;
< 
< const int minNewPoetID = 1001;
< const int minNewCatID = 10001;
< const int minNewPoemID = 100001;
< 
< const int DatabaseVersion = 1;
< 
< #ifdef EMBEDDED_SQLITE
< QSQLiteDriver* DatabaseBrowser::sqlDriver = 0;
< #else
< const QString sqlDriver = "QSQLITE";
< #endif
< 
< static QString threadToString(QThread* thread = 0)
< {
<     return QString::number((quintptr)(thread ? thread : QThread::currentThread()));
< }
< 
< DatabaseBrowser::DatabaseBrowser(const QString &sqliteDbCompletePath)
< {
<     Q_ASSERT(s_instance == 0);
< 
<     s_instance = this;
< 
<     qRegisterMetaType<SearchResults>("SearchResults");
< 
<     setObjectName(QLatin1String("DatabaseBrowser"));
< 
<     QFileInfo dBFile(sqliteDbCompletePath);
<     QString pathOfDatabase = dBFile.absolutePath();
< 
< #ifdef EMBEDDED_SQLITE
<     sqlite3* connection;
<     sqlite3_open(sqliteDbCompletePath.toUtf8().data(), &connection);
<     sqlDriver = new QSQLiteDriver(connection);
< #endif
< 
<     QString defaultConnectionId = getIdForDataBase(sqliteDbCompletePath);
< 
<     while (!dBFile.exists() || !database(defaultConnectionId).open() || !isValid(defaultConnectionId)) {
<         if (splashScreen(QWidget)) {
<             splashScreen(QWidget)->close();
<             Tools::setSplashScreen(0);
<         }
< 
<         QString errorString = database(defaultConnectionId).lastError().text();
< 
<         removeDatabase(defaultConnectionId);
< 
<         NoDataBaseDialog noDataBaseDialog(0, Qt::WindowStaysOnTopHint);
<         noDataBaseDialog.ui->pathLabel->setText(tr("Data Base Path:") + " " + sqliteDbCompletePath);
<         noDataBaseDialog.ui->errorLabel->setText(tr("Error:") + " " + (errorString.isEmpty() ? tr("No Error!") : errorString));
< 
<         QtWin::easyBlurUnBlur(&noDataBaseDialog, VARB("SaagharWindow/UseTransparecy"));
< 
<         noDataBaseDialog.exec();
< 
<         if (noDataBaseDialog.clickedButton() != noDataBaseDialog.ui->exitPushButton) {
<             if (noDataBaseDialog.clickedButton() == noDataBaseDialog.ui->selectDataBase) {
<                 QString dir = QFileDialog::getExistingDirectory(0, tr("Add Path For Data Base"), dBFile.absoluteDir().path(), QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks);
<                 if (!dir.isEmpty()) {
<                     dir.replace(QString("\\"), QString("/"));
<                     if (!dir.endsWith('/')) {
<                         dir += "/";
<                     }
<                     dBFile.setFile(dir + "/ganjoor.s3db");
< 
<                     //don't open it here!
<                     defaultConnectionId = getIdForDataBase(dir + "/ganjoor.s3db");
< 
<                     pathOfDatabase = dir;
<                 }
<                 else {
<                     QMessageBox::information(0, tr("Exit"), tr("Saaghar could not find database file and will be closed."));
<                     exit(0);
<                 }
<             }
<             else if (noDataBaseDialog.clickedButton() == noDataBaseDialog.ui->createDataBaseFromLocal
<                      ||
<                      noDataBaseDialog.clickedButton() == noDataBaseDialog.ui->createDataBaseFromRemote) {
<                 //do download job!!
<                 QFileDialog getDir(0, tr("Select Save Location"), dBFile.absoluteDir().path());
<                 getDir.setFileMode(QFileDialog::Directory);
<                 getDir.setOptions(QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks /*| QFileDialog::DontUseNativeDialog*/);
<                 getDir.setAcceptMode(QFileDialog::AcceptOpen);
< 
<                 if (getDir.exec() != QFileDialog::Accepted) {
<                     QMessageBox::information(0, tr("Exit"), tr("Saaghar could not find database file and will be closed."));
<                     exit(0);
<                 }
< 
<                 QString dir = "";
<                 if (!getDir.selectedFiles().isEmpty()) {
<                     dir = getDir.selectedFiles().at(0);
<                 }
< 
<                 while (dir.isEmpty() || QFile::exists(dir + "/ganjoor.s3db")) {
<                     getDir.exec();
<                     if (!getDir.selectedFiles().isEmpty()) {
<                         dir = getDir.selectedFiles().at(0);
<                     }
< //                  dir = QFileDialog::getExistingDirectory(0,tr("Select Save Location"), dir.isEmpty() ? dBFile.absoluteDir().path() : dir, QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks | QFileDialog::DontUseNativeDialog);
<                 }
<                 // now dir is not empty and it doesn't contain 'ganjoor.s3db'
<                 dir.replace(QString("\\"), QString("/"));
<                 if (!dir.endsWith('/')) {
<                     dir += "/";
<                 }
<                 dBFile.setFile(dir + "/ganjoor.s3db");
< 
<                 defaultConnectionId = getIdForDataBase(dir + "/ganjoor.s3db");
< 
<                 if (!database().open()) {
<                     QMessageBox::information(0, tr("Cannot open Database File!"), tr("Cannot open database file, please check if you have write permisson.\nError: %1\nDataBase Path=%2").arg(errorString).arg(dir));
<                     exit(1);
<                 }
<                 //insert main tables
<                 bool tablesInserted = createEmptyDataBase(defaultConnectionId);
<                 qDebug() << "insert main tables: " << tablesInserted;
<                 if (!tablesInserted) {
<                     QFile::remove(dir + "/ganjoor.s3db");
<                     exit(1);
<                 }
<                 m_addRemoteDataSet = noDataBaseDialog.clickedButton() == noDataBaseDialog.ui->createDataBaseFromRemote;
<                 QTimer::singleShot(0, this, SLOT(addDataSets()));
< 
<                 pathOfDatabase = dir;
<             }
<         }
<         else {
<             exit(1);
<         }
<     }
< 
<     s_defaultConnectionId = defaultConnectionId;
< 
<     // Saaghar just uses its first search path
<     sApp->setDefaultPath(SaagharApplication::DatabaseDirs, QDir::toNativeSeparators(pathOfDatabase));
< 
<     cachedMaxCatID = cachedMaxPoemID = 0;
< }
< 
< DatabaseBrowser::~DatabaseBrowser()
< {
< }
< 
< QString DatabaseBrowser::databaseFileFromID(const QString &connectionID)
< {
<     return connectionID.left(connectionID.lastIndexOf(QLatin1String("/thread:")));
< }
< 
< DatabaseBrowser* DatabaseBrowser::instance()
< {
<     if (!s_instance) {
<         if (!s_isDefaultDatabaseSet) {
<             qFatal("In first place you have to use DatabaseBrowser::setDefaultDatabasename() to set default database.");
<             exit(1);
<         }
<         new DatabaseBrowser(s_defaultDatabaseFileName);
<     }
< 
<     return s_instance;
< }
< 
< QSqlDatabase DatabaseBrowser::database(const QString &connectionID, bool open)
< {
<     return QSqlDatabase::database(connectionID, open);
< }
< 
< QString DatabaseBrowser::defaultDatabasename()
< {
<     return s_defaultDatabaseFileName;
< }
< 
< void DatabaseBrowser::setDefaultDatabasename(const QString &databaseName)
< {
<     s_isDefaultDatabaseSet = true;
<     s_defaultDatabaseFileName = databaseName;
< }
< 
< bool DatabaseBrowser::isConnected(const QString &connectionID)
< {
<     return database(connectionID, true).isOpen();
< }
< 
< bool DatabaseBrowser::isValid(QString connectionID)
< {
<     QSqlDatabase db = database(connectionID);
< 
<     if (db.open()) {
<         return db.tables().contains("cat");
<     }
< 
<     return false;
< }
< 
< QList<GanjoorPoet*> DatabaseBrowser::getPoets(const QString &connectionID, bool sort)
< {
<     QList<GanjoorPoet*> poets;
<     if (isConnected(connectionID)) {
<         QSqlDatabase databaseObject = database(connectionID);
< 
<         QSqlQuery q(databaseObject);
<         bool descriptionExists = false;
<         if (q.exec("SELECT id, name, cat_id, description FROM poet")) {
<             descriptionExists = true;
<         }
<         else {
<             q.exec("SELECT id, name, cat_id FROM poet");
<         }
< 
<         q.first();
<         while (q.isValid() && q.isActive()) {
<             GanjoorPoet* gPoet = new GanjoorPoet();
<             QSqlRecord qrec = q.record();
<             if (descriptionExists) {
<                 gPoet->init(qrec.value(0).toInt(), qrec.value(1).toString(), qrec.value(2).toInt(), qrec.value(3).toString());
<             }
<             else {
<                 gPoet->init(qrec.value(0).toInt(), qrec.value(1).toString(), qrec.value(2).toInt(), "");
<             }
<             poets.append(gPoet);
<             if (!q.next()) {
<                 break;
<             }
<         }
<         if (sort) {
<             qSort(poets.begin(), poets.end(), comparePoetsByName);
<         }
<     }
< 
<     return poets;
< }
< 
< bool DatabaseBrowser::comparePoetsByName(GanjoorPoet* poet1, GanjoorPoet* poet2)
< {
<     static bool isEnglish = VARS("General/UILanguage") == LS("en");
< 
<     if (isEnglish) {
<         return (QString::localeAwareCompare(poet1->_Name, poet2->_Name) < 0);
<     }
<     else {
<         const bool poet1IsRtl = poet1->_Name.isRightToLeft();
<         const bool poet2IsRtl = poet2->_Name.isRightToLeft();
< 
<         if ((poet1IsRtl && poet2IsRtl) || (!poet1IsRtl && !poet2IsRtl)) {
<             return (QString::localeAwareCompare(poet1->_Name, poet2->_Name) < 0);
<         }
<         else {
<             if (poet1IsRtl && !poet2IsRtl) {
<                 return true;
<             }
<             else {
<                 return false;
<             }
<         }
<     }
< }
< 
< bool DatabaseBrowser::compareCategoriesByName(GanjoorCat* cat1, GanjoorCat* cat2)
< {
<     static bool isEnglish = VARS("General/UILanguage") == LS("en");
< 
<     if (isEnglish) {
<         return (QString::localeAwareCompare(cat1->_Text, cat2->_Text) < 0);
<     }
<     else {
<         const bool cat1IsRtl = cat1->_Text.isRightToLeft();
<         const bool cat2IsRtl = cat2->_Text.isRightToLeft();
< 
<         if ((cat1IsRtl && cat2IsRtl) || (!cat1IsRtl && !cat2IsRtl)) {
<             return (QString::localeAwareCompare(cat1->_Text, cat2->_Text) < 0);
<         }
<         else {
<             if (cat1IsRtl && !cat2IsRtl) {
<                 return true;
<             }
<             else {
<                 return false;
<             }
<         }
<     }
< }
< 
< GanjoorCat DatabaseBrowser::getCategory(int CatID, const QString &connectionID)
< {
<     GanjoorCat gCat;
<     gCat.init();
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
<         q.exec("SELECT poet_id, text, parent_id, url FROM cat WHERE id = " + QString::number(CatID));
<         q.first();
<         if (q.isValid() && q.isActive()) {
<             QSqlRecord qrec = q.record();
<             gCat.init(
<                 CatID,
<                 (qrec.value(0)).toInt(),
<                 (qrec.value(1)).toString(),
<                 (qrec.value(2)).toInt(),
<                 (qrec.value(3)).toString());
<             return gCat;
<         }
<     }
<     return gCat;
< }
< 
< void DatabaseBrowser::removeThreadsConnections(QObject* obj)
< {
<     QThread* thread = qobject_cast<QThread*>(obj);
< 
<     if (thread) {
<         QStringList connections = s_threadConnections.values(thread);
< 
<         foreach (const QString &connection, connections) {
<             QSqlDatabase::removeDatabase(connection);
<         }
< 
< #ifdef SAAGHAR_DEBUG
<         qDebug() << "thread destroyed:" << thread;
< #endif
<     }
< }
< 
< QList<GanjoorCat*> DatabaseBrowser::getSubCategories(int CatID, const QString &connectionID)
< {
<     QList<GanjoorCat*> lst;
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
<         q.exec("SELECT poet_id, text, url, ID FROM cat WHERE parent_id = " + QString::number(CatID));
<         q.first();
<         while (q.isValid() && q.isActive()) {
<             QSqlRecord qrec = q.record();
<             GanjoorCat* gCat = new GanjoorCat();
<             gCat->init((qrec.value(3)).toInt(), (qrec.value(0)).toInt(), (qrec.value(1)).toString(), CatID, (qrec.value(2)).toString());
<             lst.append(gCat);
<             if (!q.next()) {
<                 break;
<             }
<         }
<         if (CatID == 0) {
<             qSort(lst.begin(), lst.end(), compareCategoriesByName);
<         }
<     }
<     return lst;
< }
< 
< QList<GanjoorCat> DatabaseBrowser::getParentCategories(GanjoorCat Cat, const QString &connectionID)
< {
<     QList<GanjoorCat> lst;
<     if (isConnected(connectionID)) {
<         while (!Cat.isNull() && Cat._ParentID != 0) {
<             Cat = getCategory(Cat._ParentID, connectionID);
<             lst.insert(0, Cat);
<         }
<         GanjoorCat gCat;
<         gCat.init(0, 0, SaagharWidget::rootTitle(), 0, QString());
<         lst.insert(0, gCat);
<     }
<     return lst;
< }
< 
< QList<GanjoorPoem*> DatabaseBrowser::getPoems(int CatID, const QString &connectionID)
< {
<     QList<GanjoorPoem*> lst;
<     if (isConnected(connectionID)) {
<         QString selectQuery = QString("SELECT ID, title, url FROM poem WHERE cat_id = %1 ORDER BY ID").arg(CatID);
<         QSqlQuery q(database(connectionID));
<         q.exec(selectQuery);
<         q.first();
<         QSqlRecord qrec;
<         while (q.isValid() && q.isActive()) {
<             qrec = q.record();
<             GanjoorPoem* gPoem = new GanjoorPoem();
<             gPoem->init((qrec.value(0)).toInt(), CatID, (qrec.value(1)).toString(), (qrec.value(2)).toString(), false, "");
<             lst.append(gPoem);
<             if (!q.next()) {
<                 break;
<             }
<         }
<     }
<     return lst;
< }
< 
< QList<GanjoorVerse*> DatabaseBrowser::getVerses(int PoemID, const QString &connectionID)
< {
<     return getVerses(PoemID, 0, connectionID);
< }
< 
< QString DatabaseBrowser::getFirstMesra(int PoemID, const QString &connectionID) //just first Mesra
< {
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
<         QString selectQuery = QString("SELECT vorder, text FROM verse WHERE poem_id = %1 order by vorder LIMIT 1").arg(PoemID);
<         q.exec(selectQuery);
<         q.first();
<         while (q.isValid() && q.isActive()) {
<             return Tools::snippedText(q.record().value(1).toString(), "", 0, 12, true);
<         }
<     }
<     return QString();
< }
< 
< QList<GanjoorVerse*> DatabaseBrowser::getVerses(int PoemID, int Count, const QString &connectionID)
< {
<     QList<GanjoorVerse*> lst;
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
<         QString selectQuery = QString("SELECT vorder, position, text FROM verse WHERE poem_id = %1 order by vorder" + (Count > 0 ? " LIMIT " + QString::number(Count) : "")).arg(PoemID);
<         q.exec(selectQuery);
<         q.first();
<         while (q.isValid() && q.isActive()) {
<             QSqlRecord qrec = q.record();
<             GanjoorVerse* gVerse = new GanjoorVerse();
<             gVerse->init(PoemID, (qrec.value(0)).toInt(), (VersePosition)((qrec.value(1)).toInt()), (qrec.value(2)).toString());
<             lst.append(gVerse);
<             if (!q.next()) {
<                 break;
<             }
<         }
<     }
<     return lst;
< }
< 
< GanjoorPoem DatabaseBrowser::getPoem(int PoemID, const QString &connectionID)
< {
<     GanjoorPoem gPoem;
<     gPoem.init();
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
<         q.exec("SELECT cat_id, title, url FROM poem WHERE ID = " + QString::number(PoemID));
<         q.first();
<         if (q.isValid() && q.isActive()) {
<             QSqlRecord qrec = q.record();
<             gPoem.init(PoemID, (qrec.value(0)).toInt(), (qrec.value(1)).toString(), (qrec.value(2)).toString(), false, QString(""));
<             return gPoem;
<         }
<     }
<     return gPoem;
< }
< 
< GanjoorPoem DatabaseBrowser::getNextPoem(int PoemID, int CatID, const QString &connectionID)
< {
<     GanjoorPoem gPoem;
<     gPoem.init();
<     if (isConnected(connectionID) && PoemID != -1) { // PoemID==-1 when getNextPoem(GanjoorPoem poem) pass null poem
<         QSqlQuery q(database(connectionID));
<         q.exec(QString("SELECT ID FROM poem WHERE cat_id = %1 AND id>%2 LIMIT 1").arg(CatID).arg(PoemID));
<         q.first();
<         if (q.isValid() && q.isActive()) {
<             QSqlRecord qrec = q.record();
<             gPoem = getPoem(qrec.value(0).toInt(), connectionID);
<             return gPoem;
<         }
<     }
<     return gPoem;
< }
< 
< GanjoorPoem DatabaseBrowser::getNextPoem(GanjoorPoem poem, const QString &connectionID)
< {
<     return getNextPoem(poem._ID, poem._CatID, connectionID);
< }
< 
< GanjoorPoem DatabaseBrowser::getPreviousPoem(int PoemID, int CatID, const QString &connectionID)
< {
<     GanjoorPoem gPoem;
<     gPoem.init();
<     if (isConnected(connectionID) && PoemID != -1) { // PoemID==-1 when getPreviousPoem(GanjoorPoem poem) pass null poem
<         QSqlQuery q(database(connectionID));
<         q.exec(QString("SELECT ID FROM poem WHERE cat_id = %1 AND id<%2 ORDER BY ID DESC LIMIT 1").arg(CatID).arg(PoemID));
<         q.first();
<         if (q.isValid() && q.isActive()) {
<             QSqlRecord qrec = q.record();
<             gPoem = getPoem(qrec.value(0).toInt(), connectionID);
<             return gPoem;
<         }
<     }
<     return gPoem;
< }
< 
< GanjoorPoem DatabaseBrowser::getPreviousPoem(GanjoorPoem poem, const QString &connectionID)
< {
<     return getPreviousPoem(poem._ID, poem._CatID, connectionID);
< }
< 
< GanjoorPoet DatabaseBrowser::getPoetForPoem(int poemID, const QString &connectionID)
< {
<     const GanjoorPoem poem = getPoem(poemID, connectionID);
< 
<     if (poem.isNull()) {
<         return GanjoorPoet();
<     }
< 
<     return getPoetForCat(poem._CatID, connectionID);
< }
< 
< GanjoorPoet DatabaseBrowser::getPoetForCat(int CatID, const QString &connectionID)
< {
<     GanjoorPoet gPoet;
<     gPoet.init();
<     if (CatID == 0) {
<         gPoet.init(0, tr("All"), 0);
<         return gPoet;
<     }
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
<         q.exec("SELECT poet_id FROM cat WHERE id = " + QString::number(CatID));
<         q.first();
<         if (q.isValid() && q.isActive()) {
<             QSqlRecord qrec = q.record();
<             return getPoet(qrec.value(0).toInt(), connectionID);
<         }
<     }
<     return gPoet;
< }
< 
< GanjoorPoet DatabaseBrowser::getPoet(int PoetID, const QString &connectionID)
< {
<     GanjoorPoet gPoet;
<     gPoet.init();
<     if (PoetID == 0) {
<         gPoet.init(0, tr("All"), 0);
<         return gPoet;
<     }
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
< 
<         bool descriptionExists = false;
<         if (q.exec("SELECT id, name, cat_id, description FROM poet WHERE id = " + QString::number(PoetID))) {
<             descriptionExists = true;
<         }
<         else {
<             q.exec("SELECT id, name, cat_id FROM poet WHERE id = " + QString::number(PoetID));
<         }
< 
<         q.first();
<         if (q.isValid() && q.isActive()) {
<             QSqlRecord qrec = q.record();
<             if (descriptionExists) {
<                 gPoet.init((qrec.value(0)).toInt(), (qrec.value(1)).toString(), (qrec.value(2)).toInt(), (qrec.value(3)).toString());
<             }
<             else {
<                 gPoet.init((qrec.value(0)).toInt(), (qrec.value(1)).toString(), (qrec.value(2)).toInt(), "");
<             }
< 
<             return gPoet;
<         }
<     }
<     return gPoet;
< }
< 
< QString DatabaseBrowser::getPoetDescription(int PoetID, const QString &connectionID)
< {
<     if (PoetID <= 0) {
<         return "";
<     }
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
<         q.exec("SELECT description FROM poet WHERE id = " + QString::number(PoetID));
<         q.first();
<         if (q.isValid() && q.isActive()) {
<             QSqlRecord qrec = q.record();
<             return (qrec.value(0)).toString();
<         }
<     }
<     return "";
< }
< 
< QString DatabaseBrowser::getPoemMediaSource(int PoemID, const QString &connectionID)
< {
<     if (PoemID <= 0) {
<         return "";
<     }
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
<         q.exec("SELECT mediasource FROM poem WHERE id = " + QString::number(PoemID));
<         q.first();
<         if (q.isValid() && q.isActive()) {
<             QSqlRecord qrec = q.record();
<             return (qrec.value(0)).toString();
<         }
<     }
<     return "";
< }
< 
< void DatabaseBrowser::setPoemMediaSource(int PoemID, const QString &fileName, const QString &connectionID)
< {
<     if (PoemID <= 0) {
<         return;
<     }
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
<         QString strQuery = "";
<         if (!database().record("poem").contains("mediasource")) {
<             strQuery = QString("ALTER TABLE %1 ADD COLUMN %2 %3").arg("poem").arg("mediasource").arg("NVARCHAR(255)");
<             q.exec(strQuery);
<             //q.finish();
<         }
< 
<         strQuery = QString("UPDATE poem SET mediasource = \"%1\" WHERE id = %2 ;").arg(fileName).arg(PoemID);
<         //q.exec(strQuery);
<         //PRAGMA TABLE_INFO(poem);
< 
< 
<         //QString("REPLACE INTO poem (id, cat_id, title, url, mediasource) VALUES (%1, %2, \"%3\", \"%4\", \"%5\");").arg(newPoem->_ID).arg(newPoem->_CatID).arg(newPoem->_Title).arg(newPoem->_Url).arg(fileName);
<         //qDebug() << "setPoemMediaSource="<< q.exec(strQuery);
< //      q.first();
< //      if (q.isValid() && q.isActive())
< //      {
< //          QSqlRecord qrec = q.record();
< //          return (qrec.value(0)).toString();
< //      }
<     }
<     return;
< }
< 
< GanjoorPoet DatabaseBrowser::getPoet(QString PoetName, const QString &connectionID)
< {
<     GanjoorPoet gPoet;
<     gPoet.init();
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
< 
<         bool descriptionExists = false;
<         if (q.exec("SELECT id, name, cat_id, description FROM poet WHERE name = \'" + PoetName + "\'")) {
<             descriptionExists = true;
<         }
<         else {
<             q.exec("SELECT id, name, cat_id FROM poet WHERE name = \'" + PoetName + "\'");
<         }
< 
<         q.first();
<         if (q.isValid() && q.isActive()) {
<             QSqlRecord qrec = q.record();
<             if (descriptionExists) {
<                 gPoet.init((qrec.value(0)).toInt(), (qrec.value(1)).toString(), (qrec.value(2)).toInt(), (qrec.value(3)).toString());
<             }
<             else {
<                 gPoet.init((qrec.value(0)).toInt(), (qrec.value(1)).toString(), (qrec.value(2)).toInt(), "");
<             }
< 
<             return gPoet;
<         }
<     }
<     return gPoet;
< }
< 
< int DatabaseBrowser::getRandomPoemID(int* CatID, const QString &connectionID)
< {
<     if (isConnected(connectionID)) {
<         QList<GanjoorCat*> subCats = getSubCategories(*CatID, connectionID);
<         int randIndex = Tools::getRandomNumber(0, subCats.size());
<         if (randIndex >= 0 && randIndex != subCats.size()) { // '==' is when we want to continue with current 'CatID'. notice maybe 'randIndex == subCats.size() == 0'.
<             *CatID = subCats.at(randIndex)->_ID;
<             return getRandomPoemID(CatID, connectionID);
<         }
< 
<         QString strQuery = "SELECT MIN(id), MAX(id) FROM poem";
<         if (*CatID != 0) {
<             strQuery += " WHERE cat_id=" + QString::number(*CatID);
<         }
<         QSqlQuery q(database(connectionID));
<         q.exec(strQuery);
<         if (q.next()) {
<             QSqlRecord qrec = q.record();
<             int minID = qrec.value(0).toInt();
<             int maxID = qrec.value(1).toInt();
< 
<             if (maxID <= 0 || minID < 0) {
<                 QList<GanjoorCat*> subCats = getSubCategories(*CatID, connectionID);
<                 *CatID = subCats.at(Tools::getRandomNumber(0, subCats.size() - 1))->_ID;
<                 return getRandomPoemID(CatID, connectionID);
<             }
<             return Tools::getRandomNumber(minID, maxID);
<         }
<     }
<     return -1;
< }
< 
< QList<GanjoorPoet*> DatabaseBrowser::getDataBasePoets(const QString fileName)
< {
<     if (!QFile::exists(fileName)) {
<         return QList<GanjoorPoet*>();
<     }
< 
<     QString dataBaseID = getIdForDataBase(fileName);
< 
<     if (!database(dataBaseID).open()) {
<         QSqlDatabase::removeDatabase(dataBaseID);
<         return QList<GanjoorPoet*>();
<     }
< 
<     return getPoets(dataBaseID, false);
< }
< 
< QString DatabaseBrowser::getIdForDataBase(const QString &fileName, QThread* thread)
< {
<     if (thread == 0) {
<         thread = QThread::currentThread();
<     }
< 
<     bool clone = false;
<     const QString &longName = Tools::getLongPathName(fileName);
<     const QString &connectionID = longName + QLatin1String("/thread:") + threadToString(thread);
< 
<     if (!QSqlDatabase::contains(connectionID)) {
<         const QStringList &allConnections = QSqlDatabase::connectionNames();
< 
<         QString id;
<         foreach (id, allConnections) {
<             if (id.startsWith(longName)) {
<                 clone = true;
<                 break;
<             }
<         }
< 
<         QSqlDatabase db = clone
<                           ? QSqlDatabase::cloneDatabase(QSqlDatabase::database(id, false), connectionID)
<                           : QSqlDatabase::addDatabase(sqlDriver, connectionID);
< 
<         db.setDatabaseName(fileName);
<         db.open();
< 
<         s_threadConnections.insert(thread, connectionID);
< 
<         Q_ASSERT(s_instance != 0);
< 
<         connect(thread, SIGNAL(destroyed(QObject*)), s_instance, SLOT(removeThreadsConnections(QObject*)));
<     }
< 
<     return connectionID;
< }
< 
< void DatabaseBrowser::removeDatabase(const QString &fileName, QThread* thread)
< {
<     if (thread == 0) {
<         thread = QThread::currentThread();
<     }
< 
<     QString connectionID = Tools::getLongPathName(fileName) + QLatin1String("/") + threadToString(thread);
< 
<     if (QSqlDatabase::contains(connectionID)) {
<         QSqlDatabase::removeDatabase(connectionID);
< 
<         s_threadConnections.remove(thread, connectionID);
<     }
< }
< 
< QList<GanjoorPoet*> DatabaseBrowser::getConflictingPoets(const QString fileName, const QString &toConnectionID)
< {
<     QList<GanjoorPoet*> conflictList;
<     if (isConnected()) {
<         QList<GanjoorPoet*> dataBasePoets = getDataBasePoets(fileName);
<         QList<GanjoorPoet*> installedPoets = getPoets(toConnectionID);
<         foreach (GanjoorPoet* poet, installedPoets) {
<             foreach (GanjoorPoet* dbPoet, dataBasePoets) {
<                 if (dbPoet->_ID == poet->_ID) {
<                     conflictList << poet;
<                     break;
<                 }
<             }
<         }
<     }
< 
<     return conflictList;
< }
< 
< void DatabaseBrowser::removePoetFromDataBase(int PoetID, const QString &connectionID)
< {
<     if (isConnected(connectionID)) {
<         QString strQuery;
<         QSqlQuery q(database(connectionID));
< 
<         removeCatFromDataBase(getCategory(getPoet(PoetID, connectionID)._CatID, connectionID), connectionID);
< 
<         strQuery = "DELETE FROM poet WHERE id=" + QString::number(PoetID);
<         q.exec(strQuery);
<     }
< }
< 
< void DatabaseBrowser::removeCatFromDataBase(const GanjoorCat &gCat, const QString &connectionID)
< {
<     if (gCat.isNull()) {
<         return;
<     }
<     QList<GanjoorCat*> subCats = getSubCategories(gCat._ID, connectionID);
<     foreach (GanjoorCat* cat, subCats) {
<         removeCatFromDataBase(*cat, connectionID);
<     }
<     if (isConnected(connectionID)) {
<         QString strQuery;
<         QSqlQuery q(database(connectionID));
<         strQuery = "DELETE FROM verse WHERE poem_id IN (SELECT id FROM poem WHERE cat_id=" + QString::number(gCat._ID) + ")";
<         q.exec(strQuery);
<         strQuery = "DELETE FROM poem WHERE cat_id=" + QString::number(gCat._ID);
<         q.exec(strQuery);
<         strQuery = "DELETE FROM cat WHERE id=" + QString::number(gCat._ID);
<         q.exec(strQuery);
<     }
< }
< 
< QString DatabaseBrowser::defaultConnectionId()
< {
<     if (s_defaultConnectionId.isEmpty()) {
<         if (!s_instance) {
<             if (!s_defaultDatabaseFileName.isEmpty()) {
<                 s_instance = new DatabaseBrowser(s_defaultDatabaseFileName);
<             }
<         }
< 
<         if (s_defaultConnectionId.isEmpty()) {
<             qFatal("There is no a default connection!");
<             exit(1);
<         }
<     }
< 
<     return getIdForDataBase(databaseFileFromID(s_defaultConnectionId), QThread::currentThread());
< }
< 
< int DatabaseBrowser::getNewPoetID(const QString &connectionID)
< {
<     int newPoetID = -1;
< 
<     if (isConnected(connectionID)) {
<         QString strQuery = "SELECT MAX(id) FROM poet";
<         QSqlQuery q(database(connectionID));
<         q.exec(strQuery);
< 
<         if (q.first()) {
<             bool ok = false;
<             newPoetID = q.value(0).toInt(&ok) + 1;
<             if (!ok) {
<                 newPoetID = minNewPoetID + 1;
<             }
<         }
<     }
< 
<     if (newPoetID < minNewPoetID) {
<         newPoetID = minNewPoetID + 1;
<     }
< 
<     return newPoetID;
< }
< int DatabaseBrowser::getNewPoemID(const QString &connectionID)
< {
<     int newPoemID = -1;
< 
<     if (isConnected(connectionID)) {
<         QString strQuery = "SELECT MAX(id) FROM poem";
<         QSqlQuery q(database(connectionID));
<         q.exec(strQuery);
< 
<         if (q.first()) {
<             bool ok = false;
<             newPoemID = q.value(0).toInt(&ok) + 1;
<             if (!ok) {
<                 newPoemID = minNewPoemID + 1;
<             }
<         }
<     }
< 
<     if (newPoemID < minNewPoemID) {
<         newPoemID = minNewPoemID + 1;
<     }
< 
<     return newPoemID;
< }
< 
< int DatabaseBrowser::getNewCatID(const QString &connectionID)
< {
<     int newCatID = -1;
< 
<     if (isConnected(connectionID)) {
<         QString strQuery = "SELECT MAX(id) FROM cat";
<         QSqlQuery q(database(connectionID));
<         q.exec(strQuery);
< 
<         if (q.first()) {
<             bool ok = false;
<             newCatID = q.value(0).toInt(&ok) + 1;
<             if (!ok) {
<                 newCatID = minNewCatID + 1;
<             }
<         }
<     }
< 
<     if (newCatID < minNewCatID) {
<         newCatID = minNewCatID + 1;
<     }
< 
<     return newCatID;
< }
< 
< bool DatabaseBrowser::importDataBase(const QString &fromFileName, const QString &toConnectionID)
< {
<     if (!QFile::exists(fromFileName)) {
<         return false;
<     }
< 
<     QString connectionID = getIdForDataBase(fromFileName);
< 
<     if (!database(connectionID).open() || !isValid(connectionID)) {
<         QSqlDatabase::removeDatabase(connectionID);
<         return false;
<     }
< 
<     {
<         // start of block
<         QList<GanjoorPoet*> poets = getPoets(connectionID, false);
< 
<         QString strQuery;
<         QSqlQuery queryObject(database(connectionID));
<         QMap<int, int> mapPoets;
<         QMap<int, int> mapCats;
< 
<         foreach (GanjoorPoet* newPoet, poets) {
<             bool insertNewPoet = true;
< 
<             //skip every null poet(poet without subcat)
<             if (!poetHasSubCats(newPoet->_ID, connectionID)) {
<                 continue;
<             }
< 
<             GanjoorPoet poet = getPoet(newPoet->_Name, toConnectionID);
<             if (!poet.isNull()) { //conflict on Names
<                 if (poet._ID == newPoet->_ID) {
<                     insertNewPoet = false;
<                     mapPoets.insert(newPoet->_ID, newPoet->_ID);
<                     GanjoorCat poetCat = getCategory(newPoet->_CatID, toConnectionID);
<                     if (!poetCat.isNull()) {
<                         if (poetCat._PoetID == newPoet->_ID) {
<                             mapCats.insert(newPoet->_CatID, newPoet->_CatID);
<                         }
<                         else {
<                             int aRealyNewCatID = getNewCatID(toConnectionID);
<                             mapCats.insert(newPoet->_CatID, getNewCatID(toConnectionID));
<                             newPoet->_CatID = aRealyNewCatID;
<                         }
<                     }
<                 }
<                 else {
<                     mapPoets.insert(newPoet->_ID, poet._ID);
<                     mapPoets.insert(newPoet->_CatID, poet._CatID);
<                     newPoet->_CatID = poet._CatID;
<                 }
<             }
<             else {
<                 if (!getPoet(newPoet->_ID, toConnectionID).isNull()) { //conflict on IDs
<                     int aRealyNewPoetID = getNewPoetID(toConnectionID);
<                     mapPoets.insert(newPoet->_ID, aRealyNewPoetID);
<                     newPoet->_ID = aRealyNewPoetID;
< 
<                     int aRealyNewCatID = getNewCatID(toConnectionID);
<                     mapCats.insert(newPoet->_CatID, aRealyNewCatID);
<                     newPoet->_CatID = aRealyNewCatID;
<                 }
<                 else { //no conflict, insertNew
<                     mapPoets.insert(newPoet->_ID, newPoet->_ID);
<                     GanjoorCat newPoetCat = getCategory(newPoet->_CatID, toConnectionID);
<                     if (newPoetCat.isNull()) {
<                         mapCats.insert(newPoet->_CatID, newPoet->_CatID);
<                     }
<                     else {
<                         int aRealyNewCatID = getNewCatID();
<                         mapCats.insert(newPoet->_CatID, getNewCatID());
<                         newPoet->_CatID = aRealyNewCatID;
<                     }
<                 }
<             }
< 
<             if (insertNewPoet && isConnected(toConnectionID)) {
<                 strQuery = QString("INSERT INTO poet (id, name, cat_id, description) VALUES (%1, \"%2\", %3, \"%4\");").arg(newPoet->_ID).arg(newPoet->_Name).arg(newPoet->_CatID).arg(newPoet->_Description);
<                 QSqlQuery q(database(toConnectionID));
<                 q.exec(strQuery);
<             }
<         }
< 
<         strQuery = QString("SELECT id, poet_id, text, parent_id, url FROM cat");
<         queryObject.exec(strQuery);
< 
<         QList<GanjoorCat*> gCatList;
<         while (queryObject.next()) {
<             GanjoorCat* gCat = new GanjoorCat();
<             gCat->init(queryObject.value(0).toInt(), queryObject.value(1).toInt(), queryObject.value(2).toString(), queryObject.value(3).toInt(), queryObject.value(4).toString());
<             gCatList.append(gCat);
<         }
< 
<         foreach (GanjoorCat* newCat, gCatList) {
<             newCat->_PoetID = mapPoets.value(newCat->_PoetID, newCat->_PoetID);
<             newCat->_ParentID = mapCats.value(newCat->_ParentID, newCat->_ParentID);
< 
<             bool insertNewCategory = true;
<             GanjoorCat gCat = getCategory(newCat->_ID, toConnectionID);
<             if (!gCat.isNull()) {
<                 if (gCat._PoetID == newCat->_PoetID) {
<                     insertNewCategory = false;
< 
<                     if (mapCats.value(newCat->_ID, -1) == -1) {
<                         mapCats.insert(newCat->_ID, newCat->_ID);
<                     }
<                 }
<                 else {
<                     int aRealyNewCatID = getNewCatID();
<                     mapCats.insert(newCat->_ID, aRealyNewCatID);
<                     newCat->_ID = aRealyNewCatID;
<                 }
<             }
<             else {
<                 if (mapCats.value(newCat->_ID, -1) == -1) {
<                     mapCats.insert(newCat->_ID, newCat->_ID);
<                 }
<             }
< 
<             if (insertNewCategory && isConnected(toConnectionID)) {
<                 strQuery = QString("INSERT INTO cat (id, poet_id, text, parent_id, url) VALUES (%1, %2, \"%3\", %4, \"%5\");").arg(newCat->_ID).arg(newCat->_PoetID).arg(newCat->_Text).arg(newCat->_ParentID).arg(newCat->_Url);
<                 QSqlQuery q(database(toConnectionID));
<                 q.exec(strQuery);
<             }
< 
<             /*if ( getPoet(newCat->_PoetID).isNull() )
<             {
<                 //missing poet
<                 int poetCat;
<                 if (newCat->_ParentID == 0)
<                     poetCat = newCat->_ID;
<                 else
<                 {
<                     //this is not good:
<                     poetCat = newCat->_ParentID;
<                 }
<                 qDebug() << "a new poet should be created";
<                 this.NewPoet("شاعر " + PoetID.ToString(), PoetID, poetCat);
<             }*/
<         }
< 
<         QMap<int, int> dicPoemID;
<         strQuery = "SELECT id, cat_id, title, url FROM poem";
<         queryObject.exec(strQuery);
<         QList<GanjoorPoem*> poemList;
< 
<         while (queryObject.next()) {
<             GanjoorPoem* gPoem = new GanjoorPoem();
<             gPoem->init(queryObject.value(0).toInt(), queryObject.value(1).toInt(), queryObject.value(2).toString(), queryObject.value(3).toString());
<             poemList.append(gPoem);
<         }
< 
<         foreach (GanjoorPoem* newPoem, poemList) {
<             int tmp = newPoem->_ID;
<             if (!getPoem(newPoem->_ID, toConnectionID).isNull()) {
<                 newPoem->_ID = getNewPoemID();
<             }
<             newPoem->_CatID = mapCats.value(newPoem->_CatID, newPoem->_CatID);
<             dicPoemID.insert(tmp, newPoem->_ID);
< 
<             if (isConnected(toConnectionID)) {
<                 strQuery = QString("INSERT INTO poem (id, cat_id, title, url) VALUES (%1, %2, \"%3\", \"%4\");").arg(newPoem->_ID).arg(newPoem->_CatID).arg(newPoem->_Title).arg(newPoem->_Url);
<                 QSqlQuery q(database(toConnectionID));
<                 q.exec(strQuery);
<             }
<         }
< 
<         strQuery = "SELECT poem_id, vorder, position, text FROM verse";
<         queryObject.exec(strQuery);
<         QList<GanjoorVerse*> verseList;
< 
<         while (queryObject.next()) {
<             GanjoorVerse* gVerse = new GanjoorVerse();
<             gVerse->init(queryObject.value(0).toInt(), queryObject.value(1).toInt(), (VersePosition)queryObject.value(2).toInt(), queryObject.value(3).toString());
<             verseList.append(gVerse);
<         }
< 
<         if (isConnected(toConnectionID)) {
<             strQuery = "INSERT INTO verse (poem_id, vorder, position, text) VALUES (:poem_id,:vorder,:position,:text)";
<             QSqlQuery q(database(toConnectionID));
<             q.prepare(strQuery);
< 
<             foreach (GanjoorVerse* newVerse, verseList) {
<                 newVerse->_PoemID = dicPoemID.value(newVerse->_PoemID, newVerse->_PoemID);
<                 q.bindValue(":poem_id", newVerse->_PoemID);
<                 q.bindValue(":vorder", newVerse->_Order);
<                 q.bindValue(":position", newVerse->_Position);
<                 q.bindValue(":text", newVerse->_Text);
<                 q.exec();
<             }
<         }
<     } // end of block
< 
<     QSqlDatabase::removeDatabase(connectionID);
< 
<     emit databaseUpdated(toConnectionID);
< 
<     return true;
< }
< 
< bool DatabaseBrowser::getPoemIDsByPhrase(ConcurrentTask* searchTask, const QString &currentSelectionPath, const QString &currentSelectionPathTitle, const QStringList &phraseList, const QStringList &excludedList,
<         bool* Canceled, bool slowSearch, const QString &connectionID)
< {
<     if (phraseList.isEmpty()) {
<         return false;
<     }
< 
<     QString strQuery;
<     QStringList excludeWhenCleaning;
<     QString searchQueryPhrase;
< //    bool findRhyme = false;
< 
< //    if (phraseList.contains("=", Qt::CaseInsensitive)) {
< //        findRhyme = true;
< //    }
< 
<     QString firstPhrase = phraseList.at(0);
< 
<     if (!firstPhrase.contains("=")) {
<         excludeWhenCleaning << " ";
<     }
<     else {
<         firstPhrase.remove("=");
<     }
< 
<     QString joiner;
<     if (SearchResultWidget::skipVowelSigns) {
<         joiner = QLatin1String("%");
<     }
<     //replace characters that have some variants with anyWord replaceholder!
<     //we have not to worry about this replacement, because phraseList.at(0) is tested again!
<     bool variantPresent = false;
<     if (SearchResultWidget::skipVowelLetters) {
<         QRegExp variantEXP("[" + Tools::Ve_Variant.join("") + Tools::AE_Variant.join("") + Tools::He_Variant.join("") + Tools::Ye_Variant.join("") + "]+");
<         if (firstPhrase.contains(variantEXP)) {
<             firstPhrase.replace(variantEXP, "%");
<             variantPresent = true;
<         }
<     }
< 
<     QStringList anyWordedList = firstPhrase.split("%%", QString::SkipEmptyParts);
<     for (int i = 0; i < anyWordedList.size(); ++i) {
<         QString subPhrase = anyWordedList.at(i);
<         if (SearchResultWidget::skipVowelSigns) {
<             subPhrase.remove("%");
<         }
<         //TODO: remove skipNonAlphabet and replace it with NEAR operator
<         //search for firstPhrase then go for other ones
<         subPhrase = subPhrase.simplified();
<         if (!subPhrase.contains(" ") || variantPresent) {
<             subPhrase = Tools::cleanString(subPhrase, excludeWhenCleaning).split("", QString::SkipEmptyParts).join(joiner);
<         }
<         subPhrase.replace("% %", "%");
<         anyWordedList[i] = subPhrase;
<     }
< 
<     searchQueryPhrase = anyWordedList.join("%");
< 
<     QString taskTitle = currentSelectionPathTitle;
< 
<     if (currentSelectionPath == "ALL") {
<         strQuery = QString("SELECT poem_id, text, vorder FROM verse WHERE text LIKE \'%" + searchQueryPhrase + "%\' ORDER BY poem_id");
<     }
<     else if (currentSelectionPath == "ALL_TITLES") {
<         strQuery = QString("SELECT id, title FROM poem WHERE title LIKE \'%" + searchQueryPhrase + "%\' ORDER BY id");
<     }
<     else {
<         strQuery = QString("SELECT verse.poem_id,verse.text, verse.vorder FROM verse WHERE verse.text LIKE \'%%1%\' AND verse.poem_id IN (SELECT poem.id FROM poem WHERE poem.cat_id IN (%2) ORDER BY poem.id)").arg(searchQueryPhrase).arg(currentSelectionPath);
<     }
< 
<     taskTitle.prepend(tr("Search: "));
< 
<     QVariantHash arguments;
<     // TODO: Add local database support to parallel search
<     VAR_ADD(arguments, connectionID);
<     VAR_ADD(arguments, strQuery);
<     VAR_ADD(arguments, currentSelectionPath);
<     VAR_ADD(arguments, phraseList);
<     VAR_ADD(arguments, excludedList);
<     VAR_ADD(arguments, excludeWhenCleaning);
<     VAR_ADD(arguments, Canceled);
<     VAR_ADD(arguments, slowSearch);
<     VAR_ADD(arguments, taskTitle);
< 
<     searchTask->start("SEARCH", arguments, true);
< 
<     return true;
< }
< 
< bool DatabaseBrowser::isRadif(const QList<GanjoorVerse*> &verses, const QString &phrase, int verseOrder)
< {
<     //verseOrder starts from 1 to verses.size()
<     if (verseOrder <= 0 || verseOrder > verses.size()) {
<         return false;
<     }
< 
<     //QList<GanjoorVerse *> verses = getVerses(PoemID);
< 
<     QString cleanedVerse = Tools::cleanStringFast(verses.at(verseOrder - 1)->_Text, QStringList(""));
<     //cleanedVerse = " "+cleanedVerse+" ";//just needed for whole word
<     QString cleanedPhrase = Tools::cleanStringFast(phrase, QStringList(""));
< 
<     if (!cleanedVerse.contains(cleanedPhrase)) {
<         //verses.clear();
<         return false;
<     }
< 
<     QString secondMesra = "";
<     QList<int> mesraOrdersForCompare;
<     mesraOrdersForCompare  << -1 << -1 << -1;
<     int secondMesraOrder = -1;
< 
<     switch (verses.at(verseOrder - 1)->_Position) {
<     case Right:
<     case CenteredVerse1:
<         if (verseOrder == verses.size()) { //last single beyt! there is no 'CenteredVerse2' or a database error
<             //verses.clear();
<             return false;
<         }
<         if (verses.at(verseOrder)->_Position == Left || verses.at(verseOrder)->_Position == CenteredVerse2) {
<             mesraOrdersForCompare[0] = verseOrder;
<         }
<         else {
<             //verses.clear();
<             return false;
<         }//again database error
<         break;
<     case Left:
<     case CenteredVerse2:
<         if (verseOrder == 1) { //there is just one beyt!! more probably a database error
<             //verses.clear();
<             return false;
<         }
<         if (verses.at(verseOrder - 2)->_Position == Right || verses.at(verseOrder - 2)->_Position == CenteredVerse1) {
<             mesraOrdersForCompare[0] = verseOrder - 2;
<         }
<         if (verseOrder - 3 >= 0 && (verses.at(verseOrder - 3)->_Position == Left || verses.at(verseOrder - 3)->_Position == CenteredVerse2)) {
<             mesraOrdersForCompare[1] = verseOrder - 3;    //mesra above current mesra
<         }
<         if (verseOrder + 1 <= verses.size() - 1 && (verses.at(verseOrder + 1)->_Position == Left || verses.at(verseOrder + 1)->_Position == CenteredVerse2)) {
<             mesraOrdersForCompare[2] = verseOrder + 1;    //mesra above current mesra
<         }
<         if (mesraOrdersForCompare.at(0) == -1 && mesraOrdersForCompare.at(1) == -1 && mesraOrdersForCompare.at(2) == -1) {
<             //verses.clear();
<             return false;
<         }//again database error
<         break;
< 
<     default:
<         break;
<     }
< 
<     for (int i = 0; i < 3; ++i) {
<         secondMesraOrder = mesraOrdersForCompare.at(i);
<         if (secondMesraOrder == -1) {
<             continue;
<         }
<         secondMesra = Tools::cleanStringFast(verses.at(secondMesraOrder)->_Text, QStringList(""));
< 
<         if (!secondMesra.contains(cleanedPhrase)) {
<             //verses.clear();
<             //return false;
<             continue;
<         }
< 
<         QString firstEnding = cleanedVerse.mid(cleanedVerse.lastIndexOf(cleanedPhrase) + cleanedPhrase.size());
<         QString secondEnding = secondMesra.mid(secondMesra.lastIndexOf(cleanedPhrase) + cleanedPhrase.size());
< 
<         if (firstEnding != "" || secondEnding != "") { //they're not empty or RADIF
<             continue;    //return false;
<         }
< 
<         int tmp1 = cleanedVerse.lastIndexOf(cleanedPhrase) - 1;
<         int tmp2 = secondMesra.lastIndexOf(cleanedPhrase) - 1;
<         if (tmp1 < 0 || tmp2 < 0) {
<             continue;    //return false;
<         }
< 
<         return true;
<     }
<     return false;
< }
< 
< bool DatabaseBrowser::isRhyme(const QList<GanjoorVerse*> &verses, const QString &phrase, int verseOrder)
< {
<     //verseOrder starts from 1 to verses.size()
<     if (verseOrder <= 0 || verseOrder > verses.size()) {
<         return false;
<     }
< 
<     QString cleanedVerse = Tools::cleanStringFast(verses.at(verseOrder - 1)->_Text, QStringList(""));
<     QString cleanedPhrase = Tools::cleanStringFast(phrase, QStringList(""));
< 
<     if (!cleanedVerse.contains(cleanedPhrase)) {
<         //verses.clear();
<         return false;
<     }
< 
<     QString secondMesra = "";
<     QList<int> mesraOrdersForCompare;
<     mesraOrdersForCompare  << -1 << -1 << -1;
<     int secondMesraOrder = -1;
< 
<     switch (verses.at(verseOrder - 1)->_Position) {
<     case Right:
<     case CenteredVerse1:
<         if (verseOrder == verses.size()) { //last single beyt! there is no 'CenteredVerse2' or a database error
<             //verses.clear();
<             return false;
<         }
<         if (verses.at(verseOrder)->_Position == Left || verses.at(verseOrder)->_Position == CenteredVerse2) {
<             mesraOrdersForCompare[0] = verseOrder;
<         }
<         else {
<             //verses.clear();
<             return false;
<         }//again database error
<         break;
<     case Left:
<     case CenteredVerse2:
<         if (verseOrder == 1) { //there is just one beyt!! more probably a database error
<             //verses.clear();
<             return false;
<         }
<         if (verses.at(verseOrder - 2)->_Position == Right || verses.at(verseOrder - 2)->_Position == CenteredVerse1) {
<             mesraOrdersForCompare[0] = verseOrder - 2;
<         }
<         if (verseOrder - 3 >= 0 && (verses.at(verseOrder - 3)->_Position == Left || verses.at(verseOrder - 3)->_Position == CenteredVerse2)) {
<             mesraOrdersForCompare[1] = verseOrder - 3;    //mesra above current mesra
<         }
<         if (verseOrder + 1 <= verses.size() - 1 && (verses.at(verseOrder + 1)->_Position == Left || verses.at(verseOrder + 1)->_Position == CenteredVerse2)) {
<             mesraOrdersForCompare[2] = verseOrder + 1;    //mesra above current mesra
<         }
<         if (mesraOrdersForCompare.at(0) == -1 && mesraOrdersForCompare.at(1) == -1 && mesraOrdersForCompare.at(2) == -1) {
<             //verses.clear();
<             return false;
<         }//again database error
<         break;
< 
<     default:
<         break;
<     }
< 
<     for (int i = 0; i < 3; ++i) {
<         secondMesraOrder = mesraOrdersForCompare.at(i);
<         if (secondMesraOrder == -1) {
<             continue;
<         }
<         secondMesra = Tools::cleanStringFast(verses.at(secondMesraOrder)->_Text, QStringList(""));
< 
<         int indexInSecondMesra = secondMesra.lastIndexOf(cleanedPhrase);
<         int offset = cleanedPhrase.size();
<         while (indexInSecondMesra < 0) {
<             --offset;
<             if (offset < 1) {
<                 break;
<             }
<             indexInSecondMesra = secondMesra.lastIndexOf(cleanedPhrase.right(offset));
<         }
<         if (indexInSecondMesra < 0) {
<             continue;
<         }
< 
<         QString firstEnding = cleanedVerse.mid(cleanedVerse.lastIndexOf(cleanedPhrase) + cleanedPhrase.size());
<         QString secondEnding = secondMesra.mid(indexInSecondMesra + cleanedPhrase.right(offset).size()); //secondMesra.mid(secondMesra.lastIndexOf(cleanedPhrase)+cleanedPhrase.size());
< 
<         if (firstEnding != secondEnding) { //they're not empty or RADIF
<             continue;    //return false;
<         }
< 
<         int tmp1 = cleanedVerse.lastIndexOf(cleanedPhrase) - 1;
<         int tmp2 = indexInSecondMesra - 1;
<         if (tmp1 < 0 || tmp2 < 0) {
<             continue;    //return false;
<         }
< 
<         if (cleanedVerse.at(tmp1) == secondMesra.at(tmp2) &&
<                 firstEnding.isEmpty()) { // and so secondEnding
<             //if last character before phrase are similar this is not a Rhyme maybe its RADIF
<             //or a part!!! of Rhyme.
<             //the following algorithm works good for Rhyme with similar spell and diffrent meanings.
<             continue;//return false;
<         }
<         else {
<             return true;
<         }
<     }
<     return false;
< }
< 
< QVariantList DatabaseBrowser::importGanjoorBookmarks(QString connectionID)
< {
<     QVariantList lst;
<     if (isConnected(connectionID)) {
<         QString selectQuery = QString("SELECT poem_id, verse_id FROM fav");
<         QSqlQuery q(database(connectionID));
<         q.exec(selectQuery);
<         QSqlRecord qrec;
<         while (q.next()) {
<             qrec = q.record();
<             int poemID = qrec.value(0).toInt();
<             int verseID = qrec.value(1).toInt();
<             QString comment = QObject::tr("From Desktop Ganjoor");
<             GanjoorPoem poem = getPoem(poemID, connectionID);
<             if (verseID == -1) {
<                 verseID = 1;
<             }
<             QString verseText = getBeyt(poemID, verseID, "[newline]", connectionID).simplified();
<             verseText.replace("[newline]", "\n");
<             verseText.prepend(poem._Title + "\n");
<             QStringList data;
<             data << QString::number(poemID) << QString::number(verseID) << verseText << poem._Url + "/#" + QString::number(verseID) << comment;
<             lst << data;
<         }
<     }
<     return lst;
< }
< 
< QString DatabaseBrowser::getBeyt(int poemID, int firstMesraID, const QString &separator, QString connectionID)
< {
<     QStringList mesras;
<     if (isConnected(connectionID)) {
<         QSqlQuery q(database(connectionID));
<         QString selectQuery = QString("SELECT vorder, position, text FROM verse WHERE poem_id = %1 and vorder >= %2 ORDER BY vorder LIMIT 2").arg(poemID).arg(firstMesraID);
<         q.exec(selectQuery);
<         QSqlRecord qrec;
<         bool centeredVerse1 = false;
<         while (q.next()) {
<             qrec = q.record();
<             VersePosition mesraPosition = VersePosition(qrec.value(1).toInt());
<             if (!centeredVerse1) {
<                 mesras << qrec.value(2).toString();
<             }
<             bool breakLoop = false;
< 
<             switch (mesraPosition) {
<             case Single:
<             case Paragraph:
<                 breakLoop = true;
<                 break;
<             case Right:
<                 break;
<             case Left:
<                 breakLoop = true;
<                 break;
<             case CenteredVerse1:
<                 centeredVerse1 = true;
<                 break;
<             case CenteredVerse2:
<                 if (centeredVerse1) {
<                     mesras << qrec.value(2).toString();
<                 }
<                 breakLoop = true;
<                 break;
<             default:
<                 break;
<             }
<             if (breakLoop) {
<                 break;
<             }
<         }
<     }
<     if (!mesras.isEmpty()) {
<         return mesras.join(separator);
<     }
<     return "";
< }
< 
< bool DatabaseBrowser::poetHasSubCats(int poetID, const QString &connectionID)
< {
<     if (isConnected(connectionID)) {
<         QSqlDatabase dataBaseObject = database(connectionID);
< 
<         QSqlQuery q(dataBaseObject);
<         q.exec("SELECT id, text FROM cat WHERE poet_id = " + QString::number(poetID));
< 
<         q.first();
<         if (q.isValid() && q.isActive()) {
<             return true;
<         }
<         else {
<             return false;
<         }
<     }
<     return false;
< }
< 
< //SearchResults DatabaseBrowser::startSearch(const QString &strQuery, const QSqlDatabase &db,
< //        int PoetID, const QStringList &phraseList,
< //        const QStringList &excludedList, const QStringList &excludeWhenCleaning,
< //        bool* Canceled, bool slowSearch)
< //{
< //    SearchResults searchResults;
< 
< //    if (!isConnected()) {
< //        return searchResults;
< //    }
< 
< //    int andedPhraseCount = phraseList.size();
< //    int excludedCount = excludedList.size();
< //    int numOfFounded = 0;
< 
< //    QSqlQuery q(db);
< //#ifdef SAAGHAR_DEBUG
< //    int start = QDateTime::currentDateTime().toTime_t() * 1000 + QDateTime::currentDateTime().time().msec();
< //#endif
< //    q.exec(strQuery);
< //#ifdef SAAGHAR_DEBUG
< //    int end = QDateTime::currentDateTime().toTime_t() * 1000 + QDateTime::currentDateTime().time().msec();
< //    int miliSec = end - start;
< //    qDebug() << "duration=" << miliSec;
< //#endif
< //    int numOfNearResult = 0, nextStep = 0, stepLenght = 300;
< //    if (slowSearch) {
< //        stepLenght = 30;
< //    }
< 
< //    int lastPoemID = -1;
< //    QList<GanjoorVerse*> verses;
< 
< //    while (q.next()) {
< //        ++numOfNearResult;
< //        if (numOfNearResult > nextStep) {
< //            nextStep += stepLenght; //500
< //            emit searchStatusChanged(DatabaseBrowser::tr("Search Result(s): %1").arg(numOfFounded));
< //            QApplication::processEvents(QEventLoop::AllEvents);
< //        }
< 
< //        QSqlRecord qrec = q.record();
< //        int poemID = qrec.value(0).toInt();
< ////          if (idList.contains(poemID))
< ////              continue;//we need just first result
< 
< //        QString verseText = qrec.value(1).toString();
< //        // assume title's order is zero!
< //        int verseOrder = (PoetID == -1000 ? 0 : qrec.value(2).toInt());
< 
< //        QString foundedVerse = Tools::cleanStringFast(verseText, excludeWhenCleaning);
< //        // for whole word option when word is in the start or end of verse
< //        foundedVerse = " " + foundedVerse + " ";
< 
< //        //excluded list
< //        bool excludeCurrentVerse = false;
< //        for (int t = 0; t < excludedCount; ++t) {
< //            if (foundedVerse.contains(excludedList.at(t))) {
< //                excludeCurrentVerse = true;
< //                break;
< //            }
< //        }
< 
< //        if (!excludeCurrentVerse) {
< //            for (int t = 0; t < andedPhraseCount; ++t) {
< //                QString tphrase = phraseList.at(t);
< //                if (tphrase.contains("==")) {
< //                    tphrase.remove("==");
< //                    if (lastPoemID != poemID/* && findRhyme*/) {
< //                        lastPoemID = poemID;
< //                        int versesSize = verses.size();
< //                        for (int j = 0; j < versesSize; ++j) {
< //                            delete verses[j];
< //                            verses[j] = 0;
< //                        }
< //                        verses = getVerses(poemID);
< //                    }
< //                    excludeCurrentVerse = !isRadif(verses, tphrase, verseOrder);
< //                    break;
< //                }
< //                if (tphrase.contains("=")) {
< //                    tphrase.remove("=");
< //                    if (lastPoemID != poemID/* && findRhyme*/) {
< //                        lastPoemID = poemID;
< //                        int versesSize = verses.size();
< //                        for (int j = 0; j < versesSize; ++j) {
< //                            delete verses[j];
< //                            verses[j] = 0;
< //                        }
< //                        verses = getVerses(poemID);
< //                    }
< //                    excludeCurrentVerse = !isRhyme(verses, tphrase, verseOrder);
< //                    break;
< //                }
< //                if (!tphrase.contains("%")) {
< //                    //QChar(71,6): Simple He
< //                    //QChar(204,6): Persian Ye
< //                    QString YeAsKasre = QString(QChar(71, 6)) + " ";
< //                    if (tphrase.contains(YeAsKasre)) {
< //                        tphrase.replace(YeAsKasre, QString(QChar(71, 6)) + "\\s*" + QString(QChar(204, 6)) +
< //                                        "{0,2}\\s+");
< 
< //                        QRegExp anySearch(".*" + tphrase + ".*", Qt::CaseInsensitive);
< 
< //                        if (!anySearch.exactMatch(foundedVerse)) {
< //                            excludeCurrentVerse = true;
< //                            break;
< //                        }
< //                    }
< //                    else {
< //                        if (!foundedVerse.contains(tphrase))
< //                            //the verse doesn't contain an ANDed phrase
< //                            //maybe for ++ and +++ this should be removed
< //                        {
< //                            excludeCurrentVerse = true;
< //                            break;
< //                        }
< //                    }
< //                }
< //                else {
< //                    tphrase = tphrase.replace("%%", ".*");
< //                    tphrase = tphrase.replace("%", "\\S*");
< //                    QRegExp anySearch(".*" + tphrase + ".*", Qt::CaseInsensitive);
< //                    if (!anySearch.exactMatch(foundedVerse)) {
< //                        excludeCurrentVerse = true;
< //                        break;
< //                    }
< //                }
< //            }
< //        }
< 
< //        if (Canceled && *Canceled) {
< //            break;
< //        }
< 
< //        if (excludeCurrentVerse) {
< //#ifdef Q_OS_X11
< //            QApplication::processEvents(QEventLoop::WaitForMoreEvents , 3);//max wait 3 miliseconds
< //#endif
< //            continue;
< //        }
< 
< //        ++numOfFounded;
< //        GanjoorPoem gPoem = getPoem(poemID);
< //        searchResults.insertMulti(poemID, "verseText=" + verseText + "|poemTitle=" + gPoem._Title + "|poetName=" + getPoetForCat(gPoem._CatID)._Name);
< //#ifdef Q_OS_X11
< //        QApplication::processEvents(QEventLoop::WaitForMoreEvents , 3);//max wait 3 miliseconds
< //#endif
< 
< //    }
< 
< //    //for the last result
< //    emit searchStatusChanged(DatabaseBrowser::tr("Search Result(s): %1").arg(numOfFounded));
< 
< //    qDeleteAll(verses);
< 
< //    return searchResults;
< //}
< 
< void DatabaseBrowser::addDataSets()
< {
<     if (!DatabaseBrowser::dbUpdater) {
<         DatabaseBrowser::dbUpdater = new DataBaseUpdater(0, Qt::WindowStaysOnTopHint);
<     }
< 
<     if (!m_addRemoteDataSet) {
<         //select data sets existing
<         QStringList fileList = QFileDialog::getOpenFileNames(0, tr("Select data sets to install"), QDir::homePath(), "Supported Files (*.gdb *.s3db *.zip);;Ganjoor DataBase (*.gdb *.s3db);;Compressed Data Sets (*.zip);;All Files (*.*)");
<         if (!fileList.isEmpty()) {
<             foreach (const QString &file, fileList) {
<                 DatabaseBrowser::dbUpdater->installItemToDB(file);
<             }
<         }
<     }
<     else if (m_addRemoteDataSet) {
<         //download dialog
<         QtWin::easyBlurUnBlur(DatabaseBrowser::dbUpdater, VARB("SaagharWindow/UseTransparecy"));
<         DatabaseBrowser::dbUpdater->exec();
<     }
< }
< 
< bool DatabaseBrowser::createEmptyDataBase(const QString &connectionID)
< {
<     if (isConnected(connectionID)) {
<         QSqlDatabase dataBaseObject = database(connectionID);
< 
<         qDebug() << "tabels==" << dataBaseObject.tables(QSql::Tables);
<         if (!dataBaseObject.tables(QSql::Tables).isEmpty()) {
<             qWarning() << "The Data Base is NOT empty: " << dataBaseObject.databaseName();
<             return false;
<         }
<         dataBaseObject.transaction();
<         QSqlQuery q(dataBaseObject);
<         q.exec("CREATE TABLE [cat] ([id] INTEGER  PRIMARY KEY NOT NULL,[poet_id] INTEGER  NULL,[text] NVARCHAR(100)  NULL,[parent_id] INTEGER  NULL,[url] NVARCHAR(255)  NULL);");
<         q.exec("CREATE TABLE poem (id INTEGER PRIMARY KEY, cat_id INTEGER, title NVARCHAR(255), url NVARCHAR(255));");
<         q.exec("CREATE TABLE [poet] ([id] INTEGER  PRIMARY KEY NOT NULL,[name] NVARCHAR(20)  NULL,[cat_id] INTEGER  NULL  NULL, [description] TEXT);");
<         q.exec("CREATE TABLE [verse] ([poem_id] INTEGER  NULL,[vorder] INTEGER  NULL,[position] INTEGER  NULL,[text] TEXT  NULL);");
<         q.exec("CREATE INDEX cat_pid ON cat(parent_id ASC);");
<         q.exec("CREATE INDEX poem_cid ON poem(cat_id ASC);");
<         q.exec("CREATE INDEX verse_pid ON verse(poem_id ASC);");
<         return dataBaseObject.commit();
<     }
<     return false;
< }
< 
< QSqlDatabase DatabaseBrowser::databaseForThread(QThread* thread, const QString &baseConnectionID)
< {
<     return database(getIdForDataBase(databaseFileFromID(baseConnectionID), thread));
< }
< 
< int DatabaseBrowser::createCatPathOnNeed(QList<GanjoorCat> &catPath, const QString &description, const QString &connectionID)
< {
<     int newPoetID = -1;
<     int newCatID = -1;
< 
< 
<     if (!isConnected(connectionID)) {
<         return newCatID;
<     }
< 
<     for (int i = 0; i < catPath.size(); ++i) {
<         GanjoorCat &cat = catPath[i];
<         if (cat._ID == -1) {
<             if (i == 0) {
<                 // new poet
<                 if (newPoetID == -1) {
<                     newPoetID = getNewPoetID(connectionID);
<                 }
<                 if (newCatID == -1) {
<                     newCatID = getNewCatID(connectionID);
<                 }
<                 cat._ID = newCatID;
<                 cat._ParentID = 0;
<                 cat._PoetID = newPoetID;
< 
<                 ++newCatID;
<                 ++newPoetID;
< 
<                 QString strQuery = QString("INSERT INTO poet (id, name, cat_id, description) VALUES (%1, \"%2\", %3, \"%4\");")
<                                    .arg(cat._PoetID).arg(cat._Text).arg(cat._ID).arg(description);
<                 QSqlQuery q(database(connectionID));
<                 q.exec(strQuery);
< 
<                 strQuery = QString("INSERT INTO cat (id, poet_id, text, parent_id, url) VALUES (%1, %2, \"%3\", %4, \"%5\");")
<                            .arg(cat._ID).arg(cat._PoetID).arg(cat._Text).arg(cat._ParentID).arg(cat._Url);
< 
<                 q.exec(strQuery);
<             }
<             else {
<                 if (newCatID == -1) {
<                     newCatID = getNewCatID(connectionID);
<                 }
<                 cat._ID = newCatID;
<                 cat._ParentID = catPath.at(i - 1)._ID;
<                 cat._PoetID = catPath.at(i - 1)._PoetID;
< 
<                 ++newCatID;
< 
<                 QString strQuery = QString("INSERT INTO cat (id, poet_id, text, parent_id) VALUES (%1, %2, \"%3\", %4);")
<                                    .arg(cat._ID).arg(cat._PoetID).arg(cat._Text).arg(cat._ParentID);
<                 QSqlQuery q(database(connectionID));
<                 q.exec(strQuery);
<             }
<         }
<     }
< 
<     return newCatID;
< }
< 
< static void debugCatPath(const QList<GanjoorCat> &catPath, const QString &extra)
< {
<     qDebug() << "\n" << extra << "@@@@@@@ START @@@@@@@@@\n";
<     for (int i = 0; i < catPath.size(); ++i) {
<         GanjoorCat cat = catPath.at(i);
<         qDebug() << (i + 1) << " - " << cat._Text << "\n"
<                  << (i + 1) << " - " << cat._PoetID << "\n"
<                  << (i + 1) << " - " << cat._ParentID << "\n"
<                  << (i + 1) << " - " << cat._ID << "\n";
<     }
<     qDebug() << extra << "@@@@@@@@ END @@@@@@@@@@\n";
< }
< 
< void DatabaseBrowser::storeAsDataset(const CatContents &importData, const QList<GanjoorCat> &catPath, bool storeAsGDB, const QString &toConnectionID)
< {
<     if (!isConnected(toConnectionID) || catPath.isEmpty() || importData.isNull()) {
<         return;
<     }
< 
<     if (storeAsGDB) {
<         //
<     }
< 
<     QSqlDatabase dataBaseObject = database(toConnectionID);
<     bool inTransaction = dataBaseObject.transaction();
< 
<     QList<GanjoorCat> initCatPath = catPath;
<     debugCatPath(initCatPath, "1-BEFORE");
<     int newCatID = createCatPathOnNeed(initCatPath, importData.description, toConnectionID);
<     debugCatPath(initCatPath, "22-AFTER");
< 
< //    struct CatContents {
< //        QList<GanjoorPoem> poems;
< //        QMap<int, QList<GanjoorVerse> > verses;
< 
< //        CatContents() {}
< //        bool isNull() const { return poems.isEmpty() || verses.isEmpty(); }
< //        void clear() { poems.clear(); verses.clear(); }
< //    };
<     QString strQuery;
<     QSqlQuery qp(database(toConnectionID));
< 
<     QSqlQuery qv(database(toConnectionID));
<     QString verseQuery = "INSERT INTO verse (poem_id, vorder, position, text) VALUES (:poem_id,:vorder,:position,:text)";
<     qv.prepare(verseQuery);
< 
<     int newPoemId = getNewPoemID(toConnectionID);
<     GanjoorCat topLevelCat = initCatPath.last();
<     QHash<int, int> createdCatsIdMap;
<     int catId = -1;
< 
<     foreach (const GanjoorPoem &poem, importData.poems) {
<         QList<GanjoorVerse> verses = importData.verses.value(poem._ID);
< 
<         if (verses.isEmpty()) {
<             continue;
<         }
< 
<         QList<GanjoorCat> parentCats = importData.catParents(poem._CatID);
< 
<         if (!parentCats.isEmpty()) {
<             foreach (const GanjoorCat &cat, parentCats) {
<                 if (!createdCatsIdMap.contains(cat._ID)) {
<                     Q_ASSERT(cat._ParentID == -1 || createdCatsIdMap.contains(cat._ParentID));
< 
<                     int parentId = cat._ParentID == -1 ? topLevelCat._ID : createdCatsIdMap.value(cat._ParentID);
< 
<                     if (newCatID == -1) {
<                         newCatID = getNewCatID(toConnectionID);
<                     }
< 
<                     createdCatsIdMap.insert(cat._ID, newCatID);
<                     catId = newCatID;
< 
<                     strQuery = QString("INSERT INTO cat (id, poet_id, text, parent_id) VALUES (%1, %2, \"%3\", %4);")
<                                .arg(newCatID).arg(topLevelCat._PoetID).arg(cat._Text).arg(parentId);
<                     QSqlQuery q(database(toConnectionID));
<                     q.exec(strQuery);
< 
<                     ++newCatID;
<                 }
<                 else {
<                     catId = createdCatsIdMap.value(cat._ID);
<                 }
<             }
<         }
<         else {
<             catId = topLevelCat._ID;
<         }
< 
<         strQuery = QString("INSERT INTO poem (id, cat_id, title, url) VALUES (%1, %2, \"%3\", \"%4\");")
<                    .arg(newPoemId).arg(catId).arg(poem._Title).arg(poem._Url);
<         qp.exec(strQuery);
< 
<         foreach (const GanjoorVerse &verse, verses) {
<             qv.bindValue(":poem_id", newPoemId);
<             qv.bindValue(":vorder", verse._Order);
<             qv.bindValue(":position", verse._Position);
<             qv.bindValue(":text", verse._Text);
<             qv.exec();
<         }
< 
<         ++newPoemId;
<     }
< 
<     if (!inTransaction || dataBaseObject.commit()) {
<         emit databaseUpdated(toConnectionID);
<     }
<     else {
<         dataBaseObject.rollback();
<     }
< }
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> 
> #include "databasebrowser.h"
> #include "nodatabasedialog.h"
> #include "searchresultwidget.h"
> #include "tools.h"
> #include "concurrenttasks.h"
> #include "saagharapplication.h"
> #include "settingsmanager.h"
> #include "saagharwidget.h"
> 
> #include <QApplication>
> #include <QMessageBox>
> #include <QSqlQuery>
> #include <QFileInfo>
> #include <QFileDialog>
> #include <QTime>
> #include <QPushButton>
> #include <QTimer>
> #include <QTreeWidgetItem>
> #include <QThread>
> 
> DatabaseBrowser* DatabaseBrowser::s_instance = 0;
> QMultiHash<QThread*, QString> DatabaseBrowser::s_threadConnections;
> 
> DataBaseUpdater* DatabaseBrowser::dbUpdater = 0;
> QString DatabaseBrowser::s_defaultConnectionId;
> QString DatabaseBrowser::s_defaultDatabaseFileName;
> bool DatabaseBrowser::s_isDefaultDatabaseSet = false;
> 
> const int minNewPoetID = 1001;
> const int minNewCatID = 10001;
> const int minNewPoemID = 100001;
> 
> const int DatabaseVersion = 1;
> 
> #ifdef EMBEDDED_SQLITE
> QSQLiteDriver* DatabaseBrowser::sqlDriver = 0;
> #else
> const QString sqlDriver = "QSQLITE";
> #endif
> 
> static QString threadToString(QThread* thread = 0)
> {
>     return QString::number((quintptr)(thread ? thread : QThread::currentThread()));
> }
> 
> DatabaseBrowser::DatabaseBrowser(const QString &sqliteDbCompletePath)
> {
>     Q_ASSERT(s_instance == 0);
> 
>     s_instance = this;
> 
>     qRegisterMetaType<SearchResults>("SearchResults");
> 
>     setObjectName(QLatin1String("DatabaseBrowser"));
> 
>     QFileInfo dBFile(sqliteDbCompletePath);
>     QString pathOfDatabase = dBFile.absolutePath();
> 
> #ifdef EMBEDDED_SQLITE
>     sqlite3* connection;
>     sqlite3_open(sqliteDbCompletePath.toUtf8().data(), &connection);
>     sqlDriver = new QSQLiteDriver(connection);
> #endif
> 
>     QString defaultConnectionId = getIdForDataBase(sqliteDbCompletePath);
> 
>     while (!dBFile.exists() || !database(defaultConnectionId).open() || !isValid(defaultConnectionId)) {
>         if (splashScreen(QWidget)) {
>             splashScreen(QWidget)->close();
>             Tools::setSplashScreen(0);
>         }
> 
>         QString errorString = database(defaultConnectionId).lastError().text();
> 
>         removeDatabase(defaultConnectionId);
> 
>         NoDataBaseDialog noDataBaseDialog(0, Qt::WindowStaysOnTopHint);
>         noDataBaseDialog.ui->pathLabel->setText(tr("Data Base Path:") + " " + sqliteDbCompletePath);
>         noDataBaseDialog.ui->errorLabel->setText(tr("Error:") + " " + (errorString.isEmpty() ? tr("No Error!") : errorString));
> 
>         QtWin::easyBlurUnBlur(&noDataBaseDialog, VARB("SaagharWindow/UseTransparecy"));
> 
>         noDataBaseDialog.exec();
> 
>         if (noDataBaseDialog.clickedButton() != noDataBaseDialog.ui->exitPushButton) {
>             if (noDataBaseDialog.clickedButton() == noDataBaseDialog.ui->selectDataBase) {
>                 QString dir = QFileDialog::getExistingDirectory(0, tr("Add Path For Data Base"), dBFile.absoluteDir().path(), QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks);
>                 if (!dir.isEmpty()) {
>                     dir.replace(QString("\\"), QString("/"));
>                     if (!dir.endsWith('/')) {
>                         dir += "/";
>                     }
>                     dBFile.setFile(dir + "/ganjoor.s3db");
> 
>                     //don't open it here!
>                     defaultConnectionId = getIdForDataBase(dir + "/ganjoor.s3db");
> 
>                     pathOfDatabase = dir;
>                 }
>                 else {
>                     QMessageBox::information(0, tr("Exit"), tr("Saaghar could not find database file and will be closed."));
>                     exit(0);
>                 }
>             }
>             else if (noDataBaseDialog.clickedButton() == noDataBaseDialog.ui->createDataBaseFromLocal
>                      ||
>                      noDataBaseDialog.clickedButton() == noDataBaseDialog.ui->createDataBaseFromRemote) {
>                 //do download job!!
>                 QFileDialog getDir(0, tr("Select Save Location"), dBFile.absoluteDir().path());
>                 getDir.setFileMode(QFileDialog::Directory);
>                 getDir.setOptions(QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks /*| QFileDialog::DontUseNativeDialog*/);
>                 getDir.setAcceptMode(QFileDialog::AcceptOpen);
> 
>                 if (getDir.exec() != QFileDialog::Accepted) {
>                     QMessageBox::information(0, tr("Exit"), tr("Saaghar could not find database file and will be closed."));
>                     exit(0);
>                 }
> 
>                 QString dir = "";
>                 if (!getDir.selectedFiles().isEmpty()) {
>                     dir = getDir.selectedFiles().at(0);
>                 }
> 
>                 while (dir.isEmpty() || QFile::exists(dir + "/ganjoor.s3db")) {
>                     getDir.exec();
>                     if (!getDir.selectedFiles().isEmpty()) {
>                         dir = getDir.selectedFiles().at(0);
>                     }
> //                  dir = QFileDialog::getExistingDirectory(0,tr("Select Save Location"), dir.isEmpty() ? dBFile.absoluteDir().path() : dir, QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks | QFileDialog::DontUseNativeDialog);
>                 }
>                 // now dir is not empty and it doesn't contain 'ganjoor.s3db'
>                 dir.replace(QString("\\"), QString("/"));
>                 if (!dir.endsWith('/')) {
>                     dir += "/";
>                 }
>                 dBFile.setFile(dir + "/ganjoor.s3db");
> 
>                 defaultConnectionId = getIdForDataBase(dir + "/ganjoor.s3db");
> 
>                 if (!database().open()) {
>                     QMessageBox::information(0, tr("Cannot open Database File!"), tr("Cannot open database file, please check if you have write permisson.\nError: %1\nDataBase Path=%2").arg(errorString).arg(dir));
>                     exit(1);
>                 }
>                 //insert main tables
>                 bool tablesInserted = createEmptyDataBase(defaultConnectionId);
>                 qDebug() << "insert main tables: " << tablesInserted;
>                 if (!tablesInserted) {
>                     QFile::remove(dir + "/ganjoor.s3db");
>                     exit(1);
>                 }
>                 m_addRemoteDataSet = noDataBaseDialog.clickedButton() == noDataBaseDialog.ui->createDataBaseFromRemote;
>                 QTimer::singleShot(0, this, SLOT(addDataSets()));
> 
>                 pathOfDatabase = dir;
>             }
>         }
>         else {
>             exit(1);
>         }
>     }
> 
>     s_defaultConnectionId = defaultConnectionId;
> 
>     // Saaghar just uses its first search path
>     sApp->setDefaultPath(SaagharApplication::DatabaseDirs, QDir::toNativeSeparators(pathOfDatabase));
> 
>     cachedMaxCatID = cachedMaxPoemID = 0;
> }
> 
> DatabaseBrowser::~DatabaseBrowser()
> {
> }
> 
> QString DatabaseBrowser::databaseFileFromID(const QString &connectionID)
> {
>     return connectionID.left(connectionID.lastIndexOf(QLatin1String("/thread:")));
> }
> 
> DatabaseBrowser* DatabaseBrowser::instance()
> {
>     if (!s_instance) {
>         if (!s_isDefaultDatabaseSet) {
>             qFatal("In first place you have to use DatabaseBrowser::setDefaultDatabasename() to set default database.");
>             exit(1);
>         }
>         new DatabaseBrowser(s_defaultDatabaseFileName);
>     }
> 
>     return s_instance;
> }
> 
> QSqlDatabase DatabaseBrowser::database(const QString &connectionID, bool open)
> {
>     return QSqlDatabase::database(connectionID, open);
> }
> 
> QString DatabaseBrowser::defaultDatabasename()
> {
>     return s_defaultDatabaseFileName;
> }
> 
> void DatabaseBrowser::setDefaultDatabasename(const QString &databaseName)
> {
>     s_isDefaultDatabaseSet = true;
>     s_defaultDatabaseFileName = databaseName;
> }
> 
> bool DatabaseBrowser::isConnected(const QString &connectionID)
> {
>     return database(connectionID, true).isOpen();
> }
> 
> bool DatabaseBrowser::isValid(QString connectionID)
> {
>     QSqlDatabase db = database(connectionID);
> 
>     if (db.open()) {
>         return db.tables().contains("cat");
>     }
> 
>     return false;
> }
> 
> QList<GanjoorPoet*> DatabaseBrowser::getPoets(const QString &connectionID, bool sort)
> {
>     QList<GanjoorPoet*> poets;
>     if (isConnected(connectionID)) {
>         QSqlDatabase databaseObject = database(connectionID);
> 
>         QSqlQuery q(databaseObject);
>         bool descriptionExists = false;
>         if (q.exec("SELECT id, name, cat_id, description FROM poet")) {
>             descriptionExists = true;
>         }
>         else {
>             q.exec("SELECT id, name, cat_id FROM poet");
>         }
> 
>         q.first();
>         while (q.isValid() && q.isActive()) {
>             GanjoorPoet* gPoet = new GanjoorPoet();
>             QSqlRecord qrec = q.record();
>             if (descriptionExists) {
>                 gPoet->init(qrec.value(0).toInt(), qrec.value(1).toString(), qrec.value(2).toInt(), qrec.value(3).toString());
>             }
>             else {
>                 gPoet->init(qrec.value(0).toInt(), qrec.value(1).toString(), qrec.value(2).toInt(), "");
>             }
>             poets.append(gPoet);
>             if (!q.next()) {
>                 break;
>             }
>         }
>         if (sort) {
>             qSort(poets.begin(), poets.end(), comparePoetsByName);
>         }
>     }
> 
>     return poets;
> }
> 
> bool DatabaseBrowser::comparePoetsByName(GanjoorPoet* poet1, GanjoorPoet* poet2)
> {
>     static bool isEnglish = VARS("General/UILanguage") == LS("en");
> 
>     if (isEnglish) {
>         return (QString::localeAwareCompare(poet1->_Name, poet2->_Name) < 0);
>     }
>     else {
>         const bool poet1IsRtl = poet1->_Name.isRightToLeft();
>         const bool poet2IsRtl = poet2->_Name.isRightToLeft();
> 
>         if ((poet1IsRtl && poet2IsRtl) || (!poet1IsRtl && !poet2IsRtl)) {
>             return (QString::localeAwareCompare(poet1->_Name, poet2->_Name) < 0);
>         }
>         else {
>             if (poet1IsRtl && !poet2IsRtl) {
>                 return true;
>             }
>             else {
>                 return false;
>             }
>         }
>     }
> }
> 
> bool DatabaseBrowser::compareCategoriesByName(GanjoorCat* cat1, GanjoorCat* cat2)
> {
>     static bool isEnglish = VARS("General/UILanguage") == LS("en");
> 
>     if (isEnglish) {
>         return (QString::localeAwareCompare(cat1->_Text, cat2->_Text) < 0);
>     }
>     else {
>         const bool cat1IsRtl = cat1->_Text.isRightToLeft();
>         const bool cat2IsRtl = cat2->_Text.isRightToLeft();
> 
>         if ((cat1IsRtl && cat2IsRtl) || (!cat1IsRtl && !cat2IsRtl)) {
>             return (QString::localeAwareCompare(cat1->_Text, cat2->_Text) < 0);
>         }
>         else {
>             if (cat1IsRtl && !cat2IsRtl) {
>                 return true;
>             }
>             else {
>                 return false;
>             }
>         }
>     }
> }
> 
> GanjoorCat DatabaseBrowser::getCategory(int CatID, const QString &connectionID)
> {
>     GanjoorCat gCat;
>     gCat.init();
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
>         q.exec("SELECT poet_id, text, parent_id, url FROM cat WHERE id = " + QString::number(CatID));
>         q.first();
>         if (q.isValid() && q.isActive()) {
>             QSqlRecord qrec = q.record();
>             gCat.init(
>                 CatID,
>                 (qrec.value(0)).toInt(),
>                 (qrec.value(1)).toString(),
>                 (qrec.value(2)).toInt(),
>                 (qrec.value(3)).toString());
>             return gCat;
>         }
>     }
>     return gCat;
> }
> 
> void DatabaseBrowser::removeThreadsConnections(QObject* obj)
> {
>     QThread* thread = qobject_cast<QThread*>(obj);
> 
>     if (thread) {
>         QStringList connections = s_threadConnections.values(thread);
> 
>         foreach (const QString &connection, connections) {
>             QSqlDatabase::removeDatabase(connection);
>         }
> 
> #ifdef SAAGHAR_DEBUG
>         qDebug() << "thread destroyed:" << thread;
> #endif
>     }
> }
> 
> QList<GanjoorCat*> DatabaseBrowser::getSubCategories(int CatID, const QString &connectionID)
> {
>     QList<GanjoorCat*> lst;
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
>         q.exec("SELECT poet_id, text, url, ID FROM cat WHERE parent_id = " + QString::number(CatID));
>         q.first();
>         while (q.isValid() && q.isActive()) {
>             QSqlRecord qrec = q.record();
>             GanjoorCat* gCat = new GanjoorCat();
>             gCat->init((qrec.value(3)).toInt(), (qrec.value(0)).toInt(), (qrec.value(1)).toString(), CatID, (qrec.value(2)).toString());
>             lst.append(gCat);
>             if (!q.next()) {
>                 break;
>             }
>         }
>         if (CatID == 0) {
>             qSort(lst.begin(), lst.end(), compareCategoriesByName);
>         }
>     }
>     return lst;
> }
> 
> QList<GanjoorCat> DatabaseBrowser::getParentCategories(GanjoorCat Cat, const QString &connectionID)
> {
>     QList<GanjoorCat> lst;
>     if (isConnected(connectionID)) {
>         while (!Cat.isNull() && Cat._ParentID != 0) {
>             Cat = getCategory(Cat._ParentID, connectionID);
>             lst.insert(0, Cat);
>         }
>         GanjoorCat gCat;
>         gCat.init(0, 0, SaagharWidget::rootTitle(), 0, QString());
>         lst.insert(0, gCat);
>     }
>     return lst;
> }
> 
> QList<GanjoorPoem*> DatabaseBrowser::getPoems(int CatID, const QString &connectionID)
> {
>     QList<GanjoorPoem*> lst;
>     if (isConnected(connectionID)) {
>         QString selectQuery = QString("SELECT ID, title, url FROM poem WHERE cat_id = %1 ORDER BY ID").arg(CatID);
>         QSqlQuery q(database(connectionID));
>         q.exec(selectQuery);
>         q.first();
>         QSqlRecord qrec;
>         while (q.isValid() && q.isActive()) {
>             qrec = q.record();
>             GanjoorPoem* gPoem = new GanjoorPoem();
>             gPoem->init((qrec.value(0)).toInt(), CatID, (qrec.value(1)).toString(), (qrec.value(2)).toString(), false, "");
>             lst.append(gPoem);
>             if (!q.next()) {
>                 break;
>             }
>         }
>     }
>     return lst;
> }
> 
> QList<GanjoorVerse*> DatabaseBrowser::getVerses(int PoemID, const QString &connectionID)
> {
>     return getVerses(PoemID, 0, connectionID);
> }
> 
> QString DatabaseBrowser::getFirstMesra(int PoemID, const QString &connectionID) //just first Mesra
> {
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
>         QString selectQuery = QString("SELECT vorder, text FROM verse WHERE poem_id = %1 order by vorder LIMIT 1").arg(PoemID);
>         q.exec(selectQuery);
>         q.first();
>         while (q.isValid() && q.isActive()) {
>             return Tools::snippedText(q.record().value(1).toString(), "", 0, 12, true);
>         }
>     }
>     return QString();
> }
> 
> QList<GanjoorVerse*> DatabaseBrowser::getVerses(int PoemID, int Count, const QString &connectionID)
> {
>     QList<GanjoorVerse*> lst;
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
>         QString selectQuery = QString("SELECT vorder, position, text FROM verse WHERE poem_id = %1 order by vorder" + (Count > 0 ? " LIMIT " + QString::number(Count) : "")).arg(PoemID);
>         q.exec(selectQuery);
>         q.first();
>         while (q.isValid() && q.isActive()) {
>             QSqlRecord qrec = q.record();
>             GanjoorVerse* gVerse = new GanjoorVerse();
>             gVerse->init(PoemID, (qrec.value(0)).toInt(), (VersePosition)((qrec.value(1)).toInt()), (qrec.value(2)).toString());
>             lst.append(gVerse);
>             if (!q.next()) {
>                 break;
>             }
>         }
>     }
>     return lst;
> }
> 
> GanjoorPoem DatabaseBrowser::getPoem(int PoemID, const QString &connectionID)
> {
>     GanjoorPoem gPoem;
>     gPoem.init();
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
>         q.exec("SELECT cat_id, title, url FROM poem WHERE ID = " + QString::number(PoemID));
>         q.first();
>         if (q.isValid() && q.isActive()) {
>             QSqlRecord qrec = q.record();
>             gPoem.init(PoemID, (qrec.value(0)).toInt(), (qrec.value(1)).toString(), (qrec.value(2)).toString(), false, QString(""));
>             return gPoem;
>         }
>     }
>     return gPoem;
> }
> 
> GanjoorPoem DatabaseBrowser::getNextPoem(int PoemID, int CatID, const QString &connectionID)
> {
>     GanjoorPoem gPoem;
>     gPoem.init();
>     if (isConnected(connectionID) && PoemID != -1) { // PoemID==-1 when getNextPoem(GanjoorPoem poem) pass null poem
>         QSqlQuery q(database(connectionID));
>         q.exec(QString("SELECT ID FROM poem WHERE cat_id = %1 AND id>%2 LIMIT 1").arg(CatID).arg(PoemID));
>         q.first();
>         if (q.isValid() && q.isActive()) {
>             QSqlRecord qrec = q.record();
>             gPoem = getPoem(qrec.value(0).toInt(), connectionID);
>             return gPoem;
>         }
>     }
>     return gPoem;
> }
> 
> GanjoorPoem DatabaseBrowser::getNextPoem(GanjoorPoem poem, const QString &connectionID)
> {
>     return getNextPoem(poem._ID, poem._CatID, connectionID);
> }
> 
> GanjoorPoem DatabaseBrowser::getPreviousPoem(int PoemID, int CatID, const QString &connectionID)
> {
>     GanjoorPoem gPoem;
>     gPoem.init();
>     if (isConnected(connectionID) && PoemID != -1) { // PoemID==-1 when getPreviousPoem(GanjoorPoem poem) pass null poem
>         QSqlQuery q(database(connectionID));
>         q.exec(QString("SELECT ID FROM poem WHERE cat_id = %1 AND id<%2 ORDER BY ID DESC LIMIT 1").arg(CatID).arg(PoemID));
>         q.first();
>         if (q.isValid() && q.isActive()) {
>             QSqlRecord qrec = q.record();
>             gPoem = getPoem(qrec.value(0).toInt(), connectionID);
>             return gPoem;
>         }
>     }
>     return gPoem;
> }
> 
> GanjoorPoem DatabaseBrowser::getPreviousPoem(GanjoorPoem poem, const QString &connectionID)
> {
>     return getPreviousPoem(poem._ID, poem._CatID, connectionID);
> }
> 
> GanjoorPoet DatabaseBrowser::getPoetForPoem(int poemID, const QString &connectionID)
> {
>     const GanjoorPoem poem = getPoem(poemID, connectionID);
> 
>     if (poem.isNull()) {
>         return GanjoorPoet();
>     }
> 
>     return getPoetForCat(poem._CatID, connectionID);
> }
> 
> GanjoorPoet DatabaseBrowser::getPoetForCat(int CatID, const QString &connectionID)
> {
>     GanjoorPoet gPoet;
>     gPoet.init();
>     if (CatID == 0) {
>         gPoet.init(0, tr("All"), 0);
>         return gPoet;
>     }
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
>         q.exec("SELECT poet_id FROM cat WHERE id = " + QString::number(CatID));
>         q.first();
>         if (q.isValid() && q.isActive()) {
>             QSqlRecord qrec = q.record();
>             return getPoet(qrec.value(0).toInt(), connectionID);
>         }
>     }
>     return gPoet;
> }
> 
> GanjoorPoet DatabaseBrowser::getPoet(int PoetID, const QString &connectionID)
> {
>     GanjoorPoet gPoet;
>     gPoet.init();
>     if (PoetID == 0) {
>         gPoet.init(0, tr("All"), 0);
>         return gPoet;
>     }
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
> 
>         bool descriptionExists = false;
>         if (q.exec("SELECT id, name, cat_id, description FROM poet WHERE id = " + QString::number(PoetID))) {
>             descriptionExists = true;
>         }
>         else {
>             q.exec("SELECT id, name, cat_id FROM poet WHERE id = " + QString::number(PoetID));
>         }
> 
>         q.first();
>         if (q.isValid() && q.isActive()) {
>             QSqlRecord qrec = q.record();
>             if (descriptionExists) {
>                 gPoet.init((qrec.value(0)).toInt(), (qrec.value(1)).toString(), (qrec.value(2)).toInt(), (qrec.value(3)).toString());
>             }
>             else {
>                 gPoet.init((qrec.value(0)).toInt(), (qrec.value(1)).toString(), (qrec.value(2)).toInt(), "");
>             }
> 
>             return gPoet;
>         }
>     }
>     return gPoet;
> }
> 
> QString DatabaseBrowser::getPoetDescription(int PoetID, const QString &connectionID)
> {
>     if (PoetID <= 0) {
>         return "";
>     }
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
>         q.exec("SELECT description FROM poet WHERE id = " + QString::number(PoetID));
>         q.first();
>         if (q.isValid() && q.isActive()) {
>             QSqlRecord qrec = q.record();
>             return (qrec.value(0)).toString();
>         }
>     }
>     return "";
> }
> 
> QString DatabaseBrowser::getPoemMediaSource(int PoemID, const QString &connectionID)
> {
>     if (PoemID <= 0) {
>         return "";
>     }
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
>         q.exec("SELECT mediasource FROM poem WHERE id = " + QString::number(PoemID));
>         q.first();
>         if (q.isValid() && q.isActive()) {
>             QSqlRecord qrec = q.record();
>             return (qrec.value(0)).toString();
>         }
>     }
>     return "";
> }
> 
> void DatabaseBrowser::setPoemMediaSource(int PoemID, const QString &fileName, const QString &connectionID)
> {
>     if (PoemID <= 0) {
>         return;
>     }
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
>         QString strQuery = "";
>         if (!database().record("poem").contains("mediasource")) {
>             strQuery = QString("ALTER TABLE %1 ADD COLUMN %2 %3").arg("poem").arg("mediasource").arg("NVARCHAR(255)");
>             q.exec(strQuery);
>             //q.finish();
>         }
> 
>         strQuery = QString("UPDATE poem SET mediasource = \"%1\" WHERE id = %2 ;").arg(fileName).arg(PoemID);
>         //q.exec(strQuery);
>         //PRAGMA TABLE_INFO(poem);
> 
> 
>         //QString("REPLACE INTO poem (id, cat_id, title, url, mediasource) VALUES (%1, %2, \"%3\", \"%4\", \"%5\");").arg(newPoem->_ID).arg(newPoem->_CatID).arg(newPoem->_Title).arg(newPoem->_Url).arg(fileName);
>         //qDebug() << "setPoemMediaSource="<< q.exec(strQuery);
> //      q.first();
> //      if (q.isValid() && q.isActive())
> //      {
> //          QSqlRecord qrec = q.record();
> //          return (qrec.value(0)).toString();
> //      }
>     }
>     return;
> }
> 
> GanjoorPoet DatabaseBrowser::getPoet(QString PoetName, const QString &connectionID)
> {
>     GanjoorPoet gPoet;
>     gPoet.init();
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
> 
>         bool descriptionExists = false;
>         if (q.exec("SELECT id, name, cat_id, description FROM poet WHERE name = \'" + PoetName + "\'")) {
>             descriptionExists = true;
>         }
>         else {
>             q.exec("SELECT id, name, cat_id FROM poet WHERE name = \'" + PoetName + "\'");
>         }
> 
>         q.first();
>         if (q.isValid() && q.isActive()) {
>             QSqlRecord qrec = q.record();
>             if (descriptionExists) {
>                 gPoet.init((qrec.value(0)).toInt(), (qrec.value(1)).toString(), (qrec.value(2)).toInt(), (qrec.value(3)).toString());
>             }
>             else {
>                 gPoet.init((qrec.value(0)).toInt(), (qrec.value(1)).toString(), (qrec.value(2)).toInt(), "");
>             }
> 
>             return gPoet;
>         }
>     }
>     return gPoet;
> }
> 
> int DatabaseBrowser::getRandomPoemID(int* CatID, const QString &connectionID)
> {
>     if (isConnected(connectionID)) {
>         QList<GanjoorCat*> subCats = getSubCategories(*CatID, connectionID);
>         int randIndex = Tools::getRandomNumber(0, subCats.size());
>         if (randIndex >= 0 && randIndex != subCats.size()) { // '==' is when we want to continue with current 'CatID'. notice maybe 'randIndex == subCats.size() == 0'.
>             *CatID = subCats.at(randIndex)->_ID;
>             return getRandomPoemID(CatID, connectionID);
>         }
> 
>         QString strQuery = "SELECT MIN(id), MAX(id) FROM poem";
>         if (*CatID != 0) {
>             strQuery += " WHERE cat_id=" + QString::number(*CatID);
>         }
>         QSqlQuery q(database(connectionID));
>         q.exec(strQuery);
>         if (q.next()) {
>             QSqlRecord qrec = q.record();
>             int minID = qrec.value(0).toInt();
>             int maxID = qrec.value(1).toInt();
> 
>             if (maxID <= 0 || minID < 0) {
>                 QList<GanjoorCat*> subCats = getSubCategories(*CatID, connectionID);
>                 *CatID = subCats.at(Tools::getRandomNumber(0, subCats.size() - 1))->_ID;
>                 return getRandomPoemID(CatID, connectionID);
>             }
>             return Tools::getRandomNumber(minID, maxID);
>         }
>     }
>     return -1;
> }
> 
> QList<GanjoorPoet*> DatabaseBrowser::getDataBasePoets(const QString fileName)
> {
>     if (!QFile::exists(fileName)) {
>         return QList<GanjoorPoet*>();
>     }
> 
>     QString dataBaseID = getIdForDataBase(fileName);
> 
>     if (!database(dataBaseID).open()) {
>         QSqlDatabase::removeDatabase(dataBaseID);
>         return QList<GanjoorPoet*>();
>     }
> 
>     return getPoets(dataBaseID, false);
> }
> 
> QString DatabaseBrowser::getIdForDataBase(const QString &fileName, QThread* thread)
> {
>     if (thread == 0) {
>         thread = QThread::currentThread();
>     }
> 
>     bool clone = false;
>     const QString &longName = Tools::getLongPathName(fileName);
>     const QString &connectionID = longName + QLatin1String("/thread:") + threadToString(thread);
> 
>     if (!QSqlDatabase::contains(connectionID)) {
>         const QStringList &allConnections = QSqlDatabase::connectionNames();
> 
>         QString id;
>         foreach (id, allConnections) {
>             if (id.startsWith(longName)) {
>                 clone = true;
>                 break;
>             }
>         }
> 
>         QSqlDatabase db = clone
>                           ? QSqlDatabase::cloneDatabase(QSqlDatabase::database(id, false), connectionID)
>                           : QSqlDatabase::addDatabase(sqlDriver, connectionID);
> 
>         db.setDatabaseName(fileName);
>         db.open();
> 
>         s_threadConnections.insert(thread, connectionID);
> 
>         Q_ASSERT(s_instance != 0);
> 
>         connect(thread, SIGNAL(destroyed(QObject*)), s_instance, SLOT(removeThreadsConnections(QObject*)));
>     }
> 
>     return connectionID;
> }
> 
> void DatabaseBrowser::removeDatabase(const QString &fileName, QThread* thread)
> {
>     if (thread == 0) {
>         thread = QThread::currentThread();
>     }
> 
>     QString connectionID = Tools::getLongPathName(fileName) + QLatin1String("/") + threadToString(thread);
> 
>     if (QSqlDatabase::contains(connectionID)) {
>         QSqlDatabase::removeDatabase(connectionID);
> 
>         s_threadConnections.remove(thread, connectionID);
>     }
> }
> 
> QList<GanjoorPoet*> DatabaseBrowser::getConflictingPoets(const QString fileName, const QString &toConnectionID)
> {
>     QList<GanjoorPoet*> conflictList;
>     if (isConnected()) {
>         QList<GanjoorPoet*> dataBasePoets = getDataBasePoets(fileName);
>         QList<GanjoorPoet*> installedPoets = getPoets(toConnectionID);
>         foreach (GanjoorPoet* poet, installedPoets) {
>             foreach (GanjoorPoet* dbPoet, dataBasePoets) {
>                 if (dbPoet->_ID == poet->_ID) {
>                     conflictList << poet;
>                     break;
>                 }
>             }
>         }
>     }
> 
>     return conflictList;
> }
> 
> void DatabaseBrowser::removePoetFromDataBase(int PoetID, const QString &connectionID)
> {
>     if (isConnected(connectionID)) {
>         QString strQuery;
>         QSqlQuery q(database(connectionID));
> 
>         removeCatFromDataBase(getCategory(getPoet(PoetID, connectionID)._CatID, connectionID), connectionID);
> 
>         strQuery = "DELETE FROM poet WHERE id=" + QString::number(PoetID);
>         q.exec(strQuery);
>     }
> }
> 
> void DatabaseBrowser::removeCatFromDataBase(const GanjoorCat &gCat, const QString &connectionID)
> {
>     if (gCat.isNull()) {
>         return;
>     }
>     QList<GanjoorCat*> subCats = getSubCategories(gCat._ID, connectionID);
>     foreach (GanjoorCat* cat, subCats) {
>         removeCatFromDataBase(*cat, connectionID);
>     }
>     if (isConnected(connectionID)) {
>         QString strQuery;
>         QSqlQuery q(database(connectionID));
>         strQuery = "DELETE FROM verse WHERE poem_id IN (SELECT id FROM poem WHERE cat_id=" + QString::number(gCat._ID) + ")";
>         q.exec(strQuery);
>         strQuery = "DELETE FROM poem WHERE cat_id=" + QString::number(gCat._ID);
>         q.exec(strQuery);
>         strQuery = "DELETE FROM cat WHERE id=" + QString::number(gCat._ID);
>         q.exec(strQuery);
>     }
> }
> 
> QString DatabaseBrowser::defaultConnectionId()
> {
>     if (s_defaultConnectionId.isEmpty()) {
>         if (!s_instance) {
>             if (!s_defaultDatabaseFileName.isEmpty()) {
>                 s_instance = new DatabaseBrowser(s_defaultDatabaseFileName);
>             }
>         }
> 
>         if (s_defaultConnectionId.isEmpty()) {
>             qFatal("There is no a default connection!");
>             exit(1);
>         }
>     }
> 
>     return getIdForDataBase(databaseFileFromID(s_defaultConnectionId), QThread::currentThread());
> }
> 
> int DatabaseBrowser::getNewPoetID(const QString &connectionID)
> {
>     int newPoetID = -1;
> 
>     if (isConnected(connectionID)) {
>         QString strQuery = "SELECT MAX(id) FROM poet";
>         QSqlQuery q(database(connectionID));
>         q.exec(strQuery);
> 
>         if (q.first()) {
>             bool ok = false;
>             newPoetID = q.value(0).toInt(&ok) + 1;
>             if (!ok) {
>                 newPoetID = minNewPoetID + 1;
>             }
>         }
>     }
> 
>     if (newPoetID < minNewPoetID) {
>         newPoetID = minNewPoetID + 1;
>     }
> 
>     return newPoetID;
> }
> int DatabaseBrowser::getNewPoemID(const QString &connectionID)
> {
>     int newPoemID = -1;
> 
>     if (isConnected(connectionID)) {
>         QString strQuery = "SELECT MAX(id) FROM poem";
>         QSqlQuery q(database(connectionID));
>         q.exec(strQuery);
> 
>         if (q.first()) {
>             bool ok = false;
>             newPoemID = q.value(0).toInt(&ok) + 1;
>             if (!ok) {
>                 newPoemID = minNewPoemID + 1;
>             }
>         }
>     }
> 
>     if (newPoemID < minNewPoemID) {
>         newPoemID = minNewPoemID + 1;
>     }
> 
>     return newPoemID;
> }
> 
> int DatabaseBrowser::getNewCatID(const QString &connectionID)
> {
>     int newCatID = -1;
> 
>     if (isConnected(connectionID)) {
>         QString strQuery = "SELECT MAX(id) FROM cat";
>         QSqlQuery q(database(connectionID));
>         q.exec(strQuery);
> 
>         if (q.first()) {
>             bool ok = false;
>             newCatID = q.value(0).toInt(&ok) + 1;
>             if (!ok) {
>                 newCatID = minNewCatID + 1;
>             }
>         }
>     }
> 
>     if (newCatID < minNewCatID) {
>         newCatID = minNewCatID + 1;
>     }
> 
>     return newCatID;
> }
> 
> bool DatabaseBrowser::importDataBase(const QString &fromFileName, const QString &toConnectionID)
> {
>     if (!QFile::exists(fromFileName)) {
>         return false;
>     }
> 
>     QString connectionID = getIdForDataBase(fromFileName);
> 
>     if (!database(connectionID).open() || !isValid(connectionID)) {
>         QSqlDatabase::removeDatabase(connectionID);
>         return false;
>     }
> 
>     {
>         // start of block
>         QList<GanjoorPoet*> poets = getPoets(connectionID, false);
> 
>         QString strQuery;
>         QSqlQuery queryObject(database(connectionID));
>         QMap<int, int> mapPoets;
>         QMap<int, int> mapCats;
> 
>         foreach (GanjoorPoet* newPoet, poets) {
>             bool insertNewPoet = true;
> 
>             //skip every null poet(poet without subcat)
>             if (!poetHasSubCats(newPoet->_ID, connectionID)) {
>                 continue;
>             }
> 
>             GanjoorPoet poet = getPoet(newPoet->_Name, toConnectionID);
>             if (!poet.isNull()) { //conflict on Names
>                 if (poet._ID == newPoet->_ID) {
>                     insertNewPoet = false;
>                     mapPoets.insert(newPoet->_ID, newPoet->_ID);
>                     GanjoorCat poetCat = getCategory(newPoet->_CatID, toConnectionID);
>                     if (!poetCat.isNull()) {
>                         if (poetCat._PoetID == newPoet->_ID) {
>                             mapCats.insert(newPoet->_CatID, newPoet->_CatID);
>                         }
>                         else {
>                             int aRealyNewCatID = getNewCatID(toConnectionID);
>                             mapCats.insert(newPoet->_CatID, getNewCatID(toConnectionID));
>                             newPoet->_CatID = aRealyNewCatID;
>                         }
>                     }
>                 }
>                 else {
>                     mapPoets.insert(newPoet->_ID, poet._ID);
>                     mapPoets.insert(newPoet->_CatID, poet._CatID);
>                     newPoet->_CatID = poet._CatID;
>                 }
>             }
>             else {
>                 if (!getPoet(newPoet->_ID, toConnectionID).isNull()) { //conflict on IDs
>                     int aRealyNewPoetID = getNewPoetID(toConnectionID);
>                     mapPoets.insert(newPoet->_ID, aRealyNewPoetID);
>                     newPoet->_ID = aRealyNewPoetID;
> 
>                     int aRealyNewCatID = getNewCatID(toConnectionID);
>                     mapCats.insert(newPoet->_CatID, aRealyNewCatID);
>                     newPoet->_CatID = aRealyNewCatID;
>                 }
>                 else { //no conflict, insertNew
>                     mapPoets.insert(newPoet->_ID, newPoet->_ID);
>                     GanjoorCat newPoetCat = getCategory(newPoet->_CatID, toConnectionID);
>                     if (newPoetCat.isNull()) {
>                         mapCats.insert(newPoet->_CatID, newPoet->_CatID);
>                     }
>                     else {
>                         int aRealyNewCatID = getNewCatID();
>                         mapCats.insert(newPoet->_CatID, getNewCatID());
>                         newPoet->_CatID = aRealyNewCatID;
>                     }
>                 }
>             }
> 
>             if (insertNewPoet && isConnected(toConnectionID)) {
>                 strQuery = QString("INSERT INTO poet (id, name, cat_id, description) VALUES (%1, \"%2\", %3, \"%4\");").arg(newPoet->_ID).arg(newPoet->_Name).arg(newPoet->_CatID).arg(newPoet->_Description);
>                 QSqlQuery q(database(toConnectionID));
>                 q.exec(strQuery);
>             }
>         }
> 
>         strQuery = QString("SELECT id, poet_id, text, parent_id, url FROM cat");
>         queryObject.exec(strQuery);
> 
>         QList<GanjoorCat*> gCatList;
>         while (queryObject.next()) {
>             GanjoorCat* gCat = new GanjoorCat();
>             gCat->init(queryObject.value(0).toInt(), queryObject.value(1).toInt(), queryObject.value(2).toString(), queryObject.value(3).toInt(), queryObject.value(4).toString());
>             gCatList.append(gCat);
>         }
> 
>         foreach (GanjoorCat* newCat, gCatList) {
>             newCat->_PoetID = mapPoets.value(newCat->_PoetID, newCat->_PoetID);
>             newCat->_ParentID = mapCats.value(newCat->_ParentID, newCat->_ParentID);
> 
>             bool insertNewCategory = true;
>             GanjoorCat gCat = getCategory(newCat->_ID, toConnectionID);
>             if (!gCat.isNull()) {
>                 if (gCat._PoetID == newCat->_PoetID) {
>                     insertNewCategory = false;
> 
>                     if (mapCats.value(newCat->_ID, -1) == -1) {
>                         mapCats.insert(newCat->_ID, newCat->_ID);
>                     }
>                 }
>                 else {
>                     int aRealyNewCatID = getNewCatID();
>                     mapCats.insert(newCat->_ID, aRealyNewCatID);
>                     newCat->_ID = aRealyNewCatID;
>                 }
>             }
>             else {
>                 if (mapCats.value(newCat->_ID, -1) == -1) {
>                     mapCats.insert(newCat->_ID, newCat->_ID);
>                 }
>             }
> 
>             if (insertNewCategory && isConnected(toConnectionID)) {
>                 strQuery = QString("INSERT INTO cat (id, poet_id, text, parent_id, url) VALUES (%1, %2, \"%3\", %4, \"%5\");").arg(newCat->_ID).arg(newCat->_PoetID).arg(newCat->_Text).arg(newCat->_ParentID).arg(newCat->_Url);
>                 QSqlQuery q(database(toConnectionID));
>                 q.exec(strQuery);
>             }
> 
>             /*if ( getPoet(newCat->_PoetID).isNull() )
>             {
>                 //missing poet
>                 int poetCat;
>                 if (newCat->_ParentID == 0)
>                     poetCat = newCat->_ID;
>                 else
>                 {
>                     //this is not good:
>                     poetCat = newCat->_ParentID;
>                 }
>                 qDebug() << "a new poet should be created";
>                 this.NewPoet("شاعر " + PoetID.ToString(), PoetID, poetCat);
>             }*/
>         }
> 
>         QMap<int, int> dicPoemID;
>         strQuery = "SELECT id, cat_id, title, url FROM poem";
>         queryObject.exec(strQuery);
>         QList<GanjoorPoem*> poemList;
> 
>         while (queryObject.next()) {
>             GanjoorPoem* gPoem = new GanjoorPoem();
>             gPoem->init(queryObject.value(0).toInt(), queryObject.value(1).toInt(), queryObject.value(2).toString(), queryObject.value(3).toString());
>             poemList.append(gPoem);
>         }
> 
>         foreach (GanjoorPoem* newPoem, poemList) {
>             int tmp = newPoem->_ID;
>             if (!getPoem(newPoem->_ID, toConnectionID).isNull()) {
>                 newPoem->_ID = getNewPoemID();
>             }
>             newPoem->_CatID = mapCats.value(newPoem->_CatID, newPoem->_CatID);
>             dicPoemID.insert(tmp, newPoem->_ID);
> 
>             if (isConnected(toConnectionID)) {
>                 strQuery = QString("INSERT INTO poem (id, cat_id, title, url) VALUES (%1, %2, \"%3\", \"%4\");").arg(newPoem->_ID).arg(newPoem->_CatID).arg(newPoem->_Title).arg(newPoem->_Url);
>                 QSqlQuery q(database(toConnectionID));
>                 q.exec(strQuery);
>             }
>         }
> 
>         strQuery = "SELECT poem_id, vorder, position, text FROM verse";
>         queryObject.exec(strQuery);
>         QList<GanjoorVerse*> verseList;
> 
>         while (queryObject.next()) {
>             GanjoorVerse* gVerse = new GanjoorVerse();
>             gVerse->init(queryObject.value(0).toInt(), queryObject.value(1).toInt(), (VersePosition)queryObject.value(2).toInt(), queryObject.value(3).toString());
>             verseList.append(gVerse);
>         }
> 
>         if (isConnected(toConnectionID)) {
>             strQuery = "INSERT INTO verse (poem_id, vorder, position, text) VALUES (:poem_id,:vorder,:position,:text)";
>             QSqlQuery q(database(toConnectionID));
>             q.prepare(strQuery);
> 
>             foreach (GanjoorVerse* newVerse, verseList) {
>                 newVerse->_PoemID = dicPoemID.value(newVerse->_PoemID, newVerse->_PoemID);
>                 q.bindValue(":poem_id", newVerse->_PoemID);
>                 q.bindValue(":vorder", newVerse->_Order);
>                 q.bindValue(":position", newVerse->_Position);
>                 q.bindValue(":text", newVerse->_Text);
>                 q.exec();
>             }
>         }
>     } // end of block
> 
>     QSqlDatabase::removeDatabase(connectionID);
> 
>     emit databaseUpdated(toConnectionID);
> 
>     return true;
> }
> 
> bool DatabaseBrowser::getPoemIDsByPhrase(ConcurrentTask* searchTask, const QString &currentSelectionPath, const QString &currentSelectionPathTitle, const QStringList &phraseList, const QStringList &excludedList,
>         bool* Canceled, bool slowSearch, const QString &connectionID)
> {
>     if (phraseList.isEmpty()) {
>         return false;
>     }
> 
>     QString strQuery;
>     QStringList excludeWhenCleaning;
>     QString searchQueryPhrase;
> //    bool findRhyme = false;
> 
> //    if (phraseList.contains("=", Qt::CaseInsensitive)) {
> //        findRhyme = true;
> //    }
> 
>     QString firstPhrase = phraseList.at(0);
> 
>     if (!firstPhrase.contains("=")) {
>         excludeWhenCleaning << " ";
>     }
>     else {
>         firstPhrase.remove("=");
>     }
> 
>     QString joiner;
>     if (SearchResultWidget::skipVowelSigns) {
>         joiner = QLatin1String("%");
>     }
>     //replace characters that have some variants with anyWord replaceholder!
>     //we have not to worry about this replacement, because phraseList.at(0) is tested again!
>     bool variantPresent = false;
>     if (SearchResultWidget::skipVowelLetters) {
>         QRegExp variantEXP("[" + Tools::Ve_Variant.join("") + Tools::AE_Variant.join("") + Tools::He_Variant.join("") + Tools::Ye_Variant.join("") + "]+");
>         if (firstPhrase.contains(variantEXP)) {
>             firstPhrase.replace(variantEXP, "%");
>             variantPresent = true;
>         }
>     }
> 
>     QStringList anyWordedList = firstPhrase.split("%%", QString::SkipEmptyParts);
>     for (int i = 0; i < anyWordedList.size(); ++i) {
>         QString subPhrase = anyWordedList.at(i);
>         if (SearchResultWidget::skipVowelSigns) {
>             subPhrase.remove("%");
>         }
>         //TODO: remove skipNonAlphabet and replace it with NEAR operator
>         //search for firstPhrase then go for other ones
>         subPhrase = subPhrase.simplified();
>         if (!subPhrase.contains(" ") || variantPresent) {
>             subPhrase = Tools::cleanString(subPhrase, excludeWhenCleaning).split("", QString::SkipEmptyParts).join(joiner);
>         }
>         subPhrase.replace("% %", "%");
>         anyWordedList[i] = subPhrase;
>     }
> 
>     searchQueryPhrase = anyWordedList.join("%");
> 
>     QString taskTitle = currentSelectionPathTitle;
> 
>     if (currentSelectionPath == "ALL") {
>         strQuery = QString("SELECT poem_id, text, vorder FROM verse WHERE text LIKE \'%" + searchQueryPhrase + "%\' ORDER BY poem_id");
>     }
>     else if (currentSelectionPath == "ALL_TITLES") {
>         strQuery = QString("SELECT id, title FROM poem WHERE title LIKE \'%" + searchQueryPhrase + "%\' ORDER BY id");
>     }
>     else {
>         strQuery = QString("SELECT verse.poem_id,verse.text, verse.vorder FROM verse WHERE verse.text LIKE \'%%1%\' AND verse.poem_id IN (SELECT poem.id FROM poem WHERE poem.cat_id IN (%2) ORDER BY poem.id)").arg(searchQueryPhrase).arg(currentSelectionPath);
>     }
> 
>     taskTitle.prepend(tr("Search: "));
> 
>     QVariantHash arguments;
>     // TODO: Add local database support to parallel search
>     VAR_ADD(arguments, connectionID);
>     VAR_ADD(arguments, strQuery);
>     VAR_ADD(arguments, currentSelectionPath);
>     VAR_ADD(arguments, phraseList);
>     VAR_ADD(arguments, excludedList);
>     VAR_ADD(arguments, excludeWhenCleaning);
>     VAR_ADD(arguments, Canceled);
>     VAR_ADD(arguments, slowSearch);
>     VAR_ADD(arguments, taskTitle);
> 
>     searchTask->start("SEARCH", arguments, true);
> 
>     return true;
> }
> 
> bool DatabaseBrowser::isRadif(const QList<GanjoorVerse*> &verses, const QString &phrase, int verseOrder)
> {
>     //verseOrder starts from 1 to verses.size()
>     if (verseOrder <= 0 || verseOrder > verses.size()) {
>         return false;
>     }
> 
>     //QList<GanjoorVerse *> verses = getVerses(PoemID);
> 
>     QString cleanedVerse = Tools::cleanStringFast(verses.at(verseOrder - 1)->_Text, QStringList(""));
>     //cleanedVerse = " "+cleanedVerse+" ";//just needed for whole word
>     QString cleanedPhrase = Tools::cleanStringFast(phrase, QStringList(""));
> 
>     if (!cleanedVerse.contains(cleanedPhrase)) {
>         //verses.clear();
>         return false;
>     }
> 
>     QString secondMesra = "";
>     QList<int> mesraOrdersForCompare;
>     mesraOrdersForCompare  << -1 << -1 << -1;
>     int secondMesraOrder = -1;
> 
>     switch (verses.at(verseOrder - 1)->_Position) {
>     case Right:
>     case CenteredVerse1:
>         if (verseOrder == verses.size()) { //last single beyt! there is no 'CenteredVerse2' or a database error
>             //verses.clear();
>             return false;
>         }
>         if (verses.at(verseOrder)->_Position == Left || verses.at(verseOrder)->_Position == CenteredVerse2) {
>             mesraOrdersForCompare[0] = verseOrder;
>         }
>         else {
>             //verses.clear();
>             return false;
>         }//again database error
>         break;
>     case Left:
>     case CenteredVerse2:
>         if (verseOrder == 1) { //there is just one beyt!! more probably a database error
>             //verses.clear();
>             return false;
>         }
>         if (verses.at(verseOrder - 2)->_Position == Right || verses.at(verseOrder - 2)->_Position == CenteredVerse1) {
>             mesraOrdersForCompare[0] = verseOrder - 2;
>         }
>         if (verseOrder - 3 >= 0 && (verses.at(verseOrder - 3)->_Position == Left || verses.at(verseOrder - 3)->_Position == CenteredVerse2)) {
>             mesraOrdersForCompare[1] = verseOrder - 3;    //mesra above current mesra
>         }
>         if (verseOrder + 1 <= verses.size() - 1 && (verses.at(verseOrder + 1)->_Position == Left || verses.at(verseOrder + 1)->_Position == CenteredVerse2)) {
>             mesraOrdersForCompare[2] = verseOrder + 1;    //mesra above current mesra
>         }
>         if (mesraOrdersForCompare.at(0) == -1 && mesraOrdersForCompare.at(1) == -1 && mesraOrdersForCompare.at(2) == -1) {
>             //verses.clear();
>             return false;
>         }//again database error
>         break;
> 
>     default:
>         break;
>     }
> 
>     for (int i = 0; i < 3; ++i) {
>         secondMesraOrder = mesraOrdersForCompare.at(i);
>         if (secondMesraOrder == -1) {
>             continue;
>         }
>         secondMesra = Tools::cleanStringFast(verses.at(secondMesraOrder)->_Text, QStringList(""));
> 
>         if (!secondMesra.contains(cleanedPhrase)) {
>             //verses.clear();
>             //return false;
>             continue;
>         }
> 
>         QString firstEnding = cleanedVerse.mid(cleanedVerse.lastIndexOf(cleanedPhrase) + cleanedPhrase.size());
>         QString secondEnding = secondMesra.mid(secondMesra.lastIndexOf(cleanedPhrase) + cleanedPhrase.size());
> 
>         if (firstEnding != "" || secondEnding != "") { //they're not empty or RADIF
>             continue;    //return false;
>         }
> 
>         int tmp1 = cleanedVerse.lastIndexOf(cleanedPhrase) - 1;
>         int tmp2 = secondMesra.lastIndexOf(cleanedPhrase) - 1;
>         if (tmp1 < 0 || tmp2 < 0) {
>             continue;    //return false;
>         }
> 
>         return true;
>     }
>     return false;
> }
> 
> bool DatabaseBrowser::isRhyme(const QList<GanjoorVerse*> &verses, const QString &phrase, int verseOrder)
> {
>     //verseOrder starts from 1 to verses.size()
>     if (verseOrder <= 0 || verseOrder > verses.size()) {
>         return false;
>     }
> 
>     QString cleanedVerse = Tools::cleanStringFast(verses.at(verseOrder - 1)->_Text, QStringList(""));
>     QString cleanedPhrase = Tools::cleanStringFast(phrase, QStringList(""));
> 
>     if (!cleanedVerse.contains(cleanedPhrase)) {
>         //verses.clear();
>         return false;
>     }
> 
>     QString secondMesra = "";
>     QList<int> mesraOrdersForCompare;
>     mesraOrdersForCompare  << -1 << -1 << -1;
>     int secondMesraOrder = -1;
> 
>     switch (verses.at(verseOrder - 1)->_Position) {
>     case Right:
>     case CenteredVerse1:
>         if (verseOrder == verses.size()) { //last single beyt! there is no 'CenteredVerse2' or a database error
>             //verses.clear();
>             return false;
>         }
>         if (verses.at(verseOrder)->_Position == Left || verses.at(verseOrder)->_Position == CenteredVerse2) {
>             mesraOrdersForCompare[0] = verseOrder;
>         }
>         else {
>             //verses.clear();
>             return false;
>         }//again database error
>         break;
>     case Left:
>     case CenteredVerse2:
>         if (verseOrder == 1) { //there is just one beyt!! more probably a database error
>             //verses.clear();
>             return false;
>         }
>         if (verses.at(verseOrder - 2)->_Position == Right || verses.at(verseOrder - 2)->_Position == CenteredVerse1) {
>             mesraOrdersForCompare[0] = verseOrder - 2;
>         }
>         if (verseOrder - 3 >= 0 && (verses.at(verseOrder - 3)->_Position == Left || verses.at(verseOrder - 3)->_Position == CenteredVerse2)) {
>             mesraOrdersForCompare[1] = verseOrder - 3;    //mesra above current mesra
>         }
>         if (verseOrder + 1 <= verses.size() - 1 && (verses.at(verseOrder + 1)->_Position == Left || verses.at(verseOrder + 1)->_Position == CenteredVerse2)) {
>             mesraOrdersForCompare[2] = verseOrder + 1;    //mesra above current mesra
>         }
>         if (mesraOrdersForCompare.at(0) == -1 && mesraOrdersForCompare.at(1) == -1 && mesraOrdersForCompare.at(2) == -1) {
>             //verses.clear();
>             return false;
>         }//again database error
>         break;
> 
>     default:
>         break;
>     }
> 
>     for (int i = 0; i < 3; ++i) {
>         secondMesraOrder = mesraOrdersForCompare.at(i);
>         if (secondMesraOrder == -1) {
>             continue;
>         }
>         secondMesra = Tools::cleanStringFast(verses.at(secondMesraOrder)->_Text, QStringList(""));
> 
>         int indexInSecondMesra = secondMesra.lastIndexOf(cleanedPhrase);
>         int offset = cleanedPhrase.size();
>         while (indexInSecondMesra < 0) {
>             --offset;
>             if (offset < 1) {
>                 break;
>             }
>             indexInSecondMesra = secondMesra.lastIndexOf(cleanedPhrase.right(offset));
>         }
>         if (indexInSecondMesra < 0) {
>             continue;
>         }
> 
>         QString firstEnding = cleanedVerse.mid(cleanedVerse.lastIndexOf(cleanedPhrase) + cleanedPhrase.size());
>         QString secondEnding = secondMesra.mid(indexInSecondMesra + cleanedPhrase.right(offset).size()); //secondMesra.mid(secondMesra.lastIndexOf(cleanedPhrase)+cleanedPhrase.size());
> 
>         if (firstEnding != secondEnding) { //they're not empty or RADIF
>             continue;    //return false;
>         }
> 
>         int tmp1 = cleanedVerse.lastIndexOf(cleanedPhrase) - 1;
>         int tmp2 = indexInSecondMesra - 1;
>         if (tmp1 < 0 || tmp2 < 0) {
>             continue;    //return false;
>         }
> 
>         if (cleanedVerse.at(tmp1) == secondMesra.at(tmp2) &&
>                 firstEnding.isEmpty()) { // and so secondEnding
>             //if last character before phrase are similar this is not a Rhyme maybe its RADIF
>             //or a part!!! of Rhyme.
>             //the following algorithm works good for Rhyme with similar spell and diffrent meanings.
>             continue;//return false;
>         }
>         else {
>             return true;
>         }
>     }
>     return false;
> }
> 
> QVariantList DatabaseBrowser::importGanjoorBookmarks(QString connectionID)
> {
>     QVariantList lst;
>     if (isConnected(connectionID)) {
>         QString selectQuery = QString("SELECT poem_id, verse_id FROM fav");
>         QSqlQuery q(database(connectionID));
>         q.exec(selectQuery);
>         QSqlRecord qrec;
>         while (q.next()) {
>             qrec = q.record();
>             int poemID = qrec.value(0).toInt();
>             int verseID = qrec.value(1).toInt();
>             QString comment = QObject::tr("From Desktop Ganjoor");
>             GanjoorPoem poem = getPoem(poemID, connectionID);
>             if (verseID == -1) {
>                 verseID = 1;
>             }
>             QString verseText = getBeyt(poemID, verseID, "[newline]", connectionID).simplified();
>             verseText.replace("[newline]", "\n");
>             verseText.prepend(poem._Title + "\n");
>             QStringList data;
>             data << QString::number(poemID) << QString::number(verseID) << verseText << poem._Url + "/#" + QString::number(verseID) << comment;
>             lst << data;
>         }
>     }
>     return lst;
> }
> 
> QString DatabaseBrowser::getBeyt(int poemID, int firstMesraID, const QString &separator, QString connectionID)
> {
>     QStringList mesras;
>     if (isConnected(connectionID)) {
>         QSqlQuery q(database(connectionID));
>         QString selectQuery = QString("SELECT vorder, position, text FROM verse WHERE poem_id = %1 and vorder >= %2 ORDER BY vorder LIMIT 2").arg(poemID).arg(firstMesraID);
>         q.exec(selectQuery);
>         QSqlRecord qrec;
>         bool centeredVerse1 = false;
>         while (q.next()) {
>             qrec = q.record();
>             VersePosition mesraPosition = VersePosition(qrec.value(1).toInt());
>             if (!centeredVerse1) {
>                 mesras << qrec.value(2).toString();
>             }
>             bool breakLoop = false;
> 
>             switch (mesraPosition) {
>             case Single:
>             case Paragraph:
>                 breakLoop = true;
>                 break;
>             case Right:
>                 break;
>             case Left:
>                 breakLoop = true;
>                 break;
>             case CenteredVerse1:
>                 centeredVerse1 = true;
>                 break;
>             case CenteredVerse2:
>                 if (centeredVerse1) {
>                     mesras << qrec.value(2).toString();
>                 }
>                 breakLoop = true;
>                 break;
>             default:
>                 break;
>             }
>             if (breakLoop) {
>                 break;
>             }
>         }
>     }
>     if (!mesras.isEmpty()) {
>         return mesras.join(separator);
>     }
>     return "";
> }
> 
> bool DatabaseBrowser::poetHasSubCats(int poetID, const QString &connectionID)
> {
>     if (isConnected(connectionID)) {
>         QSqlDatabase dataBaseObject = database(connectionID);
> 
>         QSqlQuery q(dataBaseObject);
>         q.exec("SELECT id, text FROM cat WHERE poet_id = " + QString::number(poetID));
> 
>         q.first();
>         if (q.isValid() && q.isActive()) {
>             return true;
>         }
>         else {
>             return false;
>         }
>     }
>     return false;
> }
> 
> //SearchResults DatabaseBrowser::startSearch(const QString &strQuery, const QSqlDatabase &db,
> //        int PoetID, const QStringList &phraseList,
> //        const QStringList &excludedList, const QStringList &excludeWhenCleaning,
> //        bool* Canceled, bool slowSearch)
> //{
> //    SearchResults searchResults;
> 
> //    if (!isConnected()) {
> //        return searchResults;
> //    }
> 
> //    int andedPhraseCount = phraseList.size();
> //    int excludedCount = excludedList.size();
> //    int numOfFounded = 0;
> 
> //    QSqlQuery q(db);
> //#ifdef SAAGHAR_DEBUG
> //    int start = QDateTime::currentDateTime().toTime_t() * 1000 + QDateTime::currentDateTime().time().msec();
> //#endif
> //    q.exec(strQuery);
> //#ifdef SAAGHAR_DEBUG
> //    int end = QDateTime::currentDateTime().toTime_t() * 1000 + QDateTime::currentDateTime().time().msec();
> //    int miliSec = end - start;
> //    qDebug() << "duration=" << miliSec;
> //#endif
> //    int numOfNearResult = 0, nextStep = 0, stepLenght = 300;
> //    if (slowSearch) {
> //        stepLenght = 30;
> //    }
> 
> //    int lastPoemID = -1;
> //    QList<GanjoorVerse*> verses;
> 
> //    while (q.next()) {
> //        ++numOfNearResult;
> //        if (numOfNearResult > nextStep) {
> //            nextStep += stepLenght; //500
> //            emit searchStatusChanged(DatabaseBrowser::tr("Search Result(s): %1").arg(numOfFounded));
> //            QApplication::processEvents(QEventLoop::AllEvents);
> //        }
> 
> //        QSqlRecord qrec = q.record();
> //        int poemID = qrec.value(0).toInt();
> ////          if (idList.contains(poemID))
> ////              continue;//we need just first result
> 
> //        QString verseText = qrec.value(1).toString();
> //        // assume title's order is zero!
> //        int verseOrder = (PoetID == -1000 ? 0 : qrec.value(2).toInt());
> 
> //        QString foundedVerse = Tools::cleanStringFast(verseText, excludeWhenCleaning);
> //        // for whole word option when word is in the start or end of verse
> //        foundedVerse = " " + foundedVerse + " ";
> 
> //        //excluded list
> //        bool excludeCurrentVerse = false;
> //        for (int t = 0; t < excludedCount; ++t) {
> //            if (foundedVerse.contains(excludedList.at(t))) {
> //                excludeCurrentVerse = true;
> //                break;
> //            }
> //        }
> 
> //        if (!excludeCurrentVerse) {
> //            for (int t = 0; t < andedPhraseCount; ++t) {
> //                QString tphrase = phraseList.at(t);
> //                if (tphrase.contains("==")) {
> //                    tphrase.remove("==");
> //                    if (lastPoemID != poemID/* && findRhyme*/) {
> //                        lastPoemID = poemID;
> //                        int versesSize = verses.size();
> //                        for (int j = 0; j < versesSize; ++j) {
> //                            delete verses[j];
> //                            verses[j] = 0;
> //                        }
> //                        verses = getVerses(poemID);
> //                    }
> //                    excludeCurrentVerse = !isRadif(verses, tphrase, verseOrder);
> //                    break;
> //                }
> //                if (tphrase.contains("=")) {
> //                    tphrase.remove("=");
> //                    if (lastPoemID != poemID/* && findRhyme*/) {
> //                        lastPoemID = poemID;
> //                        int versesSize = verses.size();
> //                        for (int j = 0; j < versesSize; ++j) {
> //                            delete verses[j];
> //                            verses[j] = 0;
> //                        }
> //                        verses = getVerses(poemID);
> //                    }
> //                    excludeCurrentVerse = !isRhyme(verses, tphrase, verseOrder);
> //                    break;
> //                }
> //                if (!tphrase.contains("%")) {
> //                    //QChar(71,6): Simple He
> //                    //QChar(204,6): Persian Ye
> //                    QString YeAsKasre = QString(QChar(71, 6)) + " ";
> //                    if (tphrase.contains(YeAsKasre)) {
> //                        tphrase.replace(YeAsKasre, QString(QChar(71, 6)) + "\\s*" + QString(QChar(204, 6)) +
> //                                        "{0,2}\\s+");
> 
> //                        QRegExp anySearch(".*" + tphrase + ".*", Qt::CaseInsensitive);
> 
> //                        if (!anySearch.exactMatch(foundedVerse)) {
> //                            excludeCurrentVerse = true;
> //                            break;
> //                        }
> //                    }
> //                    else {
> //                        if (!foundedVerse.contains(tphrase))
> //                            //the verse doesn't contain an ANDed phrase
> //                            //maybe for ++ and +++ this should be removed
> //                        {
> //                            excludeCurrentVerse = true;
> //                            break;
> //                        }
> //                    }
> //                }
> //                else {
> //                    tphrase = tphrase.replace("%%", ".*");
> //                    tphrase = tphrase.replace("%", "\\S*");
> //                    QRegExp anySearch(".*" + tphrase + ".*", Qt::CaseInsensitive);
> //                    if (!anySearch.exactMatch(foundedVerse)) {
> //                        excludeCurrentVerse = true;
> //                        break;
> //                    }
> //                }
> //            }
> //        }
> 
> //        if (Canceled && *Canceled) {
> //            break;
> //        }
> 
> //        if (excludeCurrentVerse) {
> //#ifdef Q_OS_X11
> //            QApplication::processEvents(QEventLoop::WaitForMoreEvents , 3);//max wait 3 miliseconds
> //#endif
> //            continue;
> //        }
> 
> //        ++numOfFounded;
> //        GanjoorPoem gPoem = getPoem(poemID);
> //        searchResults.insertMulti(poemID, "verseText=" + verseText + "|poemTitle=" + gPoem._Title + "|poetName=" + getPoetForCat(gPoem._CatID)._Name);
> //#ifdef Q_OS_X11
> //        QApplication::processEvents(QEventLoop::WaitForMoreEvents , 3);//max wait 3 miliseconds
> //#endif
> 
> //    }
> 
> //    //for the last result
> //    emit searchStatusChanged(DatabaseBrowser::tr("Search Result(s): %1").arg(numOfFounded));
> 
> //    qDeleteAll(verses);
> 
> //    return searchResults;
> //}
> 
> void DatabaseBrowser::addDataSets()
> {
>     if (!DatabaseBrowser::dbUpdater) {
>         DatabaseBrowser::dbUpdater = new DataBaseUpdater(0, Qt::WindowStaysOnTopHint);
>     }
> 
>     if (!m_addRemoteDataSet) {
>         //select data sets existing
>         QStringList fileList = QFileDialog::getOpenFileNames(0, tr("Select data sets to install"), QDir::homePath(), "Supported Files (*.gdb *.s3db *.zip);;Ganjoor DataBase (*.gdb *.s3db);;Compressed Data Sets (*.zip);;All Files (*.*)");
>         if (!fileList.isEmpty()) {
>             foreach (const QString &file, fileList) {
>                 DatabaseBrowser::dbUpdater->installItemToDB(file);
>             }
>         }
>     }
>     else if (m_addRemoteDataSet) {
>         //download dialog
>         QtWin::easyBlurUnBlur(DatabaseBrowser::dbUpdater, VARB("SaagharWindow/UseTransparecy"));
>         DatabaseBrowser::dbUpdater->exec();
>     }
> }
> 
> bool DatabaseBrowser::createEmptyDataBase(const QString &connectionID)
> {
>     if (isConnected(connectionID)) {
>         QSqlDatabase dataBaseObject = database(connectionID);
> 
>         qDebug() << "tabels==" << dataBaseObject.tables(QSql::Tables);
>         if (!dataBaseObject.tables(QSql::Tables).isEmpty()) {
>             qWarning() << "The Data Base is NOT empty: " << dataBaseObject.databaseName();
>             return false;
>         }
>         dataBaseObject.transaction();
>         QSqlQuery q(dataBaseObject);
>         q.exec("CREATE TABLE [cat] ([id] INTEGER  PRIMARY KEY NOT NULL,[poet_id] INTEGER  NULL,[text] NVARCHAR(100)  NULL,[parent_id] INTEGER  NULL,[url] NVARCHAR(255)  NULL);");
>         q.exec("CREATE TABLE poem (id INTEGER PRIMARY KEY, cat_id INTEGER, title NVARCHAR(255), url NVARCHAR(255));");
>         q.exec("CREATE TABLE [poet] ([id] INTEGER  PRIMARY KEY NOT NULL,[name] NVARCHAR(20)  NULL,[cat_id] INTEGER  NULL  NULL, [description] TEXT);");
>         q.exec("CREATE TABLE [verse] ([poem_id] INTEGER  NULL,[vorder] INTEGER  NULL,[position] INTEGER  NULL,[text] TEXT  NULL);");
>         q.exec("CREATE INDEX cat_pid ON cat(parent_id ASC);");
>         q.exec("CREATE INDEX poem_cid ON poem(cat_id ASC);");
>         q.exec("CREATE INDEX verse_pid ON verse(poem_id ASC);");
>         return dataBaseObject.commit();
>     }
>     return false;
> }
> 
> QSqlDatabase DatabaseBrowser::databaseForThread(QThread* thread, const QString &baseConnectionID)
> {
>     return database(getIdForDataBase(databaseFileFromID(baseConnectionID), thread));
> }
> 
> int DatabaseBrowser::createCatPathOnNeed(QList<GanjoorCat> &catPath, const QString &description, const QString &connectionID)
> {
>     int newPoetID = -1;
>     int newCatID = -1;
> 
> 
>     if (!isConnected(connectionID)) {
>         return newCatID;
>     }
> 
>     for (int i = 0; i < catPath.size(); ++i) {
>         GanjoorCat &cat = catPath[i];
>         if (cat._ID == -1) {
>             if (i == 0) {
>                 // new poet
>                 if (newPoetID == -1) {
>                     newPoetID = getNewPoetID(connectionID);
>                 }
>                 if (newCatID == -1) {
>                     newCatID = getNewCatID(connectionID);
>                 }
>                 cat._ID = newCatID;
>                 cat._ParentID = 0;
>                 cat._PoetID = newPoetID;
> 
>                 ++newCatID;
>                 ++newPoetID;
> 
>                 QString strQuery = QString("INSERT INTO poet (id, name, cat_id, description) VALUES (%1, \"%2\", %3, \"%4\");")
>                                    .arg(cat._PoetID).arg(cat._Text).arg(cat._ID).arg(description);
>                 QSqlQuery q(database(connectionID));
>                 q.exec(strQuery);
> 
>                 strQuery = QString("INSERT INTO cat (id, poet_id, text, parent_id, url) VALUES (%1, %2, \"%3\", %4, \"%5\");")
>                            .arg(cat._ID).arg(cat._PoetID).arg(cat._Text).arg(cat._ParentID).arg(cat._Url);
> 
>                 q.exec(strQuery);
>             }
>             else {
>                 if (newCatID == -1) {
>                     newCatID = getNewCatID(connectionID);
>                 }
>                 cat._ID = newCatID;
>                 cat._ParentID = catPath.at(i - 1)._ID;
>                 cat._PoetID = catPath.at(i - 1)._PoetID;
> 
>                 ++newCatID;
> 
>                 QString strQuery = QString("INSERT INTO cat (id, poet_id, text, parent_id) VALUES (%1, %2, \"%3\", %4);")
>                                    .arg(cat._ID).arg(cat._PoetID).arg(cat._Text).arg(cat._ParentID);
>                 QSqlQuery q(database(connectionID));
>                 q.exec(strQuery);
>             }
>         }
>     }
> 
>     return newCatID;
> }
> 
> static void debugCatPath(const QList<GanjoorCat> &catPath, const QString &extra)
> {
>     qDebug() << "\n" << extra << "@@@@@@@ START @@@@@@@@@\n";
>     for (int i = 0; i < catPath.size(); ++i) {
>         GanjoorCat cat = catPath.at(i);
>         qDebug() << (i + 1) << " - " << cat._Text << "\n"
>                  << (i + 1) << " - " << cat._PoetID << "\n"
>                  << (i + 1) << " - " << cat._ParentID << "\n"
>                  << (i + 1) << " - " << cat._ID << "\n";
>     }
>     qDebug() << extra << "@@@@@@@@ END @@@@@@@@@@\n";
> }
> 
> void DatabaseBrowser::storeAsDataset(const CatContents &importData, const QList<GanjoorCat> &catPath, bool storeAsGDB, const QString &toConnectionID)
> {
>     if (!isConnected(toConnectionID) || catPath.isEmpty() || importData.isNull()) {
>         return;
>     }
> 
>     if (storeAsGDB) {
>         //
>     }
> 
>     QSqlDatabase dataBaseObject = database(toConnectionID);
>     bool inTransaction = dataBaseObject.transaction();
> 
>     QList<GanjoorCat> initCatPath = catPath;
>     debugCatPath(initCatPath, "1-BEFORE");
>     int newCatID = createCatPathOnNeed(initCatPath, importData.description, toConnectionID);
>     debugCatPath(initCatPath, "22-AFTER");
> 
> //    struct CatContents {
> //        QList<GanjoorPoem> poems;
> //        QMap<int, QList<GanjoorVerse> > verses;
> 
> //        CatContents() {}
> //        bool isNull() const { return poems.isEmpty() || verses.isEmpty(); }
> //        void clear() { poems.clear(); verses.clear(); }
> //    };
>     QString strQuery;
>     QSqlQuery qp(database(toConnectionID));
> 
>     QSqlQuery qv(database(toConnectionID));
>     QString verseQuery = "INSERT INTO verse (poem_id, vorder, position, text) VALUES (:poem_id,:vorder,:position,:text)";
>     qv.prepare(verseQuery);
> 
>     int newPoemId = getNewPoemID(toConnectionID);
>     GanjoorCat topLevelCat = initCatPath.last();
>     QHash<int, int> createdCatsIdMap;
>     int catId = -1;
> 
>     foreach (const GanjoorPoem &poem, importData.poems) {
>         QList<GanjoorVerse> verses = importData.verses.value(poem._ID);
> 
>         if (verses.isEmpty()) {
>             continue;
>         }
> 
>         QList<GanjoorCat> parentCats = importData.catParents(poem._CatID);
> 
>         if (!parentCats.isEmpty()) {
>             foreach (const GanjoorCat &cat, parentCats) {
>                 if (!createdCatsIdMap.contains(cat._ID)) {
>                     Q_ASSERT(cat._ParentID == -1 || createdCatsIdMap.contains(cat._ParentID));
> 
>                     int parentId = cat._ParentID == -1 ? topLevelCat._ID : createdCatsIdMap.value(cat._ParentID);
> 
>                     if (newCatID == -1) {
>                         newCatID = getNewCatID(toConnectionID);
>                     }
> 
>                     createdCatsIdMap.insert(cat._ID, newCatID);
>                     catId = newCatID;
> 
>                     strQuery = QString("INSERT INTO cat (id, poet_id, text, parent_id) VALUES (%1, %2, \"%3\", %4);")
>                                .arg(newCatID).arg(topLevelCat._PoetID).arg(cat._Text).arg(parentId);
>                     QSqlQuery q(database(toConnectionID));
>                     q.exec(strQuery);
> 
>                     ++newCatID;
>                 }
>                 else {
>                     catId = createdCatsIdMap.value(cat._ID);
>                 }
>             }
>         }
>         else {
>             catId = topLevelCat._ID;
>         }
> 
>         strQuery = QString("INSERT INTO poem (id, cat_id, title, url) VALUES (%1, %2, \"%3\", \"%4\");")
>                    .arg(newPoemId).arg(catId).arg(poem._Title).arg(poem._Url);
>         qp.exec(strQuery);
> 
>         foreach (const GanjoorVerse &verse, verses) {
>             qv.bindValue(":poem_id", newPoemId);
>             qv.bindValue(":vorder", verse._Order);
>             qv.bindValue(":position", verse._Position);
>             qv.bindValue(":text", verse._Text);
>             qv.exec();
>         }
> 
>         ++newPoemId;
>     }
> 
>     if (!inTransaction || dataBaseObject.commit()) {
>         emit databaseUpdated(toConnectionID);
>     }
>     else {
>         dataBaseObject.rollback();
>     }
> }
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databasebrowser.h lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databasebrowser.h
1,174c1,174
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< 
< #ifndef DATABASEBROWSER_H
< #define DATABASEBROWSER_H
< 
< #include <QMap>
< #include <QObject>
< #include <QWidget>
< #include <QString>
< #include <QSqlDatabase>
< #include <QSqlQuery>
< #include <QSqlError>
< #include <QSqlRecord>
< #include <QProgressDialog>
< #include <QVariant>
< 
< #include "databaseupdater.h"
< #include "databaseelements.h"
< #include "settings.h"
< #include "qtwin.h"
< 
< #include <QDebug>
< 
< #ifdef EMBEDDED_SQLITE
< #include "sqlite-driver/qsql_sqlite.h"
< #include "sqlite3.h"
< #endif
< 
< class ConcurrentTask;
< 
< typedef QMap<int, QString> SearchResults;
< 
< 
< class DatabaseBrowser : public QObject
< {
<     Q_OBJECT
< public:
<     static DatabaseBrowser* instance();
<     ~DatabaseBrowser();
< 
<     static QString databaseFileFromID(const QString &connectionID);
<     static QString getIdForDataBase(const QString &fileName, QThread* thread = 0);
<     static void removeDatabase(const QString &fileName, QThread* thread = 0);
<     static QSqlDatabase database(const QString &connectionID = defaultConnectionId(), bool open = true);
< 
<     static QString defaultConnectionId();
<     static QString defaultDatabasename();
<     static void setDefaultDatabasename(const QString &databaseName);
< 
<     bool isConnected(const QString &connectionID = defaultConnectionId());
<     bool isValid(QString connectionID = defaultConnectionId());
< 
<     bool isRhyme(const QList<GanjoorVerse*> &verses, const QString &phrase, int verseOrder = -1);
<     bool isRadif(const QList<GanjoorVerse*> &verses, const QString &phrase, int verseOrder = -1);
< 
<     QVariantList importGanjoorBookmarks(QString connectionID = defaultConnectionId());
<     QString getBeyt(int poemID, int firstMesraID,  const QString &separator = "       "/*7 spaces*/, QString connectionID = defaultConnectionId());
< 
<     QList<GanjoorPoet*> getDataBasePoets(const QString fileName);
<     QList<GanjoorPoet*> getConflictingPoets(const QString fileName, const QString &toConnectionID = defaultConnectionId());
<     QList<GanjoorPoet*> getPoets(const QString &connectionID = defaultConnectionId(), bool sort = true);
<     QList<GanjoorCat*> getSubCategories(int CatID, const QString &connectionID = defaultConnectionId());
<     QList<GanjoorCat> getParentCategories(GanjoorCat Cat, const QString &connectionID = defaultConnectionId());
<     QList<GanjoorPoem*> getPoems(int CatID, const QString &connectionID = defaultConnectionId());
<     QList<GanjoorVerse*> getVerses(int PoemID, const QString &connectionID = defaultConnectionId());
<     QList<GanjoorVerse*> getVerses(int PoemID, int Count, const QString &connectionID = defaultConnectionId());
< 
<     QString getFirstMesra(int PoemID, const QString &connectionID = defaultConnectionId());//just first Mesra
<     GanjoorCat getCategory(int CatID, const QString &connectionID = defaultConnectionId());
<     GanjoorPoem getPoem(int PoemID, const QString &connectionID = defaultConnectionId());
<     GanjoorPoem getNextPoem(int PoemID, int CatID, const QString &connectionID = defaultConnectionId());
<     GanjoorPoem getNextPoem(GanjoorPoem poem, const QString &connectionID = defaultConnectionId());
<     GanjoorPoem getPreviousPoem(int PoemID, int CatID, const QString &connectionID = defaultConnectionId());
<     GanjoorPoem getPreviousPoem(GanjoorPoem poem, const QString &connectionID = defaultConnectionId());
<     GanjoorPoet getPoetForPoem(int poemID, const QString &connectionID = defaultConnectionId());
<     GanjoorPoet getPoetForCat(int CatID, const QString &connectionID = defaultConnectionId());
<     GanjoorPoet getPoet(int PoetID, const QString &connectionID = defaultConnectionId());
<     GanjoorPoet getPoet(QString PoetName, const QString &connectionID = defaultConnectionId());
<     QString getPoetDescription(int PoetID, const QString &connectionID = defaultConnectionId());
<     QString getPoemMediaSource(int PoemID, const QString &connectionID = defaultConnectionId());
<     void setPoemMediaSource(int PoemID, const QString &fileName, const QString &connectionID = defaultConnectionId());
<     //Search
<     //QList<int> getPoemIDsContainingPhrase(QString phrase, int PageStart, int Count, int PoetID);
<     //QString getFirstVerseContainingPhrase(int PoemID, QString phrase);
<     //new Search Method
<     //QList<int> getPoemIDsContainingPhrase_NewMethod(const QString &phrase, int PoetID, bool skipNonAlphabet);
<     //QStringList getVerseListContainingPhrase(int PoemID, const QString &phrase);
<     //another new approch
<     bool getPoemIDsByPhrase(ConcurrentTask* searchTask, const QString &currentSelectionPath, const QString &currentSelectionPathTitle, const QStringList &phraseList, const QStringList &excludedList = QStringList(), bool* canceled = 0, bool slowSearch = false, const QString &connectionID = defaultConnectionId());
< 
<     //Faal
<     int getRandomPoemID(int* CatID, const QString &connectionID = defaultConnectionId());
<     void removePoetFromDataBase(int PoetID, const QString &connectionID = defaultConnectionId());
<     bool importDataBase(const QString &fromFileName, const QString &toConnectionID = defaultConnectionId());
<     // Returns database connection for thread, creates new connection if not exists
<     QSqlDatabase databaseForThread(QThread* thread, const QString &baseConnectionID = defaultConnectionId());
< 
< 
<     void storeAsDataset(const CatContents &importData, const QList<GanjoorCat> &catPath, bool storeAsGDB = false, const QString &toConnectionID = defaultConnectionId());
< 
<     //STATIC Variables
<     static DataBaseUpdater* dbUpdater;
< 
< public slots:
<     void addDataSets();
< 
< private:
<     Q_DISABLE_COPY(DatabaseBrowser)
<     DatabaseBrowser(const QString &sqliteDbCompletePath = "ganjoor.s3db");
< 
<     bool createEmptyDataBase(const QString &connectionID = defaultConnectionId());
<     bool poetHasSubCats(int poetID, const QString &connectionID = defaultConnectionId());
< 
< //    SearchResults startSearch(const QString &strQuery, const QSqlDatabase &db, int PoetID, const QStringList &phraseList,
< //                              const QStringList &excludedList = QStringList(), const QStringList &excludeWhenCleaning = QStringList(),
< //                              bool* Canceled = 0, bool slowSearch = false);
< 
<     int cachedMaxCatID, cachedMaxPoemID;
<     int getNewPoemID(const QString &connectionID = defaultConnectionId());
<     int getNewPoetID(const QString &connectionID = defaultConnectionId());
<     int getNewCatID(const QString &connectionID = defaultConnectionId());
<     // return the first id for creating new category
<     int createCatPathOnNeed(QList<GanjoorCat> &catPath, const QString &description = QString(), const QString &connectionID = defaultConnectionId());
<     void removeCatFromDataBase(const GanjoorCat &gCat, const QString &connectionID = defaultConnectionId());
< 
<     static bool comparePoetsByName(GanjoorPoet* poet1, GanjoorPoet* poet2);
<     static bool compareCategoriesByName(GanjoorCat* cat1, GanjoorCat* cat2);
<     bool m_addRemoteDataSet;
< 
<     static QMultiHash<QThread*, QString> s_threadConnections;
< 
<     static QString s_defaultConnectionId;
<     static QString s_defaultDatabaseFileName;
<     static bool s_isDefaultDatabaseSet;
< 
<     static DatabaseBrowser* s_instance;
< 
< private slots:
<     void removeThreadsConnections(QObject* obj = 0);
< 
< signals:
<     void searchStatusChanged(const QString &);
<     void concurrentResultReady(const QString &type, const QVariant &results);
<     void databaseUpdated(const QString &connectionID);
< 
< #ifdef EMBEDDED_SQLITE
< private:
<     static QSQLiteDriver* sqlDriver;
< #endif
< };
< 
< Q_DECLARE_METATYPE(SearchResults)
< Q_DECLARE_METATYPE(bool*)
< 
< #endif // DATABASEBROWSER_H
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> 
> #ifndef DATABASEBROWSER_H
> #define DATABASEBROWSER_H
> 
> #include <QMap>
> #include <QObject>
> #include <QWidget>
> #include <QString>
> #include <QSqlDatabase>
> #include <QSqlQuery>
> #include <QSqlError>
> #include <QSqlRecord>
> #include <QProgressDialog>
> #include <QVariant>
> 
> #include "databaseupdater.h"
> #include "databaseelements.h"
> #include "settings.h"
> #include "qtwin.h"
> 
> #include <QDebug>
> 
> #ifdef EMBEDDED_SQLITE
> #include "sqlite-driver/qsql_sqlite.h"
> #include "sqlite3.h"
> #endif
> 
> class ConcurrentTask;
> 
> typedef QMap<int, QString> SearchResults;
> 
> 
> class DatabaseBrowser : public QObject
> {
>     Q_OBJECT
> public:
>     static DatabaseBrowser* instance();
>     ~DatabaseBrowser();
> 
>     static QString databaseFileFromID(const QString &connectionID);
>     static QString getIdForDataBase(const QString &fileName, QThread* thread = 0);
>     static void removeDatabase(const QString &fileName, QThread* thread = 0);
>     static QSqlDatabase database(const QString &connectionID = defaultConnectionId(), bool open = true);
> 
>     static QString defaultConnectionId();
>     static QString defaultDatabasename();
>     static void setDefaultDatabasename(const QString &databaseName);
> 
>     bool isConnected(const QString &connectionID = defaultConnectionId());
>     bool isValid(QString connectionID = defaultConnectionId());
> 
>     bool isRhyme(const QList<GanjoorVerse*> &verses, const QString &phrase, int verseOrder = -1);
>     bool isRadif(const QList<GanjoorVerse*> &verses, const QString &phrase, int verseOrder = -1);
> 
>     QVariantList importGanjoorBookmarks(QString connectionID = defaultConnectionId());
>     QString getBeyt(int poemID, int firstMesraID,  const QString &separator = "       "/*7 spaces*/, QString connectionID = defaultConnectionId());
> 
>     QList<GanjoorPoet*> getDataBasePoets(const QString fileName);
>     QList<GanjoorPoet*> getConflictingPoets(const QString fileName, const QString &toConnectionID = defaultConnectionId());
>     QList<GanjoorPoet*> getPoets(const QString &connectionID = defaultConnectionId(), bool sort = true);
>     QList<GanjoorCat*> getSubCategories(int CatID, const QString &connectionID = defaultConnectionId());
>     QList<GanjoorCat> getParentCategories(GanjoorCat Cat, const QString &connectionID = defaultConnectionId());
>     QList<GanjoorPoem*> getPoems(int CatID, const QString &connectionID = defaultConnectionId());
>     QList<GanjoorVerse*> getVerses(int PoemID, const QString &connectionID = defaultConnectionId());
>     QList<GanjoorVerse*> getVerses(int PoemID, int Count, const QString &connectionID = defaultConnectionId());
> 
>     QString getFirstMesra(int PoemID, const QString &connectionID = defaultConnectionId());//just first Mesra
>     GanjoorCat getCategory(int CatID, const QString &connectionID = defaultConnectionId());
>     GanjoorPoem getPoem(int PoemID, const QString &connectionID = defaultConnectionId());
>     GanjoorPoem getNextPoem(int PoemID, int CatID, const QString &connectionID = defaultConnectionId());
>     GanjoorPoem getNextPoem(GanjoorPoem poem, const QString &connectionID = defaultConnectionId());
>     GanjoorPoem getPreviousPoem(int PoemID, int CatID, const QString &connectionID = defaultConnectionId());
>     GanjoorPoem getPreviousPoem(GanjoorPoem poem, const QString &connectionID = defaultConnectionId());
>     GanjoorPoet getPoetForPoem(int poemID, const QString &connectionID = defaultConnectionId());
>     GanjoorPoet getPoetForCat(int CatID, const QString &connectionID = defaultConnectionId());
>     GanjoorPoet getPoet(int PoetID, const QString &connectionID = defaultConnectionId());
>     GanjoorPoet getPoet(QString PoetName, const QString &connectionID = defaultConnectionId());
>     QString getPoetDescription(int PoetID, const QString &connectionID = defaultConnectionId());
>     QString getPoemMediaSource(int PoemID, const QString &connectionID = defaultConnectionId());
>     void setPoemMediaSource(int PoemID, const QString &fileName, const QString &connectionID = defaultConnectionId());
>     //Search
>     //QList<int> getPoemIDsContainingPhrase(QString phrase, int PageStart, int Count, int PoetID);
>     //QString getFirstVerseContainingPhrase(int PoemID, QString phrase);
>     //new Search Method
>     //QList<int> getPoemIDsContainingPhrase_NewMethod(const QString &phrase, int PoetID, bool skipNonAlphabet);
>     //QStringList getVerseListContainingPhrase(int PoemID, const QString &phrase);
>     //another new approch
>     bool getPoemIDsByPhrase(ConcurrentTask* searchTask, const QString &currentSelectionPath, const QString &currentSelectionPathTitle, const QStringList &phraseList, const QStringList &excludedList = QStringList(), bool* canceled = 0, bool slowSearch = false, const QString &connectionID = defaultConnectionId());
> 
>     //Faal
>     int getRandomPoemID(int* CatID, const QString &connectionID = defaultConnectionId());
>     void removePoetFromDataBase(int PoetID, const QString &connectionID = defaultConnectionId());
>     bool importDataBase(const QString &fromFileName, const QString &toConnectionID = defaultConnectionId());
>     // Returns database connection for thread, creates new connection if not exists
>     QSqlDatabase databaseForThread(QThread* thread, const QString &baseConnectionID = defaultConnectionId());
> 
> 
>     void storeAsDataset(const CatContents &importData, const QList<GanjoorCat> &catPath, bool storeAsGDB = false, const QString &toConnectionID = defaultConnectionId());
> 
>     //STATIC Variables
>     static DataBaseUpdater* dbUpdater;
> 
> public slots:
>     void addDataSets();
> 
> private:
>     Q_DISABLE_COPY(DatabaseBrowser)
>     DatabaseBrowser(const QString &sqliteDbCompletePath = "ganjoor.s3db");
> 
>     bool createEmptyDataBase(const QString &connectionID = defaultConnectionId());
>     bool poetHasSubCats(int poetID, const QString &connectionID = defaultConnectionId());
> 
> //    SearchResults startSearch(const QString &strQuery, const QSqlDatabase &db, int PoetID, const QStringList &phraseList,
> //                              const QStringList &excludedList = QStringList(), const QStringList &excludeWhenCleaning = QStringList(),
> //                              bool* Canceled = 0, bool slowSearch = false);
> 
>     int cachedMaxCatID, cachedMaxPoemID;
>     int getNewPoemID(const QString &connectionID = defaultConnectionId());
>     int getNewPoetID(const QString &connectionID = defaultConnectionId());
>     int getNewCatID(const QString &connectionID = defaultConnectionId());
>     // return the first id for creating new category
>     int createCatPathOnNeed(QList<GanjoorCat> &catPath, const QString &description = QString(), const QString &connectionID = defaultConnectionId());
>     void removeCatFromDataBase(const GanjoorCat &gCat, const QString &connectionID = defaultConnectionId());
> 
>     static bool comparePoetsByName(GanjoorPoet* poet1, GanjoorPoet* poet2);
>     static bool compareCategoriesByName(GanjoorCat* cat1, GanjoorCat* cat2);
>     bool m_addRemoteDataSet;
> 
>     static QMultiHash<QThread*, QString> s_threadConnections;
> 
>     static QString s_defaultConnectionId;
>     static QString s_defaultDatabaseFileName;
>     static bool s_isDefaultDatabaseSet;
> 
>     static DatabaseBrowser* s_instance;
> 
> private slots:
>     void removeThreadsConnections(QObject* obj = 0);
> 
> signals:
>     void searchStatusChanged(const QString &);
>     void concurrentResultReady(const QString &type, const QVariant &results);
>     void databaseUpdated(const QString &connectionID);
> 
> #ifdef EMBEDDED_SQLITE
> private:
>     static QSQLiteDriver* sqlDriver;
> #endif
> };
> 
> Q_DECLARE_METATYPE(SearchResults)
> Q_DECLARE_METATYPE(bool*)
> 
> #endif // DATABASEBROWSER_H
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databaseelements.h lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databaseelements.h
1,217c1,217
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< 
< #ifndef DATABASEELEMENTS_H
< #define DATABASEELEMENTS_H
< 
< #include <QString>
< #include <QMetaType>
< 
< inline QString qStringMacHelper(const QString &str)
< {
<     QString tmp = str;
<     tmp = tmp.replace(QChar(0x200C), QString(0x200F) + QString(0x200C) + QString(0x200F), Qt::CaseInsensitive);
<     return tmp;
< }
< 
< enum VersePosition {
<     Right = 0,//مصرع اول
<     Left = 1,// مصرع دوم
<     CenteredVerse1 = 2,// مصرع اول يا تنهاي ابيات ترجيع يا ترکيب
<     CenteredVerse2 = 3,// مصرع دوم ابيات ترجيع يا ترکيب
<     Single = 4, //مصرعهاي شعرهاي نيمايي يا آزاد
<     Paragraph = -1 //نثر
< };
< 
< class GanjoorVerse
< {
< public:
<     int _PoemID;
<     int _Order;
<     VersePosition _Position;
<     QString _Text;
< 
<     GanjoorVerse() {
<         _PoemID = -1;
<         _Order = -1;
<         _Position = Single;
<         _Text = QString();
<     }
< 
<     inline void init(int PoemID = -1, int Order = -1, VersePosition Position = Single, QString Text = QString()) {
<         _PoemID = PoemID;
<         _Order = Order;
<         _Position = Position;
< #ifdef Q_OS_MAC
<         _Text = qStringMacHelper(Text);
< #else
<         _Text = Text;
< #endif
<     }
< };
< 
< class GanjoorPoem
< {
< public:
<     int _ID;
<     int _CatID;
<     QString _Title;
<     QString _Url;
<     QString _HighlightText;
<     bool _Faved;
< 
<     GanjoorPoem() {
<         _ID = -1;
<         _CatID = -1;
<         _Title = QString();
<         _Url = QString();
<         _Faved = false;
<         _HighlightText = QString();
<     }
< 
<     inline void init(int ID = -1, int CatID = -1, QString Title = QString(), QString Url = QString(), bool Faved = false, QString HighlightText = QString()) {
<         _ID = ID;
<         _CatID = CatID;
< #ifdef Q_OS_MAC
<         _Title = qStringMacHelper(Title);
< #else
<         _Title = Title;
< #endif
<         _Url = Url;
<         _Faved = Faved;
<         _HighlightText = HighlightText;
<     }
<     inline bool isNull() const {return _ID == -1;}
<     inline void setNull() {
<         _ID = -1;
<         _CatID = -1;
<         _Title = QString();
<         _Url = QString();
<         _HighlightText = QString();
<         _Faved = false;
<     }
< };
< 
< class GanjoorPoet
< {
< public:
<     QString _Name;
<     int _ID;
<     int _CatID;
<     QString _Description;
< 
<     GanjoorPoet() {
<         _ID = -1;
<         _Name = QString();
<         _CatID = -1;
<         _Description = QString();
<     }
< 
<     inline void init(int ID = -1, QString Name = QString(), int CatID = -1, QString description = QString()) {
<         _ID = ID;
<         _CatID = CatID;
< #ifdef Q_OS_MAC
<         _Name = qStringMacHelper(Name);
<         _Description = qStringMacHelper(description);
< #else
<         _Name = Name;
<         _Description = description;
< #endif
<     }
< 
<     inline bool isNull() const {return _ID == -1;}
< };
< 
< struct GanjoorCat {
<     int _ID;
<     int _PoetID;
<     QString _Text;
<     int _ParentID;
<     QString _Url;
< 
<     GanjoorCat() {
<         _ID = -1;
<         _PoetID = -1;
<         _Text = QString();
<         _ParentID = -1;
<         _Url = QString();
<     }
< 
<     inline bool isNull() const {return _ID == -1;}
<     inline void setNull() {
<         _ID = -1;
<         _PoetID = -1;
<         _Text = QString();
<         _ParentID = -1;
<         _Url = QString();
<     }
<     inline void init(int ID = -1, int PoetID = -1, QString Text = "", int ParentID = -1, QString Url = "") {
<         _ID = ID;
<         _PoetID = PoetID;
< #ifdef Q_OS_MAC
<         _Text = qStringMacHelper(Text);
< #else
<         _Text = Text;
< #endif
<         _ParentID = ParentID;
<         _Url = Url;
<     }
< };
< 
< #include <QList>
< #include <QMap>
< #include <QStringList>
< // We just interested to cats that have poems with non-empty verses.
< // So we just track poem's verses. The poems with catId == -1 are
< //  considered as poems of root category.
< struct CatContents {
<     QString description;
<     QMap<int, GanjoorCat> cats;
<     QList<GanjoorPoem> poems;
<     QMap<int, QList<GanjoorVerse> > verses;
< 
<     CatContents() {}
<     bool isNull() const { return poems.isEmpty() || verses.isEmpty(); }
<     void clear() { description.clear(); cats.clear(); poems.clear(); verses.clear(); }
<     QList<GanjoorCat> catParents(int catId) const {
<         QList<GanjoorCat> catList;
<         while (catId != -1) {
<             GanjoorCat cat = cats.value(catId);
<             catList.prepend(cat);
<             catId = cat._ParentID;
<         }
<         return catList;
<     }
< 
<     QStringList catParentsTitles(int catId) const {
<         QStringList titles;
<         while (catId != -1) {
<             GanjoorCat cat = cats.value(catId);
<             titles.prepend(cat._Text);
<             catId = cat._ParentID;
<         }
<         return titles;
<     }
< };
< 
< Q_DECLARE_METATYPE(GanjoorCat)
< 
< #endif // DATABASEELEMENTS_H
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> 
> #ifndef DATABASEELEMENTS_H
> #define DATABASEELEMENTS_H
> 
> #include <QString>
> #include <QMetaType>
> 
> inline QString qStringMacHelper(const QString &str)
> {
>     QString tmp = str;
>     tmp = tmp.replace(QChar(0x200C), QString(0x200F) + QString(0x200C) + QString(0x200F), Qt::CaseInsensitive);
>     return tmp;
> }
> 
> enum VersePosition {
>     Right = 0,//مصرع اول
>     Left = 1,// مصرع دوم
>     CenteredVerse1 = 2,// مصرع اول يا تنهاي ابيات ترجيع يا ترکيب
>     CenteredVerse2 = 3,// مصرع دوم ابيات ترجيع يا ترکيب
>     Single = 4, //مصرعهاي شعرهاي نيمايي يا آزاد
>     Paragraph = -1 //نثر
> };
> 
> class GanjoorVerse
> {
> public:
>     int _PoemID;
>     int _Order;
>     VersePosition _Position;
>     QString _Text;
> 
>     GanjoorVerse() {
>         _PoemID = -1;
>         _Order = -1;
>         _Position = Single;
>         _Text = QString();
>     }
> 
>     inline void init(int PoemID = -1, int Order = -1, VersePosition Position = Single, QString Text = QString()) {
>         _PoemID = PoemID;
>         _Order = Order;
>         _Position = Position;
> #ifdef Q_OS_MAC
>         _Text = qStringMacHelper(Text);
> #else
>         _Text = Text;
> #endif
>     }
> };
> 
> class GanjoorPoem
> {
> public:
>     int _ID;
>     int _CatID;
>     QString _Title;
>     QString _Url;
>     QString _HighlightText;
>     bool _Faved;
> 
>     GanjoorPoem() {
>         _ID = -1;
>         _CatID = -1;
>         _Title = QString();
>         _Url = QString();
>         _Faved = false;
>         _HighlightText = QString();
>     }
> 
>     inline void init(int ID = -1, int CatID = -1, QString Title = QString(), QString Url = QString(), bool Faved = false, QString HighlightText = QString()) {
>         _ID = ID;
>         _CatID = CatID;
> #ifdef Q_OS_MAC
>         _Title = qStringMacHelper(Title);
> #else
>         _Title = Title;
> #endif
>         _Url = Url;
>         _Faved = Faved;
>         _HighlightText = HighlightText;
>     }
>     inline bool isNull() const {return _ID == -1;}
>     inline void setNull() {
>         _ID = -1;
>         _CatID = -1;
>         _Title = QString();
>         _Url = QString();
>         _HighlightText = QString();
>         _Faved = false;
>     }
> };
> 
> class GanjoorPoet
> {
> public:
>     QString _Name;
>     int _ID;
>     int _CatID;
>     QString _Description;
> 
>     GanjoorPoet() {
>         _ID = -1;
>         _Name = QString();
>         _CatID = -1;
>         _Description = QString();
>     }
> 
>     inline void init(int ID = -1, QString Name = QString(), int CatID = -1, QString description = QString()) {
>         _ID = ID;
>         _CatID = CatID;
> #ifdef Q_OS_MAC
>         _Name = qStringMacHelper(Name);
>         _Description = qStringMacHelper(description);
> #else
>         _Name = Name;
>         _Description = description;
> #endif
>     }
> 
>     inline bool isNull() const {return _ID == -1;}
> };
> 
> struct GanjoorCat {
>     int _ID;
>     int _PoetID;
>     QString _Text;
>     int _ParentID;
>     QString _Url;
> 
>     GanjoorCat() {
>         _ID = -1;
>         _PoetID = -1;
>         _Text = QString();
>         _ParentID = -1;
>         _Url = QString();
>     }
> 
>     inline bool isNull() const {return _ID == -1;}
>     inline void setNull() {
>         _ID = -1;
>         _PoetID = -1;
>         _Text = QString();
>         _ParentID = -1;
>         _Url = QString();
>     }
>     inline void init(int ID = -1, int PoetID = -1, QString Text = "", int ParentID = -1, QString Url = "") {
>         _ID = ID;
>         _PoetID = PoetID;
> #ifdef Q_OS_MAC
>         _Text = qStringMacHelper(Text);
> #else
>         _Text = Text;
> #endif
>         _ParentID = ParentID;
>         _Url = Url;
>     }
> };
> 
> #include <QList>
> #include <QMap>
> #include <QStringList>
> // We just interested to cats that have poems with non-empty verses.
> // So we just track poem's verses. The poems with catId == -1 are
> //  considered as poems of root category.
> struct CatContents {
>     QString description;
>     QMap<int, GanjoorCat> cats;
>     QList<GanjoorPoem> poems;
>     QMap<int, QList<GanjoorVerse> > verses;
> 
>     CatContents() {}
>     bool isNull() const { return poems.isEmpty() || verses.isEmpty(); }
>     void clear() { description.clear(); cats.clear(); poems.clear(); verses.clear(); }
>     QList<GanjoorCat> catParents(int catId) const {
>         QList<GanjoorCat> catList;
>         while (catId != -1) {
>             GanjoorCat cat = cats.value(catId);
>             catList.prepend(cat);
>             catId = cat._ParentID;
>         }
>         return catList;
>     }
> 
>     QStringList catParentsTitles(int catId) const {
>         QStringList titles;
>         while (catId != -1) {
>             GanjoorCat cat = cats.value(catId);
>             titles.prepend(cat._Text);
>             catId = cat._ParentID;
>         }
>         return titles;
>     }
> };
> 
> Q_DECLARE_METATYPE(GanjoorCat)
> 
> #endif // DATABASEELEMENTS_H
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databaseupdater.cpp lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databaseupdater.cpp
1,780c1,780
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< 
< #include <QProgressBar>
< #include <QDate>
< #include <QFileInfo>
< #include <QDir>
< #include <QFileDialog>
< #include <QMessageBox>
< #include <QCloseEvent>
< #include <QTextEdit>
< #include <QDialogButtonBox>
< #include <QPushButton>
< 
< #include "unzip.h"
< #include "tools.h"
< #include "downloader.h"
< #include "databaseupdater.h"
< #include "databasebrowser.h"
< #include "saagharwidget.h"
< #include "saagharwindow.h"
< #include "saagharapplication.h"
< 
< QString DataBaseUpdater::downloadLocation;
< bool DataBaseUpdater::keepDownloadedFiles = false;
< QStringList DataBaseUpdater::repositoriesUrls = QStringList();
< const QStringList DataBaseUpdater::defaultRepositories = QStringList()
<         << "http://i.ganjoor.net/android/androidgdbs.xml";
< //        << "http://ganjoor.sourceforge.net/newgdbs.xml"
< //        << "http://ganjoor.sourceforge.net/programgdbs.xml"
< //        << "http://ganjoor.sourceforge.net/sitegdbs.xml";
< 
< int PoetID_DATA = Qt::UserRole + 1;
< int CatID_DATA = Qt::UserRole + 2;
< int FileExt_DATA = Qt::UserRole + 3;
< int ImageUrl_DATA = Qt::UserRole + 4;
< int LowestPoemID_DATA = Qt::UserRole + 5;
< int DownloadUrl_DATA = Qt::UserRole + 6;
< int BlogUrl_DATA = Qt::UserRole + 7;
< 
< DataBaseUpdater::DataBaseUpdater(QWidget* parent, Qt::WindowFlags f)
<     : QDialog(parent, f), ui(new Ui::DataBaseUpdater)
< {
<     downloadStarted = downloadAboutToStart = false;
< 
<     ui->setupUi(this);
<     ui->refreshPushButton->setIcon(QIcon(ICON_FILE("refresh")));
<     downloaderObject = new Downloader(this, ui->downloadProgressBar, ui->labelDownloadStatus);
<     setupUi();
< 
<     connect(ui->refreshPushButton, SIGNAL(clicked()), this, SLOT(readRepository()));
<     connect(ui->comboBoxRepoList, SIGNAL(currentIndexChanged(QString)), this, SLOT(readRepository(QString)));
<     connect(ui->repoSelectTree, SIGNAL(itemChanged(QTreeWidgetItem*,int)), this, SLOT(itemDataChanged(QTreeWidgetItem*,int)));
<     connect(ui->pushButtonDownload, SIGNAL(clicked()), this, SLOT(initDownload()));
<     connect(ui->pushButtonBrowse, SIGNAL(clicked()), this, SLOT(getDownloadLocation()));
<     connect(downloaderObject, SIGNAL(downloadStopped()), this, SLOT(forceStopDownload()));
< }
< 
< bool DataBaseUpdater::read(QIODevice* device)
< {
<     QString errorStr;
<     int errorLine;
<     int errorColumn;
< 
<     if (!domDocument.setContent(device, true, &errorStr, &errorLine, &errorColumn)) {
<         return false;
<     }
<     return parseDocument();
< }
< 
< bool DataBaseUpdater::read(const QByteArray &data)
< {
<     QString errorStr;
<     int errorLine;
<     int errorColumn;
< 
<     if (!domDocument.setContent(data, true, &errorStr, &errorLine, &errorColumn)) {
<         return false;
<     }
<     return parseDocument();
< }
< 
< bool DataBaseUpdater::parseDocument()
< {
<     QDomElement root = domDocument.documentElement();
<     if (root.tagName() != "DesktopGanjoorGDBList") {
<         return false;
<     }
< 
<     insertedToList.clear();
< 
<     QDomElement child = root.firstChildElement("gdb");
<     while (!child.isNull()) {
<         parseElement(child);
<         child = child.nextSiblingElement("gdb");
<     }
< 
<     resizeColumnsToContents();
< 
<     return true;
< }
< 
< void DataBaseUpdater::parseElement(const QDomElement &element)
< {
< //visible info
<     QString CatName = element.firstChildElement("CatName").text();
<     QString BlogUrl = element.firstChildElement("BlogUrl").text();
<     QString DownloadUrl = element.firstChildElement("DownloadUrl").text();
<     int fileSize = element.firstChildElement("FileSizeInByte").text().toInt();
<     fileSize = fileSize / 1024;
<     QString fileSizeKB = QString::number(fileSize) == "0" ? "" : QString::number(fileSize) + " " + tr("KB");
<     QLocale persainLocale(QLocale::Persian, QLocale::Iran);
<     QDate pubDate = persainLocale.toDate(element.firstChildElement("PubDate").text(), "yyyy-MM-dd");
< 
<     QStringList visibleInfo = QStringList() << CatName
<                               << fileSizeKB
<                               << pubDate.toString("yyyy-MM-dd");
< 
< //meta data
<     QString PoetID = element.firstChildElement("PoetID").text();
<     int CatID = element.firstChildElement("CatID").text().toInt();
<     QString FileExt = element.firstChildElement("FileExt").text();
<     QString ImageUrl = element.firstChildElement("ImageUrl").text();
<     QString LowestPoemID = element.firstChildElement("LowestPoemID").text();
< 
<     bool isNew = sApp->databaseBrowser()->getCategory(CatID).isNull();
< 
<     if (insertedToList.contains(CatID) && insertedToList.value(CatID) == DownloadUrl) {
<         return;
<     }
<     else {
<         insertedToList.insert(CatID, DownloadUrl);
<     }
< 
<     QTreeWidgetItem* item = new QTreeWidgetItem(isNew ? newRootItem : oldRootItem , visibleInfo);
<     item->setToolTip(0, CatName);
<     item->setFlags(Qt::ItemIsSelectable | Qt::ItemIsUserCheckable | Qt::ItemIsEnabled);
<     item->setCheckState(0, Qt::Unchecked);
<     item->setData(0, PoetID_DATA, PoetID);
<     item->setData(0, CatID_DATA, CatID);
<     item->setData(0, FileExt_DATA, FileExt);
<     item->setData(0, ImageUrl_DATA, ImageUrl);
<     item->setData(0, LowestPoemID_DATA, LowestPoemID);
<     item->setData(0, DownloadUrl_DATA, DownloadUrl);
<     item->setData(0, BlogUrl_DATA, BlogUrl);
< 
<     if (!BlogUrl.isEmpty()) {
<         QLabel* blogLink = new QLabel(ui->repoSelectTree);
<         blogLink->setTextFormat(Qt::RichText);
<         blogLink->setText(QString("<a href=\"%1\" title=\"%1\" >%2</a>").arg(BlogUrl).arg(tr("Go to Release Information")));
<         //blogLink->setToolTip(BlogUrl);
<         blogLink->setOpenExternalLinks(true);
<         ui->repoSelectTree->setItemWidget(item, 3, blogLink);
<     }
< }
< 
< void DataBaseUpdater::fillRepositoryList()
< {
<     ui->comboBoxRepoList->clear();
<     ui->comboBoxRepoList->addItems(QStringList()
<                                    << tr("Select From Repositories List...")
<                                    << repositoriesUrls
<                                    << tr("Click To Add/Remove..."));
<     ui->comboBoxRepoList->insertSeparator(1);
<     ui->comboBoxRepoList->insertSeparator(ui->comboBoxRepoList->count() - 1);
< }
< 
< void DataBaseUpdater::importDataBase(const QString &fileName, bool* ok)
< {
<     QSqlDatabase dataBaseObject = DatabaseBrowser::database();
<     QFileInfo dataBaseFile(dataBaseObject.databaseName());
<     if (!dataBaseFile.isWritable()) {
<         QMessageBox::warning(sApp->activeWindow(), tr("Error!"), tr("You have not write permission to database file, the import procedure can not proceed.\nDataBase Path: %2").arg(dataBaseFile.fileName()));
<         if (ok) {
<             *ok = false;
<         }
<         return;
<     }
<     QList<GanjoorPoet*> poetsConflictList = sApp->databaseBrowser()->getConflictingPoets(fileName);
< 
<     dataBaseObject.transaction();
< 
<     if (!poetsConflictList.isEmpty()) {
<         QMessageBox warnAboutConflict(sApp->activeWindow());
<         warnAboutConflict.setWindowTitle(tr("Warning!"));
<         warnAboutConflict.setIcon(QMessageBox::Warning);
<         warnAboutConflict.setText(tr("There are some conflict with your installed database. If you continue, these poets will be removed!"));
<         QString details = tr("These poets are present in installed database:\n");
<         for (int i = 0; i < poetsConflictList.size(); ++i) {
<             details += poetsConflictList.at(i)->_Name + "\n";
<         }
<         warnAboutConflict.setDetailedText(details);
<         warnAboutConflict.setStandardButtons(QMessageBox::Ok | QMessageBox::Cancel);
<         warnAboutConflict.setEscapeButton(QMessageBox::Cancel);
<         warnAboutConflict.setDefaultButton(QMessageBox::Cancel);
<         int ret = warnAboutConflict.exec();
<         if (ret == QMessageBox::Cancel) {
<             if (ok) {
<                 *ok = false;
<             }
<             return;
<         }
< 
<         foreach (GanjoorPoet* poet, poetsConflictList) {
<             sApp->databaseBrowser()->removePoetFromDataBase(poet->_ID);
<         }
<     }
< 
<     //QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));
< 
<     if (sApp->databaseBrowser()->importDataBase(fileName)) {
<         dataBaseObject.commit();
<         if (ok) {
<             *ok = true;
<         }
<     }
<     else {
<         if (ok) {
<             *ok = false;
<         }
<         dataBaseObject.rollback();
<         QMessageBox warning(QMessageBox::Warning, tr("Error!"), tr("There are some errors, the import procedure was not completed"), QMessageBox::Ok
<                             , DatabaseBrowser::dbUpdater, Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint | Qt::WindowStaysOnTopHint);
<         warning.exec();
<     }
<     //QApplication::restoreOverrideCursor();
< }
< 
< void DataBaseUpdater::setRepositories(const QStringList &urls)
< {
<     repositoriesUrls.clear();
<     repositoriesUrls << urls << defaultRepositories;
<     repositoriesUrls.removeDuplicates();
< }
< 
< QStringList DataBaseUpdater::repositories()
< {
<     return repositoriesUrls;
< }
< 
< void DataBaseUpdater::setupUi()
< {
< #if QT_VERSION >= 0x040700
<     ui->lineEditDownloadLocation->setPlaceholderText(tr("Please select download location..."));
< #else
<     ui->lineEditDownloadLocation->setToolTip(tr("Please select download location..."));
< #endif
< 
<     fillRepositoryList();
< 
<     ui->refreshPushButton->setEnabled(false);
< 
<     ui->lineEditDownloadLocation->setText(DataBaseUpdater::downloadLocation);
<     keepDownloadedFiles = keepDownloadedFiles && !downloadLocation.isEmpty();
<     ui->groupBoxKeepDownload->setChecked(keepDownloadedFiles);
<     ui->downloadProgressBar->hide();
<     ui->labelDownloadStatus->hide();
< 
<     ui->repoSelectTree->setLayoutDirection(Qt::RightToLeft);
<     ui->repoSelectTree->setTextElideMode(Qt::ElideMiddle);
< }
< 
< void DataBaseUpdater::setupTreeRootItems()
< {
<     QFont font(ui->repoSelectTree->font());
<     font.setBold(true);
< 
<     oldRootItem = new QTreeWidgetItem(ui->repoSelectTree);
<     oldRootItem->setText(0, tr("Installed"));
<     oldRootItem->setFlags(Qt::ItemIsSelectable | Qt::ItemIsUserCheckable | Qt::ItemIsEnabled | Qt::ItemIsTristate);
<     oldRootItem->setCheckState(0, Qt::Unchecked);
<     oldRootItem->setFont(0, font);
<     oldRootItem->setExpanded(false);
<     oldRootItem->setDisabled(true);
< 
<     newRootItem = new QTreeWidgetItem(ui->repoSelectTree);
<     newRootItem->setText(0, tr("Ready To Install"));
<     newRootItem->setFlags(Qt::ItemIsSelectable | Qt::ItemIsUserCheckable | Qt::ItemIsEnabled | Qt::ItemIsTristate);
<     newRootItem->setCheckState(0, Qt::Unchecked);
<     newRootItem->setFont(0, font);
<     newRootItem->setExpanded(true);
<     newRootItem->setDisabled(true);
< }
< 
< void DataBaseUpdater::readRepository(const QString &url)
< {
<     disconnect(ui->repoSelectTree, SIGNAL(itemChanged(QTreeWidgetItem*,int)), this, SLOT(itemDataChanged(QTreeWidgetItem*,int)));
<     ui->pushButtonDownload->setEnabled(false);
< 
<     if (ui->comboBoxRepoList->currentIndex() == ui->comboBoxRepoList->count() - 1) {
<         disconnect(ui->comboBoxRepoList, SIGNAL(currentIndexChanged(QString)), this, SLOT(readRepository(QString)));
<         addRemoveRepository();
<         connect(ui->comboBoxRepoList, SIGNAL(currentIndexChanged(QString)), this, SLOT(readRepository(QString)));
<         ui->comboBoxRepoList->setCurrentIndex(-1);//maybe a bug in older Qt, set to '0' does not work!
<         ui->comboBoxRepoList->setCurrentIndex(0);
<         return;
<     }
< 
<     ui->repoSelectTree->takeTopLevelItem(1);
<     ui->repoSelectTree->takeTopLevelItem(0);
< 
<     QUrl repoUrl = QUrl::fromUserInput(ui->comboBoxRepoList->currentText());
<     if (!repoUrl.isValid()) {
<         qDebug() << "if-repoUrl==" << repoUrl.toString() << "url=" << url;
<         ui->refreshPushButton->setEnabled(false);
<         return;
<     }
< 
<     qDebug() << "else-repoUrl==" << repoUrl.toString() << "url=" << url;
<     ui->refreshPushButton->setEnabled(true);
< 
<     if (!url.isEmpty()) {
<         QPair<QTreeWidgetItem*, QTreeWidgetItem*> cachedItems = itemsCache.value(ui->comboBoxRepoList->currentText(), QPair<QTreeWidgetItem*, QTreeWidgetItem*>());
<         if (cachedItems.first && cachedItems.second) {
<             ui->repoSelectTree->takeTopLevelItem(1);
<             ui->repoSelectTree->takeTopLevelItem(0);
<             newRootItem = cachedItems.first;
<             oldRootItem = cachedItems.second;
<             ui->repoSelectTree->addTopLevelItem(oldRootItem);
<             ui->repoSelectTree->addTopLevelItem(newRootItem);
<             resizeColumnsToContents();
<             newRootItem->setExpanded(true);
<             itemDataChanged(0, 0);
<             connect(ui->repoSelectTree, SIGNAL(itemChanged(QTreeWidgetItem*,int)), this, SLOT(itemDataChanged(QTreeWidgetItem*,int)));
<             return;
<         }
<     }
<     else {
<         itemsCache.insert(ui->comboBoxRepoList->currentText(), QPair<QTreeWidgetItem*, QTreeWidgetItem*>());
<     }
< 
<     //bool isRemote = false;
<     QString urlStr = repoUrl.toString();
<     qDebug() << "url====" << urlStr;
<     setupTreeRootItems();
<     if (!urlStr.contains("file:///")) {
<         //isRemote = true;
<         QString tmpPath = getTempDir();
<         QDir downDir(tmpPath);
<         if (!downDir.exists() && !downDir.mkpath(tmpPath)) {
<             QMessageBox::information(this, tr("Error!"), tr("Can not create temp path."));
<             return;//continue;
<         }
< 
<         QFileInfo urlInfo(urlStr);
<         ui->comboBoxRepoList->setEnabled(false);
<         ui->refreshPushButton->setEnabled(false);
<         downloadAboutToStart = downloadStarted = true;
<         downloaderObject->downloadFile(repoUrl, tmpPath, urlInfo.fileName());
<         downloadAboutToStart = downloadStarted = false;
<         ui->comboBoxRepoList->setEnabled(true);
<         if (!downloaderObject->hasError()) {
<             ui->refreshPushButton->setEnabled(true);
<         }
<         else {
<             //maybe a bug in older Qt, set to '0' does not work!
<             ui->comboBoxRepoList->setCurrentIndex(-1);
<             ui->comboBoxRepoList->setCurrentIndex(0);
<         }
<         ui->labelDownloadStatus->hide();
<         QString filepath = tmpPath + "/" + urlInfo.fileName();
<         QFile file(filepath);
<         read(&file);
<         file.remove();
<         downDir.rmdir(tmpPath);
<     }
<     else {
<         urlStr.remove("file:///");
<         QFile file(urlStr);
<         read(&file);
<     }
< 
<     newRootItem->setDisabled(newRootItem->childCount() == 0);
<     oldRootItem->setDisabled(oldRootItem->childCount() == 0);
<     if (newRootItem->childCount() == 0 && oldRootItem->childCount() == 0) {
<         ui->repoSelectTree->clear();
<         newRootItem = 0;
<         oldRootItem = 0;
<     }
<     itemsCache.insert(ui->comboBoxRepoList->currentText(), QPair<QTreeWidgetItem*, QTreeWidgetItem*>(newRootItem, oldRootItem));
<     connect(ui->repoSelectTree, SIGNAL(itemChanged(QTreeWidgetItem*,int)), this, SLOT(itemDataChanged(QTreeWidgetItem*,int)));
< }
< 
< void DataBaseUpdater::itemDataChanged(QTreeWidgetItem* /*item*/, int /*column*/)
< {
<     bool itemsChecked = (newRootItem->checkState(0) != Qt::Unchecked) || (oldRootItem->checkState(0) != Qt::Unchecked);
<     ui->pushButtonDownload->setEnabled(itemsChecked);
< }
< 
< void DataBaseUpdater::getDownloadLocation()
< {
<     DataBaseUpdater::downloadLocation = QFileDialog::getExistingDirectory(this, tr("Select Download Location"), QDir::homePath());
<     ui->lineEditDownloadLocation->setText(DataBaseUpdater::downloadLocation);
< }
< 
< void DataBaseUpdater::initDownload()
< {
<     downloadAboutToStart = true;
<     ui->pushButtonDownload->setText(tr("Stop"));
<     disconnect(ui->pushButtonDownload, SIGNAL(clicked()), this, SLOT(initDownload()));
<     connect(ui->pushButtonDownload, SIGNAL(clicked()), this, SLOT(doStopDownload()));
<     connect(ui->pushButtonDownload, SIGNAL(clicked()), downloaderObject->loop, SLOT(quit()));
< 
<     sessionDownloadFolder = DataBaseUpdater::downloadLocation;
<     QDir downDir;
<     if (ui->groupBoxKeepDownload->isChecked()) {
<         if (sessionDownloadFolder.isEmpty()) {
<             QMessageBox::information(this, tr("Warning!"), tr("Please select download location."));
<             doStopDownload();
<             return;
<         }
<     }
<     else {
<         randomFolder = sessionDownloadFolder = getTempDir();
<     }
< 
<     downDir.setPath(sessionDownloadFolder);
<     if (!downDir.exists() && !downDir.mkpath(sessionDownloadFolder)) {
<         QMessageBox::information(this, tr("Error!"), tr("Can not create download path."));
<         doStopDownload();
<         return;
<     }
< 
<     ui->repoSelectTree->setEnabled(false);
<     ui->comboBoxRepoList->setEnabled(false);
<     ui->refreshPushButton->setEnabled(false);
<     ui->groupBoxKeepDownload->setEnabled(false);
< 
<     for (int i = 0; i < newRootItem->childCount(); ++i) {
<         QTreeWidgetItem* child = newRootItem->child(i);
<         if (!child || child->checkState(0) != Qt::Checked) {
<             continue;
<         }
<         installCompleted = false;
<         downloadItem(child, true);
< 
<         if (installCompleted) {
<             //after install we change the parent
<             newRootItem->removeChild(child);
<             oldRootItem->addChild(child);
<             child->setCheckState(0, Qt::Unchecked);
<             child->setFlags(Qt::NoItemFlags);
<             --i;
<         }
<     }
< 
<     for (int i = 0; i < oldRootItem->childCount(); ++i) {
<         QTreeWidgetItem* child = oldRootItem->child(i);
<         if (!child || child->checkState(0) != Qt::Checked) {
<             continue;
<         }
<         installCompleted = false;
<         downloadItem(child, true);
< 
<         if (installCompleted) {
<             child->setCheckState(0, Qt::Unchecked);
<             child->setFlags(Qt::NoItemFlags);
<         }
<     }
< 
<     if (!ui->groupBoxKeepDownload->isChecked()) {
<         //TODO: Fix me!
<         //QFile::remove(sessionDownloadFolder+"/"+fileName);
<         QDir downDir(sessionDownloadFolder);
<         downDir.rmdir(sessionDownloadFolder);
<     }
< 
<     ui->labelDownloadStatus->setText(tr("Finished!"));
< 
<     //download ended
<     downloadAboutToStart = downloadStarted = false;
<     doStopDownload();
< 
<     ui->repoSelectTree->setEnabled(true);
<     ui->comboBoxRepoList->setEnabled(true);
<     ui->refreshPushButton->setEnabled(true);
<     ui->groupBoxKeepDownload->setEnabled(true);
< }
< 
< bool DataBaseUpdater::doStopDownload()
< {
<     if (!downloadAboutToStart) {
<         return true;
<     }
< 
<     if (downloadStarted) {
<         if (QMessageBox::question(this, tr("Warning!"),
<                                   tr("Download in progress! Are you sure to stop downloading?"),
<                                   QMessageBox::Yes | QMessageBox::No, QMessageBox::No) ==
<                 QMessageBox::No) {
<             return false;
<         }
<     }
<     downloaderObject->cancelDownload();
<     forceStopDownload();
< 
<     return true;
< }
< 
< void DataBaseUpdater::closeEvent(QCloseEvent* e)
< {
<     DataBaseUpdater::downloadLocation = ui->lineEditDownloadLocation->text();
<     keepDownloadedFiles = !downloadLocation.isEmpty() && ui->groupBoxKeepDownload->isChecked();
<     if (!doStopDownload()) {
<         e->ignore();    //download in progress
<     }
< }
< 
< void DataBaseUpdater::downloadItem(QTreeWidgetItem* item, bool install)
< {
<     if (!item) {
<         return;
<     }
<     item->treeWidget()->setCurrentItem(item);
<     bool keepDownlaodedFiles = ui->groupBoxKeepDownload->isChecked();
<     downloadStarted = true;
<     QString urlStr = item->data(0, DownloadUrl_DATA).toString();
<     QUrl downloadUrl(urlStr);
<     downloaderObject->downloadFile(downloadUrl, sessionDownloadFolder, item->text(0));
< 
<     QFileInfo fileInfo(downloadUrl.path());
<     QString fileName = fileInfo.fileName();
<     if (fileName.isEmpty()) {
<         fileName = "index.html";
<     }
< 
<     if (install) {
<         ui->labelDownloadStatus->setText(tr("Installing..."));
<         QString fileType = item->data(0, FileExt_DATA).toString();
<         installItemToDB(fileName, sessionDownloadFolder, fileType);
<         ui->labelDownloadStatus->setText(tr("Installed."));
<     }
< 
<     if (!keepDownlaodedFiles) {
<         QFile::remove(sessionDownloadFolder + "/" + fileName);
<         //TODO: Fix me!
<         //QDir downDir(sessionDownloadFolder);
<         //downDir.rmdir(sessionDownloadFolder);
<     }
< }
< 
< void DataBaseUpdater::forceStopDownload()
< {
<     downloadStarted = downloadAboutToStart = false;
< 
<     ui->pushButtonDownload->setText(tr("Download && Install"));
<     connect(ui->pushButtonDownload, SIGNAL(clicked()), this, SLOT(initDownload()));
<     disconnect(ui->pushButtonDownload, SIGNAL(clicked()), this, SLOT(doStopDownload()));
<     disconnect(ui->pushButtonDownload, SIGNAL(clicked()), downloaderObject->loop, SLOT(quit()));
< 
<     QDir tmpDir(randomFolder);
<     tmpDir.rmdir(randomFolder);
< }
< 
< QString DataBaseUpdater::getTempDir(const QString &path, bool makeDir)
< {
<     QString currentPath = path.isEmpty() ? QDir::tempPath() : path;
<     QFileInfo currentPathInfo(currentPath);
<     if (!currentPathInfo.isDir()) {
<         currentPath = QDir::tempPath();
<     }
<     QString tmpPath = currentPath + "/~tmp_saaghar_0"; //+QString::number(qrand());
<     QDir tmpDir(tmpPath);
<     while (tmpDir.exists()) {
<         tmpPath += QString::number(qrand());
<         tmpDir.setPath(tmpPath);
<     }
<     if (makeDir) {
<         tmpDir.mkpath(tmpPath);
<     }
< 
<     return tmpPath;
< }
< 
< void DataBaseUpdater::installItemToDB(const QString &fullFilePath, const QString &fileType)
< {
<     if (fullFilePath.isEmpty()) {
<         return;
<     }
<     QFileInfo file(fullFilePath);
<     installItemToDB(file.fileName(), file.canonicalPath(), fileType);
< }
< 
< void DataBaseUpdater::installItemToDB(const QString &fileName, const QString &path, const QString &fileType)
< {
<     QString type = fileType;
<     if (type == ".gdb" || type == "gdb" || type == ".s3db") {
<         type = "s3db";
<     }
< 
<     if (type == ".zip") {
<         type = "zip";
<     }
< 
<     if (type.isEmpty()) {
<         if (fileName.endsWith(".gdb") || fileName.endsWith(".s3db")) {
<             type = "s3db";
<         }
<         else {
<             type = "zip";
<         }
<     }
< 
<     QString file = path + "/" + fileName;
< 
<     QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));
< 
<     if (type == "zip") {
<         if (!QFile::exists(file)) {
<             qDebug() << "File does not exist.";
<             QApplication::restoreOverrideCursor();
<             installCompleted = false;
<             return;
<         }
< 
<         UnZip::ErrorCode ec;
<         UnZip uz;
< 
<         ec = uz.openArchive(file);
<         if (ec != UnZip::Ok) {
<             qDebug() << "Unable to open archive: " << uz.formatError(ec);
<             uz.closeArchive();
<             installCompleted = false;
<             //try open it as SQLite database!
<             installItemToDB(fileName, path, "s3db");
<             QApplication::restoreOverrideCursor();
<             return;
<         }
<         else {
<             QList<UnZip::ZipEntry> list = uz.entryList();
<             if (list.isEmpty()) {
<                 installCompleted = false;
<                 QApplication::restoreOverrideCursor();
<                 return;
<             }
< 
<             QString tmpExtractPath = getTempDir(path, true);
<             for (int i = 0; i < list.size(); ++i) {
<                 QString extractPath = tmpExtractPath;
<                 const UnZip::ZipEntry &entry = list.at(i);
<                 QString entryFileName = entry.filename;
< 
<                 if (entry.type == UnZip::Directory ||
<                         (!entryFileName.endsWith(".png") &&
<                          !entryFileName.endsWith(".gdb") &&
<                          !entryFileName.endsWith(".s3db"))) {
<                     continue;
<                 }
< 
<                 if (entryFileName.endsWith(".png")) {
<                     extractPath = SaagharWidget::poetsImagesDir;
<                     QDir photoDir(extractPath);
<                     qDebug() << "make photo dir =>" << photoDir.mkpath(extractPath);
<                     qDebug() << "The author's photo =>" << extractPath + "/" + entryFileName;
<                 }
< 
<                 ec = uz.extractFile(entryFileName, extractPath, UnZip::SkipPaths);
<                 qDebug() << "extract-ErrorCode=" << uz.formatError(ec) << entryFileName << extractPath;
< 
<                 if (entryFileName.endsWith(".gdb") || entryFileName.endsWith(".s3db")) {
<                     importDataBase(extractPath + "/" + entryFileName, &installCompleted);
<                     QFile::remove(extractPath + "/" + entryFileName);
<                     QDir extractDir(extractPath);
<                     extractDir.rmdir(extractPath);
<                 }
<             }
<             //TODO: Fix me!
<             //QDir extractDir(extractPath);
<             //qDebug() <<"remove Extract Dir--"<<extractDir.rmdir(extractPath);
< 
<             uz.closeArchive();
<             QApplication::restoreOverrideCursor();
<         }
<     } // end "zip" type
<     else if (type == "s3db") {
<         qDebug() << "FILE TYPE IS S3DB! [SQLite 3 Data Base]";
<         importDataBase(file, &installCompleted);
<     }
< 
<     QApplication::restoreOverrideCursor();
<     QApplication::processEvents();
< }
< 
< void DataBaseUpdater::resizeColumnsToContents()
< {
<     if (!newRootItem || !oldRootItem) {
<         return;
<     }
<     bool newItemState = newRootItem->isExpanded();
<     bool oldItemState = oldRootItem->isExpanded();
< 
<     newRootItem->setExpanded(true);
<     oldRootItem->setExpanded(true);
< 
<     ui->repoSelectTree->resizeColumnToContents(0);
<     ui->repoSelectTree->resizeColumnToContents(1);
<     ui->repoSelectTree->resizeColumnToContents(2);
<     ui->repoSelectTree->resizeColumnToContents(3);
< 
<     newRootItem->setExpanded(newItemState);
<     oldRootItem->setExpanded(oldItemState);
< }
< 
< void DataBaseUpdater::addRemoveRepository()
< {
<     QDialog addRemove(this);
<     addRemove.setWindowTitle(tr("Add/Remove Repository Address"));
<     QVBoxLayout vLayout(&addRemove);
<     QLabel label(tr("Insert each address in a separate line!"));
<     QTextEdit textEdit;
<     textEdit.setPlainText(repositoriesUrls.join("\n"));
<     QDialogButtonBox buttonBox;
<     addRemove.setObjectName(QString::fromUtf8("addRemove"));
<     addRemove.resize(400, 300);
< 
<     vLayout.setObjectName(QString::fromUtf8("vLayout"));
<     label.setObjectName(QString::fromUtf8("label"));
<     textEdit.setObjectName(QString::fromUtf8("textEdit"));
< 
<     vLayout.addWidget(&label);
<     vLayout.addWidget(&textEdit);
< 
<     buttonBox.setObjectName(QString::fromUtf8("buttonBox"));
<     buttonBox.setOrientation(Qt::Horizontal);
<     buttonBox.setStandardButtons(QDialogButtonBox::Cancel | QDialogButtonBox::Ok);
< 
<     vLayout.addWidget(&buttonBox);
< 
<     addRemove.setLayout(&vLayout);
< 
<     QObject::connect(&buttonBox, SIGNAL(accepted()), &addRemove, SLOT(accept()));
<     QObject::connect(&buttonBox, SIGNAL(rejected()), &addRemove, SLOT(reject()));
< 
<     if (addRemove.exec() == QDialog::Accepted) {
<         setRepositories(textEdit.toPlainText().split("\n", QString::SkipEmptyParts));
<         fillRepositoryList();
<     }
< }
< 
< void DataBaseUpdater::reject()
< {
<     if (!doStopDownload()) {
<         return;
<     }
< 
<     QDialog::reject();
< }
< 
< #if QT_VERSION >= 0x050000
< #include "settingsmanager.h"
< #include <QPainter>
< void DataBaseUpdater::paintEvent(QPaintEvent* event)
< {
<     if (VARB("SaagharWindow/UseTransparecy") && QtWin::isCompositionEnabled()) {
<         QPainter p(this);
<         p.setCompositionMode(QPainter::CompositionMode_Clear);
<         p.fillRect(event->rect(), QColor(0, 0, 0, 0));
<     }
< 
<     QDialog::paintEvent(event);
< }
< #endif
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> 
> #include <QProgressBar>
> #include <QDate>
> #include <QFileInfo>
> #include <QDir>
> #include <QFileDialog>
> #include <QMessageBox>
> #include <QCloseEvent>
> #include <QTextEdit>
> #include <QDialogButtonBox>
> #include <QPushButton>
> 
> #include "unzip.h"
> #include "tools.h"
> #include "downloader.h"
> #include "databaseupdater.h"
> #include "databasebrowser.h"
> #include "saagharwidget.h"
> #include "saagharwindow.h"
> #include "saagharapplication.h"
> 
> QString DataBaseUpdater::downloadLocation;
> bool DataBaseUpdater::keepDownloadedFiles = false;
> QStringList DataBaseUpdater::repositoriesUrls = QStringList();
> const QStringList DataBaseUpdater::defaultRepositories = QStringList()
>         << "http://i.ganjoor.net/android/androidgdbs.xml";
> //        << "http://ganjoor.sourceforge.net/newgdbs.xml"
> //        << "http://ganjoor.sourceforge.net/programgdbs.xml"
> //        << "http://ganjoor.sourceforge.net/sitegdbs.xml";
> 
> int PoetID_DATA = Qt::UserRole + 1;
> int CatID_DATA = Qt::UserRole + 2;
> int FileExt_DATA = Qt::UserRole + 3;
> int ImageUrl_DATA = Qt::UserRole + 4;
> int LowestPoemID_DATA = Qt::UserRole + 5;
> int DownloadUrl_DATA = Qt::UserRole + 6;
> int BlogUrl_DATA = Qt::UserRole + 7;
> 
> DataBaseUpdater::DataBaseUpdater(QWidget* parent, Qt::WindowFlags f)
>     : QDialog(parent, f), ui(new Ui::DataBaseUpdater)
> {
>     downloadStarted = downloadAboutToStart = false;
> 
>     ui->setupUi(this);
>     ui->refreshPushButton->setIcon(QIcon(ICON_FILE("refresh")));
>     downloaderObject = new Downloader(this, ui->downloadProgressBar, ui->labelDownloadStatus);
>     setupUi();
> 
>     connect(ui->refreshPushButton, SIGNAL(clicked()), this, SLOT(readRepository()));
>     connect(ui->comboBoxRepoList, SIGNAL(currentIndexChanged(QString)), this, SLOT(readRepository(QString)));
>     connect(ui->repoSelectTree, SIGNAL(itemChanged(QTreeWidgetItem*,int)), this, SLOT(itemDataChanged(QTreeWidgetItem*,int)));
>     connect(ui->pushButtonDownload, SIGNAL(clicked()), this, SLOT(initDownload()));
>     connect(ui->pushButtonBrowse, SIGNAL(clicked()), this, SLOT(getDownloadLocation()));
>     connect(downloaderObject, SIGNAL(downloadStopped()), this, SLOT(forceStopDownload()));
> }
> 
> bool DataBaseUpdater::read(QIODevice* device)
> {
>     QString errorStr;
>     int errorLine;
>     int errorColumn;
> 
>     if (!domDocument.setContent(device, true, &errorStr, &errorLine, &errorColumn)) {
>         return false;
>     }
>     return parseDocument();
> }
> 
> bool DataBaseUpdater::read(const QByteArray &data)
> {
>     QString errorStr;
>     int errorLine;
>     int errorColumn;
> 
>     if (!domDocument.setContent(data, true, &errorStr, &errorLine, &errorColumn)) {
>         return false;
>     }
>     return parseDocument();
> }
> 
> bool DataBaseUpdater::parseDocument()
> {
>     QDomElement root = domDocument.documentElement();
>     if (root.tagName() != "DesktopGanjoorGDBList") {
>         return false;
>     }
> 
>     insertedToList.clear();
> 
>     QDomElement child = root.firstChildElement("gdb");
>     while (!child.isNull()) {
>         parseElement(child);
>         child = child.nextSiblingElement("gdb");
>     }
> 
>     resizeColumnsToContents();
> 
>     return true;
> }
> 
> void DataBaseUpdater::parseElement(const QDomElement &element)
> {
> //visible info
>     QString CatName = element.firstChildElement("CatName").text();
>     QString BlogUrl = element.firstChildElement("BlogUrl").text();
>     QString DownloadUrl = element.firstChildElement("DownloadUrl").text();
>     int fileSize = element.firstChildElement("FileSizeInByte").text().toInt();
>     fileSize = fileSize / 1024;
>     QString fileSizeKB = QString::number(fileSize) == "0" ? "" : QString::number(fileSize) + " " + tr("KB");
>     QLocale persainLocale(QLocale::Persian, QLocale::Iran);
>     QDate pubDate = persainLocale.toDate(element.firstChildElement("PubDate").text(), "yyyy-MM-dd");
> 
>     QStringList visibleInfo = QStringList() << CatName
>                               << fileSizeKB
>                               << pubDate.toString("yyyy-MM-dd");
> 
> //meta data
>     QString PoetID = element.firstChildElement("PoetID").text();
>     int CatID = element.firstChildElement("CatID").text().toInt();
>     QString FileExt = element.firstChildElement("FileExt").text();
>     QString ImageUrl = element.firstChildElement("ImageUrl").text();
>     QString LowestPoemID = element.firstChildElement("LowestPoemID").text();
> 
>     bool isNew = sApp->databaseBrowser()->getCategory(CatID).isNull();
> 
>     if (insertedToList.contains(CatID) && insertedToList.value(CatID) == DownloadUrl) {
>         return;
>     }
>     else {
>         insertedToList.insert(CatID, DownloadUrl);
>     }
> 
>     QTreeWidgetItem* item = new QTreeWidgetItem(isNew ? newRootItem : oldRootItem , visibleInfo);
>     item->setToolTip(0, CatName);
>     item->setFlags(Qt::ItemIsSelectable | Qt::ItemIsUserCheckable | Qt::ItemIsEnabled);
>     item->setCheckState(0, Qt::Unchecked);
>     item->setData(0, PoetID_DATA, PoetID);
>     item->setData(0, CatID_DATA, CatID);
>     item->setData(0, FileExt_DATA, FileExt);
>     item->setData(0, ImageUrl_DATA, ImageUrl);
>     item->setData(0, LowestPoemID_DATA, LowestPoemID);
>     item->setData(0, DownloadUrl_DATA, DownloadUrl);
>     item->setData(0, BlogUrl_DATA, BlogUrl);
> 
>     if (!BlogUrl.isEmpty()) {
>         QLabel* blogLink = new QLabel(ui->repoSelectTree);
>         blogLink->setTextFormat(Qt::RichText);
>         blogLink->setText(QString("<a href=\"%1\" title=\"%1\" >%2</a>").arg(BlogUrl).arg(tr("Go to Release Information")));
>         //blogLink->setToolTip(BlogUrl);
>         blogLink->setOpenExternalLinks(true);
>         ui->repoSelectTree->setItemWidget(item, 3, blogLink);
>     }
> }
> 
> void DataBaseUpdater::fillRepositoryList()
> {
>     ui->comboBoxRepoList->clear();
>     ui->comboBoxRepoList->addItems(QStringList()
>                                    << tr("Select From Repositories List...")
>                                    << repositoriesUrls
>                                    << tr("Click To Add/Remove..."));
>     ui->comboBoxRepoList->insertSeparator(1);
>     ui->comboBoxRepoList->insertSeparator(ui->comboBoxRepoList->count() - 1);
> }
> 
> void DataBaseUpdater::importDataBase(const QString &fileName, bool* ok)
> {
>     QSqlDatabase dataBaseObject = DatabaseBrowser::database();
>     QFileInfo dataBaseFile(dataBaseObject.databaseName());
>     if (!dataBaseFile.isWritable()) {
>         QMessageBox::warning(sApp->activeWindow(), tr("Error!"), tr("You have not write permission to database file, the import procedure can not proceed.\nDataBase Path: %2").arg(dataBaseFile.fileName()));
>         if (ok) {
>             *ok = false;
>         }
>         return;
>     }
>     QList<GanjoorPoet*> poetsConflictList = sApp->databaseBrowser()->getConflictingPoets(fileName);
> 
>     dataBaseObject.transaction();
> 
>     if (!poetsConflictList.isEmpty()) {
>         QMessageBox warnAboutConflict(sApp->activeWindow());
>         warnAboutConflict.setWindowTitle(tr("Warning!"));
>         warnAboutConflict.setIcon(QMessageBox::Warning);
>         warnAboutConflict.setText(tr("There are some conflict with your installed database. If you continue, these poets will be removed!"));
>         QString details = tr("These poets are present in installed database:\n");
>         for (int i = 0; i < poetsConflictList.size(); ++i) {
>             details += poetsConflictList.at(i)->_Name + "\n";
>         }
>         warnAboutConflict.setDetailedText(details);
>         warnAboutConflict.setStandardButtons(QMessageBox::Ok | QMessageBox::Cancel);
>         warnAboutConflict.setEscapeButton(QMessageBox::Cancel);
>         warnAboutConflict.setDefaultButton(QMessageBox::Cancel);
>         int ret = warnAboutConflict.exec();
>         if (ret == QMessageBox::Cancel) {
>             if (ok) {
>                 *ok = false;
>             }
>             return;
>         }
> 
>         foreach (GanjoorPoet* poet, poetsConflictList) {
>             sApp->databaseBrowser()->removePoetFromDataBase(poet->_ID);
>         }
>     }
> 
>     //QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));
> 
>     if (sApp->databaseBrowser()->importDataBase(fileName)) {
>         dataBaseObject.commit();
>         if (ok) {
>             *ok = true;
>         }
>     }
>     else {
>         if (ok) {
>             *ok = false;
>         }
>         dataBaseObject.rollback();
>         QMessageBox warning(QMessageBox::Warning, tr("Error!"), tr("There are some errors, the import procedure was not completed"), QMessageBox::Ok
>                             , DatabaseBrowser::dbUpdater, Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint | Qt::WindowStaysOnTopHint);
>         warning.exec();
>     }
>     //QApplication::restoreOverrideCursor();
> }
> 
> void DataBaseUpdater::setRepositories(const QStringList &urls)
> {
>     repositoriesUrls.clear();
>     repositoriesUrls << urls << defaultRepositories;
>     repositoriesUrls.removeDuplicates();
> }
> 
> QStringList DataBaseUpdater::repositories()
> {
>     return repositoriesUrls;
> }
> 
> void DataBaseUpdater::setupUi()
> {
> #if QT_VERSION >= 0x040700
>     ui->lineEditDownloadLocation->setPlaceholderText(tr("Please select download location..."));
> #else
>     ui->lineEditDownloadLocation->setToolTip(tr("Please select download location..."));
> #endif
> 
>     fillRepositoryList();
> 
>     ui->refreshPushButton->setEnabled(false);
> 
>     ui->lineEditDownloadLocation->setText(DataBaseUpdater::downloadLocation);
>     keepDownloadedFiles = keepDownloadedFiles && !downloadLocation.isEmpty();
>     ui->groupBoxKeepDownload->setChecked(keepDownloadedFiles);
>     ui->downloadProgressBar->hide();
>     ui->labelDownloadStatus->hide();
> 
>     ui->repoSelectTree->setLayoutDirection(Qt::RightToLeft);
>     ui->repoSelectTree->setTextElideMode(Qt::ElideMiddle);
> }
> 
> void DataBaseUpdater::setupTreeRootItems()
> {
>     QFont font(ui->repoSelectTree->font());
>     font.setBold(true);
> 
>     oldRootItem = new QTreeWidgetItem(ui->repoSelectTree);
>     oldRootItem->setText(0, tr("Installed"));
>     oldRootItem->setFlags(Qt::ItemIsSelectable | Qt::ItemIsUserCheckable | Qt::ItemIsEnabled | Qt::ItemIsTristate);
>     oldRootItem->setCheckState(0, Qt::Unchecked);
>     oldRootItem->setFont(0, font);
>     oldRootItem->setExpanded(false);
>     oldRootItem->setDisabled(true);
> 
>     newRootItem = new QTreeWidgetItem(ui->repoSelectTree);
>     newRootItem->setText(0, tr("Ready To Install"));
>     newRootItem->setFlags(Qt::ItemIsSelectable | Qt::ItemIsUserCheckable | Qt::ItemIsEnabled | Qt::ItemIsTristate);
>     newRootItem->setCheckState(0, Qt::Unchecked);
>     newRootItem->setFont(0, font);
>     newRootItem->setExpanded(true);
>     newRootItem->setDisabled(true);
> }
> 
> void DataBaseUpdater::readRepository(const QString &url)
> {
>     disconnect(ui->repoSelectTree, SIGNAL(itemChanged(QTreeWidgetItem*,int)), this, SLOT(itemDataChanged(QTreeWidgetItem*,int)));
>     ui->pushButtonDownload->setEnabled(false);
> 
>     if (ui->comboBoxRepoList->currentIndex() == ui->comboBoxRepoList->count() - 1) {
>         disconnect(ui->comboBoxRepoList, SIGNAL(currentIndexChanged(QString)), this, SLOT(readRepository(QString)));
>         addRemoveRepository();
>         connect(ui->comboBoxRepoList, SIGNAL(currentIndexChanged(QString)), this, SLOT(readRepository(QString)));
>         ui->comboBoxRepoList->setCurrentIndex(-1);//maybe a bug in older Qt, set to '0' does not work!
>         ui->comboBoxRepoList->setCurrentIndex(0);
>         return;
>     }
> 
>     ui->repoSelectTree->takeTopLevelItem(1);
>     ui->repoSelectTree->takeTopLevelItem(0);
> 
>     QUrl repoUrl = QUrl::fromUserInput(ui->comboBoxRepoList->currentText());
>     if (!repoUrl.isValid()) {
>         qDebug() << "if-repoUrl==" << repoUrl.toString() << "url=" << url;
>         ui->refreshPushButton->setEnabled(false);
>         return;
>     }
> 
>     qDebug() << "else-repoUrl==" << repoUrl.toString() << "url=" << url;
>     ui->refreshPushButton->setEnabled(true);
> 
>     if (!url.isEmpty()) {
>         QPair<QTreeWidgetItem*, QTreeWidgetItem*> cachedItems = itemsCache.value(ui->comboBoxRepoList->currentText(), QPair<QTreeWidgetItem*, QTreeWidgetItem*>());
>         if (cachedItems.first && cachedItems.second) {
>             ui->repoSelectTree->takeTopLevelItem(1);
>             ui->repoSelectTree->takeTopLevelItem(0);
>             newRootItem = cachedItems.first;
>             oldRootItem = cachedItems.second;
>             ui->repoSelectTree->addTopLevelItem(oldRootItem);
>             ui->repoSelectTree->addTopLevelItem(newRootItem);
>             resizeColumnsToContents();
>             newRootItem->setExpanded(true);
>             itemDataChanged(0, 0);
>             connect(ui->repoSelectTree, SIGNAL(itemChanged(QTreeWidgetItem*,int)), this, SLOT(itemDataChanged(QTreeWidgetItem*,int)));
>             return;
>         }
>     }
>     else {
>         itemsCache.insert(ui->comboBoxRepoList->currentText(), QPair<QTreeWidgetItem*, QTreeWidgetItem*>());
>     }
> 
>     //bool isRemote = false;
>     QString urlStr = repoUrl.toString();
>     qDebug() << "url====" << urlStr;
>     setupTreeRootItems();
>     if (!urlStr.contains("file:///")) {
>         //isRemote = true;
>         QString tmpPath = getTempDir();
>         QDir downDir(tmpPath);
>         if (!downDir.exists() && !downDir.mkpath(tmpPath)) {
>             QMessageBox::information(this, tr("Error!"), tr("Can not create temp path."));
>             return;//continue;
>         }
> 
>         QFileInfo urlInfo(urlStr);
>         ui->comboBoxRepoList->setEnabled(false);
>         ui->refreshPushButton->setEnabled(false);
>         downloadAboutToStart = downloadStarted = true;
>         downloaderObject->downloadFile(repoUrl, tmpPath, urlInfo.fileName());
>         downloadAboutToStart = downloadStarted = false;
>         ui->comboBoxRepoList->setEnabled(true);
>         if (!downloaderObject->hasError()) {
>             ui->refreshPushButton->setEnabled(true);
>         }
>         else {
>             //maybe a bug in older Qt, set to '0' does not work!
>             ui->comboBoxRepoList->setCurrentIndex(-1);
>             ui->comboBoxRepoList->setCurrentIndex(0);
>         }
>         ui->labelDownloadStatus->hide();
>         QString filepath = tmpPath + "/" + urlInfo.fileName();
>         QFile file(filepath);
>         read(&file);
>         file.remove();
>         downDir.rmdir(tmpPath);
>     }
>     else {
>         urlStr.remove("file:///");
>         QFile file(urlStr);
>         read(&file);
>     }
> 
>     newRootItem->setDisabled(newRootItem->childCount() == 0);
>     oldRootItem->setDisabled(oldRootItem->childCount() == 0);
>     if (newRootItem->childCount() == 0 && oldRootItem->childCount() == 0) {
>         ui->repoSelectTree->clear();
>         newRootItem = 0;
>         oldRootItem = 0;
>     }
>     itemsCache.insert(ui->comboBoxRepoList->currentText(), QPair<QTreeWidgetItem*, QTreeWidgetItem*>(newRootItem, oldRootItem));
>     connect(ui->repoSelectTree, SIGNAL(itemChanged(QTreeWidgetItem*,int)), this, SLOT(itemDataChanged(QTreeWidgetItem*,int)));
> }
> 
> void DataBaseUpdater::itemDataChanged(QTreeWidgetItem* /*item*/, int /*column*/)
> {
>     bool itemsChecked = (newRootItem->checkState(0) != Qt::Unchecked) || (oldRootItem->checkState(0) != Qt::Unchecked);
>     ui->pushButtonDownload->setEnabled(itemsChecked);
> }
> 
> void DataBaseUpdater::getDownloadLocation()
> {
>     DataBaseUpdater::downloadLocation = QFileDialog::getExistingDirectory(this, tr("Select Download Location"), QDir::homePath());
>     ui->lineEditDownloadLocation->setText(DataBaseUpdater::downloadLocation);
> }
> 
> void DataBaseUpdater::initDownload()
> {
>     downloadAboutToStart = true;
>     ui->pushButtonDownload->setText(tr("Stop"));
>     disconnect(ui->pushButtonDownload, SIGNAL(clicked()), this, SLOT(initDownload()));
>     connect(ui->pushButtonDownload, SIGNAL(clicked()), this, SLOT(doStopDownload()));
>     connect(ui->pushButtonDownload, SIGNAL(clicked()), downloaderObject->loop, SLOT(quit()));
> 
>     sessionDownloadFolder = DataBaseUpdater::downloadLocation;
>     QDir downDir;
>     if (ui->groupBoxKeepDownload->isChecked()) {
>         if (sessionDownloadFolder.isEmpty()) {
>             QMessageBox::information(this, tr("Warning!"), tr("Please select download location."));
>             doStopDownload();
>             return;
>         }
>     }
>     else {
>         randomFolder = sessionDownloadFolder = getTempDir();
>     }
> 
>     downDir.setPath(sessionDownloadFolder);
>     if (!downDir.exists() && !downDir.mkpath(sessionDownloadFolder)) {
>         QMessageBox::information(this, tr("Error!"), tr("Can not create download path."));
>         doStopDownload();
>         return;
>     }
> 
>     ui->repoSelectTree->setEnabled(false);
>     ui->comboBoxRepoList->setEnabled(false);
>     ui->refreshPushButton->setEnabled(false);
>     ui->groupBoxKeepDownload->setEnabled(false);
> 
>     for (int i = 0; i < newRootItem->childCount(); ++i) {
>         QTreeWidgetItem* child = newRootItem->child(i);
>         if (!child || child->checkState(0) != Qt::Checked) {
>             continue;
>         }
>         installCompleted = false;
>         downloadItem(child, true);
> 
>         if (installCompleted) {
>             //after install we change the parent
>             newRootItem->removeChild(child);
>             oldRootItem->addChild(child);
>             child->setCheckState(0, Qt::Unchecked);
>             child->setFlags(Qt::NoItemFlags);
>             --i;
>         }
>     }
> 
>     for (int i = 0; i < oldRootItem->childCount(); ++i) {
>         QTreeWidgetItem* child = oldRootItem->child(i);
>         if (!child || child->checkState(0) != Qt::Checked) {
>             continue;
>         }
>         installCompleted = false;
>         downloadItem(child, true);
> 
>         if (installCompleted) {
>             child->setCheckState(0, Qt::Unchecked);
>             child->setFlags(Qt::NoItemFlags);
>         }
>     }
> 
>     if (!ui->groupBoxKeepDownload->isChecked()) {
>         //TODO: Fix me!
>         //QFile::remove(sessionDownloadFolder+"/"+fileName);
>         QDir downDir(sessionDownloadFolder);
>         downDir.rmdir(sessionDownloadFolder);
>     }
> 
>     ui->labelDownloadStatus->setText(tr("Finished!"));
> 
>     //download ended
>     downloadAboutToStart = downloadStarted = false;
>     doStopDownload();
> 
>     ui->repoSelectTree->setEnabled(true);
>     ui->comboBoxRepoList->setEnabled(true);
>     ui->refreshPushButton->setEnabled(true);
>     ui->groupBoxKeepDownload->setEnabled(true);
> }
> 
> bool DataBaseUpdater::doStopDownload()
> {
>     if (!downloadAboutToStart) {
>         return true;
>     }
> 
>     if (downloadStarted) {
>         if (QMessageBox::question(this, tr("Warning!"),
>                                   tr("Download in progress! Are you sure to stop downloading?"),
>                                   QMessageBox::Yes | QMessageBox::No, QMessageBox::No) ==
>                 QMessageBox::No) {
>             return false;
>         }
>     }
>     downloaderObject->cancelDownload();
>     forceStopDownload();
> 
>     return true;
> }
> 
> void DataBaseUpdater::closeEvent(QCloseEvent* e)
> {
>     DataBaseUpdater::downloadLocation = ui->lineEditDownloadLocation->text();
>     keepDownloadedFiles = !downloadLocation.isEmpty() && ui->groupBoxKeepDownload->isChecked();
>     if (!doStopDownload()) {
>         e->ignore();    //download in progress
>     }
> }
> 
> void DataBaseUpdater::downloadItem(QTreeWidgetItem* item, bool install)
> {
>     if (!item) {
>         return;
>     }
>     item->treeWidget()->setCurrentItem(item);
>     bool keepDownlaodedFiles = ui->groupBoxKeepDownload->isChecked();
>     downloadStarted = true;
>     QString urlStr = item->data(0, DownloadUrl_DATA).toString();
>     QUrl downloadUrl(urlStr);
>     downloaderObject->downloadFile(downloadUrl, sessionDownloadFolder, item->text(0));
> 
>     QFileInfo fileInfo(downloadUrl.path());
>     QString fileName = fileInfo.fileName();
>     if (fileName.isEmpty()) {
>         fileName = "index.html";
>     }
> 
>     if (install) {
>         ui->labelDownloadStatus->setText(tr("Installing..."));
>         QString fileType = item->data(0, FileExt_DATA).toString();
>         installItemToDB(fileName, sessionDownloadFolder, fileType);
>         ui->labelDownloadStatus->setText(tr("Installed."));
>     }
> 
>     if (!keepDownlaodedFiles) {
>         QFile::remove(sessionDownloadFolder + "/" + fileName);
>         //TODO: Fix me!
>         //QDir downDir(sessionDownloadFolder);
>         //downDir.rmdir(sessionDownloadFolder);
>     }
> }
> 
> void DataBaseUpdater::forceStopDownload()
> {
>     downloadStarted = downloadAboutToStart = false;
> 
>     ui->pushButtonDownload->setText(tr("Download && Install"));
>     connect(ui->pushButtonDownload, SIGNAL(clicked()), this, SLOT(initDownload()));
>     disconnect(ui->pushButtonDownload, SIGNAL(clicked()), this, SLOT(doStopDownload()));
>     disconnect(ui->pushButtonDownload, SIGNAL(clicked()), downloaderObject->loop, SLOT(quit()));
> 
>     QDir tmpDir(randomFolder);
>     tmpDir.rmdir(randomFolder);
> }
> 
> QString DataBaseUpdater::getTempDir(const QString &path, bool makeDir)
> {
>     QString currentPath = path.isEmpty() ? QDir::tempPath() : path;
>     QFileInfo currentPathInfo(currentPath);
>     if (!currentPathInfo.isDir()) {
>         currentPath = QDir::tempPath();
>     }
>     QString tmpPath = currentPath + "/~tmp_saaghar_0"; //+QString::number(qrand());
>     QDir tmpDir(tmpPath);
>     while (tmpDir.exists()) {
>         tmpPath += QString::number(qrand());
>         tmpDir.setPath(tmpPath);
>     }
>     if (makeDir) {
>         tmpDir.mkpath(tmpPath);
>     }
> 
>     return tmpPath;
> }
> 
> void DataBaseUpdater::installItemToDB(const QString &fullFilePath, const QString &fileType)
> {
>     if (fullFilePath.isEmpty()) {
>         return;
>     }
>     QFileInfo file(fullFilePath);
>     installItemToDB(file.fileName(), file.canonicalPath(), fileType);
> }
> 
> void DataBaseUpdater::installItemToDB(const QString &fileName, const QString &path, const QString &fileType)
> {
>     QString type = fileType;
>     if (type == ".gdb" || type == "gdb" || type == ".s3db") {
>         type = "s3db";
>     }
> 
>     if (type == ".zip") {
>         type = "zip";
>     }
> 
>     if (type.isEmpty()) {
>         if (fileName.endsWith(".gdb") || fileName.endsWith(".s3db")) {
>             type = "s3db";
>         }
>         else {
>             type = "zip";
>         }
>     }
> 
>     QString file = path + "/" + fileName;
> 
>     QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));
> 
>     if (type == "zip") {
>         if (!QFile::exists(file)) {
>             qDebug() << "File does not exist.";
>             QApplication::restoreOverrideCursor();
>             installCompleted = false;
>             return;
>         }
> 
>         UnZip::ErrorCode ec;
>         UnZip uz;
> 
>         ec = uz.openArchive(file);
>         if (ec != UnZip::Ok) {
>             qDebug() << "Unable to open archive: " << uz.formatError(ec);
>             uz.closeArchive();
>             installCompleted = false;
>             //try open it as SQLite database!
>             installItemToDB(fileName, path, "s3db");
>             QApplication::restoreOverrideCursor();
>             return;
>         }
>         else {
>             QList<UnZip::ZipEntry> list = uz.entryList();
>             if (list.isEmpty()) {
>                 installCompleted = false;
>                 QApplication::restoreOverrideCursor();
>                 return;
>             }
> 
>             QString tmpExtractPath = getTempDir(path, true);
>             for (int i = 0; i < list.size(); ++i) {
>                 QString extractPath = tmpExtractPath;
>                 const UnZip::ZipEntry &entry = list.at(i);
>                 QString entryFileName = entry.filename;
> 
>                 if (entry.type == UnZip::Directory ||
>                         (!entryFileName.endsWith(".png") &&
>                          !entryFileName.endsWith(".gdb") &&
>                          !entryFileName.endsWith(".s3db"))) {
>                     continue;
>                 }
> 
>                 if (entryFileName.endsWith(".png")) {
>                     extractPath = SaagharWidget::poetsImagesDir;
>                     QDir photoDir(extractPath);
>                     qDebug() << "make photo dir =>" << photoDir.mkpath(extractPath);
>                     qDebug() << "The author's photo =>" << extractPath + "/" + entryFileName;
>                 }
> 
>                 ec = uz.extractFile(entryFileName, extractPath, UnZip::SkipPaths);
>                 qDebug() << "extract-ErrorCode=" << uz.formatError(ec) << entryFileName << extractPath;
> 
>                 if (entryFileName.endsWith(".gdb") || entryFileName.endsWith(".s3db")) {
>                     importDataBase(extractPath + "/" + entryFileName, &installCompleted);
>                     QFile::remove(extractPath + "/" + entryFileName);
>                     QDir extractDir(extractPath);
>                     extractDir.rmdir(extractPath);
>                 }
>             }
>             //TODO: Fix me!
>             //QDir extractDir(extractPath);
>             //qDebug() <<"remove Extract Dir--"<<extractDir.rmdir(extractPath);
> 
>             uz.closeArchive();
>             QApplication::restoreOverrideCursor();
>         }
>     } // end "zip" type
>     else if (type == "s3db") {
>         qDebug() << "FILE TYPE IS S3DB! [SQLite 3 Data Base]";
>         importDataBase(file, &installCompleted);
>     }
> 
>     QApplication::restoreOverrideCursor();
>     QApplication::processEvents();
> }
> 
> void DataBaseUpdater::resizeColumnsToContents()
> {
>     if (!newRootItem || !oldRootItem) {
>         return;
>     }
>     bool newItemState = newRootItem->isExpanded();
>     bool oldItemState = oldRootItem->isExpanded();
> 
>     newRootItem->setExpanded(true);
>     oldRootItem->setExpanded(true);
> 
>     ui->repoSelectTree->resizeColumnToContents(0);
>     ui->repoSelectTree->resizeColumnToContents(1);
>     ui->repoSelectTree->resizeColumnToContents(2);
>     ui->repoSelectTree->resizeColumnToContents(3);
> 
>     newRootItem->setExpanded(newItemState);
>     oldRootItem->setExpanded(oldItemState);
> }
> 
> void DataBaseUpdater::addRemoveRepository()
> {
>     QDialog addRemove(this);
>     addRemove.setWindowTitle(tr("Add/Remove Repository Address"));
>     QVBoxLayout vLayout(&addRemove);
>     QLabel label(tr("Insert each address in a separate line!"));
>     QTextEdit textEdit;
>     textEdit.setPlainText(repositoriesUrls.join("\n"));
>     QDialogButtonBox buttonBox;
>     addRemove.setObjectName(QString::fromUtf8("addRemove"));
>     addRemove.resize(400, 300);
> 
>     vLayout.setObjectName(QString::fromUtf8("vLayout"));
>     label.setObjectName(QString::fromUtf8("label"));
>     textEdit.setObjectName(QString::fromUtf8("textEdit"));
> 
>     vLayout.addWidget(&label);
>     vLayout.addWidget(&textEdit);
> 
>     buttonBox.setObjectName(QString::fromUtf8("buttonBox"));
>     buttonBox.setOrientation(Qt::Horizontal);
>     buttonBox.setStandardButtons(QDialogButtonBox::Cancel | QDialogButtonBox::Ok);
> 
>     vLayout.addWidget(&buttonBox);
> 
>     addRemove.setLayout(&vLayout);
> 
>     QObject::connect(&buttonBox, SIGNAL(accepted()), &addRemove, SLOT(accept()));
>     QObject::connect(&buttonBox, SIGNAL(rejected()), &addRemove, SLOT(reject()));
> 
>     if (addRemove.exec() == QDialog::Accepted) {
>         setRepositories(textEdit.toPlainText().split("\n", QString::SkipEmptyParts));
>         fillRepositoryList();
>     }
> }
> 
> void DataBaseUpdater::reject()
> {
>     if (!doStopDownload()) {
>         return;
>     }
> 
>     QDialog::reject();
> }
> 
> #if QT_VERSION >= 0x050000
> #include "settingsmanager.h"
> #include <QPainter>
> void DataBaseUpdater::paintEvent(QPaintEvent* event)
> {
>     if (VARB("SaagharWindow/UseTransparecy") && QtWin::isCompositionEnabled()) {
>         QPainter p(this);
>         p.setCompositionMode(QPainter::CompositionMode_Clear);
>         p.fillRect(event->rect(), QColor(0, 0, 0, 0));
>     }
> 
>     QDialog::paintEvent(event);
> }
> #endif
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databaseupdater.h lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databaseupdater.h
1,102c1,102
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< 
< #ifndef DATABASEUPDATER_H
< #define DATABASEUPDATER_H
< 
< #include "ui_databaseupdater.h"
< 
< #include <QDomDocument>
< #include <QHash>
< #include <QIcon>
< #include <QTreeWidget>
< 
< namespace Ui
< {
< class DataBaseUpdater;
< }
< 
< class SaagharWindow;
< class Downloader;
< 
< class DataBaseUpdater : public QDialog
< {
<     Q_OBJECT
< 
< public:
<     DataBaseUpdater(QWidget* parent = 0, Qt::WindowFlags f = 0);
<     static QStringList repositories();
<     static void setRepositories(const QStringList &urls);
< 
<     void installItemToDB(const QString &fileName, const QString &filePath, const QString &fileType);
<     void installItemToDB(const QString &fullFilePath, const QString &fileType = "");
<     bool read(QIODevice* device);
<     bool read(const QByteArray &data);
<     static QString downloadLocation;
<     static bool keepDownloadedFiles;
< 
< public slots:
<     void readRepository(const QString &url = "");
< 
< private slots:
<     virtual void reject();
<     void initDownload();
<     void forceStopDownload();
<     bool doStopDownload();
<     void getDownloadLocation();
<     void itemDataChanged(QTreeWidgetItem* item, int column);
< 
< private:
<     void addRemoveRepository();
<     void resizeColumnsToContents();
<     bool parseDocument();
<     void setupTreeRootItems();
<     QString getTempDir(const QString &path = "", bool makeDir = false);
<     void downloadItem(QTreeWidgetItem* item, bool install = false);
<     void setupUi();
<     void parseElement(const QDomElement &element);
<     void fillRepositoryList();
<     void importDataBase(const QString &fileName, bool* ok = 0);
< 
<     QHash<QString, QPair<QTreeWidgetItem*, QTreeWidgetItem*> > itemsCache;
<     const static QStringList defaultRepositories;
<     static QStringList repositoriesUrls;
<     bool installCompleted;
<     QString randomFolder;
<     Downloader* downloaderObject;
<     QString sessionDownloadFolder;
<     bool downloadAboutToStart;
<     bool downloadStarted;
<     QHash <int, QString> insertedToList;
<     Ui::DataBaseUpdater* ui;
<     QTreeWidget* repoSelectTree;
<     QTreeWidgetItem* oldRootItem;
<     QTreeWidgetItem* newRootItem;
<     QDomDocument domDocument;
< 
< protected:
<     void closeEvent(QCloseEvent*);
< #if QT_VERSION >= 0x050000
<     void paintEvent(QPaintEvent* event);
< #endif
< };
< 
< #endif
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> 
> #ifndef DATABASEUPDATER_H
> #define DATABASEUPDATER_H
> 
> #include "ui_databaseupdater.h"
> 
> #include <QDomDocument>
> #include <QHash>
> #include <QIcon>
> #include <QTreeWidget>
> 
> namespace Ui
> {
> class DataBaseUpdater;
> }
> 
> class SaagharWindow;
> class Downloader;
> 
> class DataBaseUpdater : public QDialog
> {
>     Q_OBJECT
> 
> public:
>     DataBaseUpdater(QWidget* parent = 0, Qt::WindowFlags f = 0);
>     static QStringList repositories();
>     static void setRepositories(const QStringList &urls);
> 
>     void installItemToDB(const QString &fileName, const QString &filePath, const QString &fileType);
>     void installItemToDB(const QString &fullFilePath, const QString &fileType = "");
>     bool read(QIODevice* device);
>     bool read(const QByteArray &data);
>     static QString downloadLocation;
>     static bool keepDownloadedFiles;
> 
> public slots:
>     void readRepository(const QString &url = "");
> 
> private slots:
>     virtual void reject();
>     void initDownload();
>     void forceStopDownload();
>     bool doStopDownload();
>     void getDownloadLocation();
>     void itemDataChanged(QTreeWidgetItem* item, int column);
> 
> private:
>     void addRemoveRepository();
>     void resizeColumnsToContents();
>     bool parseDocument();
>     void setupTreeRootItems();
>     QString getTempDir(const QString &path = "", bool makeDir = false);
>     void downloadItem(QTreeWidgetItem* item, bool install = false);
>     void setupUi();
>     void parseElement(const QDomElement &element);
>     void fillRepositoryList();
>     void importDataBase(const QString &fileName, bool* ok = 0);
> 
>     QHash<QString, QPair<QTreeWidgetItem*, QTreeWidgetItem*> > itemsCache;
>     const static QStringList defaultRepositories;
>     static QStringList repositoriesUrls;
>     bool installCompleted;
>     QString randomFolder;
>     Downloader* downloaderObject;
>     QString sessionDownloadFolder;
>     bool downloadAboutToStart;
>     bool downloadStarted;
>     QHash <int, QString> insertedToList;
>     Ui::DataBaseUpdater* ui;
>     QTreeWidget* repoSelectTree;
>     QTreeWidgetItem* oldRootItem;
>     QTreeWidgetItem* newRootItem;
>     QDomDocument domDocument;
> 
> protected:
>     void closeEvent(QCloseEvent*);
> #if QT_VERSION >= 0x050000
>     void paintEvent(QPaintEvent* event);
> #endif
> };
> 
> #endif
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databaseupdater.ui lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/databaseupdater.ui
1,200c1,200
< <?xml version="1.0" encoding="UTF-8"?>
< <ui version="4.0">
<  <class>DataBaseUpdater</class>
<  <widget class="QDialog" name="DataBaseUpdater">
<   <property name="enabled">
<    <bool>true</bool>
<   </property>
<   <property name="geometry">
<    <rect>
<     <x>0</x>
<     <y>0</y>
<     <width>538</width>
<     <height>317</height>
<    </rect>
<   </property>
<   <property name="windowTitle">
<    <string>Data Base Updater</string>
<   </property>
<   <layout class="QVBoxLayout" name="verticalLayout_2">
<    <item>
<     <layout class="QVBoxLayout" name="verticalLayout">
<      <item>
<       <layout class="QHBoxLayout" name="horizontalLayoutRepo">
<        <item>
<         <widget class="QComboBox" name="comboBoxRepoList"/>
<        </item>
<        <item>
<         <widget class="QPushButton" name="refreshPushButton">
<          <property name="enabled">
<           <bool>true</bool>
<          </property>
<          <property name="sizePolicy">
<           <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
<            <horstretch>0</horstretch>
<            <verstretch>0</verstretch>
<           </sizepolicy>
<          </property>
<          <property name="cursor">
<           <cursorShape>ArrowCursor</cursorShape>
<          </property>
<          <property name="styleSheet">
<           <string notr="true">QPushButton { padding: 2px; }</string>
<          </property>
<          <property name="text">
<           <string/>
<          </property>
<          <property name="checkable">
<           <bool>false</bool>
<          </property>
<          <property name="flat">
<           <bool>true</bool>
<          </property>
<         </widget>
<        </item>
<       </layout>
<      </item>
<      <item>
<       <widget class="QLabel" name="labelSubtitle">
<        <property name="text">
<         <string>Select and click 'Download &amp; Install' button.</string>
<        </property>
<       </widget>
<      </item>
<      <item>
<       <widget class="QTreeWidget" name="repoSelectTree">
<        <property name="columnCount">
<         <number>4</number>
<        </property>
<        <column>
<         <property name="text">
<          <string>Title</string>
<         </property>
<        </column>
<        <column>
<         <property name="text">
<          <string>Size</string>
<         </property>
<        </column>
<        <column>
<         <property name="text">
<          <string>Release Date</string>
<         </property>
<        </column>
<        <column>
<         <property name="text">
<          <string>Information</string>
<         </property>
<        </column>
<       </widget>
<      </item>
<      <item>
<       <widget class="QGroupBox" name="groupBoxKeepDownload">
<        <property name="title">
<         <string>Keep Downloaded Files</string>
<        </property>
<        <property name="flat">
<         <bool>false</bool>
<        </property>
<        <property name="checkable">
<         <bool>true</bool>
<        </property>
<        <property name="checked">
<         <bool>false</bool>
<        </property>
<        <layout class="QHBoxLayout" name="horizontalLayout_3">
<         <item>
<          <widget class="QLabel" name="label_2">
<           <property name="text">
<            <string>Download Location:</string>
<           </property>
<          </widget>
<         </item>
<         <item>
<          <widget class="QLineEdit" name="lineEditDownloadLocation"/>
<         </item>
<         <item>
<          <widget class="QPushButton" name="pushButtonBrowse">
<           <property name="text">
<            <string>Browse</string>
<           </property>
<          </widget>
<         </item>
<        </layout>
<       </widget>
<      </item>
<      <item>
<       <layout class="QHBoxLayout" name="hButtonsLayout">
<        <item>
<         <widget class="QLabel" name="labelDownloadStatus">
<          <property name="text">
<           <string>Download Progress:</string>
<          </property>
<         </widget>
<        </item>
<        <item>
<         <widget class="QProgressBar" name="downloadProgressBar">
<          <property name="value">
<           <number>0</number>
<          </property>
<          <property name="textVisible">
<           <bool>false</bool>
<          </property>
<         </widget>
<        </item>
<        <item>
<         <spacer name="horizontalSpacer">
<          <property name="orientation">
<           <enum>Qt::Horizontal</enum>
<          </property>
<          <property name="sizeHint" stdset="0">
<           <size>
<            <width>40</width>
<            <height>20</height>
<           </size>
<          </property>
<         </spacer>
<        </item>
<        <item>
<         <widget class="QPushButton" name="pushButtonDownload">
<          <property name="enabled">
<           <bool>false</bool>
<          </property>
<          <property name="text">
<           <string>Download &amp;&amp; Install</string>
<          </property>
<         </widget>
<        </item>
<        <item>
<         <widget class="QPushButton" name="pushButtonCancel">
<          <property name="text">
<           <string>Cancel</string>
<          </property>
<         </widget>
<        </item>
<       </layout>
<      </item>
<     </layout>
<    </item>
<   </layout>
<  </widget>
<  <resources/>
<  <connections>
<   <connection>
<    <sender>pushButtonCancel</sender>
<    <signal>clicked()</signal>
<    <receiver>DataBaseUpdater</receiver>
<    <slot>reject()</slot>
<    <hints>
<     <hint type="sourcelabel">
<      <x>377</x>
<      <y>288</y>
<     </hint>
<     <hint type="destinationlabel">
<      <x>405</x>
<      <y>0</y>
<     </hint>
<    </hints>
<   </connection>
<  </connections>
< </ui>
---
> <?xml version="1.0" encoding="UTF-8"?>
> <ui version="4.0">
>  <class>DataBaseUpdater</class>
>  <widget class="QDialog" name="DataBaseUpdater">
>   <property name="enabled">
>    <bool>true</bool>
>   </property>
>   <property name="geometry">
>    <rect>
>     <x>0</x>
>     <y>0</y>
>     <width>538</width>
>     <height>317</height>
>    </rect>
>   </property>
>   <property name="windowTitle">
>    <string>Data Base Updater</string>
>   </property>
>   <layout class="QVBoxLayout" name="verticalLayout_2">
>    <item>
>     <layout class="QVBoxLayout" name="verticalLayout">
>      <item>
>       <layout class="QHBoxLayout" name="horizontalLayoutRepo">
>        <item>
>         <widget class="QComboBox" name="comboBoxRepoList"/>
>        </item>
>        <item>
>         <widget class="QPushButton" name="refreshPushButton">
>          <property name="enabled">
>           <bool>true</bool>
>          </property>
>          <property name="sizePolicy">
>           <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
>            <horstretch>0</horstretch>
>            <verstretch>0</verstretch>
>           </sizepolicy>
>          </property>
>          <property name="cursor">
>           <cursorShape>ArrowCursor</cursorShape>
>          </property>
>          <property name="styleSheet">
>           <string notr="true">QPushButton { padding: 2px; }</string>
>          </property>
>          <property name="text">
>           <string/>
>          </property>
>          <property name="checkable">
>           <bool>false</bool>
>          </property>
>          <property name="flat">
>           <bool>true</bool>
>          </property>
>         </widget>
>        </item>
>       </layout>
>      </item>
>      <item>
>       <widget class="QLabel" name="labelSubtitle">
>        <property name="text">
>         <string>Select and click 'Download &amp; Install' button.</string>
>        </property>
>       </widget>
>      </item>
>      <item>
>       <widget class="QTreeWidget" name="repoSelectTree">
>        <property name="columnCount">
>         <number>4</number>
>        </property>
>        <column>
>         <property name="text">
>          <string>Title</string>
>         </property>
>        </column>
>        <column>
>         <property name="text">
>          <string>Size</string>
>         </property>
>        </column>
>        <column>
>         <property name="text">
>          <string>Release Date</string>
>         </property>
>        </column>
>        <column>
>         <property name="text">
>          <string>Information</string>
>         </property>
>        </column>
>       </widget>
>      </item>
>      <item>
>       <widget class="QGroupBox" name="groupBoxKeepDownload">
>        <property name="title">
>         <string>Keep Downloaded Files</string>
>        </property>
>        <property name="flat">
>         <bool>false</bool>
>        </property>
>        <property name="checkable">
>         <bool>true</bool>
>        </property>
>        <property name="checked">
>         <bool>false</bool>
>        </property>
>        <layout class="QHBoxLayout" name="horizontalLayout_3">
>         <item>
>          <widget class="QLabel" name="label_2">
>           <property name="text">
>            <string>Download Location:</string>
>           </property>
>          </widget>
>         </item>
>         <item>
>          <widget class="QLineEdit" name="lineEditDownloadLocation"/>
>         </item>
>         <item>
>          <widget class="QPushButton" name="pushButtonBrowse">
>           <property name="text">
>            <string>Browse</string>
>           </property>
>          </widget>
>         </item>
>        </layout>
>       </widget>
>      </item>
>      <item>
>       <layout class="QHBoxLayout" name="hButtonsLayout">
>        <item>
>         <widget class="QLabel" name="labelDownloadStatus">
>          <property name="text">
>           <string>Download Progress:</string>
>          </property>
>         </widget>
>        </item>
>        <item>
>         <widget class="QProgressBar" name="downloadProgressBar">
>          <property name="value">
>           <number>0</number>
>          </property>
>          <property name="textVisible">
>           <bool>false</bool>
>          </property>
>         </widget>
>        </item>
>        <item>
>         <spacer name="horizontalSpacer">
>          <property name="orientation">
>           <enum>Qt::Horizontal</enum>
>          </property>
>          <property name="sizeHint" stdset="0">
>           <size>
>            <width>40</width>
>            <height>20</height>
>           </size>
>          </property>
>         </spacer>
>        </item>
>        <item>
>         <widget class="QPushButton" name="pushButtonDownload">
>          <property name="enabled">
>           <bool>false</bool>
>          </property>
>          <property name="text">
>           <string>Download &amp;&amp; Install</string>
>          </property>
>         </widget>
>        </item>
>        <item>
>         <widget class="QPushButton" name="pushButtonCancel">
>          <property name="text">
>           <string>Cancel</string>
>          </property>
>         </widget>
>        </item>
>       </layout>
>      </item>
>     </layout>
>    </item>
>   </layout>
>  </widget>
>  <resources/>
>  <connections>
>   <connection>
>    <sender>pushButtonCancel</sender>
>    <signal>clicked()</signal>
>    <receiver>DataBaseUpdater</receiver>
>    <slot>reject()</slot>
>    <hints>
>     <hint type="sourcelabel">
>      <x>377</x>
>      <y>288</y>
>     </hint>
>     <hint type="destinationlabel">
>      <x>405</x>
>      <y>0</y>
>     </hint>
>    </hints>
>   </connection>
>  </connections>
> </ui>
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/downloader/authenticationdialog.ui lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/downloader/authenticationdialog.ui
1,129c1,129
< <ui version="4.0" >
<  <class>Dialog</class>
<  <widget class="QDialog" name="Dialog" >
<   <property name="geometry" >
<    <rect>
<     <x>0</x>
<     <y>0</y>
<     <width>389</width>
<     <height>243</height>
<    </rect>
<   </property>
<   <property name="windowTitle" >
<    <string>Http authentication required</string>
<   </property>
<   <layout class="QGridLayout" >
<    <item row="0" column="0" colspan="2" >
<     <widget class="QLabel" name="label" >
<      <property name="text" >
<       <string>You need to supply a Username and a Password to access this site</string>
<      </property>
<      <property name="wordWrap" >
<       <bool>false</bool>
<      </property>
<     </widget>
<    </item>
<    <item row="2" column="0" >
<     <widget class="QLabel" name="label_2" >
<      <property name="text" >
<       <string>Username:</string>
<      </property>
<     </widget>
<    </item>
<    <item row="2" column="1" >
<     <widget class="QLineEdit" name="userEdit" />
<    </item>
<    <item row="3" column="0" >
<     <widget class="QLabel" name="label_3" >
<      <property name="text" >
<       <string>Password:</string>
<      </property>
<     </widget>
<    </item>
<    <item row="3" column="1" >
<     <widget class="QLineEdit" name="passwordEdit" />
<    </item>
<    <item row="5" column="0" colspan="2" >
<     <widget class="QDialogButtonBox" name="buttonBox" >
<      <property name="orientation" >
<       <enum>Qt::Horizontal</enum>
<      </property>
<      <property name="standardButtons" >
<       <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
<      </property>
<     </widget>
<    </item>
<    <item row="1" column="0" >
<     <widget class="QLabel" name="label_4" >
<      <property name="text" >
<       <string>Site:</string>
<      </property>
<     </widget>
<    </item>
<    <item row="1" column="1" >
<     <widget class="QLabel" name="siteDescription" >
<      <property name="font" >
<       <font>
<        <weight>75</weight>
<        <bold>true</bold>
<       </font>
<      </property>
<      <property name="text" >
<       <string>%1 at %2</string>
<      </property>
<      <property name="wordWrap" >
<       <bool>true</bool>
<      </property>
<     </widget>
<    </item>
<    <item row="4" column="0" >
<     <spacer>
<      <property name="orientation" >
<       <enum>Qt::Vertical</enum>
<      </property>
<      <property name="sizeHint" >
<       <size>
<        <width>20</width>
<        <height>40</height>
<       </size>
<      </property>
<     </spacer>
<    </item>
<   </layout>
<  </widget>
<  <resources/>
<  <connections>
<   <connection>
<    <sender>buttonBox</sender>
<    <signal>accepted()</signal>
<    <receiver>Dialog</receiver>
<    <slot>accept()</slot>
<    <hints>
<     <hint type="sourcelabel" >
<      <x>248</x>
<      <y>254</y>
<     </hint>
<     <hint type="destinationlabel" >
<      <x>157</x>
<      <y>274</y>
<     </hint>
<    </hints>
<   </connection>
<   <connection>
<    <sender>buttonBox</sender>
<    <signal>rejected()</signal>
<    <receiver>Dialog</receiver>
<    <slot>reject()</slot>
<    <hints>
<     <hint type="sourcelabel" >
<      <x>316</x>
<      <y>260</y>
<     </hint>
<     <hint type="destinationlabel" >
<      <x>286</x>
<      <y>274</y>
<     </hint>
<    </hints>
<   </connection>
<  </connections>
< </ui>
---
> <ui version="4.0" >
>  <class>Dialog</class>
>  <widget class="QDialog" name="Dialog" >
>   <property name="geometry" >
>    <rect>
>     <x>0</x>
>     <y>0</y>
>     <width>389</width>
>     <height>243</height>
>    </rect>
>   </property>
>   <property name="windowTitle" >
>    <string>Http authentication required</string>
>   </property>
>   <layout class="QGridLayout" >
>    <item row="0" column="0" colspan="2" >
>     <widget class="QLabel" name="label" >
>      <property name="text" >
>       <string>You need to supply a Username and a Password to access this site</string>
>      </property>
>      <property name="wordWrap" >
>       <bool>false</bool>
>      </property>
>     </widget>
>    </item>
>    <item row="2" column="0" >
>     <widget class="QLabel" name="label_2" >
>      <property name="text" >
>       <string>Username:</string>
>      </property>
>     </widget>
>    </item>
>    <item row="2" column="1" >
>     <widget class="QLineEdit" name="userEdit" />
>    </item>
>    <item row="3" column="0" >
>     <widget class="QLabel" name="label_3" >
>      <property name="text" >
>       <string>Password:</string>
>      </property>
>     </widget>
>    </item>
>    <item row="3" column="1" >
>     <widget class="QLineEdit" name="passwordEdit" />
>    </item>
>    <item row="5" column="0" colspan="2" >
>     <widget class="QDialogButtonBox" name="buttonBox" >
>      <property name="orientation" >
>       <enum>Qt::Horizontal</enum>
>      </property>
>      <property name="standardButtons" >
>       <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
>      </property>
>     </widget>
>    </item>
>    <item row="1" column="0" >
>     <widget class="QLabel" name="label_4" >
>      <property name="text" >
>       <string>Site:</string>
>      </property>
>     </widget>
>    </item>
>    <item row="1" column="1" >
>     <widget class="QLabel" name="siteDescription" >
>      <property name="font" >
>       <font>
>        <weight>75</weight>
>        <bold>true</bold>
>       </font>
>      </property>
>      <property name="text" >
>       <string>%1 at %2</string>
>      </property>
>      <property name="wordWrap" >
>       <bool>true</bool>
>      </property>
>     </widget>
>    </item>
>    <item row="4" column="0" >
>     <spacer>
>      <property name="orientation" >
>       <enum>Qt::Vertical</enum>
>      </property>
>      <property name="sizeHint" >
>       <size>
>        <width>20</width>
>        <height>40</height>
>       </size>
>      </property>
>     </spacer>
>    </item>
>   </layout>
>  </widget>
>  <resources/>
>  <connections>
>   <connection>
>    <sender>buttonBox</sender>
>    <signal>accepted()</signal>
>    <receiver>Dialog</receiver>
>    <slot>accept()</slot>
>    <hints>
>     <hint type="sourcelabel" >
>      <x>248</x>
>      <y>254</y>
>     </hint>
>     <hint type="destinationlabel" >
>      <x>157</x>
>      <y>274</y>
>     </hint>
>    </hints>
>   </connection>
>   <connection>
>    <sender>buttonBox</sender>
>    <signal>rejected()</signal>
>    <receiver>Dialog</receiver>
>    <slot>reject()</slot>
>    <hints>
>     <hint type="sourcelabel" >
>      <x>316</x>
>      <y>260</y>
>     </hint>
>     <hint type="destinationlabel" >
>      <x>286</x>
>      <y>274</y>
>     </hint>
>    </hints>
>   </connection>
>  </connections>
> </ui>
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/downloader/downloader.cpp lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/downloader/downloader.cpp
1,344c1,344
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  * Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).       *
<  * All rights reserved.                                                    *
<  * Contact: Nokia Corporation (qt-info@nokia.com)                          *
<  *                                                                         *
<  * This file is part of the examples of the Qt Toolkit.                    *
<  *                                                                         *
<  * $QT_BEGIN_LICENSE:BSD$                                                  *
<  * You may use this file under the terms of the BSD license as follows:    *
<  *                                                                         *
<  * "Redistribution and use in source and binary forms, with or without     *
<  * modification, are permitted provided that the following conditions are  *
<  * met:                                                                    *
<  *   * Redistributions of source code must retain the above copyright      *
<  *     notice, this list of conditions and the following disclaimer.       *
<  *   * Redistributions in binary form must reproduce the above copyright   *
<  *     notice, this list of conditions and the following disclaimer in     *
<  *     the documentation and/or other materials provided with the          *
<  *     distribution.                                                       *
<  *   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor  *
<  *     the names of its contributors may be used to endorse or promote     *
<  *     products derived from this software without specific prior written  *
<  *     permission.                                                         *
<  *                                                                         *
<  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS     *
<  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT       *
<  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR   *
<  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT    *
<  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   *
<  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        *
<  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   *
<  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   *
<  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     *
<  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   *
<  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."   *
<  * $QT_END_LICENSE$                                                        *
<  *                                                                         *
<  ***************************************************************************/
< 
< #include <QProgressBar>
< #include <QMessageBox>
< #include <QtNetwork>
< #include <QEventLoop>
< 
< #include "downloader.h"
< #include "ui_authenticationdialog.h"
< 
< Downloader::Downloader(QObject* parent, QProgressBar* progressBar, QLabel* statusLabel)
<     : QObject(parent)
<     , m_hasError(false)
< {
<     downloadTitle = "";
<     loop = new QEventLoop(parent);
<     _progressBar = progressBar;
<     _statusLabel = statusLabel;
< 
<     connect(&qnam, SIGNAL(authenticationRequired(QNetworkReply*,QAuthenticator*)),
<             this, SLOT(slotAuthenticationRequired(QNetworkReply*,QAuthenticator*)));
< #ifndef QT_NO_OPENSSL
<     connect(&qnam, SIGNAL(sslErrors(QNetworkReply*,QList<QSslError>)),
<             this, SLOT(sslErrors(QNetworkReply*,QList<QSslError>)));
< #endif
< }
< 
< void Downloader::startRequest(QUrl url)
< {
<     m_hasError = false;
<     //loop->quit();
<     QNetworkRequest request(url);//QNetworkRequest(url)
<     //request.setRawHeader("User-Agent", "Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1.7) Gecko/20091221 Firefox/3.5.7 (.NET CLR 3.5.30729)");
<     reply = qnam.get(request);
< 
<     connect(reply, SIGNAL(finished()), this, SLOT(requestFinished()));
<     connect(reply, SIGNAL(readyRead()), this, SLOT(replyReadyRead()));
<     connect(reply, SIGNAL(downloadProgress(qint64,qint64)), this, SLOT(updateDataReadProgress(qint64,qint64)));
<     connect(reply, SIGNAL(finished()), loop, SLOT(quit()));
<     qDebug() << "looooooooooop started";
< 
<     if (_progressBar) {
<         _progressBar->setValue(0);
<         _progressBar->show();
<     }
<     if (_statusLabel) {
<         _statusLabel->show();
<         if (downloadTitle.isEmpty()) {
<             _statusLabel->setText(tr("Downloading..."));
<         }
<         else {
<             _statusLabel->setText(downloadTitle + tr(" is downloading..."));
<         }
<     }
< 
<     loop->exec();
< }
< 
< void Downloader::downloadFile(const QUrl &downloadUrl, const QString &path, const QString &title)
< {
<     qDebug() << "downloadFile=url=" << url << "Before" << "downloadUrl=" << downloadUrl << "path==" << path;
<     downloadTitle = title;
<     url = downloadUrl;
<     QFileInfo fileInfo(url.path());
<     QString fileName = fileInfo.fileName();
<     if (fileName.isEmpty()) {
<         fileName = "index.html";
<     }
< 
<     QString filePath = fileName;
<     if (!path.isEmpty()) {
<         filePath = path + "/" + fileName;
<     }
<     qDebug() << "downloadFile=filePath=" << filePath;
<     if (QFile::exists(filePath)) {
<         QMessageBox question(QMessageBox::Question, tr("Downloader"), tr("There already exists a file called %1 in %2. Overwrite?")
<                              .arg(fileName).arg(QDir(filePath).path()), QMessageBox::Yes | QMessageBox::No
<                              , 0, Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint | Qt::WindowStaysOnTopHint);
<         question.setDefaultButton(QMessageBox::No);
< 
<         if (question.exec() == QMessageBox::No) {
<             m_hasError = true;
<             loop->quit();
<             emit downloadStopped();
<             return;
<         }
<         QFile::remove(filePath);
<     }
< 
<     file = new QFile(filePath);
<     if (!file->open(QIODevice::WriteOnly)) {
<         QMessageBox::information(0, tr("Downloader"),
<                                  tr("Unable to save the file %1: %2.")
<                                  .arg(fileName).arg(file->errorString()));
<         m_hasError = true;
<         delete file;
<         file = 0;
<         loop->quit();
<         emit downloadStopped();
<         return;
<     }
< 
<     // schedule the request
<     requestAborted = false;
<     startRequest(url);
< }
< 
< void Downloader::cancelDownload()
< {
<     if (_statusLabel) {
<         _statusLabel->setText(tr("Download canceled."));
<     }
<     loop->quit();
<     requestAborted = true;
<     if (reply) {
<         reply->abort();
<     }
<     //downloadButton->setEnabled(true);
< }
< 
< void Downloader::requestFinished()
< {
<     dataText = "";
<     qDebug() << "URL==" << url;
<     if (requestAborted) {
<         if (file) {
<             file->close();
<             file->remove();
<             delete file;
<             file = 0;
<         }
<         reply->deleteLater();
<         loop->quit();
<         if (_progressBar) {
<             _progressBar->hide();
<         }
<         emit downloadStopped();
< 
<         m_hasError = true;
<         return;
<     }
< 
<     if (_progressBar) {
<         _progressBar->hide();
<     }
< //#ifndef Q_OS_MAEMO_5
< //  progressDialog->hide();
< //#endif
<     file->flush();
<     file->close();
< 
< 
<     QVariant redirectionTarget = reply->attribute(QNetworkRequest::RedirectionTargetAttribute);
<     if (reply->error()) {
<         file->remove();
<         QMessageBox::information(0, tr("Downloader"),
<                                  tr("Download failed: %1.")
<                                  .arg(reply->errorString()));
<         m_hasError = true;
<     }
<     else if (!redirectionTarget.isNull()) {
<         QUrl newUrl = url.resolved(redirectionTarget.toUrl());
<         qDebug() << "redirect-URL==" << url << "newURl=" << newUrl;
<         redirectTo(newUrl);
<         return;
<     }
<     else {
<         //QString fileName = QFileInfo(QUrl(urlLineEdit->text()).path()).fileName();
<         if (_statusLabel) {
<             _statusLabel->setText(tr("Download Completed."));
<             //  _statusLabel->setText(tr("Download Completed."));//.arg(fileName).arg(QDir::currentPath()));
<         }
<         //downloadButton->setEnabled(true);
<     }
< 
<     loop->quit();
<     reply->deleteLater();
<     reply = 0;
<     delete file;
<     file = 0;
<     emit downloadStopped();
< }
< 
< void Downloader::replyReadyRead()
< {
<     // this slot gets called every time the QNetworkReply has new data.
<     // We read all of its new data and write it into the file.
<     // That way we use less RAM than when reading it at the finished()
<     // signal of the QNetworkReply
<     QByteArray dataToWrite = reply->readAll();
<     QRegExp htmlRedirect("<meta\\s+http-equiv\\s*=\\s*\"refresh\"\\s+content\\s*=\\s*\"\\s*[0-9]+\\s*;\\s*url\\s*=\\s*([^\"]+)\\s*\"\\s*>", Qt::CaseInsensitive);
<     //<meta\s+http-equiv\s*=\s*"refresh"\s+content\s*=\s*"\s*[0-9]+\s*;\s*url\s*=\s*([^"]+)\s*"\s*>
<     dataText += dataToWrite;
<     dataText.indexOf(htmlRedirect);
< //  qDebug()<<"====replyReadyRead==================================================";
< //  qDebug()<<dataText;
< //  qDebug()<<"cap_0="<< htmlRedirect.cap(0)<<"cap_1" <<htmlRedirect.cap(1);
< //  qDebug()<<"====replyReadyRead==================================================";
<     QString reirectUrl = htmlRedirect.cap(1);
<     if (!reirectUrl.isEmpty()) {
<         //qDebug() <<"============================\ndataText=\n"<<dataText<<"\n========================\n";
<         //qDebug()<<"====reirectUrl="<<reirectUrl;
<         dataText = "";
<         QUrl newUrl(reirectUrl);
<         if (reirectUrl.contains("sourceforge") && reirectUrl.contains("use_mirror")) {
<             //unfortunately this redirection uses cookies and we need QWebPage for tracking this type of redirections
<             //this is an ugly trick for creating direct link for sourceforge!
<             //http://ignum.dl.sourceforge.net/project/ganjoor/gdb/ahmd-prvin.zip?r=&amp;ts=1337765789&amp;use_mirror=garr
<             QRegExp mirror(".*use_mirror=(.*)");
<             reirectUrl.indexOf(mirror);
<             QString mirrorStr = mirror.cap(1);
<             if (mirrorStr.isEmpty()) {
<                 mirrorStr = "mesh";
<             }
<             reirectUrl.replace("downloads", mirrorStr + ".dl");
<         }
<         redirectTo(QUrl(reirectUrl));
<         return;
<     }
<     if (file) {
<         file->write(dataToWrite);
<     }
< }
< 
< void Downloader::updateDataReadProgress(qint64 bytesRead, qint64 totalBytes)
< {
<     if (requestAborted) {
<         return;
<     }
<     if (_progressBar) {
<         _progressBar->setMaximum(totalBytes);
<         _progressBar->setValue(bytesRead);
<     }
< }
< 
< //void Downloader::enableDownloadButton()
< //{
< //  //downloadButton->setEnabled(!urlLineEdit->text().isEmpty());
< //}
< 
< void Downloader::slotAuthenticationRequired(QNetworkReply*, QAuthenticator* authenticator)
< {
<     QDialog dlg;
<     Ui::Dialog ui;
<     ui.setupUi(&dlg);
<     dlg.adjustSize();
<     ui.siteDescription->setText(tr("%1 at %2").arg(authenticator->realm()).arg(url.host()));
< 
<     // Did the URL have information? Fill the UI
<     // This is only relevant if the URL-supplied credentials were wrong
<     ui.userEdit->setText(url.userName());
<     ui.passwordEdit->setText(url.password());
< 
<     if (dlg.exec() == QDialog::Accepted) {
<         authenticator->setUser(ui.userEdit->text());
<         authenticator->setPassword(ui.passwordEdit->text());
<     }
< }
< 
< void Downloader::redirectTo(const QUrl &newUrl)
< {
<     url = newUrl;
<     disconnect(reply, SIGNAL(finished()), loop, SLOT(quit()));
<     disconnect(reply, SIGNAL(finished()), this, SLOT(requestFinished()));
<     disconnect(reply, SIGNAL(readyRead()), this, SLOT(replyReadyRead()));
<     disconnect(reply, SIGNAL(downloadProgress(qint64,qint64)), this, SLOT(updateDataReadProgress(qint64,qint64)));
<     if (reply) {
<         reply->deleteLater();
<     }
<     if (file) {
<         file->open(QIODevice::WriteOnly);
<         file->resize(0);
<     }
< 
<     //we can save file with new name by calling downloadFile()
<     startRequest(url);
< }
< 
< //QProgressBar *Downloader::downloadProgressBar(QWidget *parent)
< //{
< //  progressBar->setParent(parent);
< //  return progressBar;
< //}
< 
< #ifndef QT_NO_OPENSSL
< void Downloader::sslErrors(QNetworkReply*, const QList<QSslError> &errors)
< {
<     QString errorString;
<     foreach (const QSslError &error, errors) {
<         if (!errorString.isEmpty()) {
<             errorString += ", ";
<         }
<         errorString += error.errorString();
<     }
< 
<     if (QMessageBox::warning(0, tr("Downloader"),
<                              tr("One or more SSL errors has occurred: %1").arg(errorString),
<                              QMessageBox::Ignore | QMessageBox::Abort) == QMessageBox::Ignore) {
<         reply->ignoreSslErrors();
<     }
< }
< #endif
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  * Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).       *
>  * All rights reserved.                                                    *
>  * Contact: Nokia Corporation (qt-info@nokia.com)                          *
>  *                                                                         *
>  * This file is part of the examples of the Qt Toolkit.                    *
>  *                                                                         *
>  * $QT_BEGIN_LICENSE:BSD$                                                  *
>  * You may use this file under the terms of the BSD license as follows:    *
>  *                                                                         *
>  * "Redistribution and use in source and binary forms, with or without     *
>  * modification, are permitted provided that the following conditions are  *
>  * met:                                                                    *
>  *   * Redistributions of source code must retain the above copyright      *
>  *     notice, this list of conditions and the following disclaimer.       *
>  *   * Redistributions in binary form must reproduce the above copyright   *
>  *     notice, this list of conditions and the following disclaimer in     *
>  *     the documentation and/or other materials provided with the          *
>  *     distribution.                                                       *
>  *   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor  *
>  *     the names of its contributors may be used to endorse or promote     *
>  *     products derived from this software without specific prior written  *
>  *     permission.                                                         *
>  *                                                                         *
>  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS     *
>  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT       *
>  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR   *
>  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT    *
>  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   *
>  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        *
>  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   *
>  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   *
>  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     *
>  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   *
>  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."   *
>  * $QT_END_LICENSE$                                                        *
>  *                                                                         *
>  ***************************************************************************/
> 
> #include <QProgressBar>
> #include <QMessageBox>
> #include <QtNetwork>
> #include <QEventLoop>
> 
> #include "downloader.h"
> #include "ui_authenticationdialog.h"
> 
> Downloader::Downloader(QObject* parent, QProgressBar* progressBar, QLabel* statusLabel)
>     : QObject(parent)
>     , m_hasError(false)
> {
>     downloadTitle = "";
>     loop = new QEventLoop(parent);
>     _progressBar = progressBar;
>     _statusLabel = statusLabel;
> 
>     connect(&qnam, SIGNAL(authenticationRequired(QNetworkReply*,QAuthenticator*)),
>             this, SLOT(slotAuthenticationRequired(QNetworkReply*,QAuthenticator*)));
> #ifndef QT_NO_OPENSSL
>     connect(&qnam, SIGNAL(sslErrors(QNetworkReply*,QList<QSslError>)),
>             this, SLOT(sslErrors(QNetworkReply*,QList<QSslError>)));
> #endif
> }
> 
> void Downloader::startRequest(QUrl url)
> {
>     m_hasError = false;
>     //loop->quit();
>     QNetworkRequest request(url);//QNetworkRequest(url)
>     //request.setRawHeader("User-Agent", "Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.1.7) Gecko/20091221 Firefox/3.5.7 (.NET CLR 3.5.30729)");
>     reply = qnam.get(request);
> 
>     connect(reply, SIGNAL(finished()), this, SLOT(requestFinished()));
>     connect(reply, SIGNAL(readyRead()), this, SLOT(replyReadyRead()));
>     connect(reply, SIGNAL(downloadProgress(qint64,qint64)), this, SLOT(updateDataReadProgress(qint64,qint64)));
>     connect(reply, SIGNAL(finished()), loop, SLOT(quit()));
>     qDebug() << "looooooooooop started";
> 
>     if (_progressBar) {
>         _progressBar->setValue(0);
>         _progressBar->show();
>     }
>     if (_statusLabel) {
>         _statusLabel->show();
>         if (downloadTitle.isEmpty()) {
>             _statusLabel->setText(tr("Downloading..."));
>         }
>         else {
>             _statusLabel->setText(downloadTitle + tr(" is downloading..."));
>         }
>     }
> 
>     loop->exec();
> }
> 
> void Downloader::downloadFile(const QUrl &downloadUrl, const QString &path, const QString &title)
> {
>     qDebug() << "downloadFile=url=" << url << "Before" << "downloadUrl=" << downloadUrl << "path==" << path;
>     downloadTitle = title;
>     url = downloadUrl;
>     QFileInfo fileInfo(url.path());
>     QString fileName = fileInfo.fileName();
>     if (fileName.isEmpty()) {
>         fileName = "index.html";
>     }
> 
>     QString filePath = fileName;
>     if (!path.isEmpty()) {
>         filePath = path + "/" + fileName;
>     }
>     qDebug() << "downloadFile=filePath=" << filePath;
>     if (QFile::exists(filePath)) {
>         QMessageBox question(QMessageBox::Question, tr("Downloader"), tr("There already exists a file called %1 in %2. Overwrite?")
>                              .arg(fileName).arg(QDir(filePath).path()), QMessageBox::Yes | QMessageBox::No
>                              , 0, Qt::Dialog | Qt::MSWindowsFixedSizeDialogHint | Qt::WindowStaysOnTopHint);
>         question.setDefaultButton(QMessageBox::No);
> 
>         if (question.exec() == QMessageBox::No) {
>             m_hasError = true;
>             loop->quit();
>             emit downloadStopped();
>             return;
>         }
>         QFile::remove(filePath);
>     }
> 
>     file = new QFile(filePath);
>     if (!file->open(QIODevice::WriteOnly)) {
>         QMessageBox::information(0, tr("Downloader"),
>                                  tr("Unable to save the file %1: %2.")
>                                  .arg(fileName).arg(file->errorString()));
>         m_hasError = true;
>         delete file;
>         file = 0;
>         loop->quit();
>         emit downloadStopped();
>         return;
>     }
> 
>     // schedule the request
>     requestAborted = false;
>     startRequest(url);
> }
> 
> void Downloader::cancelDownload()
> {
>     if (_statusLabel) {
>         _statusLabel->setText(tr("Download canceled."));
>     }
>     loop->quit();
>     requestAborted = true;
>     if (reply) {
>         reply->abort();
>     }
>     //downloadButton->setEnabled(true);
> }
> 
> void Downloader::requestFinished()
> {
>     dataText = "";
>     qDebug() << "URL==" << url;
>     if (requestAborted) {
>         if (file) {
>             file->close();
>             file->remove();
>             delete file;
>             file = 0;
>         }
>         reply->deleteLater();
>         loop->quit();
>         if (_progressBar) {
>             _progressBar->hide();
>         }
>         emit downloadStopped();
> 
>         m_hasError = true;
>         return;
>     }
> 
>     if (_progressBar) {
>         _progressBar->hide();
>     }
> //#ifndef Q_OS_MAEMO_5
> //  progressDialog->hide();
> //#endif
>     file->flush();
>     file->close();
> 
> 
>     QVariant redirectionTarget = reply->attribute(QNetworkRequest::RedirectionTargetAttribute);
>     if (reply->error()) {
>         file->remove();
>         QMessageBox::information(0, tr("Downloader"),
>                                  tr("Download failed: %1.")
>                                  .arg(reply->errorString()));
>         m_hasError = true;
>     }
>     else if (!redirectionTarget.isNull()) {
>         QUrl newUrl = url.resolved(redirectionTarget.toUrl());
>         qDebug() << "redirect-URL==" << url << "newURl=" << newUrl;
>         redirectTo(newUrl);
>         return;
>     }
>     else {
>         //QString fileName = QFileInfo(QUrl(urlLineEdit->text()).path()).fileName();
>         if (_statusLabel) {
>             _statusLabel->setText(tr("Download Completed."));
>             //  _statusLabel->setText(tr("Download Completed."));//.arg(fileName).arg(QDir::currentPath()));
>         }
>         //downloadButton->setEnabled(true);
>     }
> 
>     loop->quit();
>     reply->deleteLater();
>     reply = 0;
>     delete file;
>     file = 0;
>     emit downloadStopped();
> }
> 
> void Downloader::replyReadyRead()
> {
>     // this slot gets called every time the QNetworkReply has new data.
>     // We read all of its new data and write it into the file.
>     // That way we use less RAM than when reading it at the finished()
>     // signal of the QNetworkReply
>     QByteArray dataToWrite = reply->readAll();
>     QRegExp htmlRedirect("<meta\\s+http-equiv\\s*=\\s*\"refresh\"\\s+content\\s*=\\s*\"\\s*[0-9]+\\s*;\\s*url\\s*=\\s*([^\"]+)\\s*\"\\s*>", Qt::CaseInsensitive);
>     //<meta\s+http-equiv\s*=\s*"refresh"\s+content\s*=\s*"\s*[0-9]+\s*;\s*url\s*=\s*([^"]+)\s*"\s*>
>     dataText += dataToWrite;
>     dataText.indexOf(htmlRedirect);
> //  qDebug()<<"====replyReadyRead==================================================";
> //  qDebug()<<dataText;
> //  qDebug()<<"cap_0="<< htmlRedirect.cap(0)<<"cap_1" <<htmlRedirect.cap(1);
> //  qDebug()<<"====replyReadyRead==================================================";
>     QString reirectUrl = htmlRedirect.cap(1);
>     if (!reirectUrl.isEmpty()) {
>         //qDebug() <<"============================\ndataText=\n"<<dataText<<"\n========================\n";
>         //qDebug()<<"====reirectUrl="<<reirectUrl;
>         dataText = "";
>         QUrl newUrl(reirectUrl);
>         if (reirectUrl.contains("sourceforge") && reirectUrl.contains("use_mirror")) {
>             //unfortunately this redirection uses cookies and we need QWebPage for tracking this type of redirections
>             //this is an ugly trick for creating direct link for sourceforge!
>             //http://ignum.dl.sourceforge.net/project/ganjoor/gdb/ahmd-prvin.zip?r=&amp;ts=1337765789&amp;use_mirror=garr
>             QRegExp mirror(".*use_mirror=(.*)");
>             reirectUrl.indexOf(mirror);
>             QString mirrorStr = mirror.cap(1);
>             if (mirrorStr.isEmpty()) {
>                 mirrorStr = "mesh";
>             }
>             reirectUrl.replace("downloads", mirrorStr + ".dl");
>         }
>         redirectTo(QUrl(reirectUrl));
>         return;
>     }
>     if (file) {
>         file->write(dataToWrite);
>     }
> }
> 
> void Downloader::updateDataReadProgress(qint64 bytesRead, qint64 totalBytes)
> {
>     if (requestAborted) {
>         return;
>     }
>     if (_progressBar) {
>         _progressBar->setMaximum(totalBytes);
>         _progressBar->setValue(bytesRead);
>     }
> }
> 
> //void Downloader::enableDownloadButton()
> //{
> //  //downloadButton->setEnabled(!urlLineEdit->text().isEmpty());
> //}
> 
> void Downloader::slotAuthenticationRequired(QNetworkReply*, QAuthenticator* authenticator)
> {
>     QDialog dlg;
>     Ui::Dialog ui;
>     ui.setupUi(&dlg);
>     dlg.adjustSize();
>     ui.siteDescription->setText(tr("%1 at %2").arg(authenticator->realm()).arg(url.host()));
> 
>     // Did the URL have information? Fill the UI
>     // This is only relevant if the URL-supplied credentials were wrong
>     ui.userEdit->setText(url.userName());
>     ui.passwordEdit->setText(url.password());
> 
>     if (dlg.exec() == QDialog::Accepted) {
>         authenticator->setUser(ui.userEdit->text());
>         authenticator->setPassword(ui.passwordEdit->text());
>     }
> }
> 
> void Downloader::redirectTo(const QUrl &newUrl)
> {
>     url = newUrl;
>     disconnect(reply, SIGNAL(finished()), loop, SLOT(quit()));
>     disconnect(reply, SIGNAL(finished()), this, SLOT(requestFinished()));
>     disconnect(reply, SIGNAL(readyRead()), this, SLOT(replyReadyRead()));
>     disconnect(reply, SIGNAL(downloadProgress(qint64,qint64)), this, SLOT(updateDataReadProgress(qint64,qint64)));
>     if (reply) {
>         reply->deleteLater();
>     }
>     if (file) {
>         file->open(QIODevice::WriteOnly);
>         file->resize(0);
>     }
> 
>     //we can save file with new name by calling downloadFile()
>     startRequest(url);
> }
> 
> //QProgressBar *Downloader::downloadProgressBar(QWidget *parent)
> //{
> //  progressBar->setParent(parent);
> //  return progressBar;
> //}
> 
> #ifndef QT_NO_OPENSSL
> void Downloader::sslErrors(QNetworkReply*, const QList<QSslError> &errors)
> {
>     QString errorString;
>     foreach (const QSslError &error, errors) {
>         if (!errorString.isEmpty()) {
>             errorString += ", ";
>         }
>         errorString += error.errorString();
>     }
> 
>     if (QMessageBox::warning(0, tr("Downloader"),
>                              tr("One or more SSL errors has occurred: %1").arg(errorString),
>                              QMessageBox::Ignore | QMessageBox::Abort) == QMessageBox::Ignore) {
>         reply->ignoreSslErrors();
>     }
> }
> #endif
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/downloader/downloader.h lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/downloader/downloader.h
1,110c1,110
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  * Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).       *
<  * All rights reserved.                                                    *
<  * Contact: Nokia Corporation (qt-info@nokia.com)                          *
<  *                                                                         *
<  * This file is part of the examples of the Qt Toolkit.                    *
<  *                                                                         *
<  * $QT_BEGIN_LICENSE:BSD$                                                  *
<  * You may use this file under the terms of the BSD license as follows:    *
<  *                                                                         *
<  * "Redistribution and use in source and binary forms, with or without     *
<  * modification, are permitted provided that the following conditions are  *
<  * met:                                                                    *
<  *   * Redistributions of source code must retain the above copyright      *
<  *     notice, this list of conditions and the following disclaimer.       *
<  *   * Redistributions in binary form must reproduce the above copyright   *
<  *     notice, this list of conditions and the following disclaimer in     *
<  *     the documentation and/or other materials provided with the          *
<  *     distribution.                                                       *
<  *   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor  *
<  *     the names of its contributors may be used to endorse or promote     *
<  *     products derived from this software without specific prior written  *
<  *     permission.                                                         *
<  *                                                                         *
<  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS     *
<  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT       *
<  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR   *
<  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT    *
<  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   *
<  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        *
<  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   *
<  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   *
<  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     *
<  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   *
<  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."   *
<  * $QT_END_LICENSE$                                                        *
<  *                                                                         *
<  ***************************************************************************/
< 
< #ifndef DOWNLOADER_H
< #define DOWNLOADER_H
< #include <QWidget>
< #include <QNetworkAccessManager>
< #include <QUrl>
< 
< QT_BEGIN_NAMESPACE
< class QDialogButtonBox;
< class QFile;
< class QLabel;
< class QLineEdit;
< class QProgressBar;
< class QPushButton;
< class QSslError;
< class QAuthenticator;
< class QNetworkReply;
< class QEventLoop;
< QT_END_NAMESPACE
< 
< 
< class Downloader : public QObject
< {
<     Q_OBJECT
< 
< public:
<     Downloader(QObject* parent = 0, QProgressBar* progressBar = 0, QLabel* statusLabel = 0);
< 
<     void startRequest(QUrl url);
<     inline bool hasError() { return m_hasError; }
<     //QProgressBar *downloadProgressBar(QWidget *parent = 0);
<     QEventLoop* loop;
< 
< public slots:
<     void downloadFile(const QUrl &downloadUrl, const QString &path, const QString &title = "");
<     void cancelDownload();
< 
< private slots:
<     void redirectTo(const QUrl &newUrl);
<     void requestFinished();
<     void replyReadyRead();
<     void updateDataReadProgress(qint64 bytesRead, qint64 totalBytes);
<     //void enableDownloadButton();
<     void slotAuthenticationRequired(QNetworkReply*, QAuthenticator*);
< #ifndef QT_NO_OPENSSL
<     void sslErrors(QNetworkReply*, const QList<QSslError> &errors);
< #endif
< 
< private:
<     QString dataText;
<     QString downloadTitle;
<     QUrl url;
<     QLabel* _statusLabel;
<     QProgressBar* _progressBar;
< 
<     QNetworkAccessManager qnam;
<     QNetworkReply* reply;
<     QFile* file;
<     int httpGetId;
<     bool requestAborted;
<     bool m_hasError;
< 
< signals:
<     void downloadStopped();
< };
< 
< #endif
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2010-2016 by S. Razi Alavizadeh                          *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  * Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).       *
>  * All rights reserved.                                                    *
>  * Contact: Nokia Corporation (qt-info@nokia.com)                          *
>  *                                                                         *
>  * This file is part of the examples of the Qt Toolkit.                    *
>  *                                                                         *
>  * $QT_BEGIN_LICENSE:BSD$                                                  *
>  * You may use this file under the terms of the BSD license as follows:    *
>  *                                                                         *
>  * "Redistribution and use in source and binary forms, with or without     *
>  * modification, are permitted provided that the following conditions are  *
>  * met:                                                                    *
>  *   * Redistributions of source code must retain the above copyright      *
>  *     notice, this list of conditions and the following disclaimer.       *
>  *   * Redistributions in binary form must reproduce the above copyright   *
>  *     notice, this list of conditions and the following disclaimer in     *
>  *     the documentation and/or other materials provided with the          *
>  *     distribution.                                                       *
>  *   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor  *
>  *     the names of its contributors may be used to endorse or promote     *
>  *     products derived from this software without specific prior written  *
>  *     permission.                                                         *
>  *                                                                         *
>  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS     *
>  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT       *
>  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR   *
>  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT    *
>  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   *
>  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        *
>  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   *
>  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   *
>  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     *
>  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   *
>  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."   *
>  * $QT_END_LICENSE$                                                        *
>  *                                                                         *
>  ***************************************************************************/
> 
> #ifndef DOWNLOADER_H
> #define DOWNLOADER_H
> #include <QWidget>
> #include <QNetworkAccessManager>
> #include <QUrl>
> 
> QT_BEGIN_NAMESPACE
> class QDialogButtonBox;
> class QFile;
> class QLabel;
> class QLineEdit;
> class QProgressBar;
> class QPushButton;
> class QSslError;
> class QAuthenticator;
> class QNetworkReply;
> class QEventLoop;
> QT_END_NAMESPACE
> 
> 
> class Downloader : public QObject
> {
>     Q_OBJECT
> 
> public:
>     Downloader(QObject* parent = 0, QProgressBar* progressBar = 0, QLabel* statusLabel = 0);
> 
>     void startRequest(QUrl url);
>     inline bool hasError() { return m_hasError; }
>     //QProgressBar *downloadProgressBar(QWidget *parent = 0);
>     QEventLoop* loop;
> 
> public slots:
>     void downloadFile(const QUrl &downloadUrl, const QString &path, const QString &title = "");
>     void cancelDownload();
> 
> private slots:
>     void redirectTo(const QUrl &newUrl);
>     void requestFinished();
>     void replyReadyRead();
>     void updateDataReadProgress(qint64 bytesRead, qint64 totalBytes);
>     //void enableDownloadButton();
>     void slotAuthenticationRequired(QNetworkReply*, QAuthenticator*);
> #ifndef QT_NO_OPENSSL
>     void sslErrors(QNetworkReply*, const QList<QSslError> &errors);
> #endif
> 
> private:
>     QString dataText;
>     QString downloadTitle;
>     QUrl url;
>     QLabel* _statusLabel;
>     QProgressBar* _progressBar;
> 
>     QNetworkAccessManager qnam;
>     QNetworkReply* reply;
>     QFile* file;
>     int httpGetId;
>     bool requestAborted;
>     bool m_hasError;
> 
> signals:
>     void downloadStopped();
> };
> 
> #endif
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/downloader/downloader.pri lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/downloader/downloader.pri
1,10c1,10
< QT += network
< 
< INCLUDEPATH += $${PWD}/
< 
< # Input
< HEADERS += $${PWD}/downloader.h
< SOURCES += $${PWD}/downloader.cpp
< 
< FORMS += $${PWD}/authenticationdialog.ui
< 
---
> QT += network
> 
> INCLUDEPATH += $${PWD}/
> 
> # Input
> HEADERS += $${PWD}/downloader.h
> SOURCES += $${PWD}/downloader.cpp
> 
> FORMS += $${PWD}/authenticationdialog.ui
> 
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/importer/importer_interface.h lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/importer/importer_interface.h
1,79c1,79
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2016 by S. Razi Alavizadeh                               *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< #ifndef IMPORTER_INTERFACE_H
< #define IMPORTER_INTERFACE_H
< 
< #include "databaseelements.h"
< 
< #include <QMap>
< #include <QByteArray>
< 
< class ImporterInterface
< {
< public:
<     enum State {
<         Success,
<         Faild,
<         Unknown = -1
<     };
< 
<     struct Options {
<         enum ContentType {
<             Unknown = 0x0,
<             NormalText = 0x1,
<             WhitePoem = 0x2,
<             Poem = 0x4
<         };
<         Q_DECLARE_FLAGS(ContentTypes, ContentType)
< 
<         ContentTypes contentTypes;
<         QString poemStartPattern;
< 
<         Options() : contentTypes(Unknown) {}
<         bool isNull() { return contentTypes == Unknown && poemStartPattern.isEmpty(); }
<         void clear() { contentTypes = Unknown; poemStartPattern.clear(); }
<     };
< 
<     ImporterInterface() : m_state(Unknown) {}
<     virtual ~ImporterInterface() {}
< 
<     virtual QString readableName() const = 0;
<     virtual QString suffix() const = 0;
<     virtual void import(const QString &data) = 0;
<     virtual CatContents importData() const = 0;
< 
<     State state() const { return m_state; }
<     void setState(State state) { m_state = state; }
< 
<     Options options() const { return m_options; }
<     void setOptions(const Options &options) { m_options = options; }
< 
< private:
<     State m_state;
< 
< protected:
<     CatContents m_catContents;
<     Options m_options;
< 
< };
< 
< Q_DECLARE_OPERATORS_FOR_FLAGS(ImporterInterface::Options::ContentTypes)
< #endif // IMPORTER_INTERFACE_H
---
> /***************************************************************************
>  *  This file is part of Saaghar, a Persian poetry software                *
>  *                                                                         *
>  *  Copyright (C) 2016 by S. Razi Alavizadeh                               *
>  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
>  *                                                                         *
>  *  This program is free software; you can redistribute it and/or modify   *
>  *  it under the terms of the GNU General Public License as published by   *
>  *  the Free Software Foundation; either version 3 of the License,         *
>  *  (at your option) any later version                                     *
>  *                                                                         *
>  *  This program is distributed in the hope that it will be useful,        *
>  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
>  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
>  *  GNU General Public License for more details                            *
>  *                                                                         *
>  *  You should have received a copy of the GNU General Public License      *
>  *  along with this program; if not, see http://www.gnu.org/licenses/      *
>  *                                                                         *
>  ***************************************************************************/
> #ifndef IMPORTER_INTERFACE_H
> #define IMPORTER_INTERFACE_H
> 
> #include "databaseelements.h"
> 
> #include <QMap>
> #include <QByteArray>
> 
> class ImporterInterface
> {
> public:
>     enum State {
>         Success,
>         Faild,
>         Unknown = -1
>     };
> 
>     struct Options {
>         enum ContentType {
>             Unknown = 0x0,
>             NormalText = 0x1,
>             WhitePoem = 0x2,
>             Poem = 0x4
>         };
>         Q_DECLARE_FLAGS(ContentTypes, ContentType)
> 
>         ContentTypes contentTypes;
>         QString poemStartPattern;
> 
>         Options() : contentTypes(Unknown) {}
>         bool isNull() { return contentTypes == Unknown && poemStartPattern.isEmpty(); }
>         void clear() { contentTypes = Unknown; poemStartPattern.clear(); }
>     };
> 
>     ImporterInterface() : m_state(Unknown) {}
>     virtual ~ImporterInterface() {}
> 
>     virtual QString readableName() const = 0;
>     virtual QString suffix() const = 0;
>     virtual void import(const QString &data) = 0;
>     virtual CatContents importData() const = 0;
> 
>     State state() const { return m_state; }
>     void setState(State state) { m_state = state; }
> 
>     Options options() const { return m_options; }
>     void setOptions(const Options &options) { m_options = options; }
> 
> private:
>     State m_state;
> 
> protected:
>     CatContents m_catContents;
>     Options m_options;
> 
> };
> 
> Q_DECLARE_OPERATORS_FOR_FLAGS(ImporterInterface::Options::ContentTypes)
> #endif // IMPORTER_INTERFACE_H
diff -r source-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/importer/importermanager.cpp lookaside-Saaghar-3.0.0.tar.gz-extracted/Saaghar/src/importer/importermanager.cpp
1,489c1,489
< /***************************************************************************
<  *  This file is part of Saaghar, a Persian poetry software                *
<  *                                                                         *
<  *  Copyright (C) 2016 by S. Razi Alavizadeh                               *
<  *  E-Mail: <s.r.alavizadeh@gmail.com>, WWW: <http://pozh.org>             *
<  *                                                                         *
<  *  This program is free software; you can redistribute it and/or modify   *
<  *  it under the terms of the GNU General Public License as published by   *
<  *  the Free Software Foundation; either version 3 of the License,         *
<  *  (at your option) any later version                                     *
<  *                                                                         *
<  *  This program is distributed in the hope that it will be useful,        *
<  *  but WITHOUT ANY WARRANTY; without even the implied warranty of         *
<  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
<  *  GNU General Public License for more details                            *
<  *                                                                         *
<  *  You should have received a copy of the GNU General Public License      *
<  *  along with this program; if not, see http://www.gnu.org/licenses/      *
<  *                                                                         *
<  ***************************************************************************/
< #include "importermanager.h"
< #include "txtimporter.h"
< #include "importeroptionsdialog.h"
< #include "databasebrowser.h"
< #include "selectcreatedialog.h"
< #include "outlinemodel.h"
< #include "saagharwidget.h"
< 
< #include <QTextEdit>
< #include <QTreeView>
< #include <QTreeWidget>
< #include <QMessageBox>
< #include <QInputDialog>
< #include <QDebug>
< #include <QApplication>
< 
< ImporterManager* ImporterManager::s_importerManager = 0;
< 
< ImporterManager::ImporterManager()
< {
<     registerImporter("txt", new TxtImporter);
< }
< 
< ImporterManager* ImporterManager::instance()
< {
<     if (!s_importerManager) {
<         s_importerManager = new ImporterManager;
<     }
< 
<     return s_importerManager;
< }
< 
< ImporterManager::~ImporterManager()
< {
<     qDeleteAll(m_registeredImporters);
< 
<     delete s_importerManager;
<     s_importerManager = 0;
< }
< 
< ImporterInterface* ImporterManager::importer(const QString &id)
< {
<     ImporterInterface* importer = m_registeredImporters.value(id, 0);
< 
<     return importer;
< }
< 
< bool ImporterManager::importerIsAvailable()
< {
<     return !m_registeredImporters.isEmpty();
< }
< 
< bool ImporterManager::registerImporter(const QString &id, ImporterInterface* importer)
< {
<     if (!m_registeredImporters.contains(id)) {
<         m_registeredImporters.insert(id, importer);
< 
<         return true;
<     }
< 
<     return false;
< }
< 
< void ImporterManager::unRegisterImporter(const QString &id)
< {
<     m_registeredImporters.take(id);
< }
< 
< QStringList ImporterManager::availableFormats()
< {
<     QStringList formats;
<     foreach (ImporterInterface* importer, m_registeredImporters) {
<         formats << QString("%1 (*.%2)").arg(importer->readableName()).arg(importer->suffix());
<     }
< 
<     return formats;
< }
< 
< void ImporterManager::storeAsDataset(const CatContents &importData, bool storeAsGDB)
< {
<     m_importData.clear();
<     m_importData = importData;
< 
<     if (m_importData.isNull()) {
<         return;
<     }
< 
< 
<     if (storeAsGDB) {
<         // ask for file name to save
<     }
< 
<     m_importPath.clear();
<     m_forceCreateNew = false;
< 
<     QDialog importPath(qApp->activeWindow());
<     QVBoxLayout layout;
<     QLabel infoLabel(tr("The poems will import to the following category:"), &importPath);
<     m_importPathView = new QTreeWidget(&importPath);
<     m_importPathView.data()->header()->hide();
<     QTreeWidgetItem* rootItem = new QTreeWidgetItem(m_importPathView, QStringList(SaagharWidget::rootTitle()));
<     m_importPathView.data()->addTopLevelItem(rootItem);
<     m_importPathView.data()->setCurrentItem(rootItem);
<     //m_importPathView.data()->setModel(OutlineModel::instance());
<     m_importPathLabel = new QLabel(&importPath);
<     m_addPoetBio = new QPushButton(tr("Set Bio./Desc..."), &importPath);
<     m_selectCat = new QPushButton(tr("Select or Create a Poet/Book..."), &importPath);
<     m_importNow = new QPushButton(tr("Import..."), &importPath);
<     m_clearButton = new QPushButton(tr("Clear"), &importPath);
<     m_addPoetBio->hide();
<     m_importNow->hide();
<     m_clearButton->hide();
<     // selectCat.hide();
<     layout.addWidget(&infoLabel);
<     layout.addWidget(m_importPathView);
<     layout.addWidget(m_importPathLabel);
<     layout.addWidget(m_addPoetBio);
<     layout.addWidget(m_selectCat);
<     layout.addWidget(m_clearButton);
<     layout.addWidget(m_importNow);
<     importPath.setLayout(&layout);
<     connect(m_addPoetBio, SIGNAL(clicked(bool)), this, SLOT(addPoetBio()));
<     connect(m_selectCat, SIGNAL(clicked(bool)), this, SLOT(importPathChanged()));
<     connect(m_clearButton, SIGNAL(clicked(bool)), this, SLOT(clearImportPath()));
<     connect(m_importNow, SIGNAL(clicked(bool)), this, SLOT(importHere()));
<     connect(this, SIGNAL(importDialogDone()), &importPath, SLOT(accept()));
<     // connect(m_importPathView.data()->selectionModel(), SIGNAL(selectionChanged(QItemSelection,QItemSelection)), &importNow, SLOT(show()));
<     // connect(m_importPathView.data()->selectionModel(), SIGNAL(selectionChanged(QItemSelection,QItemSelection)), &selectCat, SLOT(show()));
< 
<     connect(m_selectCat, SIGNAL(clicked(bool)), m_importNow, SLOT(show()));
<     //connect(m_selectCat, SIGNAL(clicked(bool)), m_clearButton, SLOT(show()));
<     connect(this, SIGNAL(setBioVisible(bool)), m_addPoetBio, SLOT(setVisible(bool)));
<     importPath.exec();
< //    foreach (const GanjoorPoem &poem, importData.poems) {
< //        QList<GanjoorVerse> verses = importData.verses.value(poem._ID);
< //        content += QString("Poem Title: %1\n----------------\n")
< //                .arg(poem._Title);
< 
< //        foreach (const GanjoorVerse &verse, verses) {
< //            content += QString("%1 - %2\n")
< //                    .arg(verse._Order + 1).arg(verse._Text);
< //        }
< //        content += "\n=================================\n\n";
< //    }
< }
< 
< QString ImporterManager::convertTo(const CatContents &importData, ImporterManager::ConvertType type) const
< {
<     if (importData.isNull()) {
<         return QObject::tr("<EMPTY PREVIEW>");
<     }
< 
<     QString content;
< 
<     if (type == PlainText) {
<         foreach (const GanjoorPoem &poem, importData.poems) {
<             QList<GanjoorVerse> verses = importData.verses.value(poem._ID);
< 
<             if (verses.isEmpty()) {
<                 continue;
<             }
< 
<             QStringList parentsTitles = importData.catParentsTitles(poem._CatID);
< 
<             content += QObject::tr("Top Level Categories: %1\n---\nPoem Title: %2\n----------------\n")
<                        .arg(parentsTitles.isEmpty() ? tr("N/A") : parentsTitles.join(tr(" > ")))
<                        .arg(poem._Title.isEmpty() ? tr("No poem title detected!") : poem._Title);
< 
<             foreach (const GanjoorVerse &verse, verses) {
<                 content += QString("%1 - %2\n")
<                            .arg(verse._Order + 1).arg(verse._Text);
<             }
<             content += "\n=================================\n\n";
<         }
<     }
<     else if (type == HtmlText) {
<         QString toc = "<html><body><ul>";
< 
<         foreach (const GanjoorPoem &poem, importData.poems) {
<             QList<GanjoorVerse> verses = importData.verses.value(poem._ID);
< 
<             if (verses.isEmpty()) {
<                 continue;
<             }
< 
<             QStringList parentsTitles = importData.catParentsTitles(poem._CatID);
< 
<             toc += QString("<li><a href=\"#%1\"><i>%2</i></a>").arg(poem._ID).arg(poem._Title.isEmpty() ? tr("No poem title detected!") : poem._Title);
<             content += QString("<br><h3>%1:</h3><center><br><h2><b><a id=\"%2\" name=\"%2\">%3</a></b></h2><br>--------------------------------<br></center>")
<                        .arg(parentsTitles.isEmpty() ? tr("N/A") : parentsTitles.join(tr(" > ")))
<                        .arg(poem._ID)
<                        .arg(poem._Title.isEmpty() ? tr("No poem title detected!") : poem._Title);
< 
<             foreach (const GanjoorVerse &verse, verses) {
<                 QString openTags = "<p>";
<                 QString closeTags = "</p>";
<                 if (verse._Position == Paragraph) {
<                     openTags = "<p style=\"margin-bottom: 0.2cm\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
<                     closeTags = "</p>";
<                 }
<                 else if (verse._Position == Single) {
<                     openTags = "<p style=\"font-size: 50%; color: #007;\">&nbsp;&nbsp;&nbsp;&nbsp;";
<                     closeTags = "</p>";
<                 }
<                 else if (verse._Position == CenteredVerse1) {
<                     openTags = "<center><p style=\"margin-top: 0.1cm\"><i>";
<                     closeTags = "</i></p></center>";
<                 }
<                 else if (verse._Position == CenteredVerse2) {
<                     openTags = "<center><p style=\"margin-bottom: 0.2cm\"><i>";
<                     closeTags = "</i></p></center><br>";
<                 }
<                 else if (verse._Position == Right) {
<                     openTags = "<center><p><i>";
<                     closeTags = "</i></p></center>";
<                 }
<                 else if (verse._Position == Left) {
<                     openTags = "<center><p style=\"margin-bottom: 1cm\"><i>";
<                     closeTags = "</i></p></center><br>";
<                 }
< 
<                 content += QString("%1%3%2")
<                            .arg(openTags).arg(closeTags).arg(verse._Text);
<             }
< 
<             content += "<hr>";
<         }
< 
<         content = toc + "</ul><hr><hr>" + content + "</body></html>";
<     }
<     else if (type == EditingText) {
<         content = convertToSED(importData);
<     }
< 
<     return content;
< }
< 
< static QString lineTypeFromPosition(VersePosition position)
< {
<     switch (position) {
<     case Right:
<         return "_CLASSIC_POEM_";
<         break;
<     case Left:
<         return "_CLASSIC_POEM_";
<         break;
<     case CenteredVerse1:
<         return "_CLASSIC_POEM_";
<         break;
<     case CenteredVerse2:
<         return "_CLASSIC_POEM_";
<         break;
<     case Single:
<         return "_SINGLE_";
<         break;
<     case Paragraph:
<         return "_PARAGRAPH_";
<         break;
<     default:
<         break;
<     }
<     return "_UNKNOWN_";
< }
< 
< /*******************************************************************************/
< // tags for Version-0.1 of Saaghar Easy Editable Dataset Format (SED)
< // #SAAGHAR!SED!         // start of SED file
< // #SED!LANGUAGE!        // SED file language
< // #CAT!START!           // start of cat
< // #CAT!ID!              // ganjoor id of category
< // #CAT!UID!             // unique id of category
< // #CAT!CATID!           // ganjoor id of toplevel category of current category
< // #CAT!CATUID!          // unique id of toplevel category of current category
< // #CAT!TITLE!           // title of category
< // #POEM!START!          // start of poem
< // #POEM!CATID!          // ganjoor id of toplevel category of current poem
< // #POEM!CATUID!         // unique id of toplevel category of current poem
< // #POEM!ID!             // ganjoor id of poem
< // #POEM!UID!            // unique id of poem
< // #POEM!TITLE!          // title of poem
< // #POEM!VERSECOUNT!     // count of verses in poem
< // #VERSES!START!        // start of verses
< // #VERSE!START!         // start of verse
< // #VERSE!ORDER!         // verse order within poem
< // #VERSE!POSITION!      // verse type and position
< // #VERSE!TEXT!          // verse text
< // #VERSE!END!           // end of verse
< // #POEM!END!            // end of poem
< // #CAT!END!             // end of cat
< /*******************************************************************************/
< QString ImporterManager::convertToSED(const CatContents &importData) const
< {
<     QString content;
< 
<     QString poetUID = "poetUID";
<     QString catUID = "catUID";
<     QString poetTitle = "poetTitle";
<     QString catTitle = "catTitle";
< 
<     content += "#SAAGHAR!SED!v0.1\n";
< //    content += QString("#SED!LANGUAGE!FA_IR\n#CAT!START!#CAT!UID!%1#CAT!CATID!0\n#CAT!TITLE!%2\n"
< //                       "#CAT!START!#CAT!UID!%3#CAT!CATUID!%1\n#CAT!TITLE!%4\n")
< //            .arg(poetUID).arg(poetTitle).arg(catUID).arg(catTitle);
< 
<     content += "######################\n######################\n";
< 
<     foreach (const GanjoorPoem &poem, importData.poems) {
<         QList<GanjoorVerse> verses = importData.verses.value(poem._ID);
< //        content += QString("